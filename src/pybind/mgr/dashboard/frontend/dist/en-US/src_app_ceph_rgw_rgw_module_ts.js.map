{"version":3,"file":"src_app_ceph_rgw_rgw_module_ts.js","mappings":"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","sources":["./src/app/ceph/rgw/models/rgw-bucket-encryption.ts","./src/app/ceph/rgw/models/rgw-bucket-mfa-delete.ts","./src/app/ceph/rgw/models/rgw-bucket-versioning.ts","./src/app/ceph/rgw/models/rgw-daemon.ts","./src/app/ceph/rgw/models/rgw-user-capabilities.ts","./src/app/ceph/rgw/models/rgw-user-subuser.ts","./src/app/ceph/rgw/rgw-bucket-details/rgw-bucket-details.component.ts","./src/app/ceph/rgw/rgw-bucket-details/rgw-bucket-details.component.html","./src/app/ceph/rgw/rgw-bucket-form/rgw-bucket-form.component.ts","./src/app/ceph/rgw/rgw-bucket-form/rgw-bucket-form.component.html","./src/app/ceph/rgw/rgw-bucket-list/rgw-bucket-list.component.ts","./src/app/ceph/rgw/rgw-bucket-list/rgw-bucket-list.component.html","./src/app/ceph/rgw/rgw-config-modal/rgw-config-modal.component.ts","./src/app/ceph/rgw/rgw-config-modal/rgw-config-modal.component.html","./src/app/ceph/rgw/rgw-daemon-details/rgw-daemon-details.component.ts","./src/app/ceph/rgw/rgw-daemon-details/rgw-daemon-details.component.html","./src/app/ceph/rgw/rgw-daemon-list/rgw-daemon-list.component.ts","./src/app/ceph/rgw/rgw-daemon-list/rgw-daemon-list.component.html","./src/app/ceph/rgw/rgw-user-capability-modal/rgw-user-capability-modal.component.ts","./src/app/ceph/rgw/rgw-user-capability-modal/rgw-user-capability-modal.component.html","./src/app/ceph/rgw/rgw-user-details/rgw-user-details.component.ts","./src/app/ceph/rgw/rgw-user-details/rgw-user-details.component.html","./src/app/ceph/rgw/rgw-user-form/rgw-user-form.component.ts","./src/app/ceph/rgw/rgw-user-form/rgw-user-form.component.html","./src/app/ceph/rgw/rgw-user-list/rgw-user-list.component.ts","./src/app/ceph/rgw/rgw-user-list/rgw-user-list.component.html","./src/app/ceph/rgw/rgw-user-s3-key-modal/rgw-user-s3-key-modal.component.ts","./src/app/ceph/rgw/rgw-user-s3-key-modal/rgw-user-s3-key-modal.component.html","./src/app/ceph/rgw/rgw-user-subuser-modal/rgw-user-subuser-modal.component.ts","./src/app/ceph/rgw/rgw-user-subuser-modal/rgw-user-subuser-modal.component.html","./src/app/ceph/rgw/rgw-user-swift-key-modal/rgw-user-swift-key-modal.component.ts","./src/app/ceph/rgw/rgw-user-swift-key-modal/rgw-user-swift-key-modal.component.html","./src/app/ceph/rgw/rgw.module.ts","./src/app/shared/api/rgw-user.service.ts"],"sourcesContent":["export class RgwBucketEncryptionModel {\n  kmsProviders = ['vault'];\n  authMethods = ['token', 'agent'];\n  secretEngines = ['kv', 'transit'];\n  sse_s3 = 'AES256';\n  sse_kms = 'aws:kms';\n}\n","export enum RgwBucketMfaDelete {\n  ENABLED = 'Enabled',\n  DISABLED = 'Disabled'\n}\n","export enum RgwBucketVersioning {\n  ENABLED = 'Enabled',\n  SUSPENDED = 'Suspended'\n}\n","export class RgwDaemon {\n  id: string;\n  service_map_id: string;\n  version: string;\n  server_hostname: string;\n  realm_name: string;\n  zonegroup_name: string;\n  zone_name: string;\n  default: boolean;\n}\n","export enum RgwUserAvailableCapability {\n  USERS = 'users',\n  BUCKETS = 'buckets',\n  METADATA = 'metadata',\n  USAGE = 'usage',\n  ZONE = 'zone'\n}\n\nexport class RgwUserCapabilities {\n  static readonly capabilities = RgwUserAvailableCapability;\n\n  static getAll(): string[] {\n    return Object.values(RgwUserCapabilities.capabilities);\n  }\n}\n","export class RgwUserSubuser {\n  id: string;\n  permissions: string;\n  generate_secret?: boolean;\n  secret_key?: string;\n}\n","import { Component, Input, OnChanges } from '@angular/core';\n\nimport { RgwBucketService } from '~/app/shared/api/rgw-bucket.service';\n\n@Component({\n  selector: 'cd-rgw-bucket-details',\n  templateUrl: './rgw-bucket-details.component.html',\n  styleUrls: ['./rgw-bucket-details.component.scss']\n})\nexport class RgwBucketDetailsComponent implements OnChanges {\n  @Input()\n  selection: any;\n\n  constructor(private rgwBucketService: RgwBucketService) {}\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.rgwBucketService.get(this.selection.bid).subscribe((bucket: object) => {\n        bucket['lock_retention_period_days'] = this.rgwBucketService.getLockDays(bucket);\n        this.selection = bucket;\n      });\n    }\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <table class=\"table table-striped table-bordered\">\n    <tbody>\n      <tr>\n        <td i18n\n            class=\"bold w-25\">Name</td>\n        <td class=\"w-75\">{{ selection.bid }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">ID</td>\n        <td>{{ selection.id }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Owner</td>\n        <td>{{ selection.owner }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Index type</td>\n        <td>{{ selection.index_type }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Placement rule</td>\n        <td>{{ selection.placement_rule }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Marker</td>\n        <td>{{ selection.marker }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Maximum marker</td>\n        <td>{{ selection.max_marker }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Version</td>\n        <td>{{ selection.ver }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Master version</td>\n        <td>{{ selection.master_ver }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Modification time</td>\n        <td>{{ selection.mtime | cdDate }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Zonegroup</td>\n        <td>{{ selection.zonegroup }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Versioning</td>\n        <td>{{ selection.versioning }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Encryption</td>\n        <td>{{ selection.encryption }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">MFA Delete</td>\n        <td>{{ selection.mfa_delete }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <!-- Bucket quota -->\n  <div *ngIf=\"selection.bucket_quota\">\n    <legend i18n>Bucket quota</legend>\n    <table class=\"table table-striped table-bordered\">\n      <tbody>\n        <tr>\n          <td i18n\n              class=\"bold w-25\">Enabled</td>\n          <td class=\"w-75\">{{ selection.bucket_quota.enabled | booleanText }}</td>\n        </tr>\n        <tr>\n          <td i18n\n              class=\"bold\">Maximum size</td>\n          <td *ngIf=\"selection.bucket_quota.max_size <= -1\"\n              i18n>Unlimited</td>\n          <td *ngIf=\"selection.bucket_quota.max_size > -1\">\n            {{ selection.bucket_quota.max_size | dimless }}\n          </td>\n        </tr>\n        <tr>\n          <td i18n\n              class=\"bold\">Maximum objects</td>\n          <td *ngIf=\"selection.bucket_quota.max_objects <= -1\"\n              i18n>Unlimited</td>\n          <td *ngIf=\"selection.bucket_quota.max_objects > -1\">\n            {{ selection.bucket_quota.max_objects }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <!-- Locking -->\n  <legend i18n>Locking</legend>\n  <table class=\"table table-striped table-bordered\">\n    <tbody>\n      <tr>\n        <td i18n\n            class=\"bold w-25\">Enabled</td>\n        <td class=\"w-75\">{{ selection.lock_enabled | booleanText }}</td>\n      </tr>\n      <ng-container *ngIf=\"selection.lock_enabled\">\n        <tr>\n          <td i18n\n              class=\"bold\">Mode</td>\n          <td>{{ selection.lock_mode }}</td>\n        </tr>\n        <tr>\n          <td i18n\n              class=\"bold\">Days</td>\n          <td>{{ selection.lock_retention_period_days }}</td>\n        </tr>\n      </ng-container>\n    </tbody>\n  </table>\n</ng-container>\n","import { AfterViewChecked, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AbstractControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport _ from 'lodash';\nimport { forkJoin } from 'rxjs';\n\nimport { RgwBucketService } from '~/app/shared/api/rgw-bucket.service';\nimport { RgwSiteService } from '~/app/shared/api/rgw-site.service';\nimport { RgwUserService } from '~/app/shared/api/rgw-user.service';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RgwBucketEncryptionModel } from '../models/rgw-bucket-encryption';\nimport { RgwBucketMfaDelete } from '../models/rgw-bucket-mfa-delete';\nimport { RgwBucketVersioning } from '../models/rgw-bucket-versioning';\nimport { RgwConfigModalComponent } from '../rgw-config-modal/rgw-config-modal.component';\n\n@Component({\n  selector: 'cd-rgw-bucket-form',\n  templateUrl: './rgw-bucket-form.component.html',\n  styleUrls: ['./rgw-bucket-form.component.scss'],\n  providers: [RgwBucketEncryptionModel]\n})\nexport class RgwBucketFormComponent extends CdForm implements OnInit, AfterViewChecked {\n  bucketForm: CdFormGroup;\n  editing = false;\n  owners: string[] = null;\n  kmsProviders: string[] = null;\n  action: string;\n  resource: string;\n  zonegroup: string;\n  placementTargets: object[] = [];\n  isVersioningAlreadyEnabled = false;\n  isMfaDeleteAlreadyEnabled = false;\n  icons = Icons;\n  kmsVaultConfig = false;\n  s3VaultConfig = false;\n\n  get isVersioningEnabled(): boolean {\n    return this.bucketForm.getValue('versioning');\n  }\n  get isMfaDeleteEnabled(): boolean {\n    return this.bucketForm.getValue('mfa-delete');\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: CdFormBuilder,\n    private rgwBucketService: RgwBucketService,\n    private rgwSiteService: RgwSiteService,\n    private modalService: ModalService,\n    private rgwUserService: RgwUserService,\n    private notificationService: NotificationService,\n    private rgwEncryptionModal: RgwBucketEncryptionModel,\n    public actionLabels: ActionLabelsI18n,\n    private readonly changeDetectorRef: ChangeDetectorRef\n  ) {\n    super();\n    this.editing = this.router.url.startsWith(`/rgw/bucket/${URLVerbs.EDIT}`);\n    this.action = this.editing ? this.actionLabels.EDIT : this.actionLabels.CREATE;\n    this.resource = $localize`bucket`;\n    this.createForm();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  createForm() {\n    const self = this;\n    const lockDaysValidator = CdValidators.custom('lockDays', () => {\n      if (!self.bucketForm || !_.get(self.bucketForm.getRawValue(), 'lock_enabled')) {\n        return false;\n      }\n      const lockDays = Number(self.bucketForm.getValue('lock_retention_period_days'));\n      return !Number.isInteger(lockDays) || lockDays === 0;\n    });\n    this.bucketForm = this.formBuilder.group({\n      id: [null],\n      bid: [\n        null,\n        [Validators.required],\n        this.editing\n          ? []\n          : [CdValidators.bucketName(), CdValidators.bucketExistence(false, this.rgwBucketService)]\n      ],\n      owner: [null, [Validators.required]],\n      kms_provider: ['vault'],\n      'placement-target': [null, this.editing ? [] : [Validators.required]],\n      versioning: [null],\n      'mfa-delete': [null],\n      'mfa-token-serial': [''],\n      'mfa-token-pin': [''],\n      lock_enabled: [{ value: false, disabled: this.editing }],\n      encryption_enabled: [null],\n      encryption_type: [\n        null,\n        [\n          CdValidators.requiredIf({\n            encryption_enabled: true\n          })\n        ]\n      ],\n      keyId: [\n        null,\n        [\n          CdValidators.requiredIf({\n            encryption_type: 'aws:kms',\n            encryption_enabled: true\n          })\n        ]\n      ],\n      lock_mode: ['COMPLIANCE'],\n      lock_retention_period_days: [0, [CdValidators.number(false), lockDaysValidator]]\n    });\n  }\n\n  ngOnInit() {\n    const promises = {\n      owners: this.rgwUserService.enumerate()\n    };\n\n    this.kmsProviders = this.rgwEncryptionModal.kmsProviders;\n    this.rgwBucketService.getEncryptionConfig().subscribe((data) => {\n      this.kmsVaultConfig = data[0];\n      this.s3VaultConfig = data[1];\n      if (this.kmsVaultConfig && this.s3VaultConfig) {\n        this.bucketForm.get('encryption_type').setValue('');\n      } else if (this.kmsVaultConfig) {\n        this.bucketForm.get('encryption_type').setValue('aws:kms');\n      } else if (this.s3VaultConfig) {\n        this.bucketForm.get('encryption_type').setValue('AES256');\n      } else {\n        this.bucketForm.get('encryption_type').setValue('');\n      }\n    });\n\n    if (!this.editing) {\n      promises['getPlacementTargets'] = this.rgwSiteService.get('placement-targets');\n    }\n\n    // Process route parameters.\n    this.route.params.subscribe((params: { bid: string }) => {\n      if (params.hasOwnProperty('bid')) {\n        const bid = decodeURIComponent(params.bid);\n        promises['getBid'] = this.rgwBucketService.get(bid);\n      }\n\n      forkJoin(promises).subscribe((data: any) => {\n        // Get the list of possible owners.\n        this.owners = (<string[]>data.owners).sort();\n\n        // Get placement targets:\n        if (data['getPlacementTargets']) {\n          const placementTargets = data['getPlacementTargets'];\n          this.zonegroup = placementTargets['zonegroup'];\n          _.forEach(placementTargets['placement_targets'], (placementTarget) => {\n            placementTarget['description'] = `${placementTarget['name']} (${$localize`pool`}: ${\n              placementTarget['data_pool']\n            })`;\n            this.placementTargets.push(placementTarget);\n          });\n\n          // If there is only 1 placement target, select it by default:\n          if (this.placementTargets.length === 1) {\n            this.bucketForm.get('placement-target').setValue(this.placementTargets[0]['name']);\n          }\n        }\n\n        if (data['getBid']) {\n          const bidResp = data['getBid'];\n          // Get the default values (incl. the values from disabled fields).\n          const defaults = _.clone(this.bucketForm.getRawValue());\n\n          // Get the values displayed in the form. We need to do that to\n          // extract those key/value pairs from the response data, otherwise\n          // the Angular react framework will throw an error if there is no\n          // field for a given key.\n          let value: object = _.pick(bidResp, _.keys(defaults));\n\n          value['lock_retention_period_days'] = this.rgwBucketService.getLockDays(bidResp);\n          value['placement-target'] = bidResp['placement_rule'];\n          value['versioning'] = bidResp['versioning'] === RgwBucketVersioning.ENABLED;\n          value['mfa-delete'] = bidResp['mfa_delete'] === RgwBucketMfaDelete.ENABLED;\n          value['encryption_enabled'] = bidResp['encryption'] === 'Enabled';\n          // Append default values.\n          value = _.merge(defaults, value);\n          // Update the form.\n          this.bucketForm.setValue(value);\n          if (this.editing) {\n            this.isVersioningAlreadyEnabled = this.isVersioningEnabled;\n            this.isMfaDeleteAlreadyEnabled = this.isMfaDeleteEnabled;\n            this.setMfaDeleteValidators();\n            if (value['lock_enabled']) {\n              this.bucketForm.controls['versioning'].disable();\n            }\n          }\n        }\n        this.loadingReady();\n      });\n    });\n  }\n\n  goToListView() {\n    this.router.navigate(['/rgw/bucket']);\n  }\n\n  submit() {\n    // Exit immediately if the form isn't dirty.\n    if (this.bucketForm.getValue('encryption_enabled') == null) {\n      this.bucketForm.get('encryption_enabled').setValue(false);\n      this.bucketForm.get('encryption_type').setValue(null);\n    }\n    if (this.bucketForm.pristine) {\n      this.goToListView();\n      return;\n    }\n    const values = this.bucketForm.value;\n    if (this.editing) {\n      // Edit\n      const versioning = this.getVersioningStatus();\n      const mfaDelete = this.getMfaDeleteStatus();\n      this.rgwBucketService\n        .update(\n          values['bid'],\n          values['id'],\n          values['owner'],\n          versioning,\n          values['encryption_enabled'],\n          values['encryption_type'],\n          values['keyId'],\n          mfaDelete,\n          values['mfa-token-serial'],\n          values['mfa-token-pin'],\n          values['lock_mode'],\n          values['lock_retention_period_days']\n        )\n        .subscribe(\n          () => {\n            this.notificationService.show(\n              NotificationType.success,\n              $localize`Updated Object Gateway bucket '${values.bid}'.`\n            );\n            this.goToListView();\n          },\n          () => {\n            // Reset the 'Submit' button.\n            this.bucketForm.setErrors({ cdSubmitButton: true });\n          }\n        );\n    } else {\n      // Add\n      this.rgwBucketService\n        .create(\n          values['bid'],\n          values['owner'],\n          this.zonegroup,\n          values['placement-target'],\n          values['lock_enabled'],\n          values['lock_mode'],\n          values['lock_retention_period_days'],\n          values['encryption_enabled'],\n          values['encryption_type'],\n          values['keyId']\n        )\n        .subscribe(\n          () => {\n            this.notificationService.show(\n              NotificationType.success,\n              $localize`Created Object Gateway bucket '${values.bid}'`\n            );\n            this.goToListView();\n          },\n          () => {\n            // Reset the 'Submit' button.\n            this.bucketForm.setErrors({ cdSubmitButton: true });\n          }\n        );\n    }\n  }\n\n  areMfaCredentialsRequired() {\n    return (\n      this.isMfaDeleteEnabled !== this.isMfaDeleteAlreadyEnabled ||\n      (this.isMfaDeleteAlreadyEnabled &&\n        this.isVersioningEnabled !== this.isVersioningAlreadyEnabled)\n    );\n  }\n\n  setMfaDeleteValidators() {\n    const mfaTokenSerialControl = this.bucketForm.get('mfa-token-serial');\n    const mfaTokenPinControl = this.bucketForm.get('mfa-token-pin');\n\n    if (this.areMfaCredentialsRequired()) {\n      mfaTokenSerialControl.setValidators(Validators.required);\n      mfaTokenPinControl.setValidators(Validators.required);\n    } else {\n      mfaTokenSerialControl.setValidators(null);\n      mfaTokenPinControl.setValidators(null);\n    }\n\n    mfaTokenSerialControl.updateValueAndValidity();\n    mfaTokenPinControl.updateValueAndValidity();\n  }\n\n  getVersioningStatus() {\n    return this.isVersioningEnabled ? RgwBucketVersioning.ENABLED : RgwBucketVersioning.SUSPENDED;\n  }\n\n  getMfaDeleteStatus() {\n    return this.isMfaDeleteEnabled ? RgwBucketMfaDelete.ENABLED : RgwBucketMfaDelete.DISABLED;\n  }\n\n  fileUpload(files: FileList, controlName: string) {\n    const file: File = files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      const control: AbstractControl = this.bucketForm.get(controlName);\n      control.setValue(file);\n      control.markAsDirty();\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    });\n  }\n\n  openConfigModal() {\n    const modalRef = this.modalService.show(RgwConfigModalComponent, null, { size: 'lg' });\n    modalRef.componentInstance.configForm\n      .get('encryptionType')\n      .setValue(this.bucketForm.getValue('encryption_type'));\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form name=\"bucketForm\"\n        #frm=\"ngForm\"\n        [formGroup]=\"bucketForm\"\n        novalidate>\n    <div class=\"card\">\n      <div i18n=\"form title\"\n           class=\"card-header\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n\n      <div class=\"card-body\">\n        <!-- Id -->\n        <div class=\"form-group row\"\n             *ngIf=\"editing\">\n          <label i18n\n                 class=\"cd-col-form-label\"\n                 for=\"id\">Id</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"id\"\n                   name=\"id\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"id\"\n                   readonly>\n          </div>\n        </div>\n\n        <!-- Name -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{required: !editing}\"\n                 for=\"bid\"\n                 i18n>Name</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"bid\"\n                   name=\"bid\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   i18n-placeholder\n                   placeholder=\"Name...\"\n                   formControlName=\"bid\"\n                   [readonly]=\"editing\"\n                   [autofocus]=\"!editing\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"bucketForm.showError('bid', frm, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"bucketForm.showError('bid', frm, 'bucketNameInvalid')\"\n                  i18n>Bucket names can only contain lowercase letters, numbers, periods and hyphens.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"bucketForm.showError('bid', frm, 'bucketNameNotAllowed')\"\n                  i18n>The chosen name is already in use.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"bucketForm.showError('bid', frm, 'containsUpperCase')\"\n                  i18n>Bucket names must not contain uppercase characters or underscores.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"bucketForm.showError('bid', frm, 'lowerCaseOrNumber')\"\n                  i18n>Each label must start and end with a lowercase letter or a number.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"bucketForm.showError('bid', frm, 'ipAddress')\"\n                  i18n>Bucket names cannot be formatted as IP address.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"bucketForm.showError('bid', frm, 'onlyLowerCaseAndNumbers')\"\n                  i18n>Bucket labels cannot be empty and can only contain lowercase letters, numbers and hyphens.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"bucketForm.showError('bid', frm, 'shouldBeInRange')\"\n                  i18n>Bucket names must be 3 to 63 characters long.</span>\n          </div>\n        </div>\n\n        <!-- Owner -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"owner\"\n                 i18n>Owner</label>\n          <div class=\"cd-col-form-input\">\n            <select id=\"owner\"\n                    name=\"owner\"\n                    class=\"form-select\"\n                    formControlName=\"owner\"\n                    [autofocus]=\"editing\">\n              <option i18n\n                      *ngIf=\"owners === null\"\n                      [ngValue]=\"null\">Loading...</option>\n              <option i18n\n                      *ngIf=\"owners !== null\"\n                      [ngValue]=\"null\">-- Select a user --</option>\n              <option *ngFor=\"let owner of owners\"\n                      [value]=\"owner\">{{ owner }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"bucketForm.showError('owner', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Placement target -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{required: !editing}\"\n                 for=\"placement-target\"\n                 i18n>Placement target</label>\n          <div class=\"cd-col-form-input\">\n            <ng-template #placementTargetSelect>\n              <select id=\"placement-target\"\n                      name=\"placement-target\"\n                      formControlName=\"placement-target\"\n                      class=\"form-select\">\n                <option i18n\n                        *ngIf=\"placementTargets === null\"\n                        [ngValue]=\"null\">Loading...</option>\n                <option i18n\n                        *ngIf=\"placementTargets !== null\"\n                        [ngValue]=\"null\">-- Select a placement target --</option>\n                <option *ngFor=\"let placementTarget of placementTargets\"\n                        [value]=\"placementTarget.name\">{{ placementTarget.description }}</option>\n              </select>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"bucketForm.showError('placement-target', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </ng-template>\n            <ng-container *ngIf=\"editing; else placementTargetSelect\">\n              <input id=\"placement-target\"\n                     name=\"placement-target\"\n                     formControlName=\"placement-target\"\n                     class=\"form-control\"\n                     type=\"text\"\n                     readonly>\n            </ng-container>\n          </div>\n        </div>\n\n        <!-- Versioning -->\n        <fieldset *ngIf=\"editing\">\n          <legend class=\"cd-header\"\n                  i18n>Versioning</legend>\n\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input type=\"checkbox\"\n                       class=\"custom-control-input\"\n                       id=\"versioning\"\n                       name=\"versioning\"\n                       formControlName=\"versioning\"\n                       (change)=\"setMfaDeleteValidators()\">\n                <label class=\"custom-control-label\"\n                       for=\"versioning\"\n                       i18n>Enabled</label>\n                <cd-helper>\n                  <span i18n>Enables versioning for the objects in the bucket.</span>\n                </cd-helper>\n              </div>\n            </div>\n          </div>\n        </fieldset>\n\n        <!-- Multi-Factor Authentication -->\n        <fieldset *ngIf=\"editing\">\n          <!-- MFA Delete -->\n          <legend class=\"cd-header\"\n                  i18n>Multi-Factor Authentication</legend>\n\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input type=\"checkbox\"\n                       class=\"custom-control-input\"\n                       id=\"mfa-delete\"\n                       name=\"mfa-delete\"\n                       formControlName=\"mfa-delete\"\n                       (change)=\"setMfaDeleteValidators()\">\n                <label class=\"custom-control-label\"\n                       for=\"mfa-delete\"\n                       i18n>Delete enabled</label>\n                <cd-helper>\n                  <span i18n>Enables MFA (multi-factor authentication) Delete, which requires additional authentication for changing the bucket versioning state.</span>\n                </cd-helper>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"areMfaCredentialsRequired()\"\n               class=\"form-group row\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   for=\"mfa-token-serial\">Token Serial Number</label>\n            <div class=\"cd-col-form-input\">\n              <input type=\"text\"\n                     id=\"mfa-token-serial\"\n                     name=\"mfa-token-serial\"\n                     formControlName=\"mfa-token-serial\"\n                     class=\"form-control\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"bucketForm.showError('mfa-token-serial', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n          <div *ngIf=\"areMfaCredentialsRequired()\"\n               class=\"form-group row\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   for=\"mfa-token-pin\">Token PIN</label>\n            <div class=\"cd-col-form-input\">\n              <input type=\"text\"\n                     id=\"mfa-token-pin\"\n                     name=\"mfa-token-pin\"\n                     formControlName=\"mfa-token-pin\"\n                     class=\"form-control\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"bucketForm.showError('mfa-token-pin', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n        </fieldset>\n\n        <!-- Locking -->\n        <fieldset>\n          <legend class=\"cd-header\"\n                  i18n>Locking</legend>\n\n          <!-- Locking enabled -->\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"lock_enabled\"\n                       formControlName=\"lock_enabled\"\n                       type=\"checkbox\">\n                <label class=\"custom-control-label\"\n                       for=\"lock_enabled\"\n                       i18n>Enabled</label>\n                <cd-helper>\n                  <span i18n>Enables locking for the objects in the bucket. Locking can only be enabled while creating a bucket.</span>\n                </cd-helper>\n              </div>\n            </div>\n          </div>\n\n          <!-- Locking mode -->\n          <div *ngIf=\"bucketForm.getValue('lock_enabled')\"\n               class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"lock_mode\"\n                   i18n>Mode</label>\n            <div class=\"cd-col-form-input\">\n              <select class=\"form-select\"\n                      formControlName=\"lock_mode\"\n                      name=\"lock_mode\"\n                      id=\"lock_mode\">\n                <option i18n\n                        value=\"COMPLIANCE\">Compliance</option>\n                <option i18n\n                        value=\"GOVERNANCE\">Governance</option>\n              </select>\n            </div>\n          </div>\n\n          <!-- Retention period (days) -->\n          <div *ngIf=\"bucketForm.getValue('lock_enabled')\"\n               class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"lock_retention_period_days\">\n              <ng-container i18n>Days</ng-container>\n              <cd-helper i18n>The number of days that you want to specify for the default retention period that will be applied to new objects placed in this bucket.</cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input class=\"form-control\"\n                     type=\"number\"\n                     id=\"lock_retention_period_days\"\n                     formControlName=\"lock_retention_period_days\"\n                     min=\"0\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"bucketForm.showError('lock_retention_period_days', frm, 'pattern')\"\n                    i18n>The entered value must be a positive integer.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"bucketForm.showError('lock_retention_period_days', frm, 'lockDays')\"\n                    i18n>Retention Days must be a positive integer.</span>\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset>\n          <legend class=\"cd-header\"\n                  i18n>Security</legend>\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"form-check-input\"\n                       id=\"encryption_enabled\"\n                       name=\"encryption_enabled\"\n                       formControlName=\"encryption_enabled\"\n                       type=\"checkbox\"\n                       [attr.disabled]=\"!kmsVaultConfig && !s3VaultConfig ? true : null\">\n                <label class=\"form-check-label\"\n                       for=\"encryption_enabled\"\n                       i18n>Encryption</label>\n                <cd-helper>\n                  <span i18n>Enables encryption for the objects in the bucket.\n                     To enable encryption on a bucket you need to set the configuration values for SSE-S3 or SSE-KMS.\n                     To set the configuration values <a href=\"#/rgw/bucket/create\"\n                                                        (click)=\"openConfigModal()\">Click here</a></span>\n                </cd-helper>\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"bucketForm.getValue('encryption_enabled')\">\n            <div class=\"form-group row\">\n              <div class=\"cd-col-form-offset\">\n                <div class=\"custom-control custom-radio custom-control-inline ps-5\">\n                  <input class=\"form-check-input\"\n                         formControlName=\"encryption_type\"\n                         id=\"sse_S3_enabled\"\n                         type=\"radio\"\n                         name=\"encryption_type\"\n                         value=\"AES256\"\n                         [attr.disabled]=\"!s3VaultConfig ? true : null\">\n                  <label class=\"form-control-label\"\n                         for=\"sse_S3_enabled\"\n                         i18n>SSE-S3 Encryption</label>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <div class=\"cd-col-form-offset\">\n                <div class=\"custom-control custom-radio custom-control-inline ps-5\">\n                  <input class=\"form-check-input\"\n                         formControlName=\"encryption_type\"\n                         id=\"kms_enabled\"\n                         name=\"encryption_type\"\n                         value=\"aws:kms\"\n                         [attr.disabled]=\"!kmsVaultConfig ? true : null\"\n                         type=\"radio\">\n                  <label class=\"form-control-label\"\n                         for=\"kms_enabled\"\n                         i18n>Connect to an external key management service</label>\n                </div>\n              </div>\n            </div>\n\n            <div *ngIf=\"bucketForm.getValue('encryption_type') === 'aws:kms'\">\n              <div class=\"form-group row\">\n                <label class=\"cd-col-form-label required\"\n                       for=\"kms_provider\"\n                       i18n>KMS Provider</label>\n                <div class=\"cd-col-form-input\">\n                  <select id=\"kms_provider\"\n                          name=\"kms_provider\"\n                          class=\"form-select\"\n                          formControlName=\"kms_provider\"\n                          [autofocus]=\"editing\">\n                    <option i18n\n                            *ngIf=\"kmsProviders !== null\"\n                            [ngValue]=\"null\">-- Select a provider --</option>\n                    <option *ngFor=\"let provider of kmsProviders\"\n                            [value]=\"provider\">{{ provider }}</option>\n                  </select>\n                  <span class=\"invalid-feedback\"\n                        *ngIf=\"bucketForm.showError('kms_provider', frm, 'required')\"\n                        i18n>This field is required.</span>\n                </div>\n              </div>\n            </div>\n\n            <div *ngIf=\"bucketForm.getValue('encryption_type') === 'aws:kms'\">\n              <div class=\"form-group row\">\n                <label class=\"cd-col-form-label required\"\n                       for=\"keyId\"\n                       i18n>Key Id\n                </label>\n                <div class=\"cd-col-form-input\">\n                  <input id=\"keyId\"\n                         name=\"keyId\"\n                         class=\"form-control\"\n                         type=\"text\"\n                         formControlName=\"keyId\">\n                  <span class=\"invalid-feedback\"\n                        *ngIf=\"bucketForm.showError('keyId', frm, 'required')\"\n                        i18n>This field is required.</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </fieldset>\n\n      </div>\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                              [form]=\"bucketForm\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, NgZone, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport _ from 'lodash';\nimport { forkJoin as observableForkJoin, Observable, Subscriber } from 'rxjs';\n\nimport { RgwBucketService } from '~/app/shared/api/rgw-bucket.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { DimlessPipe } from '~/app/shared/pipes/dimless.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\n\nconst BASE_URL = 'rgw/bucket';\n\n@Component({\n  selector: 'cd-rgw-bucket-list',\n  templateUrl: './rgw-bucket-list.component.html',\n  styleUrls: ['./rgw-bucket-list.component.scss'],\n  providers: [{ provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }]\n})\nexport class RgwBucketListComponent extends ListWithDetails implements OnInit {\n  @ViewChild(TableComponent, { static: true })\n  table: TableComponent;\n  @ViewChild('bucketSizeTpl', { static: true })\n  bucketSizeTpl: TemplateRef<any>;\n  @ViewChild('bucketObjectTpl', { static: true })\n  bucketObjectTpl: TemplateRef<any>;\n\n  permission: Permission;\n  tableActions: CdTableAction[];\n  columns: CdTableColumn[] = [];\n  buckets: object[] = [];\n  selection: CdTableSelection = new CdTableSelection();\n  staleTimeout: number;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private dimlessBinaryPipe: DimlessBinaryPipe,\n    private dimlessPipe: DimlessPipe,\n    private rgwBucketService: RgwBucketService,\n    private modalService: ModalService,\n    private urlBuilder: URLBuilderService,\n    public actionLabels: ActionLabelsI18n,\n    protected ngZone: NgZone\n  ) {\n    super(ngZone);\n  }\n\n  ngOnInit() {\n    this.permission = this.authStorageService.getPermissions().rgw;\n    this.columns = [\n      {\n        name: $localize`Name`,\n        prop: 'bid',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Owner`,\n        prop: 'owner',\n        flexGrow: 2.5\n      },\n      {\n        name: $localize`Used Capacity`,\n        prop: 'bucket_size',\n        flexGrow: 0.6,\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: $localize`Capacity Limit %`,\n        prop: 'size_usage',\n        cellTemplate: this.bucketSizeTpl,\n        flexGrow: 0.8\n      },\n      {\n        name: $localize`Objects`,\n        prop: 'num_objects',\n        flexGrow: 0.6,\n        pipe: this.dimlessPipe\n      },\n      {\n        name: $localize`Object Limit %`,\n        prop: 'object_usage',\n        cellTemplate: this.bucketObjectTpl,\n        flexGrow: 0.8\n      }\n    ];\n    const getBucketUri = () =>\n      this.selection.first() && `${encodeURIComponent(this.selection.first().bid)}`;\n    const addAction: CdTableAction = {\n      permission: 'create',\n      icon: Icons.add,\n      routerLink: () => this.urlBuilder.getCreate(),\n      name: this.actionLabels.CREATE,\n      canBePrimary: (selection: CdTableSelection) => !selection.hasSelection\n    };\n    const editAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      routerLink: () => this.urlBuilder.getEdit(getBucketUri()),\n      name: this.actionLabels.EDIT\n    };\n    const deleteAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      click: () => this.deleteAction(),\n      disable: () => !this.selection.hasSelection,\n      name: this.actionLabels.DELETE,\n      canBePrimary: (selection: CdTableSelection) => selection.hasMultiSelection\n    };\n    this.tableActions = [addAction, editAction, deleteAction];\n    this.setTableRefreshTimeout();\n  }\n\n  transformBucketData() {\n    _.forEach(this.buckets, (bucketKey) => {\n      const maxBucketSize = bucketKey['bucket_quota']['max_size'];\n      const maxBucketObjects = bucketKey['bucket_quota']['max_objects'];\n      bucketKey['bucket_size'] = 0;\n      bucketKey['num_objects'] = 0;\n      if (!_.isEmpty(bucketKey['usage'])) {\n        bucketKey['bucket_size'] = bucketKey['usage']['rgw.main']['size_actual'];\n        bucketKey['num_objects'] = bucketKey['usage']['rgw.main']['num_objects'];\n      }\n      bucketKey['size_usage'] =\n        maxBucketSize > 0 ? bucketKey['bucket_size'] / maxBucketSize : undefined;\n      bucketKey['object_usage'] =\n        maxBucketObjects > 0 ? bucketKey['num_objects'] / maxBucketObjects : undefined;\n    });\n  }\n\n  getBucketList(context: CdTableFetchDataContext) {\n    this.setTableRefreshTimeout();\n    this.rgwBucketService.list(true).subscribe(\n      (resp: object[]) => {\n        this.buckets = resp;\n        this.transformBucketData();\n      },\n      () => {\n        context.error();\n      }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteAction() {\n    this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: this.selection.hasSingleSelection ? $localize`bucket` : $localize`buckets`,\n      itemNames: this.selection.selected.map((bucket: any) => bucket['bid']),\n      submitActionObservable: () => {\n        return new Observable((observer: Subscriber<any>) => {\n          // Delete all selected data table rows.\n          observableForkJoin(\n            this.selection.selected.map((bucket: any) => {\n              return this.rgwBucketService.delete(bucket.bid);\n            })\n          ).subscribe({\n            error: (error) => {\n              // Forward the error to the observer.\n              observer.error(error);\n              // Reload the data table content because some deletions might\n              // have been executed successfully in the meanwhile.\n              this.table.refreshBtn();\n            },\n            complete: () => {\n              // Notify the observer that we are done.\n              observer.complete();\n              // Reload the data table content.\n              this.table.refreshBtn();\n            }\n          });\n        });\n      }\n    });\n  }\n}\n","<cd-table #table\n          [autoReload]=\"false\"\n          [data]=\"buckets\"\n          [columns]=\"columns\"\n          columnMode=\"flex\"\n          selectionType=\"multiClick\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\"\n          identifier=\"bid\"\n          (fetchData)=\"getBucketList($event)\"\n          [status]=\"tableStatus\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n  <cd-rgw-bucket-details cdTableDetail\n                         [selection]=\"expandedRow\">\n  </cd-rgw-bucket-details>\n</cd-table>\n\n<ng-template #bucketSizeTpl\n             let-row=\"row\">\n  <cd-usage-bar *ngIf=\"row.bucket_quota.max_size > 0 && row.bucket_quota.enabled; else noSizeQuota\"\n                [total]=\"row.bucket_quota.max_size\"\n                [used]=\"row.bucket_size\">\n  </cd-usage-bar>\n\n  <ng-template #noSizeQuota\n               i18n>No Limit</ng-template>\n</ng-template>\n\n<ng-template #bucketObjectTpl\n             let-row=\"row\">\n  <cd-usage-bar *ngIf=\"row.bucket_quota.max_objects > 0 && row.bucket_quota.enabled; else noObjectQuota\"\n                [total]=\"row.bucket_quota.max_objects\"\n                [used]=\"row.num_objects\"\n                [isBinary]=\"false\">\n  </cd-usage-bar>\n\n  <ng-template #noObjectQuota\n               i18n>No Limit</ng-template>\n</ng-template>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { RgwBucketService } from '~/app/shared/api/rgw-bucket.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RgwBucketEncryptionModel } from '../models/rgw-bucket-encryption';\n\n@Component({\n  selector: 'cd-rgw-config-modal',\n  templateUrl: './rgw-config-modal.component.html',\n  styleUrls: ['./rgw-config-modal.component.scss'],\n  providers: [RgwBucketEncryptionModel]\n})\nexport class RgwConfigModalComponent implements OnInit {\n  readonly vaultAddress = /^((https?:\\/\\/)|(www.))(?:([a-zA-Z]+)|(\\d+\\.\\d+.\\d+.\\d+)):\\d{4}$/;\n\n  kmsProviders: string[];\n\n  configForm: CdFormGroup;\n\n  @Output()\n  submitAction = new EventEmitter();\n  authMethods: string[];\n  secretEngines: string[];\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    public activeModal: NgbActiveModal,\n    private router: Router,\n    public actionLabels: ActionLabelsI18n,\n    private rgwBucketService: RgwBucketService,\n    private rgwEncryptionModal: RgwBucketEncryptionModel,\n    private notificationService: NotificationService\n  ) {\n    this.createForm();\n  }\n  ngOnInit(): void {\n    this.kmsProviders = this.rgwEncryptionModal.kmsProviders;\n    this.authMethods = this.rgwEncryptionModal.authMethods;\n    this.secretEngines = this.rgwEncryptionModal.secretEngines;\n  }\n\n  createForm() {\n    this.configForm = this.formBuilder.group({\n      address: [\n        null,\n        [\n          Validators.required,\n          CdValidators.custom('vaultPattern', (value: string) => {\n            if (_.isEmpty(value)) {\n              return false;\n            }\n            return !this.vaultAddress.test(value);\n          })\n        ]\n      ],\n      kms_provider: ['vault', Validators.required],\n      encryptionType: ['aws:kms', Validators.required],\n      auth_method: [null, Validators.required],\n      secret_engine: [null, Validators.required],\n      secret_path: ['/'],\n      namespace: [null],\n      token: [\n        null,\n        [\n          CdValidators.requiredIf({\n            auth_method: 'token'\n          })\n        ]\n      ],\n      ssl_cert: [null, CdValidators.sslCert()],\n      client_cert: [null, CdValidators.pemCert()],\n      client_key: [null, CdValidators.sslPrivKey()],\n      kmsEnabled: [{ value: false }],\n      s3Enabled: [{ value: false }]\n    });\n  }\n\n  fileUpload(files: FileList, controlName: string) {\n    const file: File = files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      const control: AbstractControl = this.configForm.get(controlName);\n      control.setValue(file);\n      control.markAsDirty();\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    });\n  }\n\n  onSubmit() {\n    const values = this.configForm.value;\n    this.rgwBucketService\n      .setEncryptionConfig(\n        values['encryptionType'],\n        values['kms_provider'],\n        values['auth_method'],\n        values['secret_engine'],\n        values['secret_path'],\n        values['namespace'],\n        values['address'],\n        values['token'],\n        values['owner'],\n        values['ssl_cert'],\n        values['client_cert'],\n        values['client_key']\n      )\n      .subscribe({\n        next: () => {\n          this.notificationService.show(\n            NotificationType.success,\n            $localize`Updated RGW Encryption Configuration values`\n          );\n        },\n        error: (error: any) => {\n          this.notificationService.show(NotificationType.error, error);\n          this.configForm.setErrors({ cdSubmitButton: true });\n        },\n        complete: () => {\n          this.activeModal.close();\n          this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n          this.router.onSameUrlNavigation = 'reload';\n          this.router.navigate([this.router.url]);\n        }\n      });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n=\"form title\"\n                class=\"modal-title\">Update RGW Encryption Configurations</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"configForm\"\n          #frm=\"ngForm\"\n          [formGroup]=\"configForm\">\n    <div class=\"modal-body\">\n      <div class=\"form-group row\">\n        <label class=\"cd-col-form-label required\"\n               for=\"encryptionType\"\n               i18n>Encryption Type</label>\n        <div class=\"col-md-auto custom-checkbox form-check-inline ms-3\">\n          <input class=\"form-check-input\"\n                 formControlName=\"encryptionType\"\n                 id=\"s3Enabled\"\n                 type=\"radio\"\n                 name=\"encryptionType\"\n                 value=\"AES256\">\n          <label class=\"custom-check-label\"\n                 for=\"s3Enabled\"\n                 i18n>SSE-S3 Encryption</label>\n        </div>\n\n        <div class=\"col-md-auto custom-checkbox form-check-inline\">\n          <input class=\"form-check-input\"\n                 formControlName=\"encryptionType\"\n                 id=\"kmsEnabled\"\n                 name=\"encryptionType\"\n                 value=\"aws:kms\"\n                 type=\"radio\">\n          <label class=\"custom-check-label\"\n                 for=\"kmsEnabled\"\n                 i18n>SSE-KMS Encryption</label>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('encryptionType') === 'aws:kms' || configForm.getValue('encryptionType') === 'AES256'\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"kms_provider\"\n                 i18n>Key management service provider</label>\n          <div class=\"cd-col-form-input\">\n            <select id=\"kms_provider\"\n                    name=\"kms_provider\"\n                    class=\"form-select\"\n                    formControlName=\"kms_provider\">\n              <option i18n\n                      *ngIf=\"kmsProviders !== null\"\n                      [ngValue]=\"null\">-- Select a provider --</option>\n              <option *ngFor=\"let provider of kmsProviders\"\n                      [value]=\"provider\">{{ provider }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"configForm.showError('kms_provider', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('encryptionType') === 'aws:kms' || configForm.getValue('encryptionType') === 'AES256'\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"auth_method\"\n                 i18n>Authentication Method</label>\n          <div class=\"cd-col-form-input\">\n            <select id=\"auth_method\"\n                    name=\"auth_method\"\n                    class=\"form-select\"\n                    formControlName=\"auth_method\">\n              <option i18n\n                      *ngIf=\"authMethods !== null\"\n                      [ngValue]=\"null\">-- Select a method --</option>\n              <option *ngFor=\"let auth_method of authMethods\"\n                      [value]=\"auth_method\">{{ auth_method }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"configForm.showError('auth_method', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('encryptionType') === 'aws:kms' || configForm.getValue('encryptionType') === 'AES256'\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"secret_engine\"\n                 i18n>Secret Engine</label>\n          <div class=\"cd-col-form-input\">\n            <select id=\"secret_engine\"\n                    name=\"secret_engine\"\n                    class=\"form-select\"\n                    formControlName=\"secret_engine\">\n              <option i18n\n                      *ngIf=\"secretEngines !== null\"\n                      [ngValue]=\"null\">-- Select a method --</option>\n              <option *ngFor=\"let secret_engine of secretEngines\"\n                      [value]=\"secret_engine\">{{ secret_engine }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"configForm.showError('secret_engine', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('encryptionType') === 'aws:kms' || configForm.getValue('encryptionType') === 'AES256'\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"secret_path\"\n                 i18n>Secret Path\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"secret_path\"\n                   name=\"secret_path\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"secret_path\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"configForm.showError('secret_path', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('encryptionType') === 'aws:kms' || configForm.getValue('encryptionType') === 'AES256'\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"namespace\"\n                 i18n>Namespace\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"namespace\"\n                   name=\"namespace\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"namespace\">\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('encryptionType') === 'aws:kms' || configForm.getValue('encryptionType') === 'AES256'\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"address\"\n                 i18n>Vault Address\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"address\"\n                   name=\"address\"\n                   class=\"form-control\"\n                   formControlName=\"address\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"configForm.showError('address', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('auth_method') === 'token'\"\n           class=\"form-group row\">\n        <label class=\"cd-col-form-label required\"\n               for=\"token\">\n        <span i18n>Token</span>\n        </label>\n        <div class=\"cd-col-form-input\">\n          <input type=\"file\"\n                 formControlName=\"token\"\n                 (change)=\"fileUpload($event.target.files, 'token')\">\n          <span class=\"invalid-feedback\"\n                *ngIf=\"configForm.showError('token', frm, 'required')\"\n                i18n>This field is required.</span>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('encryptionType') === 'aws:kms' || configForm.getValue('encryptionType') === 'AES256'\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"ssl_cert\">\n          <span i18n>CA Certificate</span>\n          <cd-helper i18n>The SSL certificate in PEM format.</cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"file\"\n                   formControlName=\"ssl_cert\"\n                   (change)=\"fileUpload($event.target.files, 'ssl_cert')\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"configForm.showError('ssl_cert', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('encryptionType') === 'aws:kms' || configForm.getValue('encryptionType') === 'AES256'\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"client_cert\">\n          <span i18n>Client Certificate</span>\n          <cd-helper i18n>The Client certificate in PEM format.</cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"file\"\n                   formControlName=\"client_cert\"\n                   (change)=\"fileUpload($event.target.files, 'client_cert')\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"configForm.showError('client_cert', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"configForm.getValue('encryptionType') === 'aws:kms' || configForm.getValue('encryptionType') === 'AES256'\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"client_key\">\n          <span i18n>Client Private Key</span>\n          <cd-helper i18n>The Client Private Key in PEM format.</cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"file\"\n                   (change)=\"fileUpload($event.target.files, 'client_key')\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"configForm.showError('client_key', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                            [submitText]=\"actionLabels.SUBMIT\"\n                            [form]=\"configForm\"></cd-form-button-panel>\n    </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, Input, OnChanges } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { RgwDaemon } from '~/app/ceph/rgw/models/rgw-daemon';\nimport { RgwDaemonService } from '~/app/shared/api/rgw-daemon.service';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-rgw-daemon-details',\n  templateUrl: './rgw-daemon-details.component.html',\n  styleUrls: ['./rgw-daemon-details.component.scss']\n})\nexport class RgwDaemonDetailsComponent implements OnChanges {\n  metadata: any;\n  serviceId = '';\n  serviceMapId = '';\n  grafanaPermission: Permission;\n\n  @Input()\n  selection: RgwDaemon;\n\n  constructor(\n    private rgwDaemonService: RgwDaemonService,\n    private authStorageService: AuthStorageService\n  ) {\n    this.grafanaPermission = this.authStorageService.getPermissions().grafana;\n  }\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.serviceId = this.selection.id;\n      this.serviceMapId = this.selection.service_map_id;\n    }\n  }\n\n  getMetaData() {\n    if (_.isEmpty(this.serviceId)) {\n      return;\n    }\n    this.rgwDaemonService.get(this.serviceId).subscribe((resp: any) => {\n      this.metadata = resp['rgw_metadata'];\n    });\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <nav ngbNav\n       #nav=\"ngbNav\"\n       class=\"nav-tabs\"\n       cdStatefulTab=\"rgw-daemon-details\">\n    <ng-container ngbNavItem=\"details\">\n      <a ngbNavLink\n         i18n>Details</a>\n      <ng-template ngbNavContent>\n        <cd-table-key-value [data]=\"metadata\"\n                            (fetchData)=\"getMetaData()\">\n        </cd-table-key-value>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"performance-counters\">\n      <a ngbNavLink\n         i18n>Performance Counters</a>\n      <ng-template ngbNavContent>\n        <cd-table-performance-counter serviceType=\"rgw\"\n                                      [serviceId]=\"serviceMapId\">\n        </cd-table-performance-counter>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"performance-details\"\n                  *ngIf=\"grafanaPermission.read\">\n      <a ngbNavLink\n         i18n>Performance Details</a>\n      <ng-template ngbNavContent>\n        <cd-grafana i18n-title\n                    title=\"RGW instance details\"\n                    [grafanaPath]=\"'rgw-instance-detail?var-rgw_servers=rgw.' + this.serviceId\"\n                    [type]=\"'metrics'\"\n                    uid=\"x5ARzZtmk\"\n                    grafanaStyle=\"one\">\n        </cd-grafana>\n      </ng-template>\n    </ng-container>\n  </nav>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\nimport { RgwDaemon } from '~/app/ceph/rgw/models/rgw-daemon';\nimport { RgwDaemonService } from '~/app/shared/api/rgw-daemon.service';\nimport { RgwSiteService } from '~/app/shared/api/rgw-site.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { CephShortVersionPipe } from '~/app/shared/pipes/ceph-short-version.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-rgw-daemon-list',\n  templateUrl: './rgw-daemon-list.component.html',\n  styleUrls: ['./rgw-daemon-list.component.scss']\n})\nexport class RgwDaemonListComponent extends ListWithDetails implements OnInit {\n  columns: CdTableColumn[] = [];\n  daemons: RgwDaemon[] = [];\n  grafanaPermission: Permission;\n  isMultiSite: boolean;\n\n  constructor(\n    private rgwDaemonService: RgwDaemonService,\n    private authStorageService: AuthStorageService,\n    private cephShortVersionPipe: CephShortVersionPipe,\n    private rgwSiteService: RgwSiteService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.grafanaPermission = this.authStorageService.getPermissions().grafana;\n    this.columns = [\n      {\n        name: $localize`ID`,\n        prop: 'id',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Hostname`,\n        prop: 'server_hostname',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Zone`,\n        prop: 'zone_name',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Zone Group`,\n        prop: 'zonegroup_name',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Realm`,\n        prop: 'realm_name',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Version`,\n        prop: 'version',\n        flexGrow: 1,\n        pipe: this.cephShortVersionPipe\n      }\n    ];\n    this.rgwSiteService\n      .get('realms')\n      .subscribe((realms: string[]) => (this.isMultiSite = realms.length > 0));\n  }\n\n  getDaemonList(context: CdTableFetchDataContext) {\n    this.rgwDaemonService.list().subscribe(this.updateDaemons, () => {\n      context.error();\n    });\n  }\n\n  private updateDaemons = (daemons: RgwDaemon[]) => {\n    this.daemons = daemons;\n  };\n}\n","<nav ngbNav\n     #nav=\"ngbNav\"\n     class=\"nav-tabs\">\n  <ng-container ngbNavItem>\n    <a ngbNavLink\n       i18n>Daemons List</a>\n    <ng-template ngbNavContent>\n      <cd-table [data]=\"daemons\"\n                [columns]=\"columns\"\n                columnMode=\"flex\"\n                [hasDetails]=\"true\"\n                (setExpandedRow)=\"setExpandedRow($event)\"\n                (fetchData)=\"getDaemonList($event)\">\n        <cd-rgw-daemon-details cdTableDetail\n                               [selection]=\"expandedRow\">\n        </cd-rgw-daemon-details>\n      </cd-table>\n    </ng-template>\n  </ng-container>\n\n  <ng-container ngbNavItem\n                *ngIf=\"grafanaPermission.read\">\n    <a ngbNavLink\n       i18n>Overall Performance</a>\n    <ng-template ngbNavContent>\n      <cd-grafana i18n-title\n                  title=\"RGW overview\"\n                  [grafanaPath]=\"'rgw-overview?'\"\n                  [type]=\"'metrics'\"\n                  uid=\"WAkugZpiz\"\n                  grafanaStyle=\"two\">\n      </cd-grafana>\n    </ng-template>\n  </ng-container>\n\n  <ng-container ngbNavItem\n                *ngIf=\"grafanaPermission.read && isMultiSite\">\n    <a ngbNavLink\n       i18n>Sync Performance</a>\n    <ng-template ngbNavContent>\n      <cd-grafana i18n-title\n                  title=\"Radosgw sync overview\"\n                  [grafanaPath]=\"'radosgw-sync-overview?'\"\n                  [type]=\"'metrics'\"\n                  uid=\"rgw-sync-overview\"\n                  grafanaStyle=\"two\">\n      </cd-grafana>\n    </ng-template>\n  </ng-container>\n</nav>\n\n<div [ngbNavOutlet]=\"nav\"></div>\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { RgwUserCapabilities } from '../models/rgw-user-capabilities';\nimport { RgwUserCapability } from '../models/rgw-user-capability';\n\n@Component({\n  selector: 'cd-rgw-user-capability-modal',\n  templateUrl: './rgw-user-capability-modal.component.html',\n  styleUrls: ['./rgw-user-capability-modal.component.scss']\n})\nexport class RgwUserCapabilityModalComponent {\n  /**\n   * The event that is triggered when the 'Add' or 'Update' button\n   * has been pressed.\n   */\n  @Output()\n  submitAction = new EventEmitter();\n\n  formGroup: CdFormGroup;\n  editing = true;\n  types: string[] = [];\n  resource: string;\n  action: string;\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    this.resource = $localize`capability`;\n    this.createForm();\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      type: [null, [Validators.required]],\n      perm: [null, [Validators.required]]\n    });\n  }\n\n  /**\n   * Set the 'editing' flag. If set to TRUE, the modal dialog is in 'Edit' mode,\n   * otherwise in 'Add' mode. According to the mode the dialog and its controls\n   * behave different.\n   * @param {boolean} viewing\n   */\n  setEditing(editing: boolean = true) {\n    this.editing = editing;\n    this.action = this.editing ? this.actionLabels.EDIT : this.actionLabels.ADD;\n  }\n\n  /**\n   * Set the values displayed in the dialog.\n   */\n  setValues(type: string, perm: string) {\n    this.formGroup.setValue({\n      type: type,\n      perm: perm\n    });\n  }\n\n  /**\n   * Set the current capabilities of the user.\n   */\n  setCapabilities(capabilities: RgwUserCapability[]) {\n    // Parse the configured capabilities to get a list of types that\n    // should be displayed.\n    const usedTypes: string[] = [];\n    capabilities.forEach((capability) => {\n      usedTypes.push(capability.type);\n    });\n    this.types = [];\n    RgwUserCapabilities.getAll().forEach((type) => {\n      if (_.indexOf(usedTypes, type) === -1) {\n        this.types.push(type);\n      }\n    });\n  }\n\n  onSubmit() {\n    const capability: RgwUserCapability = this.formGroup.value;\n    this.submitAction.emit(capability);\n    this.activeModal.close();\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n=\"form title\"\n                class=\"modal-title\">{{ action | titlecase }} {{ resource | upperFirst }}</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form #frm=\"ngForm\"\n          [formGroup]=\"formGroup\"\n          novalidate>\n      <div class=\"modal-body\">\n        <!-- Type -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': !editing}\"\n                 for=\"type\"\n                 i18n>Type</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"type\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   *ngIf=\"editing\"\n                   [readonly]=\"true\"\n                   formControlName=\"type\">\n            <select id=\"type\"\n                    class=\"form-select\"\n                    formControlName=\"type\"\n                    *ngIf=\"!editing\"\n                    autofocus>\n              <option i18n\n                      *ngIf=\"types !== null\"\n                      [ngValue]=\"null\">-- Select a type --</option>\n              <option *ngFor=\"let type of types\"\n                      [value]=\"type\">{{ type }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"formGroup.showError('type', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Permission -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"perm\"\n                 i18n>Permission</label>\n          <div class=\"cd-col-form-input\">\n            <select id=\"perm\"\n                    class=\"form-select\"\n                    formControlName=\"perm\">\n              <option i18n\n                      [ngValue]=\"null\">-- Select a permission --</option>\n              <option *ngFor=\"let perm of ['read', 'write', '*']\"\n                      [value]=\"perm\">\n                {{ perm }}\n              </option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"formGroup.showError('perm', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"formGroup\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, Input, OnChanges, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { RgwUserService } from '~/app/shared/api/rgw-user.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { RgwUserS3Key } from '../models/rgw-user-s3-key';\nimport { RgwUserSwiftKey } from '../models/rgw-user-swift-key';\nimport { RgwUserS3KeyModalComponent } from '../rgw-user-s3-key-modal/rgw-user-s3-key-modal.component';\nimport { RgwUserSwiftKeyModalComponent } from '../rgw-user-swift-key-modal/rgw-user-swift-key-modal.component';\n\n@Component({\n  selector: 'cd-rgw-user-details',\n  templateUrl: './rgw-user-details.component.html',\n  styleUrls: ['./rgw-user-details.component.scss']\n})\nexport class RgwUserDetailsComponent implements OnChanges, OnInit {\n  @ViewChild('accessKeyTpl')\n  public accessKeyTpl: TemplateRef<any>;\n  @ViewChild('secretKeyTpl')\n  public secretKeyTpl: TemplateRef<any>;\n\n  @Input()\n  selection: any;\n\n  // Details tab\n  user: any;\n  maxBucketsMap: {};\n\n  // Keys tab\n  keys: any = [];\n  keysColumns: CdTableColumn[] = [];\n  keysSelection: CdTableSelection = new CdTableSelection();\n\n  icons = Icons;\n\n  constructor(private rgwUserService: RgwUserService, private modalService: ModalService) {}\n\n  ngOnInit() {\n    this.keysColumns = [\n      {\n        name: $localize`Username`,\n        prop: 'username',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Type`,\n        prop: 'type',\n        flexGrow: 1\n      }\n    ];\n    this.maxBucketsMap = {\n      '-1': $localize`Disabled`,\n      0: $localize`Unlimited`\n    };\n  }\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.user = this.selection;\n\n      // Sort subusers and capabilities.\n      this.user.subusers = _.sortBy(this.user.subusers, 'id');\n      this.user.caps = _.sortBy(this.user.caps, 'type');\n\n      // Load the user/bucket quota of the selected user.\n      this.rgwUserService.getQuota(this.user.uid).subscribe((resp: object) => {\n        _.extend(this.user, resp);\n      });\n\n      // Process the keys.\n      this.keys = [];\n      if (this.user.keys) {\n        this.user.keys.forEach((key: RgwUserS3Key) => {\n          this.keys.push({\n            id: this.keys.length + 1, // Create an unique identifier\n            type: 'S3',\n            username: key.user,\n            ref: key\n          });\n        });\n      }\n      if (this.user.swift_keys) {\n        this.user.swift_keys.forEach((key: RgwUserSwiftKey) => {\n          this.keys.push({\n            id: this.keys.length + 1, // Create an unique identifier\n            type: 'Swift',\n            username: key.user,\n            ref: key\n          });\n        });\n      }\n\n      this.keys = _.sortBy(this.keys, 'user');\n    }\n  }\n\n  updateKeysSelection(selection: CdTableSelection) {\n    this.keysSelection = selection;\n  }\n\n  showKeyModal() {\n    const key = this.keysSelection.first();\n    const modalRef = this.modalService.show(\n      key.type === 'S3' ? RgwUserS3KeyModalComponent : RgwUserSwiftKeyModalComponent\n    );\n    switch (key.type) {\n      case 'S3':\n        modalRef.componentInstance.setViewing();\n        modalRef.componentInstance.setValues(key.ref.user, key.ref.access_key, key.ref.secret_key);\n        break;\n      case 'Swift':\n        modalRef.componentInstance.setValues(key.ref.user, key.ref.secret_key);\n        break;\n    }\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <nav ngbNav\n       #nav=\"ngbNav\"\n       class=\"nav-tabs\"\n       cdStatefulTab=\"rgw-user-details\">\n    <ng-container ngbNavItem=\"details\">\n      <a ngbNavLink\n         i18n>Details</a>\n      <ng-template ngbNavContent>\n        <div *ngIf=\"user\">\n          <table class=\"table table-striped table-bordered\">\n            <tbody>\n              <tr>\n                <td i18n\n                    class=\"bold w-25\">Tenant</td>\n                <td class=\"w-75\">{{ user.tenant }}</td>\n              </tr>\n              <tr>\n                <td i18n\n                    class=\"bold w-25\">User ID</td>\n                <td class=\"w-75\">{{ user.user_id }}</td>\n              </tr>\n              <tr>\n                <td i18n\n                    class=\"bold w-25\">Username</td>\n                <td class=\"w-75\">{{ user.uid }}</td>\n              </tr>\n              <tr>\n                <td i18n\n                    class=\"bold\">Full name</td>\n                <td>{{ user.display_name }}</td>\n              </tr>\n              <tr *ngIf=\"user.email?.length\">\n                <td i18n\n                    class=\"bold\">Email address</td>\n                <td>{{ user.email }}</td>\n              </tr>\n              <tr>\n                <td i18n\n                    class=\"bold\">Suspended</td>\n                <td>{{ user.suspended | booleanText }}</td>\n              </tr>\n              <tr>\n                <td i18n\n                    class=\"bold\">System</td>\n                <td>{{ user.system === 'true' | booleanText }}</td>\n              </tr>\n              <tr>\n                <td i18n\n                    class=\"bold\">Maximum buckets</td>\n                <td>{{ user.max_buckets | map:maxBucketsMap }}</td>\n              </tr>\n              <tr *ngIf=\"user.subusers && user.subusers.length\">\n                <td i18n\n                    class=\"bold\">Subusers</td>\n                <td>\n                  <div *ngFor=\"let subuser of user.subusers\">\n                    {{ subuser.id }} ({{ subuser.permissions }})\n                  </div>\n                </td>\n              </tr>\n              <tr *ngIf=\"user.caps && user.caps.length\">\n                <td i18n\n                    class=\"bold\">Capabilities</td>\n                <td>\n                  <div *ngFor=\"let cap of user.caps\">\n                    {{ cap.type }} ({{ cap.perm }})\n                  </div>\n                </td>\n              </tr>\n              <tr *ngIf=\"user.mfa_ids?.length\">\n                <td i18n\n                    class=\"bold\">MFAs(Id)</td>\n                <td>{{ user.mfa_ids | join}}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <!-- User quota -->\n          <div *ngIf=\"user.user_quota\">\n            <legend i18n>User quota</legend>\n            <table class=\"table table-striped table-bordered\">\n              <tbody>\n                <tr>\n                  <td i18n\n                      class=\"bold w-25\">Enabled</td>\n                  <td class=\"w-75\">{{ user.user_quota.enabled | booleanText }}</td>\n                </tr>\n                <tr>\n                  <td i18n\n                      class=\"bold\">Maximum size</td>\n                  <td *ngIf=\"!user.user_quota.enabled\">-</td>\n                  <td *ngIf=\"user.user_quota.enabled && user.user_quota.max_size <= -1\"\n                      i18n>Unlimited</td>\n                  <td *ngIf=\"user.user_quota.enabled && user.user_quota.max_size > -1\">\n                    {{ user.user_quota.max_size | dimlessBinary }}\n                  </td>\n                </tr>\n                <tr>\n                  <td i18n\n                      class=\"bold\">Maximum objects</td>\n                  <td *ngIf=\"!user.user_quota.enabled\">-</td>\n                  <td *ngIf=\"user.user_quota.enabled && user.user_quota.max_objects <= -1\"\n                      i18n>Unlimited</td>\n                  <td *ngIf=\"user.user_quota.enabled && user.user_quota.max_objects > -1\">\n                    {{ user.user_quota.max_objects }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Bucket quota -->\n          <div *ngIf=\"user.bucket_quota\">\n            <legend i18n>Bucket quota</legend>\n            <table class=\"table table-striped table-bordered\">\n              <tbody>\n                <tr>\n                  <td i18n\n                      class=\"bold w-25\">Enabled</td>\n                  <td class=\"w-75\">{{ user.bucket_quota.enabled | booleanText }}</td>\n                </tr>\n                <tr>\n                  <td i18n\n                      class=\"bold\">Maximum size</td>\n                  <td *ngIf=\"!user.bucket_quota.enabled\">-</td>\n                  <td *ngIf=\"user.bucket_quota.enabled && user.bucket_quota.max_size <= -1\"\n                      i18n>Unlimited</td>\n                  <td *ngIf=\"user.bucket_quota.enabled && user.bucket_quota.max_size > -1\">\n                    {{ user.bucket_quota.max_size | dimlessBinary }}\n                  </td>\n                </tr>\n                <tr>\n                  <td i18n\n                      class=\"bold\">Maximum objects</td>\n                  <td *ngIf=\"!user.bucket_quota.enabled\">-</td>\n                  <td *ngIf=\"user.bucket_quota.enabled && user.bucket_quota.max_objects <= -1\"\n                      i18n>Unlimited</td>\n                  <td *ngIf=\"user.bucket_quota.enabled && user.bucket_quota.max_objects > -1\">\n                    {{ user.bucket_quota.max_objects }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"keys\"\n                  *ngIf=\"keys.length\">\n      <a ngbNavLink\n         i18n>Keys</a>\n      <ng-template ngbNavContent>\n        <cd-table [data]=\"keys\"\n                  [columns]=\"keysColumns\"\n                  columnMode=\"flex\"\n                  selectionType=\"multi\"\n                  forceIdentifier=\"true\"\n                  (updateSelection)=\"updateKeysSelection($event)\">\n          <div class=\"table-actions\">\n            <div class=\"btn-group\"\n                 dropdown>\n              <button type=\"button\"\n                      class=\"btn btn-accent\"\n                      [disabled]=\"!keysSelection.hasSingleSelection\"\n                      (click)=\"showKeyModal()\">\n                <i [ngClass]=\"[icons.show]\"></i>\n                <ng-container i18n>Show</ng-container>\n              </button>\n            </div>\n          </div>\n        </cd-table>\n      </ng-template>\n    </ng-container>\n  </nav>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, ValidationErrors, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport _ from 'lodash';\nimport { concat as observableConcat, forkJoin as observableForkJoin, Observable } from 'rxjs';\n\nimport { RgwUserService } from '~/app/shared/api/rgw-user.service';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators, isEmptyInputValue } from '~/app/shared/forms/cd-validators';\nimport { FormatterService } from '~/app/shared/services/formatter.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RgwUserCapabilities } from '../models/rgw-user-capabilities';\nimport { RgwUserCapability } from '../models/rgw-user-capability';\nimport { RgwUserS3Key } from '../models/rgw-user-s3-key';\nimport { RgwUserSubuser } from '../models/rgw-user-subuser';\nimport { RgwUserSwiftKey } from '../models/rgw-user-swift-key';\nimport { RgwUserCapabilityModalComponent } from '../rgw-user-capability-modal/rgw-user-capability-modal.component';\nimport { RgwUserS3KeyModalComponent } from '../rgw-user-s3-key-modal/rgw-user-s3-key-modal.component';\nimport { RgwUserSubuserModalComponent } from '../rgw-user-subuser-modal/rgw-user-subuser-modal.component';\nimport { RgwUserSwiftKeyModalComponent } from '../rgw-user-swift-key-modal/rgw-user-swift-key-modal.component';\n\n@Component({\n  selector: 'cd-rgw-user-form',\n  templateUrl: './rgw-user-form.component.html',\n  styleUrls: ['./rgw-user-form.component.scss']\n})\nexport class RgwUserFormComponent extends CdForm implements OnInit {\n  userForm: CdFormGroup;\n  editing = false;\n  submitObservables: Observable<Object>[] = [];\n  icons = Icons;\n  subusers: RgwUserSubuser[] = [];\n  s3Keys: RgwUserS3Key[] = [];\n  swiftKeys: RgwUserSwiftKey[] = [];\n  capabilities: RgwUserCapability[] = [];\n\n  action: string;\n  resource: string;\n  subuserLabel: string;\n  s3keyLabel: string;\n  capabilityLabel: string;\n  usernameExists: boolean;\n  showTenant = false;\n  previousTenant: string = null;\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private rgwUserService: RgwUserService,\n    private modalService: ModalService,\n    private notificationService: NotificationService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.resource = $localize`user`;\n    this.subuserLabel = $localize`subuser`;\n    this.s3keyLabel = $localize`S3 Key`;\n    this.capabilityLabel = $localize`capability`;\n    this.editing = this.router.url.startsWith(`/rgw/user/${URLVerbs.EDIT}`);\n    this.action = this.editing ? this.actionLabels.EDIT : this.actionLabels.CREATE;\n    this.createForm();\n  }\n\n  createForm() {\n    this.userForm = this.formBuilder.group({\n      // General\n      user_id: [\n        null,\n        [Validators.required, Validators.pattern(/^[a-zA-Z0-9!@#%^&*()_-]+$/)],\n        this.editing\n          ? []\n          : [\n              CdValidators.unique(this.rgwUserService.exists, this.rgwUserService, () =>\n                this.userForm.getValue('tenant')\n              )\n            ]\n      ],\n      show_tenant: [this.editing],\n      tenant: [\n        null,\n        [Validators.pattern(/^[a-zA-Z0-9!@#%^&*()_-]+$/)],\n        this.editing\n          ? []\n          : [\n              CdValidators.unique(\n                this.rgwUserService.exists,\n                this.rgwUserService,\n                () => this.userForm.getValue('user_id'),\n                true\n              )\n            ]\n      ],\n      display_name: [null, [Validators.required, Validators.pattern(/^[a-zA-Z0-9!@#%^&*()_ -]+$/)]],\n      email: [\n        null,\n        [CdValidators.email],\n        [CdValidators.unique(this.rgwUserService.emailExists, this.rgwUserService)]\n      ],\n      max_buckets_mode: [1],\n      max_buckets: [\n        1000,\n        [CdValidators.requiredIf({ max_buckets_mode: '1' }), CdValidators.number(false)]\n      ],\n      suspended: [false],\n      // S3 key\n      generate_key: [true],\n      access_key: [null, [CdValidators.requiredIf({ generate_key: false })]],\n      secret_key: [null, [CdValidators.requiredIf({ generate_key: false })]],\n      // User quota\n      user_quota_enabled: [false],\n      user_quota_max_size_unlimited: [true],\n      user_quota_max_size: [\n        null,\n        [\n          CdValidators.composeIf(\n            {\n              user_quota_enabled: true,\n              user_quota_max_size_unlimited: false\n            },\n            [Validators.required, this.quotaMaxSizeValidator]\n          )\n        ]\n      ],\n      user_quota_max_objects_unlimited: [true],\n      user_quota_max_objects: [\n        null,\n        [\n          CdValidators.requiredIf({\n            user_quota_enabled: true,\n            user_quota_max_objects_unlimited: false\n          })\n        ]\n      ],\n      // Bucket quota\n      bucket_quota_enabled: [false],\n      bucket_quota_max_size_unlimited: [true],\n      bucket_quota_max_size: [\n        null,\n        [\n          CdValidators.composeIf(\n            {\n              bucket_quota_enabled: true,\n              bucket_quota_max_size_unlimited: false\n            },\n            [Validators.required, this.quotaMaxSizeValidator]\n          )\n        ]\n      ],\n      bucket_quota_max_objects_unlimited: [true],\n      bucket_quota_max_objects: [\n        null,\n        [\n          CdValidators.requiredIf({\n            bucket_quota_enabled: true,\n            bucket_quota_max_objects_unlimited: false\n          })\n        ]\n      ]\n    });\n  }\n\n  ngOnInit() {\n    // Process route parameters.\n    this.route.params.subscribe((params: { uid: string }) => {\n      if (!params.hasOwnProperty('uid')) {\n        this.loadingReady();\n        return;\n      }\n      const uid = decodeURIComponent(params.uid);\n      // Load the user and quota information.\n      const observables = [];\n      observables.push(this.rgwUserService.get(uid));\n      observables.push(this.rgwUserService.getQuota(uid));\n      observableForkJoin(observables).subscribe(\n        (resp: any[]) => {\n          // Get the default values.\n          const defaults = _.clone(this.userForm.value);\n          // Extract the values displayed in the form.\n          let value = _.pick(resp[0], _.keys(this.userForm.value));\n          // Map the max. buckets values.\n          switch (value['max_buckets']) {\n            case -1:\n              value['max_buckets_mode'] = -1;\n              value['max_buckets'] = '';\n              break;\n            case 0:\n              value['max_buckets_mode'] = 0;\n              value['max_buckets'] = '';\n              break;\n            default:\n              value['max_buckets_mode'] = 1;\n              break;\n          }\n          // Map the quota values.\n          ['user', 'bucket'].forEach((type) => {\n            const quota = resp[1][type + '_quota'];\n            value[type + '_quota_enabled'] = quota.enabled;\n            if (quota.max_size < 0) {\n              value[type + '_quota_max_size_unlimited'] = true;\n              value[type + '_quota_max_size'] = null;\n            } else {\n              value[type + '_quota_max_size_unlimited'] = false;\n              value[type + '_quota_max_size'] = `${quota.max_size} B`;\n            }\n            if (quota.max_objects < 0) {\n              value[type + '_quota_max_objects_unlimited'] = true;\n              value[type + '_quota_max_objects'] = null;\n            } else {\n              value[type + '_quota_max_objects_unlimited'] = false;\n              value[type + '_quota_max_objects'] = quota.max_objects;\n            }\n          });\n          // Merge with default values.\n          value = _.merge(defaults, value);\n          // Update the form.\n          this.userForm.setValue(value);\n\n          // Get the sub users.\n          this.subusers = resp[0].subusers;\n\n          // Get the keys.\n          this.s3Keys = resp[0].keys;\n          this.swiftKeys = resp[0].swift_keys;\n\n          // Process the capabilities.\n          const mapPerm = { 'read, write': '*' };\n          resp[0].caps.forEach((cap: any) => {\n            if (cap.perm in mapPerm) {\n              cap.perm = mapPerm[cap.perm];\n            }\n          });\n          this.capabilities = resp[0].caps;\n\n          this.loadingReady();\n        },\n        () => {\n          this.loadingError();\n        }\n      );\n    });\n  }\n\n  goToListView() {\n    this.router.navigate(['/rgw/user']);\n  }\n\n  onSubmit() {\n    let notificationTitle: string;\n    // Exit immediately if the form isn't dirty.\n    if (this.userForm.pristine) {\n      this.goToListView();\n      return;\n    }\n    const uid = this.getUID();\n    if (this.editing) {\n      // Edit\n      if (this._isGeneralDirty()) {\n        const args = this._getUpdateArgs();\n        this.submitObservables.push(this.rgwUserService.update(uid, args));\n      }\n      notificationTitle = $localize`Updated Object Gateway user '${uid}'`;\n    } else {\n      // Add\n      const args = this._getCreateArgs();\n      this.submitObservables.push(this.rgwUserService.create(args));\n      notificationTitle = $localize`Created Object Gateway user '${uid}'`;\n    }\n    // Check if user quota has been modified.\n    if (this._isUserQuotaDirty()) {\n      const userQuotaArgs = this._getUserQuotaArgs();\n      this.submitObservables.push(this.rgwUserService.updateQuota(uid, userQuotaArgs));\n    }\n    // Check if bucket quota has been modified.\n    if (this._isBucketQuotaDirty()) {\n      const bucketQuotaArgs = this._getBucketQuotaArgs();\n      this.submitObservables.push(this.rgwUserService.updateQuota(uid, bucketQuotaArgs));\n    }\n    // Finally execute all observables one by one in serial.\n    observableConcat(...this.submitObservables).subscribe({\n      error: () => {\n        // Reset the 'Submit' button.\n        this.userForm.setErrors({ cdSubmitButton: true });\n      },\n      complete: () => {\n        this.notificationService.show(NotificationType.success, notificationTitle);\n        this.goToListView();\n      }\n    });\n  }\n\n  updateFieldsWhenTenanted() {\n    this.showTenant = this.userForm.getValue('show_tenant');\n    if (!this.showTenant) {\n      this.userForm.get('user_id').markAsUntouched();\n      this.userForm.get('tenant').patchValue(this.previousTenant);\n    } else {\n      this.userForm.get('user_id').markAsTouched();\n      this.previousTenant = this.userForm.get('tenant').value;\n      this.userForm.get('tenant').patchValue(null);\n    }\n  }\n\n  getUID(): string {\n    let uid = this.userForm.getValue('user_id');\n    const tenant = this.userForm?.getValue('tenant');\n    if (tenant && tenant.length > 0) {\n      uid = `${this.userForm.getValue('tenant')}$${uid}`;\n    }\n    return uid;\n  }\n\n  /**\n   * Validate the quota maximum size, e.g. 1096, 1K, 30M or 1.9MiB.\n   */\n  quotaMaxSizeValidator(control: AbstractControl): ValidationErrors | null {\n    if (isEmptyInputValue(control.value)) {\n      return null;\n    }\n    const m = RegExp('^(\\\\d+(\\\\.\\\\d+)?)\\\\s*(B|K(B|iB)?|M(B|iB)?|G(B|iB)?|T(B|iB)?)?$', 'i').exec(\n      control.value\n    );\n    if (m === null) {\n      return { quotaMaxSize: true };\n    }\n    const bytes = new FormatterService().toBytes(control.value);\n    return bytes < 1024 ? { quotaMaxSize: true } : null;\n  }\n\n  /**\n   * Add/Update a subuser.\n   */\n  setSubuser(subuser: RgwUserSubuser, index?: number) {\n    const mapPermissions: Record<string, string> = {\n      'full-control': 'full',\n      'read-write': 'readwrite'\n    };\n    const uid = this.getUID();\n    const args = {\n      subuser: subuser.id,\n      access:\n        subuser.permissions in mapPermissions\n          ? mapPermissions[subuser.permissions]\n          : subuser.permissions,\n      key_type: 'swift',\n      secret_key: subuser.secret_key,\n      generate_secret: subuser.generate_secret ? 'true' : 'false'\n    };\n    this.submitObservables.push(this.rgwUserService.createSubuser(uid, args));\n    if (_.isNumber(index)) {\n      // Modify\n      // Create an observable to modify the subuser when the form is submitted.\n      this.subusers[index] = subuser;\n    } else {\n      // Add\n      // Create an observable to add the subuser when the form is submitted.\n      this.subusers.push(subuser);\n      // Add a Swift key. If the secret key is auto-generated, then visualize\n      // this to the user by displaying a notification instead of the key.\n      this.swiftKeys.push({\n        user: subuser.id,\n        secret_key: subuser.generate_secret ? 'Apply your changes first...' : subuser.secret_key\n      });\n    }\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Delete a subuser.\n   * @param {number} index The subuser to delete.\n   */\n  deleteSubuser(index: number) {\n    const subuser = this.subusers[index];\n    // Create an observable to delete the subuser when the form is submitted.\n    this.submitObservables.push(this.rgwUserService.deleteSubuser(this.getUID(), subuser.id));\n    // Remove the associated S3 keys.\n    this.s3Keys = this.s3Keys.filter((key) => {\n      return key.user !== subuser.id;\n    });\n    // Remove the associated Swift keys.\n    this.swiftKeys = this.swiftKeys.filter((key) => {\n      return key.user !== subuser.id;\n    });\n    // Remove the subuser to update the UI.\n    this.subusers.splice(index, 1);\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Add/Update a capability.\n   */\n  setCapability(cap: RgwUserCapability, index?: number) {\n    const uid = this.getUID();\n    if (_.isNumber(index)) {\n      // Modify\n      const oldCap = this.capabilities[index];\n      // Note, the RadosGW Admin OPS API does not support the modification of\n      // user capabilities. Because of that it is necessary to delete it and\n      // then to re-add the capability with its new value/permission.\n      this.submitObservables.push(\n        this.rgwUserService.deleteCapability(uid, oldCap.type, oldCap.perm)\n      );\n      this.submitObservables.push(this.rgwUserService.addCapability(uid, cap.type, cap.perm));\n      this.capabilities[index] = cap;\n    } else {\n      // Add\n      // Create an observable to add the capability when the form is submitted.\n      this.submitObservables.push(this.rgwUserService.addCapability(uid, cap.type, cap.perm));\n      this.capabilities = [...this.capabilities, cap]; // Notify Angular CD\n    }\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Delete the given capability:\n   * - Delete it from the local array to update the UI\n   * - Create an observable that will be executed on form submit\n   * @param {number} index The capability to delete.\n   */\n  deleteCapability(index: number) {\n    const cap = this.capabilities[index];\n    // Create an observable to delete the capability when the form is submitted.\n    this.submitObservables.push(\n      this.rgwUserService.deleteCapability(this.getUID(), cap.type, cap.perm)\n    );\n    // Remove the capability to update the UI.\n    this.capabilities.splice(index, 1);\n    this.capabilities = [...this.capabilities]; // Notify Angular CD\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  hasAllCapabilities(capabilities: RgwUserCapability[]) {\n    return !_.difference(RgwUserCapabilities.getAll(), _.map(capabilities, 'type')).length;\n  }\n\n  /**\n   * Add/Update a S3 key.\n   */\n  setS3Key(key: RgwUserS3Key, index?: number) {\n    if (_.isNumber(index)) {\n      // Modify\n      // Nothing to do here at the moment.\n    } else {\n      // Add\n      // Split the key's user name into its user and subuser parts.\n      const userMatches = key.user.match(/([^:]+)(:(.+))?/);\n      // Create an observable to add the S3 key when the form is submitted.\n      const uid = userMatches[1];\n      const args = {\n        subuser: userMatches[2] ? userMatches[3] : '',\n        generate_key: key.generate_key ? 'true' : 'false'\n      };\n      if (args['generate_key'] === 'false') {\n        if (!_.isNil(key.access_key)) {\n          args['access_key'] = key.access_key;\n        }\n        if (!_.isNil(key.secret_key)) {\n          args['secret_key'] = key.secret_key;\n        }\n      }\n      this.submitObservables.push(this.rgwUserService.addS3Key(uid, args));\n      // If the access and the secret key are auto-generated, then visualize\n      // this to the user by displaying a notification instead of the key.\n      this.s3Keys.push({\n        user: key.user,\n        access_key: key.generate_key ? 'Apply your changes first...' : key.access_key,\n        secret_key: key.generate_key ? 'Apply your changes first...' : key.secret_key\n      });\n    }\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Delete a S3 key.\n   * @param {number} index The S3 key to delete.\n   */\n  deleteS3Key(index: number) {\n    const key = this.s3Keys[index];\n    // Create an observable to delete the S3 key when the form is submitted.\n    this.submitObservables.push(this.rgwUserService.deleteS3Key(this.getUID(), key.access_key));\n    // Remove the S3 key to update the UI.\n    this.s3Keys.splice(index, 1);\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Show the specified subuser in a modal dialog.\n   * @param {number | undefined} index The subuser to show.\n   */\n  showSubuserModal(index?: number) {\n    const uid = this.getUID();\n    const modalRef = this.modalService.show(RgwUserSubuserModalComponent);\n    if (_.isNumber(index)) {\n      // Edit\n      const subuser = this.subusers[index];\n      modalRef.componentInstance.setEditing();\n      modalRef.componentInstance.setValues(uid, subuser.id, subuser.permissions);\n    } else {\n      // Add\n      modalRef.componentInstance.setEditing(false);\n      modalRef.componentInstance.setValues(uid);\n      modalRef.componentInstance.setSubusers(this.subusers);\n    }\n    modalRef.componentInstance.submitAction.subscribe((subuser: RgwUserSubuser) => {\n      this.setSubuser(subuser, index);\n    });\n  }\n\n  /**\n   * Show the specified S3 key in a modal dialog.\n   * @param {number | undefined} index The S3 key to show.\n   */\n  showS3KeyModal(index?: number) {\n    const modalRef = this.modalService.show(RgwUserS3KeyModalComponent);\n    if (_.isNumber(index)) {\n      // View\n      const key = this.s3Keys[index];\n      modalRef.componentInstance.setViewing();\n      modalRef.componentInstance.setValues(key.user, key.access_key, key.secret_key);\n    } else {\n      // Add\n      const candidates = this._getS3KeyUserCandidates();\n      modalRef.componentInstance.setViewing(false);\n      modalRef.componentInstance.setUserCandidates(candidates);\n      modalRef.componentInstance.submitAction.subscribe((key: RgwUserS3Key) => {\n        this.setS3Key(key);\n      });\n    }\n  }\n\n  /**\n   * Show the specified Swift key in a modal dialog.\n   * @param {number} index The Swift key to show.\n   */\n  showSwiftKeyModal(index: number) {\n    const modalRef = this.modalService.show(RgwUserSwiftKeyModalComponent);\n    const key = this.swiftKeys[index];\n    modalRef.componentInstance.setValues(key.user, key.secret_key);\n  }\n\n  /**\n   * Show the specified capability in a modal dialog.\n   * @param {number | undefined} index The S3 key to show.\n   */\n  showCapabilityModal(index?: number) {\n    const modalRef = this.modalService.show(RgwUserCapabilityModalComponent);\n    if (_.isNumber(index)) {\n      // Edit\n      const cap = this.capabilities[index];\n      modalRef.componentInstance.setEditing();\n      modalRef.componentInstance.setValues(cap.type, cap.perm);\n    } else {\n      // Add\n      modalRef.componentInstance.setEditing(false);\n      modalRef.componentInstance.setCapabilities(this.capabilities);\n    }\n    modalRef.componentInstance.submitAction.subscribe((cap: RgwUserCapability) => {\n      this.setCapability(cap, index);\n    });\n  }\n\n  /**\n   * Check if the general user settings (display name, email, ...) have been modified.\n   * @return {Boolean} Returns TRUE if the general user settings have been modified.\n   */\n  private _isGeneralDirty(): boolean {\n    return ['display_name', 'email', 'max_buckets_mode', 'max_buckets', 'suspended'].some(\n      (path) => {\n        return this.userForm.get(path).dirty;\n      }\n    );\n  }\n\n  /**\n   * Check if the user quota has been modified.\n   * @return {Boolean} Returns TRUE if the user quota has been modified.\n   */\n  private _isUserQuotaDirty(): boolean {\n    return [\n      'user_quota_enabled',\n      'user_quota_max_size_unlimited',\n      'user_quota_max_size',\n      'user_quota_max_objects_unlimited',\n      'user_quota_max_objects'\n    ].some((path) => {\n      return this.userForm.get(path).dirty;\n    });\n  }\n\n  /**\n   * Check if the bucket quota has been modified.\n   * @return {Boolean} Returns TRUE if the bucket quota has been modified.\n   */\n  private _isBucketQuotaDirty(): boolean {\n    return [\n      'bucket_quota_enabled',\n      'bucket_quota_max_size_unlimited',\n      'bucket_quota_max_size',\n      'bucket_quota_max_objects_unlimited',\n      'bucket_quota_max_objects'\n    ].some((path) => {\n      return this.userForm.get(path).dirty;\n    });\n  }\n\n  /**\n   * Helper function to get the arguments of the API request when a new\n   * user is created.\n   */\n  private _getCreateArgs() {\n    const result = {\n      uid: this.getUID(),\n      display_name: this.userForm.getValue('display_name'),\n      suspended: this.userForm.getValue('suspended'),\n      email: '',\n      max_buckets: this.userForm.getValue('max_buckets'),\n      generate_key: this.userForm.getValue('generate_key'),\n      access_key: '',\n      secret_key: ''\n    };\n    const email = this.userForm.getValue('email');\n    if (_.isString(email) && email.length > 0) {\n      _.merge(result, { email: email });\n    }\n    const generateKey = this.userForm.getValue('generate_key');\n    if (!generateKey) {\n      _.merge(result, {\n        generate_key: false,\n        access_key: this.userForm.getValue('access_key'),\n        secret_key: this.userForm.getValue('secret_key')\n      });\n    }\n    const maxBucketsMode = parseInt(this.userForm.getValue('max_buckets_mode'), 10);\n    if (_.includes([-1, 0], maxBucketsMode)) {\n      // -1 => Disable bucket creation.\n      //  0 => Unlimited bucket creation.\n      _.merge(result, { max_buckets: maxBucketsMode });\n    }\n    return result;\n  }\n\n  /**\n   * Helper function to get the arguments for the API request when the user\n   * configuration has been modified.\n   */\n  private _getUpdateArgs() {\n    const result: Record<string, any> = {};\n    const keys = ['display_name', 'email', 'max_buckets', 'suspended'];\n    for (const key of keys) {\n      result[key] = this.userForm.getValue(key);\n    }\n    const maxBucketsMode = parseInt(this.userForm.getValue('max_buckets_mode'), 10);\n    if (_.includes([-1, 0], maxBucketsMode)) {\n      // -1 => Disable bucket creation.\n      //  0 => Unlimited bucket creation.\n      result['max_buckets'] = maxBucketsMode;\n    }\n    return result;\n  }\n\n  /**\n   * Helper function to get the arguments for the API request when the user\n   * quota configuration has been modified.\n   */\n  private _getUserQuotaArgs(): Record<string, any> {\n    const result = {\n      quota_type: 'user',\n      enabled: this.userForm.getValue('user_quota_enabled'),\n      max_size_kb: -1,\n      max_objects: -1\n    };\n    if (!this.userForm.getValue('user_quota_max_size_unlimited')) {\n      // Convert the given value to bytes.\n      const bytes = new FormatterService().toBytes(this.userForm.getValue('user_quota_max_size'));\n      // Finally convert the value to KiB.\n      result['max_size_kb'] = (bytes / 1024).toFixed(0) as any;\n    }\n    if (!this.userForm.getValue('user_quota_max_objects_unlimited')) {\n      result['max_objects'] = this.userForm.getValue('user_quota_max_objects');\n    }\n    return result;\n  }\n\n  /**\n   * Helper function to get the arguments for the API request when the bucket\n   * quota configuration has been modified.\n   */\n  private _getBucketQuotaArgs(): Record<string, any> {\n    const result = {\n      quota_type: 'bucket',\n      enabled: this.userForm.getValue('bucket_quota_enabled'),\n      max_size_kb: -1,\n      max_objects: -1\n    };\n    if (!this.userForm.getValue('bucket_quota_max_size_unlimited')) {\n      // Convert the given value to bytes.\n      const bytes = new FormatterService().toBytes(this.userForm.getValue('bucket_quota_max_size'));\n      // Finally convert the value to KiB.\n      result['max_size_kb'] = (bytes / 1024).toFixed(0) as any;\n    }\n    if (!this.userForm.getValue('bucket_quota_max_objects_unlimited')) {\n      result['max_objects'] = this.userForm.getValue('bucket_quota_max_objects');\n    }\n    return result;\n  }\n\n  /**\n   * Helper method to get the user candidates for S3 keys.\n   * @returns {Array} Returns a list of user identifiers.\n   */\n  private _getS3KeyUserCandidates() {\n    let result = [];\n    // Add the current user id.\n    const uid = this.getUID();\n    if (_.isString(uid) && !_.isEmpty(uid)) {\n      result.push(uid);\n    }\n    // Append the subusers.\n    this.subusers.forEach((subUser) => {\n      result.push(subUser.id);\n    });\n    // Note that it's possible to create multiple S3 key pairs for a user,\n    // thus we append already configured users, too.\n    this.s3Keys.forEach((key) => {\n      result.push(key.user);\n    });\n    result = _.uniq(result);\n    return result;\n  }\n\n  onMaxBucketsModeChange(mode: string) {\n    if (mode === '1') {\n      // If 'Custom' mode is selected, then ensure that the form field\n      // 'Max. buckets' contains a valid value. Set it to default if\n      // necessary.\n      if (!this.userForm.get('max_buckets').valid) {\n        this.userForm.patchValue({\n          max_buckets: 1000\n        });\n      }\n    }\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form #frm=\"ngForm\"\n        [formGroup]=\"userForm\"\n        novalidate>\n    <div class=\"card\">\n      <div i18n=\"form title\"\n           class=\"card-header\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n\n      <div class=\"card-body\">\n        <!-- User ID -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': !editing}\"\n                 for=\"user_id\"\n                 i18n>User ID</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"user_id\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"user_id\"\n                   [readonly]=\"editing\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('user_id', frm, 'required')\"\n                    i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('user_id', frm, 'pattern')\"\n                  i18n>The value is not valid.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"!userForm.getValue('show_tenant') && userForm.showError('user_id', frm, 'notUnique')\"\n                  i18n>The chosen user ID is already in use.</span>\n          </div>\n        </div>\n\n          <!-- Show Tenant -->\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"show_tenant\"\n                       type=\"checkbox\"\n                       (click)=\"updateFieldsWhenTenanted()\"\n                       formControlName=\"show_tenant\"\n                       [readonly]=\"true\">\n                <label class=\"custom-control-label\"\n                       for=\"show_tenant\"\n                       i18n>Show Tenant</label>\n              </div>\n            </div>\n          </div>\n\n        <!-- Tenant -->\n        <div class=\"form-group row\"\n             *ngIf=\"userForm.getValue('show_tenant')\">\n          <label class=\"cd-col-form-label\"\n                 for=\"tenant\"\n                 i18n>Tenant</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"tenant\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"tenant\"\n                   [readonly]=\"editing\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('tenant', frm, 'pattern')\"\n                  i18n>The value is not valid.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('tenant', frm, 'notUnique')\"\n                  i18n>The chosen user ID exists in this tenant.</span>\n          </div>\n        </div>\n\n        <!-- Full name -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': !editing}\"\n                 for=\"display_name\"\n                 i18n>Full name</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"display_name\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"display_name\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('display_name', frm, 'pattern')\"\n                  i18n>The value is not valid.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('display_name', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Email address -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"email\"\n                 i18n>Email address</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"email\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"email\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('email', frm, 'email')\"\n                  i18n>This is not a valid email address.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('email', frm, 'notUnique')\"\n                  i18n>The chosen email address is already in use.</span>\n          </div>\n        </div>\n\n        <!-- Max. buckets -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"max_buckets_mode\"\n                 i18n>Max. buckets</label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    formControlName=\"max_buckets_mode\"\n                    name=\"max_buckets_mode\"\n                    id=\"max_buckets_mode\"\n                    (change)=\"onMaxBucketsModeChange($event.target.value)\">\n              <option i18n\n                      value=\"-1\">Disabled</option>\n              <option i18n\n                      value=\"0\">Unlimited</option>\n              <option i18n\n                      value=\"1\">Custom</option>\n            </select>\n          </div>\n        </div>\n        <div *ngIf=\"1 == userForm.get('max_buckets_mode').value\"\n             class=\"form-group row\">\n          <label class=\"cd-col-form-label\"></label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"max_buckets\"\n                   class=\"form-control\"\n                   type=\"number\"\n                   formControlName=\"max_buckets\"\n                   min=\"1\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('max_buckets', frm, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('max_buckets', frm, 'min')\"\n                  i18n>The entered value must be >= 1.</span>\n          </div>\n        </div>\n\n        <!-- Suspended -->\n        <div class=\"form-group row\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input class=\"custom-control-input\"\n                     id=\"suspended\"\n                     type=\"checkbox\"\n                     formControlName=\"suspended\">\n              <label class=\"custom-control-label\"\n                     for=\"suspended\"\n                     i18n>Suspended</label>\n            </div>\n          </div>\n        </div>\n\n        <!-- S3 key -->\n        <fieldset *ngIf=\"!editing\">\n          <legend i18n>S3 key</legend>\n\n          <!-- Auto-generate key -->\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"generate_key\"\n                       type=\"checkbox\"\n                       formControlName=\"generate_key\">\n                <label class=\"custom-control-label\"\n                       for=\"generate_key\"\n                       i18n>Auto-generate key</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Access key -->\n          <div class=\"form-group row\"\n               *ngIf=\"!editing && !userForm.getValue('generate_key')\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"access_key\"\n                   i18n>Access key</label>\n            <div class=\"cd-col-form-input\">\n              <div class=\"input-group\">\n                <input id=\"access_key\"\n                       class=\"form-control\"\n                       type=\"password\"\n                       formControlName=\"access_key\">\n                <button type=\"button\"\n                        class=\"btn btn-light\"\n                        cdPasswordButton=\"access_key\">\n                </button>\n                <cd-copy-2-clipboard-button source=\"access_key\">\n                </cd-copy-2-clipboard-button>\n              </div>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('access_key', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n\n          <!-- Secret key -->\n          <div class=\"form-group row\"\n               *ngIf=\"!editing && !userForm.getValue('generate_key')\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"secret_key\"\n                   i18n>Secret key</label>\n            <div class=\"cd-col-form-input\">\n              <div class=\"input-group\">\n                <input id=\"secret_key\"\n                       class=\"form-control\"\n                       type=\"password\"\n                       formControlName=\"secret_key\">\n                <button type=\"button\"\n                        class=\"btn btn-light\"\n                        cdPasswordButton=\"secret_key\">\n                </button>\n                <cd-copy-2-clipboard-button source=\"secret_key\">\n                </cd-copy-2-clipboard-button>\n              </div>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('secret_key', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n        </fieldset>\n\n        <!-- Subusers -->\n        <fieldset *ngIf=\"editing\">\n          <legend i18n>Subusers</legend>\n          <div class=\"row\">\n            <div class=\"cd-col-form-offset\">\n              <span *ngIf=\"subusers.length === 0\"\n                    class=\"no-border\">\n                <span class=\"form-text text-muted\"\n                      i18n>There are no subusers.</span>\n              </span>\n\n              <span *ngFor=\"let subuser of subusers; let i=index;\">\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\">\n                    <i class=\"{{ icons.user }}\"></i>\n                  </span>\n                  <input type=\"text\"\n                         class=\"cd-form-control\"\n                         value=\"{{ subuser.id }}\"\n                         readonly>\n                  <span class=\"input-group-text\">\n                    <i class=\"{{ icons.share }}\"></i>\n                  </span>\n                  <input type=\"text\"\n                         class=\"cd-form-control\"\n                         value=\"{{ ('full-control' === subuser.permissions) ? 'full' : subuser.permissions }}\"\n                         readonly>\n                  <button type=\"button\"\n                          class=\"btn btn-light tc_showSubuserButton\"\n                          i18n-ngbTooltip\n                          ngbTooltip=\"Edit\"\n                          (click)=\"showSubuserModal(i)\">\n                    <i [ngClass]=\"[icons.edit]\"></i>\n                  </button>\n                  <button type=\"button\"\n                          class=\"btn btn-light tc_deleteSubuserButton\"\n                          i18n-ngbTooltip\n                          ngbTooltip=\"Delete\"\n                          (click)=\"deleteSubuser(i)\">\n                    <i [ngClass]=\"[icons.destroy]\"></i>\n                  </button>\n                </div>\n                <span class=\"form-text text-muted\"></span>\n              </span>\n\n              <div class=\"row my-2\">\n                <div class=\"col-12\">\n                  <button type=\"button\"\n                          class=\"btn btn-light float-end tc_addSubuserButton\"\n                          (click)=\"showSubuserModal()\">\n                    <i [ngClass]=\"[icons.add]\"></i>\n                    <ng-container i18n>{{ actionLabels.CREATE | titlecase }}\n                      {{ subuserLabel | upperFirst }}</ng-container>\n                  </button>\n                </div>\n              </div>\n              <span class=\"help-block\"></span>\n            </div>\n          </div>\n        </fieldset>\n\n        <!-- Keys -->\n        <fieldset *ngIf=\"editing\">\n          <legend i18n>Keys</legend>\n\n          <!-- S3 keys -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   i18n>S3</label>\n            <div class=\"cd-col-form-input\">\n              <span *ngIf=\"s3Keys.length === 0\"\n                    class=\"no-border\">\n                <span class=\"form-text text-muted\"\n                      i18n>There are no keys.</span>\n              </span>\n\n              <span *ngFor=\"let key of s3Keys; let i=index;\">\n                <div class=\"input-group\">\n                  <div class=\"input-group-text\">\n                    <i class=\"{{ icons.key }}\"></i>\n                  </div>\n                  <input type=\"text\"\n                         class=\"cd-form-control\"\n                         value=\"{{ key.user }}\"\n                         readonly>\n                  <button type=\"button\"\n                          class=\"btn btn-light tc_showS3KeyButton\"\n                          i18n-ngbTooltip\n                          ngbTooltip=\"Show\"\n                          (click)=\"showS3KeyModal(i)\">\n                    <i [ngClass]=\"[icons.show]\"></i>\n                  </button>\n                  <button type=\"button\"\n                          class=\"btn btn-light tc_deleteS3KeyButton\"\n                          i18n-ngbTooltip\n                          ngbTooltip=\"Delete\"\n                          (click)=\"deleteS3Key(i)\">\n                    <i [ngClass]=\"[icons.destroy]\"></i>\n                  </button>\n                </div>\n                <span class=\"form-text text-muted\"></span>\n              </span>\n\n              <div class=\"row my-2\">\n                <div class=\"col-12\">\n                  <button type=\"button\"\n                          class=\"btn btn-light float-end tc_addS3KeyButton\"\n                          (click)=\"showS3KeyModal()\">\n                    <i [ngClass]=\"[icons.add]\"></i>\n                    <ng-container i18n>{{ actionLabels.CREATE | titlecase }}\n                      {{ s3keyLabel | upperFirst }}</ng-container>\n                  </button>\n                </div>\n              </div>\n\n              <span class=\"help-block\"></span>\n            </div>\n\n            <hr>\n          </div>\n\n          <!-- Swift keys -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   i18n>Swift</label>\n\n            <div class=\"cd-col-form-input\">\n              <span *ngIf=\"swiftKeys.length === 0\"\n                    class=\"no-border\">\n                <span class=\"form-text text-muted\"\n                      i18n>There are no keys.</span>\n              </span>\n\n              <span *ngFor=\"let key of swiftKeys; let i=index;\">\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\">\n                    <i class=\"{{ icons.key }}\"></i>\n                  </span>\n                  <input type=\"text\"\n                         class=\"cd-form-control\"\n                         value=\"{{ key.user }}\"\n                         readonly>\n                  <button type=\"button\"\n                          class=\"btn btn-light tc_showSwiftKeyButton\"\n                          i18n-ngbTooltip\n                          ngbTooltip=\"Show\"\n                          (click)=\"showSwiftKeyModal(i)\">\n                    <i [ngClass]=\"[icons.show]\"></i>\n                  </button>\n                </div>\n                <span class=\"form-text text-muted\"></span>\n              </span>\n            </div>\n          </div>\n        </fieldset>\n\n        <!-- Capabilities -->\n        <fieldset *ngIf=\"editing\">\n          <legend i18n>Capabilities</legend>\n\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <span *ngIf=\"capabilities.length === 0\"\n                    class=\"no-border\">\n                <span class=\"form-text text-muted\"\n                      i18n>There are no capabilities.</span>\n              </span>\n\n              <span *ngFor=\"let cap of capabilities; let i=index;\">\n                <div class=\"input-group\">\n                  <div class=\"input-group-text\">\n                    <i class=\"{{ icons.share }}\"></i>\n                  </div>\n                  <input type=\"text\"\n                         class=\"cd-form-control\"\n                         value=\"{{ cap.type }}:{{ cap.perm }}\"\n                         readonly>\n                  <button type=\"button\"\n                          class=\"btn btn-light tc_editCapButton\"\n                          i18n-ngbTooltip\n                          ngbTooltip=\"Edit\"\n                          (click)=\"showCapabilityModal(i)\">\n                    <i [ngClass]=\"[icons.edit]\"></i>\n                  </button>\n                  <button type=\"button\"\n                          class=\"btn btn-light tc_deleteCapButton\"\n                          i18n-ngbTooltip\n                          ngbTooltip=\"Delete\"\n                          (click)=\"deleteCapability(i)\">\n                    <i [ngClass]=\"[icons.destroy]\"></i>\n                  </button>\n                </div>\n                <span class=\"form-text text-muted\"></span>\n              </span>\n\n              <div class=\"row my-2\">\n                <div class=\"col-12\">\n                  <button type=\"button\"\n                          class=\"btn btn-light float-end tc_addCapButton\"\n                          [disabled]=\"capabilities | pipeFunction:hasAllCapabilities\"\n                          i18n-ngbTooltip\n                          ngbTooltip=\"All capabilities are already added.\"\n                          [disableTooltip]=\"!(capabilities | pipeFunction:hasAllCapabilities)\"\n                          triggers=\"pointerenter:pointerleave\"\n                          (click)=\"showCapabilityModal()\">\n                    <i [ngClass]=\"[icons.add]\"></i>\n                    <ng-container i18n>{{ actionLabels.ADD | titlecase }}\n                      {{ capabilityLabel | upperFirst }}</ng-container>\n                  </button>\n                </div>\n              </div>\n              <span class=\"help-block\"></span>\n            </div>\n          </div>\n        </fieldset>\n\n        <!-- User quota -->\n        <fieldset>\n          <legend i18n>User quota</legend>\n\n          <!-- Enabled -->\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"user_quota_enabled\"\n                       type=\"checkbox\"\n                       formControlName=\"user_quota_enabled\">\n                <label class=\"custom-control-label\"\n                       for=\"user_quota_enabled\"\n                       i18n>Enabled</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Unlimited size -->\n          <div class=\"form-group row\"\n               *ngIf=\"userForm.controls.user_quota_enabled.value\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"user_quota_max_size_unlimited\"\n                       type=\"checkbox\"\n                       formControlName=\"user_quota_max_size_unlimited\">\n                <label class=\"custom-control-label\"\n                       for=\"user_quota_max_size_unlimited\"\n                       i18n>Unlimited size</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Maximum size -->\n          <div class=\"form-group row\"\n               *ngIf=\"userForm.controls.user_quota_enabled.value && !userForm.getValue('user_quota_max_size_unlimited')\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"user_quota_max_size\"\n                   i18n>Max. size</label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"user_quota_max_size\"\n                     class=\"form-control\"\n                     type=\"text\"\n                     formControlName=\"user_quota_max_size\"\n                     cdDimlessBinary>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('user_quota_max_size', frm, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('user_quota_max_size', frm, 'quotaMaxSize')\"\n                    i18n>The value is not valid.</span>\n            </div>\n          </div>\n\n          <!-- Unlimited objects -->\n          <div class=\"form-group row\"\n               *ngIf=\"userForm.controls.user_quota_enabled.value\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"user_quota_max_objects_unlimited\"\n                       type=\"checkbox\"\n                       formControlName=\"user_quota_max_objects_unlimited\">\n                <label class=\"custom-control-label\"\n                       for=\"user_quota_max_objects_unlimited\"\n                       i18n>Unlimited objects</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Maximum objects -->\n          <div class=\"form-group row\"\n               *ngIf=\"userForm.controls.user_quota_enabled.value && !userForm.getValue('user_quota_max_objects_unlimited')\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"user_quota_max_objects\"\n                   i18n>Max. objects</label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"user_quota_max_objects\"\n                     class=\"form-control\"\n                     type=\"number\"\n                     formControlName=\"user_quota_max_objects\"\n                     min=\"0\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('user_quota_max_objects', frm, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('user_quota_max_objects', frm, 'min')\"\n                    i18n>The entered value must be >= 0.</span>\n            </div>\n          </div>\n        </fieldset>\n\n        <!-- Bucket quota -->\n        <fieldset>\n          <legend i18n>Bucket quota</legend>\n\n          <!-- Enabled -->\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"bucket_quota_enabled\"\n                       type=\"checkbox\"\n                       formControlName=\"bucket_quota_enabled\">\n                <label class=\"custom-control-label\"\n                       for=\"bucket_quota_enabled\"\n                       i18n>Enabled</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Unlimited size -->\n          <div class=\"form-group row\"\n               *ngIf=\"userForm.controls.bucket_quota_enabled.value\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"bucket_quota_max_size_unlimited\"\n                       type=\"checkbox\"\n                       formControlName=\"bucket_quota_max_size_unlimited\">\n                <label class=\"custom-control-label\"\n                       for=\"bucket_quota_max_size_unlimited\"\n                       i18n>Unlimited size</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Maximum size -->\n          <div class=\"form-group row\"\n               *ngIf=\"userForm.controls.bucket_quota_enabled.value && !userForm.getValue('bucket_quota_max_size_unlimited')\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"bucket_quota_max_size\"\n                   i18n>Max. size</label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"bucket_quota_max_size\"\n                     class=\"form-control\"\n                     type=\"text\"\n                     formControlName=\"bucket_quota_max_size\"\n                     cdDimlessBinary>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('bucket_quota_max_size', frm, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('bucket_quota_max_size', frm, 'quotaMaxSize')\"\n                    i18n>The value is not valid.</span>\n            </div>\n          </div>\n\n          <!-- Unlimited objects -->\n          <div class=\"form-group row\"\n               *ngIf=\"userForm.controls.bucket_quota_enabled.value\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"bucket_quota_max_objects_unlimited\"\n                       type=\"checkbox\"\n                       formControlName=\"bucket_quota_max_objects_unlimited\">\n                <label class=\"custom-control-label\"\n                       for=\"bucket_quota_max_objects_unlimited\"\n                       i18n>Unlimited objects</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Maximum objects -->\n          <div class=\"form-group row\"\n               *ngIf=\"userForm.controls.bucket_quota_enabled.value && !userForm.getValue('bucket_quota_max_objects_unlimited')\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"bucket_quota_max_objects\"\n                   i18n>Max. objects</label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"bucket_quota_max_objects\"\n                     class=\"form-control\"\n                     type=\"number\"\n                     formControlName=\"bucket_quota_max_objects\"\n                     min=\"0\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('bucket_quota_max_objects', frm, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('bucket_quota_max_objects', frm, 'min')\"\n                    i18n>The entered value must be >= 0.</span>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"userForm\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, NgZone, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { forkJoin as observableForkJoin, Observable, Subscriber } from 'rxjs';\n\nimport { RgwUserService } from '~/app/shared/api/rgw-user.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\n\nconst BASE_URL = 'rgw/user';\n\n@Component({\n  selector: 'cd-rgw-user-list',\n  templateUrl: './rgw-user-list.component.html',\n  styleUrls: ['./rgw-user-list.component.scss'],\n  providers: [{ provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }]\n})\nexport class RgwUserListComponent extends ListWithDetails implements OnInit {\n  @ViewChild(TableComponent, { static: true })\n  table: TableComponent;\n  @ViewChild('userSizeTpl', { static: true })\n  userSizeTpl: TemplateRef<any>;\n  @ViewChild('userObjectTpl', { static: true })\n  userObjectTpl: TemplateRef<any>;\n  permission: Permission;\n  tableActions: CdTableAction[];\n  columns: CdTableColumn[] = [];\n  users: object[] = [];\n  selection: CdTableSelection = new CdTableSelection();\n  staleTimeout: number;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rgwUserService: RgwUserService,\n    private modalService: ModalService,\n    private urlBuilder: URLBuilderService,\n    public actionLabels: ActionLabelsI18n,\n    protected ngZone: NgZone\n  ) {\n    super(ngZone);\n  }\n\n  ngOnInit() {\n    this.permission = this.authStorageService.getPermissions().rgw;\n    this.columns = [\n      {\n        name: $localize`Username`,\n        prop: 'uid',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Tenant`,\n        prop: 'tenant',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Full name`,\n        prop: 'display_name',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Email address`,\n        prop: 'email',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Suspended`,\n        prop: 'suspended',\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTransformation: CellTemplate.checkIcon\n      },\n      {\n        name: $localize`Max. buckets`,\n        prop: 'max_buckets',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.map,\n        customTemplateConfig: {\n          '-1': $localize`Disabled`,\n          0: $localize`Unlimited`\n        }\n      },\n      {\n        name: $localize`Capacity Limit %`,\n        prop: 'size_usage',\n        cellTemplate: this.userSizeTpl,\n        flexGrow: 0.8\n      },\n      {\n        name: $localize`Object Limit %`,\n        prop: 'object_usage',\n        cellTemplate: this.userObjectTpl,\n        flexGrow: 0.8\n      }\n    ];\n    const getUserUri = () =>\n      this.selection.first() && `${encodeURIComponent(this.selection.first().uid)}`;\n    const addAction: CdTableAction = {\n      permission: 'create',\n      icon: Icons.add,\n      routerLink: () => this.urlBuilder.getCreate(),\n      name: this.actionLabels.CREATE,\n      canBePrimary: (selection: CdTableSelection) => !selection.hasSelection\n    };\n    const editAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      routerLink: () => this.urlBuilder.getEdit(getUserUri()),\n      name: this.actionLabels.EDIT\n    };\n    const deleteAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      click: () => this.deleteAction(),\n      disable: () => !this.selection.hasSelection,\n      name: this.actionLabels.DELETE,\n      canBePrimary: (selection: CdTableSelection) => selection.hasMultiSelection\n    };\n    this.tableActions = [addAction, editAction, deleteAction];\n    this.setTableRefreshTimeout();\n  }\n\n  getUserList(context: CdTableFetchDataContext) {\n    this.setTableRefreshTimeout();\n    this.rgwUserService.list().subscribe(\n      (resp: object[]) => {\n        this.users = resp;\n      },\n      () => {\n        context.error();\n      }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteAction() {\n    this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: this.selection.hasSingleSelection ? $localize`user` : $localize`users`,\n      itemNames: this.selection.selected.map((user: any) => user['uid']),\n      submitActionObservable: (): Observable<any> => {\n        return new Observable((observer: Subscriber<any>) => {\n          // Delete all selected data table rows.\n          observableForkJoin(\n            this.selection.selected.map((user: any) => {\n              return this.rgwUserService.delete(user.uid);\n            })\n          ).subscribe({\n            error: (error) => {\n              // Forward the error to the observer.\n              observer.error(error);\n              // Reload the data table content because some deletions might\n              // have been executed successfully in the meanwhile.\n              this.table.refreshBtn();\n            },\n            complete: () => {\n              // Notify the observer that we are done.\n              observer.complete();\n              // Reload the data table content.\n              this.table.refreshBtn();\n            }\n          });\n        });\n      }\n    });\n  }\n}\n","<cd-table #table\n          [autoReload]=\"false\"\n          [data]=\"users\"\n          [columns]=\"columns\"\n          columnMode=\"flex\"\n          selectionType=\"multiClick\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\"\n          identifier=\"uid\"\n          (fetchData)=\"getUserList($event)\"\n          [status]=\"tableStatus\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n  <cd-rgw-user-details cdTableDetail\n                       [selection]=\"expandedRow\">\n  </cd-rgw-user-details>\n</cd-table>\n\n<ng-template #userSizeTpl\n             let-row=\"row\">\n  <cd-usage-bar *ngIf=\"row.user_quota.max_size > 0 && row.user_quota.enabled; else noSizeQuota\"\n                [total]=\"row.user_quota.max_size\"\n                [used]=\"row.stats.size_actual\">\n  </cd-usage-bar>\n\n  <ng-template #noSizeQuota\n               i18n>No Limit</ng-template>\n</ng-template>\n\n<ng-template #userObjectTpl\n             let-row=\"row\">\n  <cd-usage-bar *ngIf=\"row.user_quota.max_objects > 0 && row.user_quota.enabled; else noObjectQuota\"\n                [total]=\"row.user_quota.max_objects\"\n                [used]=\"row.stats.num_objects\"\n                [isBinary]=\"false\">\n  </cd-usage-bar>\n\n  <ng-template #noObjectQuota\n               i18n>No Limit</ng-template>\n</ng-template>\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { RgwUserS3Key } from '../models/rgw-user-s3-key';\n\n@Component({\n  selector: 'cd-rgw-user-s3-key-modal',\n  templateUrl: './rgw-user-s3-key-modal.component.html',\n  styleUrls: ['./rgw-user-s3-key-modal.component.scss']\n})\nexport class RgwUserS3KeyModalComponent {\n  /**\n   * The event that is triggered when the 'Add' button as been pressed.\n   */\n  @Output()\n  submitAction = new EventEmitter();\n\n  formGroup: CdFormGroup;\n  viewing = true;\n  userCandidates: string[] = [];\n  resource: string;\n  action: string;\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    this.resource = $localize`S3 Key`;\n    this.createForm();\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      user: [null, [Validators.required]],\n      generate_key: [true],\n      access_key: [null, [CdValidators.requiredIf({ generate_key: false })]],\n      secret_key: [null, [CdValidators.requiredIf({ generate_key: false })]]\n    });\n  }\n\n  /**\n   * Set the 'viewing' flag. If set to TRUE, the modal dialog is in 'View' mode,\n   * otherwise in 'Add' mode. According to the mode the dialog and its controls\n   * behave different.\n   * @param {boolean} viewing\n   */\n  setViewing(viewing: boolean = true) {\n    this.viewing = viewing;\n    this.action = this.viewing ? this.actionLabels.SHOW : this.actionLabels.CREATE;\n  }\n\n  /**\n   * Set the values displayed in the dialog.\n   */\n  setValues(user: string, access_key: string, secret_key: string) {\n    this.formGroup.setValue({\n      user: user,\n      generate_key: _.isEmpty(access_key),\n      access_key: access_key,\n      secret_key: secret_key\n    });\n  }\n\n  /**\n   * Set the user candidates displayed in the 'Username' dropdown box.\n   */\n  setUserCandidates(candidates: string[]) {\n    this.userCandidates = candidates;\n  }\n\n  onSubmit() {\n    const key: RgwUserS3Key = this.formGroup.value;\n    this.submitAction.emit(key);\n    this.activeModal.close();\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n=\"form title\"\n                class=\"modal-title\">{{ action | titlecase }} {{ resource | upperFirst }}</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form #frm=\"ngForm\"\n          [formGroup]=\"formGroup\"\n          novalidate>\n      <div class=\"modal-body\">\n\n        <!-- Username -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': !viewing}\"\n                 for=\"user\"\n                 i18n>Username</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"user\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   *ngIf=\"viewing\"\n                   [readonly]=\"true\"\n                   formControlName=\"user\">\n            <select id=\"user\"\n                    class=\"form-control\"\n                    formControlName=\"user\"\n                    *ngIf=\"!viewing\"\n                    autofocus>\n              <option i18n\n                      *ngIf=\"userCandidates !== null\"\n                      [ngValue]=\"null\">-- Select a username --</option>\n              <option *ngFor=\"let userCandidate of userCandidates\"\n                      [value]=\"userCandidate\">{{ userCandidate }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"formGroup.showError('user', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Auto-generate key -->\n        <div class=\"form-group row\"\n             *ngIf=\"!viewing\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input class=\"custom-control-input\"\n                     id=\"generate_key\"\n                     type=\"checkbox\"\n                     formControlName=\"generate_key\">\n              <label class=\"custom-control-label\"\n                     for=\"generate_key\"\n                     i18n>Auto-generate key</label>\n            </div>\n          </div>\n        </div>\n\n        <!-- Access key -->\n        <div class=\"form-group row\"\n             *ngIf=\"!formGroup.getValue('generate_key')\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': !viewing}\"\n                 for=\"access_key\"\n                 i18n>Access key</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input id=\"access_key\"\n                     class=\"form-control\"\n                     type=\"password\"\n                     [readonly]=\"viewing\"\n                     formControlName=\"access_key\">\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      cdPasswordButton=\"access_key\">\n              </button>\n              <cd-copy-2-clipboard-button source=\"access_key\">\n              </cd-copy-2-clipboard-button>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"formGroup.showError('access_key', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Secret key -->\n        <div class=\"form-group row\"\n             *ngIf=\"!formGroup.getValue('generate_key')\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': !viewing}\"\n                 for=\"secret_key\"\n                 i18n>Secret key</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input id=\"secret_key\"\n                     class=\"form-control\"\n                     type=\"password\"\n                     [readonly]=\"viewing\"\n                     formControlName=\"secret_key\">\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      cdPasswordButton=\"secret_key\">\n              </button>\n              <cd-copy-2-clipboard-button source=\"secret_key\">\n              </cd-copy-2-clipboard-button>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"formGroup.showError('secret_key', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"formGroup\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              [showSubmit]=\"!viewing\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators, isEmptyInputValue } from '~/app/shared/forms/cd-validators';\nimport { RgwUserSubuser } from '../models/rgw-user-subuser';\n\n@Component({\n  selector: 'cd-rgw-user-subuser-modal',\n  templateUrl: './rgw-user-subuser-modal.component.html',\n  styleUrls: ['./rgw-user-subuser-modal.component.scss']\n})\nexport class RgwUserSubuserModalComponent {\n  /**\n   * The event that is triggered when the 'Add' or 'Update' button\n   * has been pressed.\n   */\n  @Output()\n  submitAction = new EventEmitter();\n\n  formGroup: CdFormGroup;\n  editing = true;\n  subusers: RgwUserSubuser[] = [];\n  resource: string;\n  action: string;\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    public bsModalRef: NgbActiveModal,\n    private actionLabels: ActionLabelsI18n\n  ) {\n    this.resource = $localize`Subuser`;\n    this.createForm();\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      uid: [null],\n      subuid: [null, [Validators.required, this.subuserValidator()]],\n      perm: [null, [Validators.required]],\n      // Swift key\n      generate_secret: [true],\n      secret_key: [null, [CdValidators.requiredIf({ generate_secret: false })]]\n    });\n  }\n\n  /**\n   * Validates whether the subuser already exists.\n   */\n  subuserValidator(): ValidatorFn {\n    const self = this;\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (self.editing) {\n        return null;\n      }\n      if (isEmptyInputValue(control.value)) {\n        return null;\n      }\n      const found = self.subusers.some((subuser) => {\n        return _.isEqual(self.getSubuserName(subuser.id), control.value);\n      });\n      return found ? { subuserIdExists: true } : null;\n    };\n  }\n\n  /**\n   * Get the subuser name.\n   * Examples:\n   *   'johndoe' => 'johndoe'\n   *   'janedoe:xyz' => 'xyz'\n   * @param {string} value The value to process.\n   * @returns {string} Returns the user ID.\n   */\n  private getSubuserName(value: string) {\n    if (_.isEmpty(value)) {\n      return value;\n    }\n    const matches = value.match(/([^:]+)(:(.+))?/);\n    return _.isUndefined(matches[3]) ? matches[1] : matches[3];\n  }\n\n  /**\n   * Set the 'editing' flag. If set to TRUE, the modal dialog is in 'Edit' mode,\n   * otherwise in 'Add' mode. According to the mode the dialog and its controls\n   * behave different.\n   * @param {boolean} viewing\n   */\n  setEditing(editing: boolean = true) {\n    this.editing = editing;\n    this.action = this.editing ? this.actionLabels.EDIT : this.actionLabels.CREATE;\n  }\n\n  /**\n   * Set the values displayed in the dialog.\n   */\n  setValues(uid: string, subuser: string = '', permissions: string = '') {\n    this.formGroup.setValue({\n      uid: uid,\n      subuid: this.getSubuserName(subuser),\n      perm: permissions,\n      generate_secret: true,\n      secret_key: null\n    });\n  }\n\n  /**\n   * Set the current capabilities of the user.\n   */\n  setSubusers(subusers: RgwUserSubuser[]) {\n    this.subusers = subusers;\n  }\n\n  onSubmit() {\n    // Get the values from the form and create an object that is sent\n    // by the triggered submit action event.\n    const values = this.formGroup.value;\n    const subuser = new RgwUserSubuser();\n    subuser.id = `${values.uid}:${values.subuid}`;\n    subuser.permissions = values.perm;\n    subuser.generate_secret = values.generate_secret;\n    subuser.secret_key = values.secret_key;\n    this.submitAction.emit(subuser);\n    this.bsModalRef.close();\n  }\n}\n","<cd-modal [modalRef]=\"bsModalRef\">\n  <ng-container i18n=\"form title\"\n                class=\"modal-title\">{{ action | titlecase }} {{ resource | upperFirst }}</ng-container>\n  <ng-container class=\"modal-content\">\n    <form #frm=\"ngForm\"\n          [formGroup]=\"formGroup\"\n          novalidate>\n      <div class=\"modal-body\">\n\n        <!-- Username -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"uid\"\n                 i18n>Username</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"uid\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"uid\"\n                   [readonly]=\"true\">\n          </div>\n        </div>\n\n        <!-- Subuser -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': !editing}\"\n                 for=\"subuid\"\n                 i18n>Subuser</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"subuid\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"subuid\"\n                   [readonly]=\"editing\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"formGroup.showError('subuid', frm, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"formGroup.showError('subuid', frm, 'subuserIdExists')\"\n                  i18n>The chosen subuser ID is already in use.</span>\n          </div>\n        </div>\n\n        <!-- Permission -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"perm\"\n                 i18n>Permission</label>\n          <div class=\"cd-col-form-input\">\n            <select id=\"perm\"\n                    class=\"form-select\"\n                    formControlName=\"perm\">\n              <option i18n\n                      [ngValue]=\"null\">-- Select a permission --</option>\n              <option *ngFor=\"let perm of ['read', 'write']\"\n                      [value]=\"perm\">\n                {{ perm }}\n              </option>\n              <option i18n\n                      value=\"read-write\">read, write</option>\n              <option i18n\n                      value=\"full-control\">full</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"formGroup.showError('perm', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Swift key -->\n        <fieldset *ngIf=\"!editing\">\n          <legend i18n>Swift key</legend>\n\n          <!-- Auto-generate key -->\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"generate_secret\"\n                       type=\"checkbox\"\n                       formControlName=\"generate_secret\">\n                <label class=\"custom-control-label\"\n                       for=\"generate_secret\"\n                       i18n>Auto-generate secret</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Secret key -->\n          <div class=\"form-group row\"\n               *ngIf=\"!editing && !formGroup.getValue('generate_secret')\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"secret_key\"\n                   i18n>Secret key</label>\n            <div class=\"cd-col-form-input\">\n              <div class=\"input-group\">\n                <input id=\"secret_key\"\n                       class=\"form-control\"\n                       type=\"password\"\n                       formControlName=\"secret_key\">\n                <button type=\"button\"\n                        class=\"btn btn-light\"\n                        cdPasswordButton=\"secret_key\">\n                </button>\n                <cd-copy-2-clipboard-button source=\"secret_key\">\n                </cd-copy-2-clipboard-button>\n              </div>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"formGroup.showError('secret_key', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n\n        </fieldset>\n\n      </div>\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"formGroup\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\n\n@Component({\n  selector: 'cd-rgw-user-swift-key-modal',\n  templateUrl: './rgw-user-swift-key-modal.component.html',\n  styleUrls: ['./rgw-user-swift-key-modal.component.scss']\n})\nexport class RgwUserSwiftKeyModalComponent {\n  user: string;\n  secret_key: string;\n  resource: string;\n  action: string;\n\n  constructor(public activeModal: NgbActiveModal, public actionLabels: ActionLabelsI18n) {\n    this.resource = $localize`Swift Key`;\n    this.action = this.actionLabels.SHOW;\n  }\n\n  /**\n   * Set the values displayed in the dialog.\n   */\n  setValues(user: string, secret_key: string) {\n    this.user = user;\n    this.secret_key = secret_key;\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n=\"form title\"\n                class=\"modal-title\">{{ action | titlecase }} {{ resource | upperFirst }}</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <div class=\"modal-body\">\n      <form novalidate>\n        <!-- Username -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"user\"\n                 i18n>Username</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"user\"\n                   name=\"user\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   [readonly]=\"true\"\n                   [(ngModel)]=\"user\">\n          </div>\n        </div>\n\n        <!-- Secret key -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"secret_key\"\n                 i18n>Secret key</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input id=\"secret_key\"\n                     name=\"secret_key\"\n                     class=\"form-control\"\n                     type=\"password\"\n                     [(ngModel)]=\"secret_key\"\n                     [readonly]=\"true\">\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      cdPasswordButton=\"secret_key\">\n              </button>\n              <cd-copy-2-clipboard-button source=\"secret_key\">\n              </cd-copy-2-clipboard-button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div class=\"modal-footer\">\n      <cd-back-button (backAction)=\"activeModal.close()\"></cd-back-button>\n    </div>\n  </ng-container>\n</cd-modal>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbNavModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPipeFunctionModule } from 'ngx-pipe-function';\n\nimport { ActionLabels, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { PerformanceCounterModule } from '../performance-counter/performance-counter.module';\nimport { RgwBucketDetailsComponent } from './rgw-bucket-details/rgw-bucket-details.component';\nimport { RgwBucketFormComponent } from './rgw-bucket-form/rgw-bucket-form.component';\nimport { RgwBucketListComponent } from './rgw-bucket-list/rgw-bucket-list.component';\nimport { RgwConfigModalComponent } from './rgw-config-modal/rgw-config-modal.component';\nimport { RgwDaemonDetailsComponent } from './rgw-daemon-details/rgw-daemon-details.component';\nimport { RgwDaemonListComponent } from './rgw-daemon-list/rgw-daemon-list.component';\nimport { RgwUserCapabilityModalComponent } from './rgw-user-capability-modal/rgw-user-capability-modal.component';\nimport { RgwUserDetailsComponent } from './rgw-user-details/rgw-user-details.component';\nimport { RgwUserFormComponent } from './rgw-user-form/rgw-user-form.component';\nimport { RgwUserListComponent } from './rgw-user-list/rgw-user-list.component';\nimport { RgwUserS3KeyModalComponent } from './rgw-user-s3-key-modal/rgw-user-s3-key-modal.component';\nimport { RgwUserSubuserModalComponent } from './rgw-user-subuser-modal/rgw-user-subuser-modal.component';\nimport { RgwUserSwiftKeyModalComponent } from './rgw-user-swift-key-modal/rgw-user-swift-key-modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PerformanceCounterModule,\n    NgbNavModule,\n    RouterModule,\n    NgbTooltipModule,\n    NgxPipeFunctionModule\n  ],\n  exports: [\n    RgwDaemonListComponent,\n    RgwDaemonDetailsComponent,\n    RgwBucketFormComponent,\n    RgwBucketListComponent,\n    RgwBucketDetailsComponent,\n    RgwUserListComponent,\n    RgwUserDetailsComponent\n  ],\n  declarations: [\n    RgwDaemonListComponent,\n    RgwDaemonDetailsComponent,\n    RgwBucketFormComponent,\n    RgwBucketListComponent,\n    RgwBucketDetailsComponent,\n    RgwUserListComponent,\n    RgwUserDetailsComponent,\n    RgwBucketFormComponent,\n    RgwUserFormComponent,\n    RgwUserSwiftKeyModalComponent,\n    RgwUserS3KeyModalComponent,\n    RgwUserCapabilityModalComponent,\n    RgwUserSubuserModalComponent,\n    RgwConfigModalComponent\n  ]\n})\nexport class RgwModule {}\n\nconst routes: Routes = [\n  {\n    path: '' // Required for a clean reload on daemon selection.\n  },\n  { path: 'daemon', component: RgwDaemonListComponent, data: { breadcrumbs: 'Daemons' } },\n  {\n    path: 'user',\n    data: { breadcrumbs: 'Users' },\n    children: [\n      { path: '', component: RgwUserListComponent },\n      {\n        path: URLVerbs.CREATE,\n        component: RgwUserFormComponent,\n        data: { breadcrumbs: ActionLabels.CREATE }\n      },\n      {\n        path: `${URLVerbs.EDIT}/:uid`,\n        component: RgwUserFormComponent,\n        data: { breadcrumbs: ActionLabels.EDIT }\n      }\n    ]\n  },\n  {\n    path: 'bucket',\n    data: { breadcrumbs: 'Buckets' },\n    children: [\n      { path: '', component: RgwBucketListComponent },\n      {\n        path: URLVerbs.CREATE,\n        component: RgwBucketFormComponent,\n        data: { breadcrumbs: ActionLabels.CREATE }\n      },\n      {\n        path: `${URLVerbs.EDIT}/:bid`,\n        component: RgwBucketFormComponent,\n        data: { breadcrumbs: ActionLabels.EDIT }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RgwModule, RouterModule.forChild(routes)]\n})\nexport class RoutedRgwModule {}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { forkJoin as observableForkJoin, Observable, of as observableOf } from 'rxjs';\nimport { catchError, mapTo, mergeMap } from 'rxjs/operators';\n\nimport { RgwDaemonService } from '~/app/shared/api/rgw-daemon.service';\nimport { cdEncode } from '~/app/shared/decorators/cd-encode';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class RgwUserService {\n  private url = 'api/rgw/user';\n\n  constructor(private http: HttpClient, private rgwDaemonService: RgwDaemonService) {}\n\n  /**\n   * Get the list of users.\n   * @return {Observable<Object[]>}\n   */\n  list() {\n    return this.enumerate().pipe(\n      mergeMap((uids: string[]) => {\n        if (uids.length > 0) {\n          return observableForkJoin(\n            uids.map((uid: string) => {\n              return this.get(uid);\n            })\n          );\n        }\n        return observableOf([]);\n      })\n    );\n  }\n\n  /**\n   * Get the list of usernames.\n   * @return {Observable<string[]>}\n   */\n  enumerate() {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.get(this.url, { params: params });\n    });\n  }\n\n  enumerateEmail() {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.get(`${this.url}/get_emails`, { params: params });\n    });\n  }\n\n  get(uid: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.get(`${this.url}/${uid}`, { params: params });\n    });\n  }\n\n  getQuota(uid: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.get(`${this.url}/${uid}/quota`, { params: params });\n    });\n  }\n\n  create(args: Record<string, any>) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      _.keys(args).forEach((key) => {\n        params = params.append(key, args[key]);\n      });\n      return this.http.post(this.url, null, { params: params });\n    });\n  }\n\n  update(uid: string, args: Record<string, any>) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      _.keys(args).forEach((key) => {\n        params = params.append(key, args[key]);\n      });\n      return this.http.put(`${this.url}/${uid}`, null, { params: params });\n    });\n  }\n\n  updateQuota(uid: string, args: Record<string, string>) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      _.keys(args).forEach((key) => {\n        params = params.append(key, args[key]);\n      });\n      return this.http.put(`${this.url}/${uid}/quota`, null, { params: params });\n    });\n  }\n\n  delete(uid: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.delete(`${this.url}/${uid}`, { params: params });\n    });\n  }\n\n  createSubuser(uid: string, args: Record<string, string>) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      _.keys(args).forEach((key) => {\n        params = params.append(key, args[key]);\n      });\n      return this.http.post(`${this.url}/${uid}/subuser`, null, { params: params });\n    });\n  }\n\n  deleteSubuser(uid: string, subuser: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.delete(`${this.url}/${uid}/subuser/${subuser}`, { params: params });\n    });\n  }\n\n  addCapability(uid: string, type: string, perm: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      params = params.append('type', type);\n      params = params.append('perm', perm);\n      return this.http.post(`${this.url}/${uid}/capability`, null, { params: params });\n    });\n  }\n\n  deleteCapability(uid: string, type: string, perm: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      params = params.append('type', type);\n      params = params.append('perm', perm);\n      return this.http.delete(`${this.url}/${uid}/capability`, { params: params });\n    });\n  }\n\n  addS3Key(uid: string, args: Record<string, string>) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      params = params.append('key_type', 's3');\n      _.keys(args).forEach((key) => {\n        params = params.append(key, args[key]);\n      });\n      return this.http.post(`${this.url}/${uid}/key`, null, { params: params });\n    });\n  }\n\n  deleteS3Key(uid: string, accessKey: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      params = params.append('key_type', 's3');\n      params = params.append('access_key', accessKey);\n      return this.http.delete(`${this.url}/${uid}/key`, { params: params });\n    });\n  }\n\n  /**\n   * Check if the specified user ID exists.\n   * @param {string} uid The user ID to check.\n   * @return {Observable<boolean>}\n   */\n  exists(uid: string): Observable<boolean> {\n    return this.get(uid).pipe(\n      mapTo(true),\n      catchError((error: Event) => {\n        if (_.isFunction(error.preventDefault)) {\n          error.preventDefault();\n        }\n        return observableOf(false);\n      })\n    );\n  }\n\n  // Using @cdEncodeNot would be the preferred way here, but this\n  // causes an error: https://tracker.ceph.com/issues/37505\n  // Use decodeURIComponent as workaround.\n  // emailExists(@cdEncodeNot email: string): Observable<boolean> {\n  emailExists(email: string): Observable<boolean> {\n    email = decodeURIComponent(email);\n    return this.enumerateEmail().pipe(\n      mergeMap((resp: any[]) => {\n        const index = _.indexOf(resp, email);\n        return observableOf(-1 !== index);\n      })\n    );\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}