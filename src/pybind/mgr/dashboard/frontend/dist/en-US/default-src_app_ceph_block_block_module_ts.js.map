{"version":3,"file":"default-src_app_ceph_block_block_module_ts.js","mappings":"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","sources":["./src/app/ceph/block/block.module.ts","./src/app/ceph/block/iscsi-setting/iscsi-setting.component.ts","./src/app/ceph/block/iscsi-setting/iscsi-setting.component.html","./src/app/ceph/block/iscsi-tabs/iscsi-tabs.component.ts","./src/app/ceph/block/iscsi-tabs/iscsi-tabs.component.html","./src/app/ceph/block/iscsi-target-details/iscsi-target-details.component.ts","./src/app/ceph/block/iscsi-target-details/iscsi-target-details.component.html","./src/app/ceph/block/iscsi-target-discovery-modal/iscsi-target-discovery-modal.component.ts","./src/app/ceph/block/iscsi-target-discovery-modal/iscsi-target-discovery-modal.component.html","./src/app/ceph/block/iscsi-target-form/iscsi-target-form.component.ts","./src/app/ceph/block/iscsi-target-form/iscsi-target-form.component.html","./src/app/ceph/block/iscsi-target-image-settings-modal/iscsi-target-image-settings-modal.component.ts","./src/app/ceph/block/iscsi-target-image-settings-modal/iscsi-target-image-settings-modal.component.html","./src/app/ceph/block/iscsi-target-iqn-settings-modal/iscsi-target-iqn-settings-modal.component.ts","./src/app/ceph/block/iscsi-target-iqn-settings-modal/iscsi-target-iqn-settings-modal.component.html","./src/app/ceph/block/iscsi-target-list/iscsi-target-list.component.ts","./src/app/ceph/block/iscsi-target-list/iscsi-target-list.component.html","./src/app/ceph/block/iscsi/iscsi.component.ts","./src/app/ceph/block/iscsi/iscsi.component.html","./src/app/ceph/block/mirroring/bootstrap-create-modal/bootstrap-create-modal.component.ts","./src/app/ceph/block/mirroring/bootstrap-create-modal/bootstrap-create-modal.component.html","./src/app/ceph/block/mirroring/bootstrap-import-modal/bootstrap-import-modal.component.ts","./src/app/ceph/block/mirroring/bootstrap-import-modal/bootstrap-import-modal.component.html","./src/app/ceph/block/mirroring/daemon-list/daemon-list.component.ts","./src/app/ceph/block/mirroring/daemon-list/daemon-list.component.html","./src/app/ceph/block/mirroring/image-list/image-list.component.ts","./src/app/ceph/block/mirroring/image-list/image-list.component.html","./src/app/ceph/block/mirroring/mirror-health-color.pipe.ts","./src/app/ceph/block/mirroring/mirroring.module.ts","./src/app/ceph/block/mirroring/overview/overview.component.ts","./src/app/ceph/block/mirroring/overview/overview.component.html","./src/app/ceph/block/mirroring/pool-edit-mode-modal/pool-edit-mode-modal.component.ts","./src/app/ceph/block/mirroring/pool-edit-mode-modal/pool-edit-mode-modal.component.html","./src/app/ceph/block/mirroring/pool-edit-mode-modal/pool-edit-mode-response.model.ts","./src/app/ceph/block/mirroring/pool-edit-peer-modal/pool-edit-peer-modal.component.ts","./src/app/ceph/block/mirroring/pool-edit-peer-modal/pool-edit-peer-modal.component.html","./src/app/ceph/block/mirroring/pool-edit-peer-modal/pool-edit-peer-response.model.ts","./src/app/ceph/block/mirroring/pool-list/pool-list.component.ts","./src/app/ceph/block/mirroring/pool-list/pool-list.component.html","./src/app/ceph/block/rbd-configuration-form/rbd-configuration-form.component.ts","./src/app/ceph/block/rbd-configuration-form/rbd-configuration-form.component.html","./src/app/ceph/block/rbd-configuration-list/rbd-configuration-list.component.ts","./src/app/ceph/block/rbd-configuration-list/rbd-configuration-list.component.html","./src/app/ceph/block/rbd-details/rbd-details.component.ts","./src/app/ceph/block/rbd-details/rbd-details.component.html","./src/app/ceph/block/rbd-form/rbd-form-clone-request.model.ts","./src/app/ceph/block/rbd-form/rbd-form-copy-request.model.ts","./src/app/ceph/block/rbd-form/rbd-form-create-request.model.ts","./src/app/ceph/block/rbd-form/rbd-form-edit-request.model.ts","./src/app/ceph/block/rbd-form/rbd-form-mode.enum.ts","./src/app/ceph/block/rbd-form/rbd-form.component.ts","./src/app/ceph/block/rbd-form/rbd-form.component.html","./src/app/ceph/block/rbd-form/rbd-form.model.ts","./src/app/ceph/block/rbd-list/rbd-list.component.ts","./src/app/ceph/block/rbd-list/rbd-list.component.html","./src/app/ceph/block/rbd-list/rbd-model.ts","./src/app/ceph/block/rbd-namespace-form/rbd-namespace-form-modal.component.ts","./src/app/ceph/block/rbd-namespace-form/rbd-namespace-form-modal.component.html","./src/app/ceph/block/rbd-namespace-list/rbd-namespace-list.component.ts","./src/app/ceph/block/rbd-namespace-list/rbd-namespace-list.component.html","./src/app/ceph/block/rbd-performance/rbd-performance.component.ts","./src/app/ceph/block/rbd-performance/rbd-performance.component.html","./src/app/ceph/block/rbd-snapshot-form/rbd-snapshot-form-modal.component.ts","./src/app/ceph/block/rbd-snapshot-form/rbd-snapshot-form-modal.component.html","./src/app/ceph/block/rbd-snapshot-list/rbd-snapshot-actions.model.ts","./src/app/ceph/block/rbd-snapshot-list/rbd-snapshot-list.component.ts","./src/app/ceph/block/rbd-snapshot-list/rbd-snapshot-list.component.html","./src/app/ceph/block/rbd-snapshot-list/rbd-snapshot.model.ts","./src/app/ceph/block/rbd-tabs/rbd-tabs.component.ts","./src/app/ceph/block/rbd-tabs/rbd-tabs.component.html","./src/app/ceph/block/rbd-trash-list/rbd-trash-list.component.ts","./src/app/ceph/block/rbd-trash-list/rbd-trash-list.component.html","./src/app/ceph/block/rbd-trash-move-modal/rbd-trash-move-modal.component.ts","./src/app/ceph/block/rbd-trash-move-modal/rbd-trash-move-modal.component.html","./src/app/ceph/block/rbd-trash-purge-modal/rbd-trash-purge-modal.component.ts","./src/app/ceph/block/rbd-trash-purge-modal/rbd-trash-purge-modal.component.html","./src/app/ceph/block/rbd-trash-restore-modal/rbd-trash-restore-modal.component.ts","./src/app/ceph/block/rbd-trash-restore-modal/rbd-trash-restore-modal.component.html","./src/app/shared/api/iscsi.service.ts","./src/app/shared/api/rbd-mirroring.service.ts","./src/app/shared/api/rbd.service.ts","./src/app/shared/services/cd-table-server-side.service.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TreeModule } from '@circlon/angular-tree-component';\nimport { NgbNavModule, NgbPopoverModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPipeFunctionModule } from 'ngx-pipe-function';\n\nimport { ActionLabels, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { FeatureTogglesGuardService } from '~/app/shared/services/feature-toggles-guard.service';\nimport { ModuleStatusGuardService } from '~/app/shared/services/module-status-guard.service';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { IscsiSettingComponent } from './iscsi-setting/iscsi-setting.component';\nimport { IscsiTabsComponent } from './iscsi-tabs/iscsi-tabs.component';\nimport { IscsiTargetDetailsComponent } from './iscsi-target-details/iscsi-target-details.component';\nimport { IscsiTargetDiscoveryModalComponent } from './iscsi-target-discovery-modal/iscsi-target-discovery-modal.component';\nimport { IscsiTargetFormComponent } from './iscsi-target-form/iscsi-target-form.component';\nimport { IscsiTargetImageSettingsModalComponent } from './iscsi-target-image-settings-modal/iscsi-target-image-settings-modal.component';\nimport { IscsiTargetIqnSettingsModalComponent } from './iscsi-target-iqn-settings-modal/iscsi-target-iqn-settings-modal.component';\nimport { IscsiTargetListComponent } from './iscsi-target-list/iscsi-target-list.component';\nimport { IscsiComponent } from './iscsi/iscsi.component';\nimport { MirroringModule } from './mirroring/mirroring.module';\nimport { OverviewComponent as RbdMirroringComponent } from './mirroring/overview/overview.component';\nimport { PoolEditModeModalComponent } from './mirroring/pool-edit-mode-modal/pool-edit-mode-modal.component';\nimport { RbdConfigurationFormComponent } from './rbd-configuration-form/rbd-configuration-form.component';\nimport { RbdConfigurationListComponent } from './rbd-configuration-list/rbd-configuration-list.component';\nimport { RbdDetailsComponent } from './rbd-details/rbd-details.component';\nimport { RbdFormComponent } from './rbd-form/rbd-form.component';\nimport { RbdListComponent } from './rbd-list/rbd-list.component';\nimport { RbdNamespaceFormModalComponent } from './rbd-namespace-form/rbd-namespace-form-modal.component';\nimport { RbdNamespaceListComponent } from './rbd-namespace-list/rbd-namespace-list.component';\nimport { RbdPerformanceComponent } from './rbd-performance/rbd-performance.component';\nimport { RbdSnapshotFormModalComponent } from './rbd-snapshot-form/rbd-snapshot-form-modal.component';\nimport { RbdSnapshotListComponent } from './rbd-snapshot-list/rbd-snapshot-list.component';\nimport { RbdTabsComponent } from './rbd-tabs/rbd-tabs.component';\nimport { RbdTrashListComponent } from './rbd-trash-list/rbd-trash-list.component';\nimport { RbdTrashMoveModalComponent } from './rbd-trash-move-modal/rbd-trash-move-modal.component';\nimport { RbdTrashPurgeModalComponent } from './rbd-trash-purge-modal/rbd-trash-purge-modal.component';\nimport { RbdTrashRestoreModalComponent } from './rbd-trash-restore-modal/rbd-trash-restore-modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MirroringModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbNavModule,\n    NgbPopoverModule,\n    NgbTooltipModule,\n    NgxPipeFunctionModule,\n    SharedModule,\n    RouterModule,\n    TreeModule\n  ],\n  declarations: [\n    RbdListComponent,\n    IscsiComponent,\n    IscsiSettingComponent,\n    IscsiTabsComponent,\n    IscsiTargetListComponent,\n    RbdDetailsComponent,\n    RbdFormComponent,\n    RbdNamespaceFormModalComponent,\n    RbdNamespaceListComponent,\n    RbdSnapshotListComponent,\n    RbdSnapshotFormModalComponent,\n    RbdTrashListComponent,\n    RbdTrashMoveModalComponent,\n    RbdTrashRestoreModalComponent,\n    RbdTrashPurgeModalComponent,\n    IscsiTargetDetailsComponent,\n    IscsiTargetFormComponent,\n    IscsiTargetImageSettingsModalComponent,\n    IscsiTargetIqnSettingsModalComponent,\n    IscsiTargetDiscoveryModalComponent,\n    RbdConfigurationListComponent,\n    RbdConfigurationFormComponent,\n    RbdTabsComponent,\n    RbdPerformanceComponent\n  ],\n  exports: [RbdConfigurationListComponent, RbdConfigurationFormComponent]\n})\nexport class BlockModule {}\n\n/* The following breakdown is needed to allow importing block.module without\n    the routes (e.g.: this module is imported by pool.module for RBD QoS\n    components)\n*/\nconst routes: Routes = [\n  { path: '', redirectTo: 'rbd', pathMatch: 'full' },\n  {\n    path: 'rbd',\n    canActivate: [FeatureTogglesGuardService, ModuleStatusGuardService],\n    data: {\n      moduleStatusGuardConfig: {\n        uiApiPath: 'block/rbd',\n        redirectTo: 'error',\n        header: 'No RBD pools available',\n        button_name: 'Create RBD pool',\n        button_route: '/pool/create'\n      },\n      breadcrumbs: 'Images'\n    },\n    children: [\n      { path: '', component: RbdListComponent },\n      {\n        path: 'namespaces',\n        component: RbdNamespaceListComponent,\n        data: { breadcrumbs: 'Namespaces' }\n      },\n      {\n        path: 'trash',\n        component: RbdTrashListComponent,\n        data: { breadcrumbs: 'Trash' }\n      },\n      {\n        path: 'performance',\n        component: RbdPerformanceComponent,\n        data: { breadcrumbs: 'Overall Performance' }\n      },\n      {\n        path: URLVerbs.CREATE,\n        component: RbdFormComponent,\n        data: { breadcrumbs: ActionLabels.CREATE }\n      },\n      {\n        path: `${URLVerbs.EDIT}/:image_spec`,\n        component: RbdFormComponent,\n        data: { breadcrumbs: ActionLabels.EDIT }\n      },\n      {\n        path: `${URLVerbs.CLONE}/:image_spec/:snap`,\n        component: RbdFormComponent,\n        data: { breadcrumbs: ActionLabels.CLONE }\n      },\n      {\n        path: `${URLVerbs.COPY}/:image_spec`,\n        component: RbdFormComponent,\n        data: { breadcrumbs: ActionLabels.COPY }\n      },\n      {\n        path: `${URLVerbs.COPY}/:image_spec/:snap`,\n        component: RbdFormComponent,\n        data: { breadcrumbs: ActionLabels.COPY }\n      }\n    ]\n  },\n  {\n    path: 'mirroring',\n    component: RbdMirroringComponent,\n    canActivate: [FeatureTogglesGuardService, ModuleStatusGuardService],\n    data: {\n      moduleStatusGuardConfig: {\n        uiApiPath: 'block/mirroring',\n        redirectTo: 'error',\n        header: $localize`RBD mirroring is not configured`,\n        button_name: $localize`Configure RBD Mirroring`,\n        button_title: $localize`This will create rbd-mirror service and a replicated RBD pool`,\n        component: 'RBD Mirroring',\n        uiConfig: true\n      },\n      breadcrumbs: 'Mirroring'\n    },\n    children: [\n      {\n        path: `${URLVerbs.EDIT}/:pool_name`,\n        component: PoolEditModeModalComponent,\n        outlet: 'modal'\n      }\n    ]\n  },\n  // iSCSI\n  {\n    path: 'iscsi',\n    canActivate: [FeatureTogglesGuardService],\n    data: { breadcrumbs: 'iSCSI' },\n    children: [\n      { path: '', redirectTo: 'overview', pathMatch: 'full' },\n      { path: 'overview', component: IscsiComponent, data: { breadcrumbs: 'Overview' } },\n      {\n        path: 'targets',\n        data: { breadcrumbs: 'Targets' },\n        children: [\n          { path: '', component: IscsiTargetListComponent },\n          {\n            path: URLVerbs.CREATE,\n            component: IscsiTargetFormComponent,\n            data: { breadcrumbs: ActionLabels.CREATE }\n          },\n          {\n            path: `${URLVerbs.EDIT}/:target_iqn`,\n            component: IscsiTargetFormComponent,\n            data: { breadcrumbs: ActionLabels.EDIT }\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [BlockModule, RouterModule.forChild(routes)]\n})\nexport class RoutedBlockModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgForm, ValidatorFn, Validators } from '@angular/forms';\n\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\n\n@Component({\n  selector: 'cd-iscsi-setting',\n  templateUrl: './iscsi-setting.component.html',\n  styleUrls: ['./iscsi-setting.component.scss']\n})\nexport class IscsiSettingComponent implements OnInit {\n  @Input()\n  settingsForm: CdFormGroup;\n  @Input()\n  formDir: NgForm;\n  @Input()\n  setting: string;\n  @Input()\n  limits: object;\n\n  ngOnInit() {\n    const validators: ValidatorFn[] = [];\n    if ('min' in this.limits) {\n      validators.push(Validators.min(this.limits['min']));\n    }\n    if ('max' in this.limits) {\n      validators.push(Validators.max(this.limits['max']));\n    }\n    this.settingsForm.get(this.setting).setValidators(validators);\n  }\n}\n","<div class=\"form-group\"\n     [formGroup]=\"settingsForm\">\n  <label class=\"col-form-label\"\n         for=\"{{ setting }}\">{{ setting }}</label>\n  <select id=\"{{ setting }}\"\n          name=\"{{ setting }}\"\n          *ngIf=\"limits['type'] === 'enum'\"\n          class=\"form-control\"\n          [formControlName]=\"setting\">\n    <option [ngValue]=\"null\"></option>\n    <option *ngFor=\"let opt of limits['values']\"\n            [ngValue]=\"opt\">{{ opt }}</option>\n  </select>\n\n  <span *ngIf=\"limits['type'] !== 'enum'\">\n    <input type=\"number\"\n           *ngIf=\"limits['type'] === 'int'\"\n           class=\"form-control\"\n           [formControlName]=\"setting\">\n\n    <input type=\"text\"\n           *ngIf=\"limits['type'] === 'str'\"\n           class=\"form-control\"\n           [formControlName]=\"setting\">\n\n    <ng-container *ngIf=\"limits['type'] === 'bool'\">\n      <br>\n      <div class=\"custom-control custom-radio custom-control-inline\">\n        <input type=\"radio\"\n               [id]=\"setting + 'True'\"\n               [value]=\"true\"\n               [formControlName]=\"setting\"\n               class=\"custom-control-input\">\n        <label class=\"custom-control-label\"\n               [for]=\"setting + 'True'\">Yes</label>\n      </div>\n      <div class=\"custom-control custom-radio custom-control-inline\">\n        <input type=\"radio\"\n               [id]=\"setting + 'False'\"\n               [value]=\"false\"\n               class=\"custom-control-input\"\n               [formControlName]=\"setting\">\n        <label class=\"custom-control-label\"\n               [for]=\"setting + 'False'\">No</label>\n      </div>\n    </ng-container>\n  </span>\n\n  <span class=\"invalid-feedback\"\n        *ngIf=\"settingsForm.showError(setting, formDir, 'min')\">\n    <ng-container i18n>Must be greater than or equal to {{ limits['min'] }}.</ng-container>\n  </span>\n  <span class=\"invalid-feedback\"\n        *ngIf=\"settingsForm.showError(setting, formDir, 'max')\">\n    <ng-container i18n>Must be less than or equal to {{ limits['max'] }}.</ng-container>\n  </span>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cd-iscsi-tabs',\n  templateUrl: './iscsi-tabs.component.html',\n  styleUrls: ['./iscsi-tabs.component.scss']\n})\nexport class IscsiTabsComponent {}\n","<ul class=\"nav nav-tabs\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/block/iscsi/overview\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       i18n>Overview</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/block/iscsi/targets\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       i18n>Targets</a>\n  </li>\n</ul>\n","import { Component, Input, OnChanges, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport {\n  ITreeOptions,\n  TreeComponent,\n  TreeModel,\n  TreeNode,\n  TREE_ACTIONS\n} from '@circlon/angular-tree-component';\nimport _ from 'lodash';\n\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { BooleanTextPipe } from '~/app/shared/pipes/boolean-text.pipe';\nimport { IscsiBackstorePipe } from '~/app/shared/pipes/iscsi-backstore.pipe';\n\n@Component({\n  selector: 'cd-iscsi-target-details',\n  templateUrl: './iscsi-target-details.component.html',\n  styleUrls: ['./iscsi-target-details.component.scss']\n})\nexport class IscsiTargetDetailsComponent implements OnChanges, OnInit {\n  @Input()\n  selection: any;\n  @Input()\n  settings: any;\n  @Input()\n  cephIscsiConfigVersion: number;\n\n  @ViewChild('highlightTpl', { static: true })\n  highlightTpl: TemplateRef<any>;\n\n  private detailTable: TableComponent;\n  @ViewChild('detailTable')\n  set content(content: TableComponent) {\n    this.detailTable = content;\n    if (content) {\n      content.updateColumns();\n    }\n  }\n\n  @ViewChild('tree') tree: TreeComponent;\n\n  icons = Icons;\n  columns: CdTableColumn[];\n  data: any;\n  metadata: any = {};\n  selectedItem: any;\n  title: string;\n\n  nodes: any[] = [];\n  treeOptions: ITreeOptions = {\n    useVirtualScroll: true,\n    actionMapping: {\n      mouse: {\n        click: this.onNodeSelected.bind(this)\n      }\n    }\n  };\n\n  constructor(\n    private iscsiBackstorePipe: IscsiBackstorePipe,\n    private booleanTextPipe: BooleanTextPipe\n  ) {}\n\n  ngOnInit() {\n    this.columns = [\n      {\n        prop: 'displayName',\n        name: $localize`Name`,\n        flexGrow: 1,\n        cellTemplate: this.highlightTpl\n      },\n      {\n        prop: 'current',\n        name: $localize`Current`,\n        flexGrow: 1,\n        cellTemplate: this.highlightTpl\n      },\n      {\n        prop: 'default',\n        name: $localize`Default`,\n        flexGrow: 1,\n        cellTemplate: this.highlightTpl\n      }\n    ];\n  }\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.selectedItem = this.selection;\n      this.generateTree();\n    }\n\n    this.data = undefined;\n  }\n\n  private generateTree() {\n    const target_meta = _.cloneDeep(this.selectedItem.target_controls);\n    // Target level authentication was introduced in ceph-iscsi config v11\n    if (this.cephIscsiConfigVersion > 10) {\n      _.extend(target_meta, _.cloneDeep(this.selectedItem.auth));\n    }\n    this.metadata = { root: target_meta };\n    const cssClasses = {\n      target: {\n        expanded: _.join(\n          this.selectedItem.cdExecuting\n            ? [Icons.large, Icons.spinner, Icons.spin]\n            : [Icons.large, Icons.bullseye],\n          ' '\n        )\n      },\n      initiators: {\n        expanded: _.join([Icons.large, Icons.user], ' '),\n        leaf: _.join([Icons.user], ' ')\n      },\n      groups: {\n        expanded: _.join([Icons.large, Icons.users], ' '),\n        leaf: _.join([Icons.users], ' ')\n      },\n      disks: {\n        expanded: _.join([Icons.large, Icons.disk], ' '),\n        leaf: _.join([Icons.disk], ' ')\n      },\n      portals: {\n        expanded: _.join([Icons.large, Icons.server], ' '),\n        leaf: _.join([Icons.server], ' ')\n      }\n    };\n\n    const disks: any[] = [];\n    _.forEach(this.selectedItem.disks, (disk) => {\n      const cdId = 'disk_' + disk.pool + '_' + disk.image;\n      this.metadata[cdId] = {\n        controls: disk.controls,\n        backstore: disk.backstore\n      };\n      ['wwn', 'lun'].forEach((k) => {\n        if (k in disk) {\n          this.metadata[cdId][k] = disk[k];\n        }\n      });\n      disks.push({\n        name: `${disk.pool}/${disk.image}`,\n        cdId: cdId,\n        cdIcon: cssClasses.disks.leaf\n      });\n    });\n\n    const portals: any[] = [];\n    _.forEach(this.selectedItem.portals, (portal) => {\n      portals.push({\n        name: `${portal.host}:${portal.ip}`,\n        cdIcon: cssClasses.portals.leaf\n      });\n    });\n\n    const clients: any[] = [];\n    _.forEach(this.selectedItem.clients, (client) => {\n      const client_metadata = _.cloneDeep(client.auth);\n      if (client.info) {\n        _.extend(client_metadata, client.info);\n        delete client_metadata['state'];\n        _.forEach(Object.keys(client.info.state), (state) => {\n          client_metadata[state.toLowerCase()] = client.info.state[state];\n        });\n      }\n      this.metadata['client_' + client.client_iqn] = client_metadata;\n\n      const luns: any[] = [];\n      client.luns.forEach((lun: Record<string, any>) => {\n        luns.push({\n          name: `${lun.pool}/${lun.image}`,\n          cdId: 'disk_' + lun.pool + '_' + lun.image,\n          cdIcon: cssClasses.disks.leaf\n        });\n      });\n\n      let status = '';\n      if (client.info) {\n        status = Object.keys(client.info.state).includes('LOGGED_IN') ? 'logged_in' : 'logged_out';\n      }\n      clients.push({\n        name: client.client_iqn,\n        status: status,\n        cdId: 'client_' + client.client_iqn,\n        children: luns,\n        cdIcon: cssClasses.initiators.leaf\n      });\n    });\n\n    const groups: any[] = [];\n    _.forEach(this.selectedItem.groups, (group) => {\n      const luns: any[] = [];\n      group.disks.forEach((disk: Record<string, any>) => {\n        luns.push({\n          name: `${disk.pool}/${disk.image}`,\n          cdId: 'disk_' + disk.pool + '_' + disk.image,\n          cdIcon: cssClasses.disks.leaf\n        });\n      });\n\n      const initiators: any[] = [];\n      group.members.forEach((member: string) => {\n        initiators.push({\n          name: member,\n          cdId: 'client_' + member\n        });\n      });\n\n      groups.push({\n        name: group.group_id,\n        cdIcon: cssClasses.groups.leaf,\n        children: [\n          {\n            name: 'Disks',\n            children: luns,\n            cdIcon: cssClasses.disks.expanded\n          },\n          {\n            name: 'Initiators',\n            children: initiators,\n            cdIcon: cssClasses.initiators.expanded\n          }\n        ]\n      });\n    });\n\n    this.nodes = [\n      {\n        name: this.selectedItem.target_iqn,\n        cdId: 'root',\n        isExpanded: true,\n        cdIcon: cssClasses.target.expanded,\n        children: [\n          {\n            name: 'Disks',\n            isExpanded: true,\n            children: disks,\n            cdIcon: cssClasses.disks.expanded\n          },\n          {\n            name: 'Portals',\n            isExpanded: true,\n            children: portals,\n            cdIcon: cssClasses.portals.expanded\n          },\n          {\n            name: 'Initiators',\n            isExpanded: true,\n            children: clients,\n            cdIcon: cssClasses.initiators.expanded\n          },\n          {\n            name: 'Groups',\n            isExpanded: true,\n            children: groups,\n            cdIcon: cssClasses.groups.expanded\n          }\n        ]\n      }\n    ];\n  }\n\n  private format(value: any) {\n    if (typeof value === 'boolean') {\n      return this.booleanTextPipe.transform(value);\n    }\n    return value;\n  }\n\n  onNodeSelected(tree: TreeModel, node: TreeNode) {\n    TREE_ACTIONS.ACTIVATE(tree, node, true);\n    if (node.data.cdId) {\n      this.title = node.data.name;\n      const tempData = this.metadata[node.data.cdId] || {};\n\n      if (node.data.cdId === 'root') {\n        this.detailTable?.toggleColumn({ prop: 'default', isHidden: true });\n        this.data = _.map(this.settings.target_default_controls, (value, key) => {\n          value = this.format(value);\n          return {\n            displayName: key,\n            default: value,\n            current: !_.isUndefined(tempData[key]) ? this.format(tempData[key]) : value\n          };\n        });\n        // Target level authentication was introduced in ceph-iscsi config v11\n        if (this.cephIscsiConfigVersion > 10) {\n          ['user', 'password', 'mutual_user', 'mutual_password'].forEach((key) => {\n            this.data.push({\n              displayName: key,\n              default: null,\n              current: tempData[key]\n            });\n          });\n        }\n      } else if (node.data.cdId.toString().startsWith('disk_')) {\n        this.detailTable?.toggleColumn({ prop: 'default', isHidden: true });\n        this.data = _.map(this.settings.disk_default_controls[tempData.backstore], (value, key) => {\n          value = this.format(value);\n          return {\n            displayName: key,\n            default: value,\n            current: !_.isUndefined(tempData.controls[key])\n              ? this.format(tempData.controls[key])\n              : value\n          };\n        });\n        this.data.push({\n          displayName: 'backstore',\n          default: this.iscsiBackstorePipe.transform(this.settings.default_backstore),\n          current: this.iscsiBackstorePipe.transform(tempData.backstore)\n        });\n        ['wwn', 'lun'].forEach((k) => {\n          if (k in tempData) {\n            this.data.push({\n              displayName: k,\n              default: undefined,\n              current: tempData[k]\n            });\n          }\n        });\n      } else {\n        this.detailTable?.toggleColumn({ prop: 'default', isHidden: false });\n        this.data = _.map(tempData, (value, key) => {\n          return {\n            displayName: key,\n            default: undefined,\n            current: this.format(value)\n          };\n        });\n      }\n    } else {\n      this.data = undefined;\n    }\n\n    this.detailTable?.updateColumns();\n  }\n\n  onUpdateData() {\n    this.tree.treeModel.expandAll();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-6\">\n    <legend i18n>iSCSI Topology</legend>\n\n    <tree-root #tree\n               [nodes]=\"nodes\"\n               [options]=\"treeOptions\"\n               (updateData)=\"onUpdateData()\">\n      <ng-template #treeNodeTemplate\n                   let-node\n                   let-index=\"index\">\n        <i [class]=\"node.data.cdIcon\"></i>\n        <span>{{ node.data.name }}</span>\n        &nbsp;\n        <span class=\"badge\"\n              [ngClass]=\"{'badge-success': ['logged_in'].includes(node.data.status), 'badge-danger': ['logged_out'].includes(node.data.status)}\">\n          {{ node.data.status }}\n        </span>\n      </ng-template>\n    </tree-root>\n  </div>\n\n  <div class=\"col-6 metadata\"\n       *ngIf=\"data\">\n    <legend>{{ title }}</legend>\n\n    <cd-table #detailTable\n              [data]=\"data\"\n              columnMode=\"flex\"\n              [columns]=\"columns\"\n              [limit]=\"0\">\n    </cd-table>\n  </div>\n</div>\n\n<ng-template #highlightTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <span *ngIf=\"row.default === undefined || row.default === row.current\">{{ value }}</span>\n  <strong *ngIf=\"row.default !== undefined && row.default !== row.current\">{{ value }}</strong>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { IscsiService } from '~/app/shared/api/iscsi.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-iscsi-target-discovery-modal',\n  templateUrl: './iscsi-target-discovery-modal.component.html',\n  styleUrls: ['./iscsi-target-discovery-modal.component.scss']\n})\nexport class IscsiTargetDiscoveryModalComponent implements OnInit {\n  discoveryForm: CdFormGroup;\n  permission: Permission;\n  hasPermission: boolean;\n\n  USER_REGEX = /^[\\w\\.:@_-]{8,64}$/;\n  PASSWORD_REGEX = /^[\\w@\\-_\\/]{12,16}$/;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private iscsiService: IscsiService,\n    private notificationService: NotificationService\n  ) {\n    this.permission = this.authStorageService.getPermissions().iscsi;\n  }\n\n  ngOnInit() {\n    this.hasPermission = this.permission.update;\n    this.createForm();\n    this.iscsiService.getDiscovery().subscribe((auth) => {\n      this.discoveryForm.patchValue(auth);\n    });\n  }\n\n  createForm() {\n    this.discoveryForm = new CdFormGroup({\n      user: new FormControl({ value: '', disabled: !this.hasPermission }),\n      password: new FormControl({ value: '', disabled: !this.hasPermission }),\n      mutual_user: new FormControl({ value: '', disabled: !this.hasPermission }),\n      mutual_password: new FormControl({ value: '', disabled: !this.hasPermission })\n    });\n\n    CdValidators.validateIf(\n      this.discoveryForm.get('user'),\n      () =>\n        this.discoveryForm.getValue('password') ||\n        this.discoveryForm.getValue('mutual_user') ||\n        this.discoveryForm.getValue('mutual_password'),\n      [Validators.required],\n      [Validators.pattern(this.USER_REGEX)],\n      [\n        this.discoveryForm.get('password'),\n        this.discoveryForm.get('mutual_user'),\n        this.discoveryForm.get('mutual_password')\n      ]\n    );\n\n    CdValidators.validateIf(\n      this.discoveryForm.get('password'),\n      () =>\n        this.discoveryForm.getValue('user') ||\n        this.discoveryForm.getValue('mutual_user') ||\n        this.discoveryForm.getValue('mutual_password'),\n      [Validators.required],\n      [Validators.pattern(this.PASSWORD_REGEX)],\n      [\n        this.discoveryForm.get('user'),\n        this.discoveryForm.get('mutual_user'),\n        this.discoveryForm.get('mutual_password')\n      ]\n    );\n\n    CdValidators.validateIf(\n      this.discoveryForm.get('mutual_user'),\n      () => this.discoveryForm.getValue('mutual_password'),\n      [Validators.required],\n      [Validators.pattern(this.USER_REGEX)],\n      [\n        this.discoveryForm.get('user'),\n        this.discoveryForm.get('password'),\n        this.discoveryForm.get('mutual_password')\n      ]\n    );\n\n    CdValidators.validateIf(\n      this.discoveryForm.get('mutual_password'),\n      () => this.discoveryForm.getValue('mutual_user'),\n      [Validators.required],\n      [Validators.pattern(this.PASSWORD_REGEX)],\n      [\n        this.discoveryForm.get('user'),\n        this.discoveryForm.get('password'),\n        this.discoveryForm.get('mutual_user')\n      ]\n    );\n  }\n\n  submitAction() {\n    this.iscsiService.updateDiscovery(this.discoveryForm.value).subscribe(\n      () => {\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Updated discovery authentication`\n        );\n        this.activeModal.close();\n      },\n      () => {\n        this.discoveryForm.setErrors({ cdSubmitButton: true });\n      }\n    );\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\"\n                i18n>Discovery Authentication</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"discoveryForm\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"discoveryForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <!-- User -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"user\"\n                 i18n>User</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"user\"\n                   class=\"form-control\"\n                   formControlName=\"user\"\n                   type=\"text\"\n                   autocomplete=\"off\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"discoveryForm.showError('user', formDir, 'required')\"\n                  i18n>This field is required.</span>\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"discoveryForm.showError('user', formDir, 'pattern')\"\n                  i18n>User names must have a length of 8 to 64 characters and can contain\n              alphanumeric characters, '.', '@', '-', '_' or ':'.</span>\n          </div>\n        </div>\n\n        <!-- Password -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"password\"\n                 i18n>Password</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input id=\"password\"\n                     class=\"form-control\"\n                     formControlName=\"password\"\n                     type=\"password\"\n                     autocomplete=\"new-password\">\n\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      cdPasswordButton=\"password\">\n              </button>\n              <cd-copy-2-clipboard-button source=\"password\">\n              </cd-copy-2-clipboard-button>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"discoveryForm.showError('password', formDir, 'required')\"\n                  i18n>This field is required.</span>\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"discoveryForm.showError('password', formDir, 'pattern')\"\n                  i18n>Passwords must have a length of 12 to 16 characters and can contain\n              alphanumeric characters, '@', '-', '_' or '/'.</span>\n          </div>\n        </div>\n\n        <!-- mutual_user -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"mutual_user\">\n            <ng-container i18n>Mutual User</ng-container>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"mutual_user\"\n                   class=\"form-control\"\n                   formControlName=\"mutual_user\"\n                   type=\"text\"\n                   autocomplete=\"off\">\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"discoveryForm.showError('mutual_user', formDir, 'required')\"\n                  i18n>This field is required.</span>\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"discoveryForm.showError('mutual_user', formDir, 'pattern')\"\n                  i18n>User names must have a length of 8 to 64 characters and can contain\n              alphanumeric characters, '.', '@', '-', '_' or ':'.</span>\n          </div>\n        </div>\n\n        <!-- mutual_password -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"mutual_password\"\n                 i18n>Mutual Password</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input id=\"mutual_password\"\n                     class=\"form-control\"\n                     formControlName=\"mutual_password\"\n                     type=\"password\"\n                     autocomplete=\"new-password\">\n\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      cdPasswordButton=\"mutual_password\">\n              </button>\n              <cd-copy-2-clipboard-button source=\"mutual_password\">\n              </cd-copy-2-clipboard-button>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"discoveryForm.showError('mutual_password', formDir, 'required')\"\n                  i18n>This field is required.</span>\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"discoveryForm.showError('mutual_password', formDir, 'pattern')\"\n                  i18n>Passwords must have a length of 12 to 16 characters and can contain\n              alphanumeric characters, '@', '-', '_' or '/'.</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submitAction()\"\n                              [form]=\"discoveryForm\"\n                              [showSubmit]=\"hasPermission\"\n                              [submitText]=\"actionLabels.SUBMIT\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { forkJoin } from 'rxjs';\n\nimport { IscsiService } from '~/app/shared/api/iscsi.service';\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { SelectMessages } from '~/app/shared/components/select/select-messages.model';\nimport { SelectOption } from '~/app/shared/components/select/select-option.model';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { IscsiTargetImageSettingsModalComponent } from '../iscsi-target-image-settings-modal/iscsi-target-image-settings-modal.component';\nimport { IscsiTargetIqnSettingsModalComponent } from '../iscsi-target-iqn-settings-modal/iscsi-target-iqn-settings-modal.component';\n\n@Component({\n  selector: 'cd-iscsi-target-form',\n  templateUrl: './iscsi-target-form.component.html',\n  styleUrls: ['./iscsi-target-form.component.scss']\n})\nexport class IscsiTargetFormComponent extends CdForm implements OnInit {\n  cephIscsiConfigVersion: number;\n  targetForm: CdFormGroup;\n  modalRef: NgbModalRef;\n  api_version = 0;\n  minimum_gateways = 1;\n  target_default_controls: any;\n  target_controls_limits: any;\n  disk_default_controls: any;\n  disk_controls_limits: any;\n  backstores: string[];\n  default_backstore: string;\n  unsupported_rbd_features: any;\n  required_rbd_features: any;\n\n  icons = Icons;\n\n  isEdit = false;\n  target_iqn: string;\n\n  imagesAll: any[];\n  imagesSelections: SelectOption[];\n  portalsSelections: SelectOption[] = [];\n\n  imagesInitiatorSelections: SelectOption[][] = [];\n  groupDiskSelections: SelectOption[][] = [];\n  groupMembersSelections: SelectOption[][] = [];\n\n  imagesSettings: any = {};\n  messages = {\n    portals: new SelectMessages({ noOptions: $localize`There are no portals available.` }),\n    images: new SelectMessages({ noOptions: $localize`There are no images available.` }),\n    initiatorImage: new SelectMessages({\n      noOptions: $localize`There are no images available. Please make sure you add an image to the target.`\n    }),\n    groupInitiator: new SelectMessages({\n      noOptions: $localize`There are no initiators available. Please make sure you add an initiator to the target.`\n    })\n  };\n\n  IQN_REGEX = /^iqn\\.(19|20)\\d\\d-(0[1-9]|1[0-2])\\.\\D{2,3}(\\.[A-Za-z0-9-]+)+(:[A-Za-z0-9-\\.]+)*$/;\n  USER_REGEX = /^[\\w\\.:@_-]{8,64}$/;\n  PASSWORD_REGEX = /^[\\w@\\-_\\/]{12,16}$/;\n  action: string;\n  resource: string;\n\n  constructor(\n    private iscsiService: IscsiService,\n    private modalService: ModalService,\n    private rbdService: RbdService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private taskWrapper: TaskWrapperService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.resource = $localize`target`;\n  }\n\n  ngOnInit() {\n    const rbdListContext = new CdTableFetchDataContext(() => undefined);\n    /* limit -1 to specify all images */\n    rbdListContext.pageInfo.limit = -1;\n    const promises: any[] = [\n      this.iscsiService.listTargets(),\n      /* tslint:disable:no-empty */\n      this.rbdService.list(rbdListContext.toParams()),\n      this.iscsiService.portals(),\n      this.iscsiService.settings(),\n      this.iscsiService.version()\n    ];\n\n    if (this.router.url.startsWith('/block/iscsi/targets/edit')) {\n      this.isEdit = true;\n      this.route.params.subscribe((params: { target_iqn: string }) => {\n        this.target_iqn = decodeURIComponent(params.target_iqn);\n        promises.push(this.iscsiService.getTarget(this.target_iqn));\n      });\n    }\n    this.action = this.isEdit ? this.actionLabels.EDIT : this.actionLabels.CREATE;\n\n    forkJoin(promises).subscribe((data: any[]) => {\n      // iscsiService.listTargets\n      const usedImages = _(data[0])\n        .filter((target) => target.target_iqn !== this.target_iqn)\n        .flatMap((target) => target.disks)\n        .map((image) => `${image.pool}/${image.image}`)\n        .value();\n\n      // iscsiService.settings()\n      if ('api_version' in data[3]) {\n        this.api_version = data[3].api_version;\n      }\n      this.minimum_gateways = data[3].config.minimum_gateways;\n      this.target_default_controls = data[3].target_default_controls;\n      this.target_controls_limits = data[3].target_controls_limits;\n      this.disk_default_controls = data[3].disk_default_controls;\n      this.disk_controls_limits = data[3].disk_controls_limits;\n      this.backstores = data[3].backstores;\n      this.default_backstore = data[3].default_backstore;\n      this.unsupported_rbd_features = data[3].unsupported_rbd_features;\n      this.required_rbd_features = data[3].required_rbd_features;\n\n      // rbdService.list()\n      this.imagesAll = _(data[1])\n        .flatMap((pool) => pool.value)\n        .filter((image) => {\n          // Namespaces are not supported by ceph-iscsi\n          if (image.namespace) {\n            return false;\n          }\n          const imageId = `${image.pool_name}/${image.name}`;\n          if (usedImages.indexOf(imageId) !== -1) {\n            return false;\n          }\n          const validBackstores = this.getValidBackstores(image);\n          if (validBackstores.length === 0) {\n            return false;\n          }\n          return true;\n        })\n        .value();\n\n      this.imagesSelections = this.imagesAll.map(\n        (image) => new SelectOption(false, `${image.pool_name}/${image.name}`, '')\n      );\n\n      // iscsiService.portals()\n      const portals: SelectOption[] = [];\n      data[2].forEach((portal: Record<string, any>) => {\n        portal.ip_addresses.forEach((ip: string) => {\n          portals.push(new SelectOption(false, portal.name + ':' + ip, ''));\n        });\n      });\n      this.portalsSelections = [...portals];\n\n      // iscsiService.version()\n      this.cephIscsiConfigVersion = data[4]['ceph_iscsi_config_version'];\n\n      this.createForm();\n\n      // iscsiService.getTarget()\n      if (data[5]) {\n        this.resolveModel(data[5]);\n      }\n\n      this.loadingReady();\n    });\n  }\n\n  createForm() {\n    this.targetForm = new CdFormGroup({\n      target_iqn: new FormControl('iqn.2001-07.com.ceph:' + Date.now(), {\n        validators: [Validators.required, Validators.pattern(this.IQN_REGEX)]\n      }),\n      target_controls: new FormControl({}),\n      portals: new FormControl([], {\n        validators: [\n          CdValidators.custom('minGateways', (value: any[]) => {\n            const gateways = _.uniq(value.map((elem) => elem.split(':')[0]));\n            return gateways.length < Math.max(1, this.minimum_gateways);\n          })\n        ]\n      }),\n      disks: new FormControl([], {\n        validators: [\n          CdValidators.custom('dupLunId', (value: any[]) => {\n            const lunIds = this.getLunIds(value);\n            return lunIds.length !== _.uniq(lunIds).length;\n          }),\n          CdValidators.custom('dupWwn', (value: any[]) => {\n            const wwns = this.getWwns(value);\n            return wwns.length !== _.uniq(wwns).length;\n          })\n        ]\n      }),\n      initiators: new FormArray([]),\n      groups: new FormArray([]),\n      acl_enabled: new FormControl(false)\n    });\n    // Target level authentication was introduced in ceph-iscsi config v11\n    if (this.cephIscsiConfigVersion > 10) {\n      const authFormGroup = new CdFormGroup({\n        user: new FormControl(''),\n        password: new FormControl(''),\n        mutual_user: new FormControl(''),\n        mutual_password: new FormControl('')\n      });\n      this.setAuthValidator(authFormGroup);\n      this.targetForm.addControl('auth', authFormGroup);\n    }\n  }\n\n  resolveModel(res: Record<string, any>) {\n    this.targetForm.patchValue({\n      target_iqn: res.target_iqn,\n      target_controls: res.target_controls,\n      acl_enabled: res.acl_enabled\n    });\n    // Target level authentication was introduced in ceph-iscsi config v11\n    if (this.cephIscsiConfigVersion > 10) {\n      this.targetForm.patchValue({\n        auth: res.auth\n      });\n    }\n    const portals: any[] = [];\n    _.forEach(res.portals, (portal) => {\n      const id = `${portal.host}:${portal.ip}`;\n      portals.push(id);\n    });\n    this.targetForm.patchValue({\n      portals: portals\n    });\n\n    const disks: any[] = [];\n    _.forEach(res.disks, (disk) => {\n      const id = `${disk.pool}/${disk.image}`;\n      disks.push(id);\n      this.imagesSettings[id] = {\n        backstore: disk.backstore\n      };\n      this.imagesSettings[id][disk.backstore] = disk.controls;\n      if ('lun' in disk) {\n        this.imagesSettings[id]['lun'] = disk.lun;\n      }\n      if ('wwn' in disk) {\n        this.imagesSettings[id]['wwn'] = disk.wwn;\n      }\n\n      this.onImageSelection({ option: { name: id, selected: true } });\n    });\n    this.targetForm.patchValue({\n      disks: disks\n    });\n\n    _.forEach(res.clients, (client) => {\n      const initiator = this.addInitiator();\n      client.luns = _.map(client.luns, (lun) => `${lun.pool}/${lun.image}`);\n      initiator.patchValue(client);\n      // updatedInitiatorSelector()\n    });\n\n    (res.groups as any[]).forEach((group: any, group_index: number) => {\n      const fg = this.addGroup();\n      group.disks = _.map(group.disks, (disk) => `${disk.pool}/${disk.image}`);\n      fg.patchValue(group);\n      _.forEach(group.members, (member) => {\n        this.onGroupMemberSelection({ option: new SelectOption(true, member, '') }, group_index);\n      });\n    });\n  }\n\n  hasAdvancedSettings(settings: any) {\n    return Object.values(settings).length > 0;\n  }\n\n  // Portals\n  get portals() {\n    return this.targetForm.get('portals') as FormControl;\n  }\n\n  onPortalSelection() {\n    this.portals.setValue(this.portals.value);\n  }\n\n  removePortal(index: number, portal: string) {\n    this.portalsSelections.forEach((value) => {\n      if (value.name === portal) {\n        value.selected = false;\n      }\n    });\n\n    this.portals.value.splice(index, 1);\n    this.portals.setValue(this.portals.value);\n    return false;\n  }\n\n  // Images\n  get disks() {\n    return this.targetForm.get('disks') as FormControl;\n  }\n\n  removeImage(index: number, image: string) {\n    this.imagesSelections.forEach((value) => {\n      if (value.name === image) {\n        value.selected = false;\n      }\n    });\n    this.disks.value.splice(index, 1);\n    this.removeImageRefs(image);\n    this.targetForm.get('disks').updateValueAndValidity({ emitEvent: false });\n    return false;\n  }\n\n  removeImageRefs(name: string) {\n    this.initiators.controls.forEach((element) => {\n      const newImages = element.value.luns.filter((item: string) => item !== name);\n      element.get('luns').setValue(newImages);\n    });\n\n    this.groups.controls.forEach((element) => {\n      const newDisks = element.value.disks.filter((item: string) => item !== name);\n      element.get('disks').setValue(newDisks);\n    });\n\n    _.forEach(this.imagesInitiatorSelections, (selections, i) => {\n      this.imagesInitiatorSelections[i] = selections.filter((item: any) => item.name !== name);\n    });\n    _.forEach(this.groupDiskSelections, (selections, i) => {\n      this.groupDiskSelections[i] = selections.filter((item: any) => item.name !== name);\n    });\n  }\n\n  getDefaultBackstore(imageId: string) {\n    let result = this.default_backstore;\n    const image = this.getImageById(imageId);\n    if (!this.validFeatures(image, this.default_backstore)) {\n      this.backstores.forEach((backstore) => {\n        if (backstore !== this.default_backstore) {\n          if (this.validFeatures(image, backstore)) {\n            result = backstore;\n          }\n        }\n      });\n    }\n    return result;\n  }\n\n  isLunIdInUse(lunId: string, imageId: string) {\n    const images = this.disks.value.filter((currentImageId: string) => currentImageId !== imageId);\n    return this.getLunIds(images).includes(lunId);\n  }\n\n  getLunIds(images: object) {\n    return _.map(images, (image) => this.imagesSettings[image]['lun']);\n  }\n\n  nextLunId(imageId: string) {\n    const images = this.disks.value.filter((currentImageId: string) => currentImageId !== imageId);\n    const lunIdsInUse = this.getLunIds(images);\n    let lunIdCandidate = 0;\n    while (lunIdsInUse.includes(lunIdCandidate)) {\n      lunIdCandidate++;\n    }\n    return lunIdCandidate;\n  }\n\n  getWwns(images: object) {\n    const wwns = _.map(images, (image) => this.imagesSettings[image]['wwn']);\n    return wwns.filter((wwn) => _.isString(wwn) && wwn !== '');\n  }\n\n  onImageSelection($event: any) {\n    const option = $event.option;\n\n    if (option.selected) {\n      if (!this.imagesSettings[option.name]) {\n        const defaultBackstore = this.getDefaultBackstore(option.name);\n        this.imagesSettings[option.name] = {\n          backstore: defaultBackstore,\n          lun: this.nextLunId(option.name)\n        };\n        this.imagesSettings[option.name][defaultBackstore] = {};\n      } else if (this.isLunIdInUse(this.imagesSettings[option.name]['lun'], option.name)) {\n        // If the lun id is now in use, we have to generate a new one\n        this.imagesSettings[option.name]['lun'] = this.nextLunId(option.name);\n      }\n\n      _.forEach(this.imagesInitiatorSelections, (selections, i) => {\n        selections.push(new SelectOption(false, option.name, ''));\n        this.imagesInitiatorSelections[i] = [...selections];\n      });\n\n      _.forEach(this.groupDiskSelections, (selections, i) => {\n        selections.push(new SelectOption(false, option.name, ''));\n        this.groupDiskSelections[i] = [...selections];\n      });\n    } else {\n      this.removeImageRefs(option.name);\n    }\n    this.targetForm.get('disks').updateValueAndValidity({ emitEvent: false });\n  }\n\n  // Initiators\n  get initiators() {\n    return this.targetForm.get('initiators') as FormArray;\n  }\n\n  addInitiator() {\n    const fg = new CdFormGroup({\n      client_iqn: new FormControl('', {\n        validators: [\n          Validators.required,\n          CdValidators.custom('notUnique', (client_iqn: string) => {\n            const flattened = this.initiators.controls.reduce(function (accumulator, currentValue) {\n              return accumulator.concat(currentValue.value.client_iqn);\n            }, []);\n\n            return flattened.indexOf(client_iqn) !== flattened.lastIndexOf(client_iqn);\n          }),\n          Validators.pattern(this.IQN_REGEX)\n        ]\n      }),\n      auth: new CdFormGroup({\n        user: new FormControl(''),\n        password: new FormControl(''),\n        mutual_user: new FormControl(''),\n        mutual_password: new FormControl('')\n      }),\n      luns: new FormControl([]),\n      cdIsInGroup: new FormControl(false)\n    });\n\n    this.setAuthValidator(fg);\n\n    this.initiators.push(fg);\n\n    _.forEach(this.groupMembersSelections, (selections, i) => {\n      selections.push(new SelectOption(false, '', ''));\n      this.groupMembersSelections[i] = [...selections];\n    });\n\n    const disks = _.map(\n      this.targetForm.getValue('disks'),\n      (disk) => new SelectOption(false, disk, '')\n    );\n    this.imagesInitiatorSelections.push(disks);\n\n    return fg;\n  }\n\n  setAuthValidator(fg: CdFormGroup) {\n    CdValidators.validateIf(\n      fg.get('user'),\n      () => fg.getValue('password') || fg.getValue('mutual_user') || fg.getValue('mutual_password'),\n      [Validators.required],\n      [Validators.pattern(this.USER_REGEX)],\n      [fg.get('password'), fg.get('mutual_user'), fg.get('mutual_password')]\n    );\n\n    CdValidators.validateIf(\n      fg.get('password'),\n      () => fg.getValue('user') || fg.getValue('mutual_user') || fg.getValue('mutual_password'),\n      [Validators.required],\n      [Validators.pattern(this.PASSWORD_REGEX)],\n      [fg.get('user'), fg.get('mutual_user'), fg.get('mutual_password')]\n    );\n\n    CdValidators.validateIf(\n      fg.get('mutual_user'),\n      () => fg.getValue('mutual_password'),\n      [Validators.required],\n      [Validators.pattern(this.USER_REGEX)],\n      [fg.get('user'), fg.get('password'), fg.get('mutual_password')]\n    );\n\n    CdValidators.validateIf(\n      fg.get('mutual_password'),\n      () => fg.getValue('mutual_user'),\n      [Validators.required],\n      [Validators.pattern(this.PASSWORD_REGEX)],\n      [fg.get('user'), fg.get('password'), fg.get('mutual_user')]\n    );\n  }\n\n  removeInitiator(index: number) {\n    const removed = this.initiators.value[index];\n\n    this.initiators.removeAt(index);\n\n    _.forEach(this.groupMembersSelections, (selections, i) => {\n      selections.splice(index, 1);\n      this.groupMembersSelections[i] = [...selections];\n    });\n\n    this.groups.controls.forEach((element) => {\n      const newMembers = element.value.members.filter(\n        (item: string) => item !== removed.client_iqn\n      );\n      element.get('members').setValue(newMembers);\n    });\n\n    this.imagesInitiatorSelections.splice(index, 1);\n  }\n\n  updatedInitiatorSelector() {\n    // Validate all client_iqn\n    this.initiators.controls.forEach((control) => {\n      control.get('client_iqn').updateValueAndValidity({ emitEvent: false });\n    });\n\n    // Update Group Initiator Selector\n    _.forEach(this.groupMembersSelections, (group, group_index) => {\n      _.forEach(group, (elem, index) => {\n        const oldName = elem.name;\n        elem.name = this.initiators.controls[index].value.client_iqn;\n\n        this.groups.controls.forEach((element) => {\n          const members = element.value.members;\n          const i = members.indexOf(oldName);\n\n          if (i !== -1) {\n            members[i] = elem.name;\n          }\n          element.get('members').setValue(members);\n        });\n      });\n      this.groupMembersSelections[group_index] = [...this.groupMembersSelections[group_index]];\n    });\n  }\n\n  removeInitiatorImage(initiator: any, lun_index: number, initiator_index: number, image: string) {\n    const luns = initiator.getValue('luns');\n    luns.splice(lun_index, 1);\n    initiator.patchValue({ luns: luns });\n\n    this.imagesInitiatorSelections[initiator_index].forEach((value: Record<string, any>) => {\n      if (value.name === image) {\n        value.selected = false;\n      }\n    });\n\n    return false;\n  }\n\n  // Groups\n  get groups() {\n    return this.targetForm.get('groups') as FormArray;\n  }\n\n  addGroup() {\n    const fg = new CdFormGroup({\n      group_id: new FormControl('', { validators: [Validators.required] }),\n      members: new FormControl([]),\n      disks: new FormControl([])\n    });\n\n    this.groups.push(fg);\n\n    const disks = _.map(\n      this.targetForm.getValue('disks'),\n      (disk) => new SelectOption(false, disk, '')\n    );\n    this.groupDiskSelections.push(disks);\n\n    const initiators = _.map(\n      this.initiators.value,\n      (initiator) => new SelectOption(false, initiator.client_iqn, '', !initiator.cdIsInGroup)\n    );\n    this.groupMembersSelections.push(initiators);\n\n    return fg;\n  }\n\n  removeGroup(index: number) {\n    // Remove group and disk selections\n    this.groups.removeAt(index);\n\n    // Free initiator from group\n    const selectedMembers = this.groupMembersSelections[index].filter((value) => value.selected);\n    selectedMembers.forEach((selection) => {\n      selection.selected = false;\n      this.onGroupMemberSelection({ option: selection }, index);\n    });\n\n    this.groupMembersSelections.splice(index, 1);\n    this.groupDiskSelections.splice(index, 1);\n  }\n\n  onGroupMemberSelection($event: any, group_index: number) {\n    const option = $event.option;\n\n    let luns: string[] = [];\n    if (!option.selected) {\n      const selectedDisks = this.groupDiskSelections[group_index].filter((value) => value.selected);\n      luns = selectedDisks.map((value) => value.name);\n    }\n\n    this.initiators.controls.forEach((element, index) => {\n      if (element.value.client_iqn === option.name) {\n        element.patchValue({ luns: luns });\n        element.get('cdIsInGroup').setValue(option.selected);\n\n        // Members can only be at one group at a time, so when a member is selected\n        // in one group we need to disable its selection in other groups\n        _.forEach(this.groupMembersSelections, (group) => {\n          group[index].enabled = !option.selected;\n        });\n\n        this.imagesInitiatorSelections[index].forEach((image) => {\n          image.selected = luns.includes(image.name);\n        });\n      }\n    });\n  }\n\n  removeGroupInitiator(group: CdFormGroup, member_index: number, group_index: number) {\n    const name = group.getValue('members')[member_index];\n    group.getValue('members').splice(member_index, 1);\n\n    this.onGroupMemberSelection({ option: new SelectOption(false, name, '') }, group_index);\n  }\n\n  removeGroupDisk(group: CdFormGroup, disk_index: number, group_index: number) {\n    const name = group.getValue('disks')[disk_index];\n    group.getValue('disks').splice(disk_index, 1);\n\n    this.groupDiskSelections[group_index].forEach((value) => {\n      if (value.name === name) {\n        value.selected = false;\n      }\n    });\n    this.groupDiskSelections[group_index] = [...this.groupDiskSelections[group_index]];\n  }\n\n  submit() {\n    const formValue = _.cloneDeep(this.targetForm.value);\n\n    const request: Record<string, any> = {\n      target_iqn: this.targetForm.getValue('target_iqn'),\n      target_controls: this.targetForm.getValue('target_controls'),\n      acl_enabled: this.targetForm.getValue('acl_enabled'),\n      portals: [],\n      disks: [],\n      clients: [],\n      groups: []\n    };\n\n    // Target level authentication was introduced in ceph-iscsi config v11\n    if (this.cephIscsiConfigVersion > 10) {\n      const targetAuth: CdFormGroup = this.targetForm.get('auth') as CdFormGroup;\n      if (!targetAuth.getValue('user')) {\n        targetAuth.get('user').setValue('');\n      }\n      if (!targetAuth.getValue('password')) {\n        targetAuth.get('password').setValue('');\n      }\n      if (!targetAuth.getValue('mutual_user')) {\n        targetAuth.get('mutual_user').setValue('');\n      }\n      if (!targetAuth.getValue('mutual_password')) {\n        targetAuth.get('mutual_password').setValue('');\n      }\n      const acl_enabled = this.targetForm.getValue('acl_enabled');\n      request['auth'] = {\n        user: acl_enabled ? '' : targetAuth.getValue('user'),\n        password: acl_enabled ? '' : targetAuth.getValue('password'),\n        mutual_user: acl_enabled ? '' : targetAuth.getValue('mutual_user'),\n        mutual_password: acl_enabled ? '' : targetAuth.getValue('mutual_password')\n      };\n    }\n\n    // Disks\n    formValue.disks.forEach((disk: string) => {\n      const imageSplit = disk.split('/');\n      const backstore = this.imagesSettings[disk].backstore;\n      request.disks.push({\n        pool: imageSplit[0],\n        image: imageSplit[1],\n        backstore: backstore,\n        controls: this.imagesSettings[disk][backstore],\n        lun: this.imagesSettings[disk]['lun'],\n        wwn: this.imagesSettings[disk]['wwn']\n      });\n    });\n\n    // Portals\n    formValue.portals.forEach((portal: string) => {\n      const index = portal.indexOf(':');\n      request.portals.push({\n        host: portal.substring(0, index),\n        ip: portal.substring(index + 1)\n      });\n    });\n\n    // Clients\n    if (request.acl_enabled) {\n      formValue.initiators.forEach((initiator: Record<string, any>) => {\n        if (!initiator.auth.user) {\n          initiator.auth.user = '';\n        }\n        if (!initiator.auth.password) {\n          initiator.auth.password = '';\n        }\n        if (!initiator.auth.mutual_user) {\n          initiator.auth.mutual_user = '';\n        }\n        if (!initiator.auth.mutual_password) {\n          initiator.auth.mutual_password = '';\n        }\n        delete initiator.cdIsInGroup;\n\n        const newLuns: any[] = [];\n        initiator.luns.forEach((lun: string) => {\n          const imageSplit = lun.split('/');\n          newLuns.push({\n            pool: imageSplit[0],\n            image: imageSplit[1]\n          });\n        });\n\n        initiator.luns = newLuns;\n      });\n      request.clients = formValue.initiators;\n    }\n\n    // Groups\n    if (request.acl_enabled) {\n      formValue.groups.forEach((group: Record<string, any>) => {\n        const newDisks: any[] = [];\n        group.disks.forEach((disk: string) => {\n          const imageSplit = disk.split('/');\n          newDisks.push({\n            pool: imageSplit[0],\n            image: imageSplit[1]\n          });\n        });\n\n        group.disks = newDisks;\n      });\n      request.groups = formValue.groups;\n    }\n\n    let wrapTask;\n    if (this.isEdit) {\n      request['new_target_iqn'] = request.target_iqn;\n      request.target_iqn = this.target_iqn;\n      wrapTask = this.taskWrapper.wrapTaskAroundCall({\n        task: new FinishedTask('iscsi/target/edit', {\n          target_iqn: request.target_iqn\n        }),\n        call: this.iscsiService.updateTarget(this.target_iqn, request)\n      });\n    } else {\n      wrapTask = this.taskWrapper.wrapTaskAroundCall({\n        task: new FinishedTask('iscsi/target/create', {\n          target_iqn: request.target_iqn\n        }),\n        call: this.iscsiService.createTarget(request)\n      });\n    }\n\n    wrapTask.subscribe({\n      error: () => {\n        this.targetForm.setErrors({ cdSubmitButton: true });\n      },\n      complete: () => this.router.navigate(['/block/iscsi/targets'])\n    });\n  }\n\n  targetSettingsModal() {\n    const initialState = {\n      target_controls: this.targetForm.get('target_controls'),\n      target_default_controls: this.target_default_controls,\n      target_controls_limits: this.target_controls_limits\n    };\n\n    this.modalRef = this.modalService.show(IscsiTargetIqnSettingsModalComponent, initialState);\n  }\n\n  imageSettingsModal(image: string) {\n    const initialState = {\n      imagesSettings: this.imagesSettings,\n      image: image,\n      api_version: this.api_version,\n      disk_default_controls: this.disk_default_controls,\n      disk_controls_limits: this.disk_controls_limits,\n      backstores: this.getValidBackstores(this.getImageById(image)),\n      control: this.targetForm.get('disks')\n    };\n\n    this.modalRef = this.modalService.show(IscsiTargetImageSettingsModalComponent, initialState);\n  }\n\n  validFeatures(image: Record<string, any>, backstore: string) {\n    const imageFeatures = image.features;\n    const requiredFeatures = this.required_rbd_features[backstore];\n    const unsupportedFeatures = this.unsupported_rbd_features[backstore];\n    // eslint-disable-next-line no-bitwise\n    const validRequiredFeatures = (imageFeatures & requiredFeatures) === requiredFeatures;\n    // eslint-disable-next-line no-bitwise\n    const validSupportedFeatures = (imageFeatures & unsupportedFeatures) === 0;\n    return validRequiredFeatures && validSupportedFeatures;\n  }\n\n  getImageById(imageId: string) {\n    return this.imagesAll.find((image) => imageId === `${image.pool_name}/${image.name}`);\n  }\n\n  getValidBackstores(image: object) {\n    return this.backstores.filter((backstore) => this.validFeatures(image, backstore));\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form name=\"targetForm\"\n        #formDir=\"ngForm\"\n        [formGroup]=\"targetForm\"\n        novalidate>\n    <div class=\"card\">\n      <div i18n=\"form title\"\n           class=\"card-header\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n\n      <div class=\"card-body\">\n        <!-- Target IQN -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"target_iqn\"\n                 i18n>Target IQN</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input class=\"form-control\"\n                     type=\"text\"\n                     id=\"target_iqn\"\n                     name=\"target_iqn\"\n                     formControlName=\"target_iqn\"\n                     cdTrim />\n              <button class=\"btn btn-light\"\n                      id=\"ecp-info-button\"\n                      type=\"button\"\n                      (click)=\"targetSettingsModal()\">\n                <i [ngClass]=\"[icons.deepCheck]\"\n                   aria-hidden=\"true\"></i>\n              </button>\n            </div>\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"targetForm.showError('target_iqn', formDir, 'required')\"\n                  i18n>This field is required.</span>\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"targetForm.showError('target_iqn', formDir, 'pattern')\"\n                  i18n>IQN has wrong pattern.</span>\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"targetForm.showError('target_iqn', formDir, 'iqn')\">\n              <ng-container i18n>An IQN has the following notation\n                'iqn.$year-$month.$reversedAddress:$definedName'</ng-container>\n              <br>\n              <ng-container i18n>For example: iqn.2016-06.org.dashboard:storage:disk.sn-a8675309</ng-container>\n              <br>\n              <a target=\"_blank\"\n                 href=\"https://en.wikipedia.org/wiki/ISCSI#Addressing\"\n                 i18n>More information</a>\n            </span>\n\n            <span class=\"form-text text-muted\"\n                  *ngIf=\"hasAdvancedSettings(targetForm.getValue('target_controls'))\"\n                  i18n>This target has modified advanced settings.</span>\n            <hr />\n          </div>\n        </div>\n\n        <!-- Portals -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"portals\"\n                 i18n>Portals</label>\n          <div class=\"cd-col-form-input\">\n\n            <ng-container *ngFor=\"let portal of portals.value; let i = index\">\n              <div class=\"input-group cd-mb\">\n                <input class=\"cd-form-control\"\n                       type=\"text\"\n                       [value]=\"portal\"\n                       disabled />\n                <button class=\"btn btn-light\"\n                        type=\"button\"\n                        (click)=\"removePortal(i, portal)\">\n                  <i [ngClass]=\"[icons.destroy]\"\n                     aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </ng-container>\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <cd-select [data]=\"portals.value\"\n                           [options]=\"portalsSelections\"\n                           [messages]=\"messages.portals\"\n                           (selection)=\"onPortalSelection($event)\"\n                           elemClass=\"btn btn-light float-end\">\n                  <i [ngClass]=\"[icons.add]\"></i>\n                  <ng-container i18n>Add portal</ng-container>\n                </cd-select>\n              </div>\n            </div>\n\n            <input class=\"form-control\"\n                   type=\"hidden\"\n                   id=\"portals\"\n                   name=\"portals\"\n                   formControlName=\"portals\" />\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"targetForm.showError('portals', formDir, 'minGateways')\"\n                  i18n>At least {{ minimum_gateways }} gateways are required.</span>\n\n            <hr />\n          </div>\n        </div>\n\n        <!-- Images -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"disks\"\n                 i18n>Images</label>\n          <div class=\"cd-col-form-input\">\n            <ng-container *ngFor=\"let image of targetForm.getValue('disks'); let i = index\">\n              <div class=\"input-group cd-mb\">\n                <input class=\"cd-form-control\"\n                       type=\"text\"\n                       [value]=\"image\"\n                       disabled />\n                <div class=\"input-group-text\"\n                     *ngIf=\"api_version >= 1\">lun: {{ imagesSettings[image]['lun'] }}</div>\n                <button class=\"btn btn-light\"\n                        type=\"button\"\n                        (click)=\"imageSettingsModal(image)\">\n                  <i [ngClass]=\"[icons.deepCheck]\"\n                     aria-hidden=\"true\"></i>\n                </button>\n                <button class=\"btn btn-light\"\n                        type=\"button\"\n                        (click)=\"removeImage(i, image)\">\n                  <i [ngClass]=\"[icons.destroy]\"\n                     aria-hidden=\"true\"></i>\n                </button>\n\n              </div>\n\n              <span class=\"form-text text-muted\">\n                <ng-container *ngIf=\"backstores.length > 1\"\n                              i18n>Backstore: {{ imagesSettings[image].backstore | iscsiBackstore }}.&nbsp;</ng-container>\n\n                <ng-container *ngIf=\"hasAdvancedSettings(imagesSettings[image][imagesSettings[image].backstore])\"\n                              i18n>This image has modified settings.</ng-container>\n              </span>\n            </ng-container>\n\n            <input class=\"form-control\"\n                   type=\"hidden\"\n                   id=\"disks\"\n                   name=\"disks\"\n                   formControlName=\"disks\" />\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"targetForm.showError('disks', formDir, 'dupLunId')\"\n                  i18n>Duplicated LUN numbers.</span>\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"targetForm.showError('disks', formDir, 'dupWwn')\"\n                  i18n>Duplicated WWN.</span>\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <cd-select [data]=\"disks.value\"\n                           [options]=\"imagesSelections\"\n                           [messages]=\"messages.images\"\n                           (selection)=\"onImageSelection($event)\"\n                           elemClass=\"btn btn-light float-end\">\n                  <i [ngClass]=\"[icons.add]\"></i>\n                  <ng-container i18n>Add image</ng-container>\n                </cd-select>\n              </div>\n            </div>\n\n            <hr />\n          </div>\n        </div>\n\n        <!-- acl_enabled -->\n        <div class=\"form-group row\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     formControlName=\"acl_enabled\"\n                     name=\"acl_enabled\"\n                     id=\"acl_enabled\">\n              <label for=\"acl_enabled\"\n                     class=\"custom-control-label\"\n                     i18n>ACL authentication</label>\n            </div>\n\n            <hr />\n          </div>\n        </div>\n\n        <!-- Target level authentication was introduced in ceph-iscsi config v11 -->\n        <div formGroupName=\"auth\"\n             *ngIf=\"cephIscsiConfigVersion > 10 && !targetForm.getValue('acl_enabled')\">\n\n          <!-- Target user -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"target_user\">\n              <ng-container i18n>User</ng-container>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input class=\"form-control\"\n                     type=\"text\"\n                     autocomplete=\"off\"\n                     id=\"target_user\"\n                     name=\"target_user\"\n                     formControlName=\"user\" />\n\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"targetForm.showError('user', formDir, 'required')\"\n                    i18n>This field is required.</span>\n\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"targetForm.showError('user', formDir, 'pattern')\"\n                    i18n>User names must have a length of 8 to 64 characters and can contain\n                alphanumeric characters, '.', '@', '-', '_' or ':'.</span>\n            </div>\n          </div>\n\n          <!-- Target password -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"target_password\">\n              <ng-container i18n>Password</ng-container>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <div class=\"input-group\">\n                <input class=\"form-control\"\n                       type=\"password\"\n                       autocomplete=\"new-password\"\n                       id=\"target_password\"\n                       name=\"target_password\"\n                       formControlName=\"password\" />\n                <button type=\"button\"\n                        class=\"btn btn-light\"\n                        cdPasswordButton=\"target_password\">\n                </button>\n                <cd-copy-2-clipboard-button source=\"target_password\">\n                </cd-copy-2-clipboard-button>\n              </div>\n\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"targetForm.showError('password', formDir, 'required')\"\n                    i18n>This field is required.</span>\n\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"targetForm.showError('password', formDir, 'pattern')\"\n                    i18n>Passwords must have a length of 12 to 16 characters and can contain\n                alphanumeric characters, '@', '-', '_' or '/'.</span>\n            </div>\n          </div>\n\n          <!-- Target mutual_user -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"target_mutual_user\">\n              <ng-container i18n>Mutual User</ng-container>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input class=\"form-control\"\n                     type=\"text\"\n                     autocomplete=\"off\"\n                     id=\"target_mutual_user\"\n                     name=\"target_mutual_user\"\n                     formControlName=\"mutual_user\" />\n\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"targetForm.showError('mutual_user', formDir, 'required')\"\n                    i18n>This field is required.</span>\n\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"targetForm.showError('mutual_user', formDir, 'pattern')\"\n                    i18n>User names must have a length of 8 to 64 characters and can contain\n                alphanumeric characters, '.', '@', '-', '_' or ':'.</span>\n            </div>\n          </div>\n\n          <!-- Target mutual_password -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"target_mutual_password\">\n              <ng-container i18n>Mutual Password</ng-container>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <div class=\"input-group\">\n                <input class=\"form-control\"\n                       type=\"password\"\n                       autocomplete=\"new-password\"\n                       id=\"target_mutual_password\"\n                       name=\"target_mutual_password\"\n                       formControlName=\"mutual_password\" />\n\n                <button type=\"button\"\n                        class=\"btn btn-light\"\n                        cdPasswordButton=\"target_mutual_password\">\n                </button>\n                <cd-copy-2-clipboard-button source=\"target_mutual_password\">\n                </cd-copy-2-clipboard-button>\n              </div>\n\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"targetForm.showError('mutual_password', formDir, 'required')\"\n                    i18n>This field is required.</span>\n\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"targetForm.showError('mutual_password', formDir, 'pattern')\"\n                    i18n>Passwords must have a length of 12 to 16 characters and can contain\n                alphanumeric characters, '@', '-', '_' or '/'.</span>\n            </div>\n          </div>\n\n        </div>\n\n        <!-- Initiators -->\n        <div class=\"form-group row\"\n             *ngIf=\"targetForm.getValue('acl_enabled')\">\n          <label class=\"cd-col-form-label\"\n                 for=\"initiators\"\n                 i18n>Initiators</label>\n          <div class=\"cd-col-form-input\"\n               formArrayName=\"initiators\">\n            <div class=\"card mb-2\"\n                 *ngFor=\"let initiator of initiators.controls; let ii = index\"\n                 [formGroup]=\"initiator\">\n              <div class=\"card-header\">\n                <ng-container i18n>Initiator</ng-container>: {{ initiator.getValue('client_iqn') }}\n                <button type=\"button\"\n                        class=\"btn-close float-end\"\n                        (click)=\"removeInitiator(ii)\">\n                </button>\n              </div>\n              <div class=\"card-body\">\n                <!-- Initiator: Name -->\n                <div class=\"form-group row\">\n                  <label class=\"cd-col-form-label required\"\n                         for=\"client_iqn\"\n                         i18n>Client IQN</label>\n                  <div class=\"cd-col-form-input\">\n                    <input class=\"form-control\"\n                           type=\"text\"\n                           formControlName=\"client_iqn\"\n                           cdTrim\n                           (blur)=\"updatedInitiatorSelector()\">\n\n                    <span class=\"invalid-feedback\"\n                          *ngIf=\"initiator.showError('client_iqn', formDir, 'notUnique')\"\n                          i18n>Initiator IQN needs to be unique.</span>\n\n                    <span class=\"invalid-feedback\"\n                          *ngIf=\"initiator.showError('client_iqn', formDir, 'required')\"\n                          i18n>This field is required.</span>\n\n                    <span class=\"invalid-feedback\"\n                          *ngIf=\"initiator.showError('client_iqn', formDir, 'pattern')\"\n                          i18n>IQN has wrong pattern.</span>\n                  </div>\n                </div>\n\n                <ng-container formGroupName=\"auth\">\n                  <!-- Initiator: User -->\n                  <div class=\"form-group row\">\n                    <label class=\"cd-col-form-label\"\n                           for=\"user\"\n                           i18n>User</label>\n                    <div class=\"cd-col-form-input\">\n                      <input [id]=\"'user' + ii\"\n                             class=\"form-control\"\n                             formControlName=\"user\"\n                             autocomplete=\"off\"\n                             type=\"text\">\n                      <span class=\"invalid-feedback\"\n                            *ngIf=\"initiator.showError('user', formDir, 'required')\"\n                            i18n>This field is required.</span>\n\n                      <span class=\"invalid-feedback\"\n                            *ngIf=\"initiator.showError('user', formDir, 'pattern')\"\n                            i18n>User names must have a length of 8 to 64 characters and can contain\n                        alphanumeric characters, '.', '@', '-', '_' or ':'.</span>\n                    </div>\n                  </div>\n\n                  <!-- Initiator: Password -->\n                  <div class=\"form-group row\">\n                    <label class=\"cd-col-form-label\"\n                           for=\"password\"\n                           i18n>Password</label>\n                    <div class=\"cd-col-form-input\">\n                      <div class=\"input-group\">\n                        <input [id]=\"'password' + ii\"\n                               class=\"form-control\"\n                               formControlName=\"password\"\n                               autocomplete=\"new-password\"\n                               type=\"password\">\n\n                        <button type=\"button\"\n                                class=\"btn btn-light\"\n                                [cdPasswordButton]=\"'password' + ii\">\n                        </button>\n                        <cd-copy-2-clipboard-button [source]=\"'password' + ii\">\n                        </cd-copy-2-clipboard-button>\n                      </div>\n                      <span class=\"invalid-feedback\"\n                            *ngIf=\"initiator.showError('password', formDir, 'required')\"\n                            i18n>This field is required.</span>\n\n                      <span class=\"invalid-feedback\"\n                            *ngIf=\"initiator.showError('password', formDir, 'pattern')\"\n                            i18n>Passwords must have a length of 12 to 16 characters and can contain\n                        alphanumeric characters, '@', '-', '_' or '/'.</span>\n                    </div>\n                  </div>\n\n\n                  <!-- Initiator: mutual_user -->\n                  <div class=\"form-group row\">\n                    <label class=\"cd-col-form-label\"\n                           for=\"mutual_user\">\n                      <ng-container i18n>Mutual User</ng-container>\n                    </label>\n                    <div class=\"cd-col-form-input\">\n                      <input [id]=\"'mutual_user' + ii\"\n                             class=\"form-control\"\n                             formControlName=\"mutual_user\"\n                             autocomplete=\"off\"\n                             type=\"text\">\n\n                      <span class=\"invalid-feedback\"\n                            *ngIf=\"initiator.showError('mutual_user', formDir, 'required')\"\n                            i18n>This field is required.</span>\n\n                      <span class=\"invalid-feedback\"\n                            *ngIf=\"initiator.showError('mutual_user', formDir, 'pattern')\"\n                            i18n>User names must have a length of 8 to 64 characters and can contain\n                        alphanumeric characters, '.', '@', '-', '_' or ':'.</span>\n                    </div>\n                  </div>\n\n                  <!-- Initiator: mutual_password -->\n                  <div class=\"form-group row\">\n                    <label class=\"cd-col-form-label\"\n                           for=\"mutual_password\"\n                           i18n>Mutual Password</label>\n                    <div class=\"cd-col-form-input\">\n                      <div class=\"input-group\">\n                        <input [id]=\"'mutual_password' + ii\"\n                               class=\"form-control\"\n                               formControlName=\"mutual_password\"\n                               autocomplete=\"new-password\"\n                               type=\"password\">\n\n                        <button type=\"button\"\n                                class=\"btn btn-light\"\n                                [cdPasswordButton]=\"'mutual_password' + ii\">\n                        </button>\n                        <cd-copy-2-clipboard-button [source]=\"'mutual_password' + ii\">\n                        </cd-copy-2-clipboard-button>\n                      </div>\n                      <span class=\"invalid-feedback\"\n                            *ngIf=\"initiator.showError('mutual_password', formDir, 'required')\"\n                            i18n>This field is required.</span>\n\n                      <span class=\"invalid-feedback\"\n                            *ngIf=\"initiator.showError('mutual_password', formDir, 'pattern')\"\n                            i18n>Passwords must have a length of 12 to 16 characters and can contain\n                        alphanumeric characters, '@', '-', '_' or '/'.</span>\n                    </div>\n                  </div>\n                </ng-container>\n\n                <!-- Initiator: Images -->\n                <div class=\"form-group row\">\n                  <label class=\"cd-col-form-label\"\n                         for=\"luns\"\n                         i18n>Images</label>\n                  <div class=\"cd-col-form-input\">\n                    <ng-container *ngFor=\"let image of initiator.getValue('luns'); let li = index\">\n                      <div class=\"input-group cd-mb\">\n                        <input class=\"cd-form-control\"\n                               type=\"text\"\n                               [value]=\"image\"\n                               disabled />\n                        <button class=\"btn btn-light\"\n                                type=\"button\"\n                                (click)=\"removeInitiatorImage(initiator, li, ii, image)\">\n                          <i [ngClass]=\"[icons.destroy]\"\n                             aria-hidden=\"true\"></i>\n                        </button>\n                      </div>\n                    </ng-container>\n\n                    <span *ngIf=\"initiator.getValue('cdIsInGroup')\"\n                          i18n>Initiator belongs to a group. Images will be configure in the group.</span>\n\n                    <div class=\"row\"\n                         *ngIf=\"!initiator.getValue('cdIsInGroup')\">\n                      <div class=\"col-md-12\">\n                        <cd-select [data]=\"initiator.getValue('luns')\"\n                                   [options]=\"imagesInitiatorSelections[ii]\"\n                                   [messages]=\"messages.initiatorImage\"\n                                   elemClass=\"btn btn-light float-end\">\n                          <i [ngClass]=\"[icons.add]\"></i>\n                          <ng-container i18n>Add image</ng-container>\n                        </cd-select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <span class=\"form-text text-muted\"\n                      *ngIf=\"initiators.controls.length === 0\"\n                      i18n>No items added.</span>\n\n                <button (click)=\"addInitiator(); false\"\n                        class=\"btn btn-light float-end\">\n                  <i [ngClass]=\"[icons.add]\"></i>\n                  <ng-container i18n>Add initiator</ng-container>\n                </button>\n              </div>\n            </div>\n\n            <hr />\n          </div>\n        </div>\n\n        <!-- Groups -->\n        <div class=\"form-group row\"\n             *ngIf=\"targetForm.getValue('acl_enabled')\">\n          <label class=\"cd-col-form-label\"\n                 for=\"initiators\"\n                 i18n>Groups</label>\n          <div class=\"cd-col-form-input\"\n               formArrayName=\"groups\">\n            <div class=\"card mb-2\"\n                 *ngFor=\"let group of groups.controls; let gi = index\"\n                 [formGroup]=\"group\">\n              <div class=\"card-header\">\n                <ng-container i18n>Group</ng-container>: {{ group.getValue('group_id') }}\n                <button type=\"button\"\n                        class=\"btn-close float-end\"\n                        (click)=\"removeGroup(gi)\">\n                </button>\n              </div>\n              <div class=\"card-body\">\n                <!-- Group: group_id -->\n                <div class=\"form-group row\">\n                  <label class=\"cd-col-form-label required\"\n                         for=\"group_id\"\n                         i18n>Name</label>\n                  <div class=\"cd-col-form-input\">\n                    <input class=\"form-control\"\n                           type=\"text\"\n                           formControlName=\"group_id\">\n                  </div>\n                </div>\n\n                <!-- Group: members -->\n                <div class=\"form-group row\">\n                  <label class=\"cd-col-form-label\"\n                         for=\"members\">\n                    <ng-container i18n>Initiators</ng-container>\n                  </label>\n                  <div class=\"cd-col-form-input\">\n                    <ng-container *ngFor=\"let member of group.getValue('members'); let i = index\">\n                      <div class=\"input-group cd-mb\">\n                        <input class=\"cd-form-control\"\n                               type=\"text\"\n                               [value]=\"member\"\n                               disabled />\n                        <button class=\"btn btn-light\"\n                                type=\"button\"\n                                (click)=\"removeGroupInitiator(group, i, gi)\">\n                          <i [ngClass]=\"[icons.destroy]\"\n                             aria-hidden=\"true\"></i>\n                        </button>\n                      </div>\n                    </ng-container>\n\n                    <div class=\"row\">\n                      <div class=\"col-md-12\">\n                        <cd-select [data]=\"group.getValue('members')\"\n                                   [options]=\"groupMembersSelections[gi]\"\n                                   [messages]=\"messages.groupInitiator\"\n                                   (selection)=\"onGroupMemberSelection($event, gi)\"\n                                   elemClass=\"btn btn-light float-end\">\n                          <i [ngClass]=\"[icons.add]\"></i>\n                          <ng-container i18n>Add initiator</ng-container>\n                        </cd-select>\n                      </div>\n                    </div>\n\n                    <hr />\n                  </div>\n                </div>\n\n                <!-- Group: disks -->\n                <div class=\"form-group row\">\n                  <label class=\"cd-col-form-label\"\n                         for=\"disks\">\n                    <ng-container i18n>Images</ng-container>\n                  </label>\n                  <div class=\"cd-col-form-input\">\n                    <ng-container *ngFor=\"let disk of group.getValue('disks'); let i = index\">\n                      <div class=\"input-group cd-mb\">\n                        <input class=\"cd-form-control\"\n                               type=\"text\"\n                               [value]=\"disk\"\n                               disabled />\n                        <button class=\"btn btn-light\"\n                                type=\"button\"\n                                (click)=\"removeGroupDisk(group, i, gi)\">\n                          <i [ngClass]=\"[icons.destroy]\"\n                             aria-hidden=\"true\"></i>\n                        </button>\n                      </div>\n                    </ng-container>\n\n                    <div class=\"row\">\n                      <div class=\"col-md-12\">\n                        <cd-select [data]=\"group.getValue('disks')\"\n                                   [options]=\"groupDiskSelections[gi]\"\n                                   [messages]=\"messages.initiatorImage\"\n                                   elemClass=\"btn btn-light float-end\">\n                          <i [ngClass]=\"[icons.add]\"></i>\n                          <ng-container i18n>Add image</ng-container>\n                        </cd-select>\n                      </div>\n                    </div>\n\n                    <hr />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <span class=\"form-text text-muted\"\n                      *ngIf=\"groups.controls.length === 0\"\n                      i18n>No items added.</span>\n\n                <button (click)=\"addGroup(); false\"\n                        class=\"btn btn-light float-end\">\n                  <i [ngClass]=\"[icons.add]\"></i>\n                  <ng-container i18n>Add group</ng-container>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                              [form]=\"targetForm\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { IscsiService } from '~/app/shared/api/iscsi.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\n\n@Component({\n  selector: 'cd-iscsi-target-image-settings-modal',\n  templateUrl: './iscsi-target-image-settings-modal.component.html',\n  styleUrls: ['./iscsi-target-image-settings-modal.component.scss']\n})\nexport class IscsiTargetImageSettingsModalComponent implements OnInit {\n  image: string;\n  imagesSettings: any;\n  api_version: number;\n  disk_default_controls: any;\n  disk_controls_limits: any;\n  backstores: any;\n  control: AbstractControl;\n\n  settingsForm: CdFormGroup;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public iscsiService: IscsiService,\n    public actionLabels: ActionLabelsI18n\n  ) {}\n\n  ngOnInit() {\n    const fg: Record<string, FormControl> = {\n      backstore: new FormControl(this.imagesSettings[this.image]['backstore']),\n      lun: new FormControl(this.imagesSettings[this.image]['lun']),\n      wwn: new FormControl(this.imagesSettings[this.image]['wwn'])\n    };\n    _.forEach(this.backstores, (backstore) => {\n      const model = this.imagesSettings[this.image][backstore] || {};\n      _.forIn(this.disk_default_controls[backstore], (_value, key) => {\n        fg[key] = new FormControl(model[key]);\n      });\n    });\n\n    this.settingsForm = new CdFormGroup(fg);\n  }\n\n  getDiskControlLimits(backstore: string, setting: string) {\n    if (this.disk_controls_limits) {\n      return this.disk_controls_limits[backstore][setting];\n    }\n    // backward compatibility\n    return { type: 'int' };\n  }\n\n  save() {\n    const backstore = this.settingsForm.controls['backstore'].value;\n    const lun = this.settingsForm.controls['lun'].value;\n    const wwn = this.settingsForm.controls['wwn'].value;\n    const settings = {};\n    _.forIn(this.settingsForm.controls, (control, key) => {\n      if (\n        !(control.value === '' || control.value === null) &&\n        key in this.disk_default_controls[this.settingsForm.value['backstore']]\n      ) {\n        settings[key] = control.value;\n        // If one setting belongs to multiple backstores, we have to update it in all backstores\n        _.forEach(this.backstores, (currentBackstore) => {\n          if (currentBackstore !== backstore) {\n            const model = this.imagesSettings[this.image][currentBackstore] || {};\n            if (key in model) {\n              this.imagesSettings[this.image][currentBackstore][key] = control.value;\n            }\n          }\n        });\n      }\n    });\n    this.imagesSettings[this.image]['backstore'] = backstore;\n    this.imagesSettings[this.image]['lun'] = lun;\n    this.imagesSettings[this.image]['wwn'] = wwn;\n    this.imagesSettings[this.image][backstore] = settings;\n    this.imagesSettings = { ...this.imagesSettings };\n    this.control.updateValueAndValidity({ emitEvent: false });\n    this.activeModal.close();\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\">\n    <ng-container i18n>Configure</ng-container>&nbsp;\n    <small>{{ image }}</small>\n  </ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"settingsForm\"\n          class=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"settingsForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p class=\"alert-warning\"\n           i18n>Changing these parameters from their default values is usually not necessary.</p>\n\n        <span *ngIf=\"api_version >= 1\">\n          <legend class=\"cd-header\"\n                  i18n>Identifier</legend>\n          <!-- LUN -->\n          <div class=\"form-group row\">\n            <div class=\"col-sm-12\">\n              <label class=\"col-form-label required\"\n                     for=\"lun\"\n                     i18n>lun</label>\n              <input type=\"number\"\n                     class=\"form-control\"\n                     id=\"lun\"\n                     name=\"lun\"\n                     formControlName=\"lun\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"settingsForm.showError('lun', formDir, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n          <!-- WWN -->\n          <div class=\"form-group row\">\n            <div class=\"col-sm-12\">\n              <label class=\"col-form-label\"\n                     for=\"wwn\"\n                     i18n>wwn</label>\n              <input type=\"text\"\n                     class=\"form-control\"\n                     id=\"wwn\"\n                     name=\"wwn\"\n                     formControlName=\"wwn\">\n            </div>\n          </div>\n        </span>\n\n        <legend class=\"cd-header\"\n                i18n>Settings</legend>\n\n        <!-- BACKSTORE -->\n        <div class=\"form-group row\">\n          <div class=\"col-sm-12\">\n            <label class=\"col-form-label\"\n                   i18n>Backstore</label>\n            <select id=\"backstore\"\n                    name=\"backstore\"\n                    class=\"form-select\"\n                    formControlName=\"backstore\">\n              <option *ngFor=\"let bs of backstores\"\n                      [value]=\"bs\">{{ bs | iscsiBackstore }}</option>\n            </select>\n          </div>\n        </div>\n\n        <!-- CONTROLS -->\n        <ng-container *ngFor=\"let bs of backstores\">\n          <ng-container *ngIf=\"settingsForm.value['backstore'] === bs\">\n            <div class=\"form-group row\"\n                 *ngFor=\"let setting of disk_default_controls[bs] | keyvalue\">\n              <div class=\"col-sm-12\">\n                <cd-iscsi-setting [settingsForm]=\"settingsForm\"\n                                  [formDir]=\"formDir\"\n                                  [setting]=\"setting.key\"\n                                  [limits]=\"getDiskControlLimits(bs, setting.key)\"></cd-iscsi-setting>\n              </div>\n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"save()\"\n                              [form]=\"settingsForm\"\n                              [submitText]=\"actionLabels.UPDATE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { IscsiService } from '~/app/shared/api/iscsi.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\n\n@Component({\n  selector: 'cd-iscsi-target-iqn-settings-modal',\n  templateUrl: './iscsi-target-iqn-settings-modal.component.html',\n  styleUrls: ['./iscsi-target-iqn-settings-modal.component.scss']\n})\nexport class IscsiTargetIqnSettingsModalComponent implements OnInit {\n  target_controls: FormControl;\n  target_default_controls: any;\n  target_controls_limits: any;\n\n  settingsForm: CdFormGroup;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public iscsiService: IscsiService,\n    public actionLabels: ActionLabelsI18n\n  ) {}\n\n  ngOnInit() {\n    const fg: Record<string, FormControl> = {};\n    _.forIn(this.target_default_controls, (_value, key) => {\n      fg[key] = new FormControl(this.target_controls.value[key]);\n    });\n\n    this.settingsForm = new CdFormGroup(fg);\n  }\n\n  save() {\n    const settings = {};\n    _.forIn(this.settingsForm.controls, (control, key) => {\n      if (!(control.value === '' || control.value === null)) {\n        settings[key] = control.value;\n      }\n    });\n\n    this.target_controls.setValue(settings);\n    this.activeModal.close();\n  }\n\n  getTargetControlLimits(setting: string) {\n    if (this.target_controls_limits) {\n      return this.target_controls_limits[setting];\n    }\n    // backward compatibility\n    if (['Yes', 'No'].includes(this.target_default_controls[setting])) {\n      return { type: 'bool' };\n    }\n    return { type: 'int' };\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\"\n                i18n>Advanced Settings</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"settingsForm\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"settingsForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p class=\"alert-warning\"\n           i18n>Changing these parameters from their default values is usually not necessary.</p>\n\n        <div class=\"form-group row\"\n             *ngFor=\"let setting of settingsForm.controls | keyvalue\">\n          <div class=\"col-sm-12\">\n            <cd-iscsi-setting [settingsForm]=\"settingsForm\"\n                              [formDir]=\"formDir\"\n                              [setting]=\"setting.key\"\n                              [limits]=\"getTargetControlLimits(setting.key)\"></cd-iscsi-setting>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"save()\"\n                              [form]=\"settingsForm\"\n                              [submitText]=\"actionLabels.UPDATE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { Subscription } from 'rxjs';\n\nimport { IscsiService } from '~/app/shared/api/iscsi.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { Task } from '~/app/shared/models/task';\nimport { JoinPipe } from '~/app/shared/pipes/join.pipe';\nimport { NotAvailablePipe } from '~/app/shared/pipes/not-available.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskListService } from '~/app/shared/services/task-list.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { IscsiTargetDiscoveryModalComponent } from '../iscsi-target-discovery-modal/iscsi-target-discovery-modal.component';\n\n@Component({\n  selector: 'cd-iscsi-target-list',\n  templateUrl: './iscsi-target-list.component.html',\n  styleUrls: ['./iscsi-target-list.component.scss'],\n  providers: [TaskListService]\n})\nexport class IscsiTargetListComponent extends ListWithDetails implements OnInit, OnDestroy {\n  @ViewChild(TableComponent)\n  table: TableComponent;\n\n  available: boolean = undefined;\n  columns: CdTableColumn[];\n  modalRef: NgbModalRef;\n  permission: Permission;\n  selection = new CdTableSelection();\n  cephIscsiConfigVersion: number;\n  settings: any;\n  status: string;\n  summaryDataSubscription: Subscription;\n  tableActions: CdTableAction[];\n  targets: any[] = [];\n  icons = Icons;\n\n  builders = {\n    'iscsi/target/create': (metadata: object) => {\n      return {\n        target_iqn: metadata['target_iqn']\n      };\n    }\n  };\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private iscsiService: IscsiService,\n    private joinPipe: JoinPipe,\n    private taskListService: TaskListService,\n    private notAvailablePipe: NotAvailablePipe,\n    private modalService: ModalService,\n    private taskWrapper: TaskWrapperService,\n    public actionLabels: ActionLabelsI18n,\n    protected ngZone: NgZone\n  ) {\n    super(ngZone);\n    this.permission = this.authStorageService.getPermissions().iscsi;\n\n    this.tableActions = [\n      {\n        permission: 'create',\n        icon: Icons.add,\n        routerLink: () => '/block/iscsi/targets/create',\n        name: this.actionLabels.CREATE\n      },\n      {\n        permission: 'update',\n        icon: Icons.edit,\n        routerLink: () => `/block/iscsi/targets/edit/${this.selection.first().target_iqn}`,\n        name: this.actionLabels.EDIT,\n        disable: () => this.getEditDisableDesc()\n      },\n      {\n        permission: 'delete',\n        icon: Icons.destroy,\n        click: () => this.deleteIscsiTargetModal(),\n        name: this.actionLabels.DELETE,\n        disable: () => this.getDeleteDisableDesc()\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Target`,\n        prop: 'target_iqn',\n        flexGrow: 2,\n        cellTransformation: CellTemplate.executing\n      },\n      {\n        name: $localize`Portals`,\n        prop: 'cdPortals',\n        pipe: this.joinPipe,\n        flexGrow: 2\n      },\n      {\n        name: $localize`Images`,\n        prop: 'cdImages',\n        pipe: this.joinPipe,\n        flexGrow: 2\n      },\n      {\n        name: $localize`# Sessions`,\n        prop: 'info.num_sessions',\n        pipe: this.notAvailablePipe,\n        flexGrow: 1\n      }\n    ];\n\n    this.iscsiService.status().subscribe((result: any) => {\n      this.available = result.available;\n\n      if (!result.available) {\n        this.status = result.message;\n      }\n    });\n  }\n\n  getTargets() {\n    if (this.available) {\n      this.setTableRefreshTimeout();\n      this.iscsiService.version().subscribe((res: any) => {\n        this.cephIscsiConfigVersion = res['ceph_iscsi_config_version'];\n      });\n      this.taskListService.init(\n        () => this.iscsiService.listTargets(),\n        (resp) => this.prepareResponse(resp),\n        (targets) => (this.targets = targets),\n        () => this.onFetchError(),\n        this.taskFilter,\n        this.itemFilter,\n        this.builders\n      );\n\n      this.iscsiService.settings().subscribe((settings: any) => {\n        this.settings = settings;\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.summaryDataSubscription) {\n      this.summaryDataSubscription.unsubscribe();\n    }\n  }\n\n  getEditDisableDesc(): string | boolean {\n    const first = this.selection.first();\n\n    if (first && first?.cdExecuting) {\n      return first.cdExecuting;\n    }\n\n    if (first && _.isUndefined(first?.['info'])) {\n      return $localize`Unavailable gateway(s)`;\n    }\n\n    return !first;\n  }\n\n  getDeleteDisableDesc(): string | boolean {\n    const first = this.selection.first();\n\n    if (first?.cdExecuting) {\n      return first.cdExecuting;\n    }\n\n    if (first && _.isUndefined(first?.['info'])) {\n      return $localize`Unavailable gateway(s)`;\n    }\n\n    if (first && first?.['info']?.['num_sessions']) {\n      return $localize`Target has active sessions`;\n    }\n\n    return !first;\n  }\n\n  prepareResponse(resp: any): any[] {\n    resp.forEach((element: Record<string, any>) => {\n      element.cdPortals = element.portals.map(\n        (portal: Record<string, any>) => `${portal.host}:${portal.ip}`\n      );\n      element.cdImages = element.disks.map(\n        (disk: Record<string, any>) => `${disk.pool}/${disk.image}`\n      );\n    });\n\n    return resp;\n  }\n\n  onFetchError() {\n    this.table.reset(); // Disable loading indicator.\n  }\n\n  itemFilter(entry: Record<string, any>, task: Task) {\n    return entry.target_iqn === task.metadata['target_iqn'];\n  }\n\n  taskFilter(task: Task) {\n    return ['iscsi/target/create', 'iscsi/target/edit', 'iscsi/target/delete'].includes(task.name);\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteIscsiTargetModal() {\n    const target_iqn = this.selection.first().target_iqn;\n\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: $localize`iSCSI target`,\n      itemNames: [target_iqn],\n      submitActionObservable: () =>\n        this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask('iscsi/target/delete', {\n            target_iqn: target_iqn\n          }),\n          call: this.iscsiService.deleteTarget(target_iqn)\n        })\n    });\n  }\n\n  configureDiscoveryAuth() {\n    this.modalService.show(IscsiTargetDiscoveryModalComponent);\n  }\n}\n","<cd-iscsi-tabs></cd-iscsi-tabs>\n\n<cd-alert-panel type=\"info\"\n                *ngIf=\"available === false\"\n                title=\"iSCSI Targets not available\"\n                i18n-title>\n  <ng-container i18n>Please consult the <cd-doc section=\"iscsi\"></cd-doc> on\n    how to configure and enable the iSCSI Targets management functionality.</ng-container>\n\n  <ng-container *ngIf=\"status\">\n    <br>\n    <span i18n>Available information:</span>\n    <pre>{{ status }}</pre>\n  </ng-container>\n</cd-alert-panel>\n\n<cd-table #table\n          *ngIf=\"available === true\"\n          [data]=\"targets\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          identifier=\"target_iqn\"\n          forceIdentifier=\"true\"\n          selectionType=\"single\"\n          [hasDetails]=\"true\"\n          [autoReload]=\"false\"\n          [status]=\"tableStatus\"\n          (fetchData)=\"getTargets()\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\">\n  <div class=\"table-actions btn-toolbar\">\n    <cd-table-actions class=\"btn-group\"\n                      [permission]=\"permission\"\n                      [selection]=\"selection\"\n                      [tableActions]=\"tableActions\">\n    </cd-table-actions>\n\n    <button class=\"btn btn-light\"\n            type=\"button\"\n            (click)=\"configureDiscoveryAuth()\">\n      <i [ngClass]=\"[icons.key]\"\n         aria-hidden=\"true\">\n      </i>\n      <ng-container i18n>Discovery authentication</ng-container>\n    </button>\n  </div>\n\n  <cd-iscsi-target-details cdTableDetail\n                           *ngIf=\"expandedRow\"\n                           [cephIscsiConfigVersion]=\"cephIscsiConfigVersion\"\n                           [selection]=\"expandedRow\"\n                           [settings]=\"settings\"></cd-iscsi-target-details>\n</cd-table>\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { IscsiService } from '~/app/shared/api/iscsi.service';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { DimlessPipe } from '~/app/shared/pipes/dimless.pipe';\nimport { IscsiBackstorePipe } from '~/app/shared/pipes/iscsi-backstore.pipe';\n\n@Component({\n  selector: 'cd-iscsi',\n  templateUrl: './iscsi.component.html',\n  styleUrls: ['./iscsi.component.scss']\n})\nexport class IscsiComponent implements OnInit {\n  @ViewChild('iscsiSparklineTpl', { static: true })\n  iscsiSparklineTpl: TemplateRef<any>;\n  @ViewChild('iscsiPerSecondTpl', { static: true })\n  iscsiPerSecondTpl: TemplateRef<any>;\n  @ViewChild('iscsiRelativeDateTpl', { static: true })\n  iscsiRelativeDateTpl: TemplateRef<any>;\n\n  gateways: any[] = [];\n  gatewaysColumns: any;\n  images: any[] = [];\n  imagesColumns: any;\n\n  constructor(\n    private iscsiService: IscsiService,\n    private dimlessPipe: DimlessPipe,\n    private iscsiBackstorePipe: IscsiBackstorePipe\n  ) {}\n\n  ngOnInit() {\n    this.gatewaysColumns = [\n      {\n        name: $localize`Name`,\n        prop: 'name'\n      },\n      {\n        name: $localize`State`,\n        prop: 'state',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            up: { class: 'badge-success' },\n            down: { class: 'badge-danger' }\n          }\n        }\n      },\n      {\n        name: $localize`# Targets`,\n        prop: 'num_targets'\n      },\n      {\n        name: $localize`# Sessions`,\n        prop: 'num_sessions'\n      }\n    ];\n    this.imagesColumns = [\n      {\n        name: $localize`Pool`,\n        prop: 'pool'\n      },\n      {\n        name: $localize`Image`,\n        prop: 'image'\n      },\n      {\n        name: $localize`Backstore`,\n        prop: 'backstore',\n        pipe: this.iscsiBackstorePipe\n      },\n      {\n        name: $localize`Read Bytes`,\n        prop: 'stats_history.rd_bytes',\n        cellTemplate: this.iscsiSparklineTpl\n      },\n      {\n        name: $localize`Write Bytes`,\n        prop: 'stats_history.wr_bytes',\n        cellTemplate: this.iscsiSparklineTpl\n      },\n      {\n        name: $localize`Read Ops`,\n        prop: 'stats.rd',\n        pipe: this.dimlessPipe,\n        cellTemplate: this.iscsiPerSecondTpl\n      },\n      {\n        name: $localize`Write Ops`,\n        prop: 'stats.wr',\n        pipe: this.dimlessPipe,\n        cellTemplate: this.iscsiPerSecondTpl\n      },\n      {\n        name: $localize`A/O Since`,\n        prop: 'optimized_since',\n        cellTemplate: this.iscsiRelativeDateTpl\n      }\n    ];\n  }\n\n  refresh() {\n    this.iscsiService.overview().subscribe((overview: object) => {\n      this.gateways = overview['gateways'];\n      this.images = overview['images'];\n      this.images.map((image) => {\n        if (image.stats_history) {\n          image.stats_history.rd_bytes = image.stats_history.rd_bytes.map((i: any) => i[1]);\n          image.stats_history.wr_bytes = image.stats_history.wr_bytes.map((i: any) => i[1]);\n        }\n        image.cdIsBinary = true;\n        return image;\n      });\n    });\n  }\n}\n","<cd-iscsi-tabs></cd-iscsi-tabs>\n\n<legend i18n>Gateways</legend>\n<div>\n  <cd-table [data]=\"gateways\"\n            (fetchData)=\"refresh()\"\n            [columns]=\"gatewaysColumns\">\n  </cd-table>\n</div>\n\n<legend i18n>Images</legend>\n<div>\n  <cd-table [data]=\"images\"\n            [columns]=\"imagesColumns\">\n  </cd-table>\n</div>\n\n<ng-template #iscsiSparklineTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <span *ngIf=\"row.backstore === 'user:rbd'\">\n    <cd-sparkline [data]=\"value\"\n                  [isBinary]=\"row.cdIsBinary\"></cd-sparkline>\n  </span>\n  <span *ngIf=\"row.backstore !== 'user:rbd'\"\n        class=\"text-muted\">\n    n/a\n  </span>\n</ng-template>\n\n<ng-template #iscsiPerSecondTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <span *ngIf=\"row.backstore === 'user:rbd'\">\n    {{ value }} /s\n  </span>\n  <span *ngIf=\"row.backstore !== 'user:rbd'\"\n        class=\"text-muted\">\n    n/a\n  </span>\n</ng-template>\n\n<ng-template #iscsiRelativeDateTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <span *ngIf=\"row.backstore === 'user:rbd'\">\n    {{ value | relativeDate | notAvailable }}\n  </span>\n  <span *ngIf=\"row.backstore !== 'user:rbd'\"\n        class=\"text-muted\">\n    n/a\n  </span>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { concat, forkJoin, Subscription } from 'rxjs';\nimport { last, tap } from 'rxjs/operators';\n\nimport { Pool } from '~/app/ceph/pool/pool';\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-bootstrap-create-modal',\n  templateUrl: './bootstrap-create-modal.component.html',\n  styleUrls: ['./bootstrap-create-modal.component.scss']\n})\nexport class BootstrapCreateModalComponent implements OnDestroy, OnInit {\n  siteName: string;\n  pools: any[] = [];\n  token: string;\n\n  subs: Subscription;\n\n  createBootstrapForm: CdFormGroup;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private rbdMirroringService: RbdMirroringService,\n    private taskWrapper: TaskWrapperService\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.createBootstrapForm = new CdFormGroup({\n      siteName: new FormControl('', {\n        validators: [Validators.required]\n      }),\n      pools: new FormGroup(\n        {},\n        {\n          validators: [this.validatePools()]\n        }\n      ),\n      token: new FormControl('', {})\n    });\n  }\n\n  ngOnInit() {\n    this.createBootstrapForm.get('siteName').setValue(this.siteName);\n    this.rbdMirroringService.getSiteName().subscribe((response: any) => {\n      this.createBootstrapForm.get('siteName').setValue(response.site_name);\n    });\n\n    this.subs = this.rbdMirroringService.subscribeSummary((data) => {\n      const pools = data.content_data.pools;\n      this.pools = pools.reduce((acc: any[], pool: Pool) => {\n        acc.push({\n          name: pool['name'],\n          mirror_mode: pool['mirror_mode']\n        });\n        return acc;\n      }, []);\n\n      const poolsControl = this.createBootstrapForm.get('pools') as FormGroup;\n      _.each(this.pools, (pool) => {\n        const poolName = pool['name'];\n        const mirroring_disabled = pool['mirror_mode'] === 'disabled';\n        const control = poolsControl.controls[poolName];\n        if (control) {\n          if (mirroring_disabled && control.disabled) {\n            control.enable();\n          } else if (!mirroring_disabled && control.enabled) {\n            control.disable();\n            control.setValue(true);\n          }\n        } else {\n          poolsControl.addControl(\n            poolName,\n            new FormControl({ value: !mirroring_disabled, disabled: !mirroring_disabled })\n          );\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subs) {\n      this.subs.unsubscribe();\n    }\n  }\n\n  validatePools(): ValidatorFn {\n    return (poolsControl: FormGroup): { [key: string]: any } => {\n      let checkedCount = 0;\n      _.each(poolsControl.controls, (control) => {\n        if (control.value === true) {\n          ++checkedCount;\n        }\n      });\n\n      if (checkedCount > 0) {\n        return null;\n      }\n\n      return { requirePool: true };\n    };\n  }\n\n  generate() {\n    this.createBootstrapForm.get('token').setValue('');\n\n    let bootstrapPoolName = '';\n    const poolNames: string[] = [];\n    const poolsControl = this.createBootstrapForm.get('pools') as FormGroup;\n    _.each(poolsControl.controls, (control, poolName) => {\n      if (control.value === true) {\n        bootstrapPoolName = poolName;\n        if (!control.disabled) {\n          poolNames.push(poolName);\n        }\n      }\n    });\n\n    const poolModeRequest = {\n      mirror_mode: 'image'\n    };\n\n    const apiActionsObs = concat(\n      this.rbdMirroringService.setSiteName(this.createBootstrapForm.getValue('siteName')),\n      forkJoin(\n        poolNames.map((poolName) => this.rbdMirroringService.updatePool(poolName, poolModeRequest))\n      ),\n      this.rbdMirroringService\n        .createBootstrapToken(bootstrapPoolName)\n        .pipe(tap((data: any) => this.createBootstrapForm.get('token').setValue(data['token'])))\n    ).pipe(last());\n\n    const finishHandler = () => {\n      this.rbdMirroringService.refresh();\n      this.createBootstrapForm.setErrors({ cdSubmitButton: true });\n    };\n\n    const taskObs = this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/mirroring/bootstrap/create', {}),\n      call: apiActionsObs\n    });\n    taskObs.subscribe({ error: finishHandler, complete: finishHandler });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n\n                class=\"modal-title\">Create Bootstrap Token</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"createBootstrapForm\"\n          class=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"createBootstrapForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p>\n          <ng-container i18n>To create a bootstrap token which can be imported\n          by a peer site cluster, provide the local site's name, select\n          which pools will have mirroring enabled, and click&nbsp;\n          <kbd>Generate</kbd>.</ng-container>\n        </p>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label required\"\n                 for=\"siteName\"\n                 i18n>Site Name</label>\n          <input class=\"form-control\"\n                 type=\"text\"\n                 placeholder=\"Name...\"\n                 i18n-placeholder\n                 id=\"siteName\"\n                 name=\"siteName\"\n                 formControlName=\"siteName\"\n                 autofocus>\n          <span *ngIf=\"createBootstrapForm.showError('siteName', formDir, 'required')\"\n                class=\"invalid-feedback\"\n                i18n>This field is required.</span>\n        </div>\n\n        <div class=\"form-group\"\n             formGroupName=\"pools\">\n          <label class=\"col-form-label required\"\n                 for=\"pools\"\n                 i18n>Pools</label>\n          <div class=\"custom-control custom-checkbox\"\n               *ngFor=\"let pool of pools\">\n            <input type=\"checkbox\"\n                   class=\"custom-control-input\"\n                   id=\"{{ pool.name }}\"\n                   name=\"{{ pool.name }}\"\n                   formControlName=\"{{ pool.name }}\">\n            <label class=\"custom-control-label\"\n                   for=\"{{ pool.name }}\">{{ pool.name }}</label>\n          </div>\n          <span *ngIf=\"createBootstrapForm.showError('pools', formDir, 'requirePool')\"\n                class=\"invalid-feedback\"\n                i18n>At least one pool is required.</span>\n        </div>\n\n        <cd-submit-button class=\"mb-4 float-end\"\n                          i18n\n                          [form]=\"createBootstrapForm\"\n                          (submitAction)=\"generate()\">Generate</cd-submit-button>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label\"\n                 for=\"token\">\n            <span i18n>Token</span>\n          </label>\n          <textarea class=\"form-control resize-vertical\"\n                    placeholder=\"Generated token...\"\n                    i18n-placeholder\n                    id=\"token\"\n                    formControlName=\"token\"\n                    readonly>\n          </textarea>\n        </div>\n        <cd-copy-2-clipboard-button class=\"float-end\"\n                                    source=\"token\">\n        </cd-copy-2-clipboard-button>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-back-button (backAction)=\"activeModal.close()\"\n                        name=\"Close\"\n                        i18n-name>\n        </cd-back-button>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { concat, forkJoin, Observable, Subscription } from 'rxjs';\nimport { last } from 'rxjs/operators';\n\nimport { Pool } from '~/app/ceph/pool/pool';\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-bootstrap-import-modal',\n  templateUrl: './bootstrap-import-modal.component.html',\n  styleUrls: ['./bootstrap-import-modal.component.scss']\n})\nexport class BootstrapImportModalComponent implements OnInit, OnDestroy {\n  siteName: string;\n  pools: any[] = [];\n  token: string;\n\n  subs: Subscription;\n\n  importBootstrapForm: CdFormGroup;\n\n  directions: Array<any> = [\n    { key: 'rx-tx', desc: 'Bidirectional' },\n    { key: 'rx', desc: 'Unidirectional (receive-only)' }\n  ];\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private rbdMirroringService: RbdMirroringService,\n    private taskWrapper: TaskWrapperService\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.importBootstrapForm = new CdFormGroup({\n      siteName: new FormControl('', {\n        validators: [Validators.required]\n      }),\n      direction: new FormControl('rx-tx', {}),\n      pools: new FormGroup(\n        {},\n        {\n          validators: [this.validatePools()]\n        }\n      ),\n      token: new FormControl('', {\n        validators: [Validators.required, this.validateToken()]\n      })\n    });\n  }\n\n  ngOnInit() {\n    this.rbdMirroringService.getSiteName().subscribe((response: any) => {\n      this.importBootstrapForm.get('siteName').setValue(response.site_name);\n    });\n\n    this.subs = this.rbdMirroringService.subscribeSummary((data) => {\n      const pools = data.content_data.pools;\n      this.pools = pools.reduce((acc: any[], pool: Pool) => {\n        acc.push({\n          name: pool['name'],\n          mirror_mode: pool['mirror_mode']\n        });\n        return acc;\n      }, []);\n\n      const poolsControl = this.importBootstrapForm.get('pools') as FormGroup;\n      _.each(this.pools, (pool) => {\n        const poolName = pool['name'];\n        const mirroring_disabled = pool['mirror_mode'] === 'disabled';\n        const control = poolsControl.controls[poolName];\n        if (control) {\n          if (mirroring_disabled && control.disabled) {\n            control.enable();\n          } else if (!mirroring_disabled && control.enabled) {\n            control.disable();\n            control.setValue(true);\n          }\n        } else {\n          poolsControl.addControl(\n            poolName,\n            new FormControl({ value: !mirroring_disabled, disabled: !mirroring_disabled })\n          );\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subs) {\n      this.subs.unsubscribe();\n    }\n  }\n\n  validatePools(): ValidatorFn {\n    return (poolsControl: FormGroup): { [key: string]: any } => {\n      let checkedCount = 0;\n      _.each(poolsControl.controls, (control) => {\n        if (control.value === true) {\n          ++checkedCount;\n        }\n      });\n\n      if (checkedCount > 0) {\n        return null;\n      }\n\n      return { requirePool: true };\n    };\n  }\n\n  validateToken(): ValidatorFn {\n    return (token: FormControl): { [key: string]: any } => {\n      try {\n        if (JSON.parse(atob(token.value))) {\n          return null;\n        }\n      } catch (error) {}\n      return { invalidToken: true };\n    };\n  }\n\n  import() {\n    const bootstrapPoolNames: string[] = [];\n    const poolNames: string[] = [];\n    const poolsControl = this.importBootstrapForm.get('pools') as FormGroup;\n    _.each(poolsControl.controls, (control, poolName) => {\n      if (control.value === true) {\n        bootstrapPoolNames.push(poolName);\n        if (!control.disabled) {\n          poolNames.push(poolName);\n        }\n      }\n    });\n\n    const poolModeRequest = {\n      mirror_mode: 'image'\n    };\n\n    let apiActionsObs: Observable<any> = concat(\n      this.rbdMirroringService.setSiteName(this.importBootstrapForm.getValue('siteName')),\n      forkJoin(\n        poolNames.map((poolName) => this.rbdMirroringService.updatePool(poolName, poolModeRequest))\n      )\n    );\n\n    apiActionsObs = bootstrapPoolNames\n      .reduce((obs, poolName) => {\n        return concat(\n          obs,\n          this.rbdMirroringService.importBootstrapToken(\n            poolName,\n            this.importBootstrapForm.getValue('direction'),\n            this.importBootstrapForm.getValue('token')\n          )\n        );\n      }, apiActionsObs)\n      .pipe(last());\n\n    const finishHandler = () => {\n      this.rbdMirroringService.refresh();\n      this.importBootstrapForm.setErrors({ cdSubmitButton: true });\n    };\n\n    const taskObs = this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/mirroring/bootstrap/import', {}),\n      call: apiActionsObs\n    });\n    taskObs.subscribe({\n      error: finishHandler,\n      complete: () => {\n        finishHandler();\n        this.activeModal.close();\n      }\n    });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n\n                class=\"modal-title\">Import Bootstrap Token</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"importBootstrapForm\"\n          class=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"importBootstrapForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p>\n          <ng-container i18n>To import a bootstrap token which was created\n          by a peer site cluster, provide the local site's name, select\n          which pools will have mirroring enabled, provide the generated\n          token, and click&nbsp;<kbd>Import</kbd>.</ng-container>\n        </p>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label required\"\n                 for=\"siteName\"\n                 i18n>Site Name</label>\n          <input class=\"form-control\"\n                 type=\"text\"\n                 placeholder=\"Name...\"\n                 i18n-placeholder\n                 id=\"siteName\"\n                 name=\"siteName\"\n                 formControlName=\"siteName\"\n                 autofocus>\n          <span *ngIf=\"importBootstrapForm.showError('siteName', formDir, 'required')\"\n                class=\"invalid-feedback\"\n                i18n>This field is required.</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label\"\n                 for=\"direction\">\n            <span i18n>Direction</span>\n          </label>\n          <select id=\"direction\"\n                  name=\"direction\"\n                  class=\"form-control\"\n                  formControlName=\"direction\">\n            <option *ngFor=\"let direction of directions\"\n                    [value]=\"direction.key\">{{ direction.desc }}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\"\n             formGroupName=\"pools\">\n          <label class=\"col-form-label required\"\n                 for=\"pools\"\n                 i18n>Pools</label>\n          <div class=\"custom-control custom-checkbox\"\n               *ngFor=\"let pool of pools\">\n            <input type=\"checkbox\"\n                   class=\"custom-control-input\"\n                   id=\"{{ pool.name }}\"\n                   name=\"{{ pool.name }}\"\n                   formControlName=\"{{ pool.name }}\">\n            <label class=\"custom-control-label\"\n                   for=\"{{ pool.name }}\">{{ pool.name }}</label>\n          </div>\n          <span *ngIf=\"importBootstrapForm.showError('pools', formDir, 'requirePool')\"\n                class=\"invalid-feedback\"\n                i18n>At least one pool is required.</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label required\"\n                 for=\"token\"\n                 i18n>Token</label>\n          <textarea class=\"form-control resize-vertical\"\n                    placeholder=\"Generated token...\"\n                    i18n-placeholder\n                    id=\"token\"\n                    formControlName=\"token\">\n          </textarea>\n          <span *ngIf=\"importBootstrapForm.showError('token', formDir, 'required')\"\n                class=\"invalid-feedback\"\n                i18n>This field is required.</span>\n          <span *ngIf=\"importBootstrapForm.showError('token', formDir, 'invalidToken')\"\n                class=\"invalid-feedback\"\n                i18n>The token is invalid.</span>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"import()\"\n                              [form]=\"importBootstrapForm\"\n                              [submitText]=\"actionLabels.SUBMIT\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { TableStatusViewCache } from '~/app/shared/classes/table-status-view-cache';\nimport { CephShortVersionPipe } from '~/app/shared/pipes/ceph-short-version.pipe';\n\n@Component({\n  selector: 'cd-mirroring-daemons',\n  templateUrl: './daemon-list.component.html',\n  styleUrls: ['./daemon-list.component.scss']\n})\nexport class DaemonListComponent implements OnInit, OnDestroy {\n  @ViewChild('healthTmpl', { static: true })\n  healthTmpl: TemplateRef<any>;\n\n  subs: Subscription;\n\n  data: [];\n  columns: {};\n\n  tableStatus = new TableStatusViewCache();\n\n  constructor(\n    private rbdMirroringService: RbdMirroringService,\n    private cephShortVersionPipe: CephShortVersionPipe\n  ) {}\n\n  ngOnInit() {\n    this.columns = [\n      { prop: 'instance_id', name: $localize`Instance`, flexGrow: 2 },\n      { prop: 'id', name: $localize`ID`, flexGrow: 2 },\n      { prop: 'server_hostname', name: $localize`Hostname`, flexGrow: 2 },\n      {\n        prop: 'version',\n        name: $localize`Version`,\n        pipe: this.cephShortVersionPipe,\n        flexGrow: 2\n      },\n      {\n        prop: 'health',\n        name: $localize`Health`,\n        cellTemplate: this.healthTmpl,\n        flexGrow: 1\n      }\n    ];\n\n    this.subs = this.rbdMirroringService.subscribeSummary((data) => {\n      this.data = data.content_data.daemons;\n      this.tableStatus = new TableStatusViewCache(data.status);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  refresh() {\n    this.rbdMirroringService.refresh();\n  }\n}\n","<cd-table [data]=\"data\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          [autoReload]=\"-1\"\n          (fetchData)=\"refresh()\"\n          [status]=\"tableStatus\">\n</cd-table>\n\n<ng-template #healthTmpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <span [ngClass]=\"row.health_color | mirrorHealthColor\">{{ value }}</span>\n</ng-template>\n","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { TableStatusViewCache } from '~/app/shared/classes/table-status-view-cache';\n\n@Component({\n  selector: 'cd-mirroring-images',\n  templateUrl: './image-list.component.html',\n  styleUrls: ['./image-list.component.scss']\n})\nexport class ImageListComponent implements OnInit, OnDestroy {\n  @ViewChild('stateTmpl', { static: true })\n  stateTmpl: TemplateRef<any>;\n  @ViewChild('syncTmpl', { static: true })\n  syncTmpl: TemplateRef<any>;\n  @ViewChild('progressTmpl', { static: true })\n  progressTmpl: TemplateRef<any>;\n\n  subs: Subscription;\n\n  image_error: Record<string, any> = {\n    data: [],\n    columns: {}\n  };\n  image_syncing: Record<string, any> = {\n    data: [],\n    columns: {}\n  };\n  image_ready: Record<string, any> = {\n    data: [],\n    columns: {}\n  };\n\n  tableStatus = new TableStatusViewCache();\n\n  constructor(private rbdMirroringService: RbdMirroringService) {}\n\n  ngOnInit() {\n    this.image_error.columns = [\n      { prop: 'pool_name', name: $localize`Pool`, flexGrow: 2 },\n      { prop: 'name', name: $localize`Image`, flexGrow: 2 },\n      {\n        prop: 'state',\n        name: $localize`State`,\n        cellTemplate: this.stateTmpl,\n        flexGrow: 1\n      },\n      { prop: 'description', name: $localize`Issue`, flexGrow: 4 }\n    ];\n\n    this.image_syncing.columns = [\n      { prop: 'pool_name', name: $localize`Pool`, flexGrow: 2 },\n      { prop: 'name', name: $localize`Image`, flexGrow: 2 },\n      {\n        prop: 'state',\n        name: $localize`State`,\n        cellTemplate: this.stateTmpl,\n        flexGrow: 1\n      },\n      {\n        prop: 'progress',\n        name: $localize`Progress`,\n        cellTemplate: this.progressTmpl,\n        flexGrow: 2\n      },\n      { prop: 'bytes_per_second', name: $localize`Bytes per second`, flexGrow: 2 },\n      { prop: 'entries_behind_primary', name: $localize`Entries behind primary`, flexGrow: 2 }\n    ];\n\n    this.image_ready.columns = [\n      { prop: 'pool_name', name: $localize`Pool`, flexGrow: 2 },\n      { prop: 'name', name: $localize`Image`, flexGrow: 2 },\n      {\n        prop: 'state',\n        name: $localize`State`,\n        cellTemplate: this.stateTmpl,\n        flexGrow: 1\n      },\n      { prop: 'description', name: $localize`Description`, flexGrow: 4 }\n    ];\n\n    this.subs = this.rbdMirroringService.subscribeSummary((data) => {\n      this.image_error.data = data.content_data.image_error;\n      this.image_syncing.data = data.content_data.image_syncing;\n      this.image_ready.data = data.content_data.image_ready;\n      this.tableStatus = new TableStatusViewCache(data.status);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  refresh() {\n    this.rbdMirroringService.refresh();\n  }\n}\n","<nav ngbNav\n     #nav=\"ngbNav\"\n     class=\"nav-tabs\"\n     cdStatefulTab=\"image-list\">\n  <ng-container ngbNavItem=\"issues\">\n    <a ngbNavLink\n       i18n>Issues ({{ image_error.data.length }})</a>\n    <ng-template ngbNavContent>\n      <cd-table [data]=\"image_error.data\"\n                columnMode=\"flex\"\n                [columns]=\"image_error.columns\"\n                [autoReload]=\"-1\"\n                (fetchData)=\"refresh()\"\n                [status]=\"tableStatus\">\n      </cd-table>\n    </ng-template>\n  </ng-container>\n  <ng-container ngbNavItem=\"syncing\">\n    <a ngbNavLink\n       i18n>Syncing ({{ image_syncing.data.length }})</a>\n    <ng-template ngbNavContent>\n      <cd-table [data]=\"image_syncing.data\"\n                columnMode=\"flex\"\n                [columns]=\"image_syncing.columns\"\n                [autoReload]=\"-1\"\n                (fetchData)=\"refresh()\"\n                [status]=\"tableStatus\">\n      </cd-table>\n    </ng-template>\n  </ng-container>\n  <ng-container ngbNavItem=\"ready\">\n    <a ngbNavLink\n       i18n>Ready ({{ image_ready.data.length }})</a>\n    <ng-template ngbNavContent>\n      <cd-table [data]=\"image_ready.data\"\n                columnMode=\"flex\"\n                [columns]=\"image_ready.columns\"\n                [autoReload]=\"-1\"\n                (fetchData)=\"refresh()\"\n                [status]=\"tableStatus\">\n      </cd-table>\n    </ng-template>\n  </ng-container>\n</nav>\n\n<div [ngbNavOutlet]=\"nav\"></div>\n\n<ng-template #stateTmpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <span [ngClass]=\"row.state_color | mirrorHealthColor\">{{ value }}</span>\n</ng-template>\n\n<ng-template #progressTmpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <div *ngIf=\"row.state === 'Replaying'\">\n  </div>\n  <ngb-progressbar *ngIf=\"row.state === 'Syncing'\"\n                   type=\"info\"\n                   [value]=\"value\"\n                   [showValue]=\"true\"></ngb-progressbar>\n</ng-template>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mirrorHealthColor'\n})\nexport class MirrorHealthColorPipe implements PipeTransform {\n  transform(value: any): any {\n    if (value === 'warning') {\n      return 'badge badge-warning';\n    } else if (value === 'error') {\n      return 'badge badge-danger';\n    } else if (value === 'success') {\n      return 'badge badge-success';\n    }\n    return 'badge badge-info';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { NgbNavModule, NgbProgressbarModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { BootstrapCreateModalComponent } from './bootstrap-create-modal/bootstrap-create-modal.component';\nimport { BootstrapImportModalComponent } from './bootstrap-import-modal/bootstrap-import-modal.component';\nimport { DaemonListComponent } from './daemon-list/daemon-list.component';\nimport { ImageListComponent } from './image-list/image-list.component';\nimport { MirrorHealthColorPipe } from './mirror-health-color.pipe';\nimport { OverviewComponent } from './overview/overview.component';\nimport { PoolEditModeModalComponent } from './pool-edit-mode-modal/pool-edit-mode-modal.component';\nimport { PoolEditPeerModalComponent } from './pool-edit-peer-modal/pool-edit-peer-modal.component';\nimport { PoolListComponent } from './pool-list/pool-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    NgbNavModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbProgressbarModule,\n    NgbTooltipModule\n  ],\n  declarations: [\n    BootstrapCreateModalComponent,\n    BootstrapImportModalComponent,\n    DaemonListComponent,\n    ImageListComponent,\n    OverviewComponent,\n    PoolEditModeModalComponent,\n    PoolEditPeerModalComponent,\n    PoolListComponent,\n    MirrorHealthColorPipe\n  ],\n  exports: [OverviewComponent]\n})\nexport class MirroringModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\n\nimport { Pool } from '~/app/ceph/pool/pool';\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { ViewCacheStatus } from '~/app/shared/enum/view-cache-status.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { BootstrapCreateModalComponent } from '../bootstrap-create-modal/bootstrap-create-modal.component';\nimport { BootstrapImportModalComponent } from '../bootstrap-import-modal/bootstrap-import-modal.component';\n\n@Component({\n  selector: 'cd-mirroring',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit, OnDestroy {\n  rbdmirroringForm: CdFormGroup;\n  permission: Permission;\n  tableActions: CdTableAction[];\n  selection = new CdTableSelection();\n  modalRef: NgbModalRef;\n  peersExist = true;\n  siteName: any;\n  status: ViewCacheStatus;\n  private subs = new Subscription();\n  editing = false;\n\n  icons = Icons;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rbdMirroringService: RbdMirroringService,\n    private modalService: ModalService,\n    private taskWrapper: TaskWrapperService\n  ) {\n    this.permission = this.authStorageService.getPermissions().rbdMirroring;\n\n    const createBootstrapAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.upload,\n      click: () => this.createBootstrapModal(),\n      name: $localize`Create Bootstrap Token`,\n      canBePrimary: () => true,\n      disable: () => false\n    };\n    const importBootstrapAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.download,\n      click: () => this.importBootstrapModal(),\n      name: $localize`Import Bootstrap Token`,\n      disable: () => false\n    };\n    this.tableActions = [createBootstrapAction, importBootstrapAction];\n  }\n\n  ngOnInit() {\n    this.createForm();\n    this.subs.add(this.rbdMirroringService.startPolling());\n    this.subs.add(\n      this.rbdMirroringService.subscribeSummary((data) => {\n        this.status = data.content_data.status;\n        this.peersExist = !!data.content_data.pools.find((o: Pool) => o['peer_uuids'].length > 0);\n      })\n    );\n    this.rbdMirroringService.getSiteName().subscribe((response: any) => {\n      this.siteName = response.site_name;\n      this.rbdmirroringForm.get('siteName').setValue(this.siteName);\n    });\n  }\n\n  private createForm() {\n    this.rbdmirroringForm = new CdFormGroup({\n      siteName: new FormControl({ value: '', disabled: true })\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  updateSiteName() {\n    if (this.editing) {\n      const action = this.taskWrapper.wrapTaskAroundCall({\n        task: new FinishedTask('rbd/mirroring/site_name/edit', {}),\n        call: this.rbdMirroringService.setSiteName(this.rbdmirroringForm.getValue('siteName'))\n      });\n\n      action.subscribe({\n        complete: () => {\n          this.rbdMirroringService.refresh();\n        }\n      });\n    }\n    this.editing = !this.editing;\n  }\n\n  createBootstrapModal() {\n    const initialState = {\n      siteName: this.siteName\n    };\n    this.modalRef = this.modalService.show(BootstrapCreateModalComponent, initialState);\n  }\n\n  importBootstrapModal() {\n    const initialState = {\n      siteName: this.siteName\n    };\n    this.modalRef = this.modalService.show(BootstrapImportModalComponent, initialState);\n  }\n}\n","<form name=\"rbdmirroringForm\"\n      #formDir=\"ngForm\"\n      [formGroup]=\"rbdmirroringForm\"\n      novalidate>\n  <div class=\"row mb-3\">\n    <div class=\"col-md-auto\">\n      <label class=\"col-form-label\"\n             for=\"siteName\"\n             i18n>Site Name</label></div>\n\n    <div class=\"col-sm-4 d-flex\">\n      <input type=\"text\"\n             class=\"form-control\"\n             id=\"siteName\"\n             name=\"siteName\"\n             formControlName=\"siteName\"\n             [attr.disabled]=\"!editing ? true : null\">\n      <button class=\"btn btn-light\"\n              id=\"editSiteName\"\n              (click)=\"updateSiteName()\"\n              [attr.title]=\"editing ? 'Save' : 'Edit'\">\n        <i [ngClass]=\"icons.edit\"\n           *ngIf=\"!editing\"></i>\n        <i [ngClass]=\"icons.check\"\n           *ngIf=\"editing\"></i>\n      </button>\n      <cd-copy-2-clipboard-button [source]=\"siteName\"\n                                  [byId]=\"false\">\n      </cd-copy-2-clipboard-button>\n    </div>\n    <div class=\"col\">\n      <cd-table-actions class=\"table-actions float-end\"\n                        [permission]=\"permission\"\n                        [selection]=\"selection\"\n                        [tableActions]=\"tableActions\">\n      </cd-table-actions>\n    </div>\n  </div>\n</form>\n\n<div class=\"row\">\n  <div class=\"col-sm-6\">\n    <legend i18n>Daemons</legend>\n    <div>\n      <cd-mirroring-daemons>\n      </cd-mirroring-daemons>\n    </div>\n  </div>\n\n  <div class=\"col-sm-6\">\n    <legend i18n>Pools</legend>\n\n    <div>\n      <cd-mirroring-pools>\n      </cd-mirroring-pools>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <legend i18n>Images</legend>\n    <div>\n      <cd-mirroring-images>\n      </cd-mirroring-images>\n    </div>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\n\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { PoolEditModeResponseModel } from './pool-edit-mode-response.model';\n\n@Component({\n  selector: 'cd-pool-edit-mode-modal',\n  templateUrl: './pool-edit-mode-modal.component.html',\n  styleUrls: ['./pool-edit-mode-modal.component.scss']\n})\nexport class PoolEditModeModalComponent implements OnInit, OnDestroy {\n  poolName: string;\n\n  subs: Subscription;\n\n  editModeForm: CdFormGroup;\n  bsConfig = {\n    containerClass: 'theme-default'\n  };\n  pattern: string;\n\n  response: PoolEditModeResponseModel;\n  peerExists = false;\n\n  mirrorModes: Array<{ id: string; name: string }> = [\n    { id: 'disabled', name: $localize`Disabled` },\n    { id: 'pool', name: $localize`Pool` },\n    { id: 'image', name: $localize`Image` }\n  ];\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private rbdMirroringService: RbdMirroringService,\n    private taskWrapper: TaskWrapperService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.editModeForm = new CdFormGroup({\n      mirrorMode: new FormControl('', {\n        validators: [Validators.required, this.validateMode.bind(this)]\n      })\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params: { pool_name: string }) => {\n      this.poolName = params.pool_name;\n    });\n    this.pattern = `${this.poolName}`;\n    this.rbdMirroringService.getPool(this.poolName).subscribe((resp: PoolEditModeResponseModel) => {\n      this.setResponse(resp);\n    });\n\n    this.subs = this.rbdMirroringService.subscribeSummary((data) => {\n      this.peerExists = false;\n      const poolData = data.content_data.pools;\n      const pool = poolData.find((o: any) => this.poolName === o['name']);\n      this.peerExists = pool && pool['peer_uuids'].length;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  validateMode(control: AbstractControl) {\n    if (control.value === 'disabled' && this.peerExists) {\n      return { cannotDisable: { value: control.value } };\n    }\n    return null;\n  }\n\n  setResponse(response: PoolEditModeResponseModel) {\n    this.editModeForm.get('mirrorMode').setValue(response.mirror_mode);\n  }\n\n  update() {\n    const request = new PoolEditModeResponseModel();\n    request.mirror_mode = this.editModeForm.getValue('mirrorMode');\n\n    const action = this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/mirroring/pool/edit', {\n        pool_name: this.poolName\n      }),\n      call: this.rbdMirroringService.updatePool(this.poolName, request)\n    });\n\n    action.subscribe({\n      error: () => this.editModeForm.setErrors({ cdSubmitButton: true }),\n      complete: () => {\n        this.rbdMirroringService.refresh();\n        this.location.back();\n      }\n    });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\"\n          pageURL=\"mirroring\">\n  <ng-container i18n\n                class=\"modal-title\">Edit pool mirror mode</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"editModeForm\"\n          class=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"editModeForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p>\n          <ng-container i18n>To edit the mirror mode for pool&nbsp;\n          <kbd>{{ poolName }}</kbd>, select a new mode from the list and click&nbsp;\n          <kbd>Update</kbd>.</ng-container>\n        </p>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label\"\n                 for=\"mirrorMode\">\n            <span i18n>Mode</span>\n          </label>\n          <select id=\"mirrorMode\"\n                  name=\"mirrorMode\"\n                  class=\"form-select\"\n                  formControlName=\"mirrorMode\">\n            <option *ngFor=\"let mirrorMode of mirrorModes\"\n                    [value]=\"mirrorMode.id\">{{ mirrorMode.name }}</option>\n          </select>\n          <span class=\"invalid-feedback\"\n                *ngIf=\"editModeForm.showError('mirrorMode', formDir, 'cannotDisable')\"\n                i18n>Peer clusters must be removed prior to disabling mirror.</span>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"update()\"\n                              [form]=\"editModeForm\"\n                              [submitText]=\"actionLabels.UPDATE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","export class PoolEditModeResponseModel {\n  mirror_mode: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { PoolEditPeerResponseModel } from './pool-edit-peer-response.model';\n\n@Component({\n  selector: 'cd-pool-edit-peer-modal',\n  templateUrl: './pool-edit-peer-modal.component.html',\n  styleUrls: ['./pool-edit-peer-modal.component.scss']\n})\nexport class PoolEditPeerModalComponent implements OnInit {\n  mode: string;\n  poolName: string;\n  peerUUID: string;\n\n  editPeerForm: CdFormGroup;\n  bsConfig = {\n    containerClass: 'theme-default'\n  };\n  pattern: string;\n\n  response: PoolEditPeerResponseModel;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private rbdMirroringService: RbdMirroringService,\n    private taskWrapper: TaskWrapperService\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.editPeerForm = new CdFormGroup({\n      clusterName: new FormControl('', {\n        validators: [Validators.required, this.validateClusterName]\n      }),\n      clientID: new FormControl('', {\n        validators: [Validators.required, this.validateClientID]\n      }),\n      monAddr: new FormControl('', {\n        validators: [this.validateMonAddr]\n      }),\n      key: new FormControl('', {\n        validators: [this.validateKey]\n      })\n    });\n  }\n\n  ngOnInit() {\n    this.pattern = `${this.poolName}/${this.peerUUID}`;\n    if (this.mode === 'edit') {\n      this.rbdMirroringService\n        .getPeer(this.poolName, this.peerUUID)\n        .subscribe((resp: PoolEditPeerResponseModel) => {\n          this.setResponse(resp);\n        });\n    }\n  }\n\n  validateClusterName(control: AbstractControl) {\n    if (!control.value.match(/^[\\w\\-_]*$/)) {\n      return { invalidClusterName: { value: control.value } };\n    }\n\n    return undefined;\n  }\n\n  validateClientID(control: AbstractControl) {\n    if (!control.value.match(/^(?!client\\.)[\\w\\-_.]*$/)) {\n      return { invalidClientID: { value: control.value } };\n    }\n\n    return undefined;\n  }\n\n  validateMonAddr(control: AbstractControl) {\n    if (!control.value.match(/^[,; ]*([\\w.\\-_\\[\\]]+(:[\\d]+)?[,; ]*)*$/)) {\n      return { invalidMonAddr: { value: control.value } };\n    }\n\n    return undefined;\n  }\n\n  validateKey(control: AbstractControl) {\n    try {\n      if (control.value === '' || !!atob(control.value)) {\n        return null;\n      }\n    } catch (error) {}\n    return { invalidKey: { value: control.value } };\n  }\n\n  setResponse(response: PoolEditPeerResponseModel) {\n    this.response = response;\n    this.editPeerForm.get('clusterName').setValue(response.cluster_name);\n    this.editPeerForm.get('clientID').setValue(response.client_id);\n    this.editPeerForm.get('monAddr').setValue(response.mon_host);\n    this.editPeerForm.get('key').setValue(response.key);\n  }\n\n  update() {\n    const request = new PoolEditPeerResponseModel();\n    request.cluster_name = this.editPeerForm.getValue('clusterName');\n    request.client_id = this.editPeerForm.getValue('clientID');\n    request.mon_host = this.editPeerForm.getValue('monAddr');\n    request.key = this.editPeerForm.getValue('key');\n\n    let action;\n    if (this.mode === 'edit') {\n      action = this.taskWrapper.wrapTaskAroundCall({\n        task: new FinishedTask('rbd/mirroring/peer/edit', {\n          pool_name: this.poolName\n        }),\n        call: this.rbdMirroringService.updatePeer(this.poolName, this.peerUUID, request)\n      });\n    } else {\n      action = this.taskWrapper.wrapTaskAroundCall({\n        task: new FinishedTask('rbd/mirroring/peer/add', {\n          pool_name: this.poolName\n        }),\n        call: this.rbdMirroringService.addPeer(this.poolName, request)\n      });\n    }\n\n    action.subscribe({\n      error: () => this.editPeerForm.setErrors({ cdSubmitButton: true }),\n      complete: () => {\n        this.rbdMirroringService.refresh();\n        this.activeModal.close();\n      }\n    });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <span class=\"modal-title\"\n        i18n>{mode, select, edit {Edit} other {Add}} pool mirror peer</span>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"editPeerForm\"\n          class=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"editPeerForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p>\n          <span i18n>{mode, select, edit {Edit} other {Add}} the pool\n          mirror peer attributes for pool <kbd>{{ poolName }}</kbd> and click\n          <kbd>Submit</kbd>.</span>\n        </p>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label required\"\n                 for=\"clusterName\"\n                 i18n>Cluster Name</label>\n          <input class=\"form-control\"\n                 type=\"text\"\n                 placeholder=\"Name...\"\n                 i18n-placeholder\n                 id=\"clusterName\"\n                 name=\"clusterName\"\n                 formControlName=\"clusterName\"\n                 autofocus>\n          <span class=\"invalid-feedback\"\n                *ngIf=\"editPeerForm.showError('clusterName', formDir, 'required')\"\n                i18n>This field is required.</span>\n          <span class=\"invalid-feedback\"\n                *ngIf=\"editPeerForm.showError('clusterName', formDir, 'invalidClusterName')\"\n                i18n>The cluster name is not valid.</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label required\"\n                 for=\"clientID\"\n                 i18n>CephX ID</label>\n          <input class=\"form-control\"\n                 type=\"text\"\n                 placeholder=\"CephX ID...\"\n                 i18n-placeholder\n                 id=\"clientID\"\n                 name=\"clientID\"\n                 formControlName=\"clientID\">\n          <span class=\"invalid-feedback\"\n                *ngIf=\"editPeerForm.showError('clientID', formDir, 'required')\"\n                i18n>This field is required.</span>\n          <span class=\"invalid-feedback\"\n                *ngIf=\"editPeerForm.showError('clientID', formDir, 'invalidClientID')\"\n                i18n>The CephX ID is not valid.</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label\"\n                 for=\"monAddr\">\n            <span i18n>Monitor Addresses</span>\n          </label>\n          <input class=\"form-control\"\n                 type=\"text\"\n                 placeholder=\"Comma-delimited addresses...\"\n                 i18n-placeholder\n                 id=\"monAddr\"\n                 name=\"monAddr\"\n                 formControlName=\"monAddr\">\n          <span class=\"invalid-feedback\"\n                *ngIf=\"editPeerForm.showError('monAddr', formDir, 'invalidMonAddr')\"\n                i18n>The monitory address is not valid.</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label\"\n                 for=\"key\">\n            <span i18n>CephX Key</span>\n          </label>\n          <input class=\"form-control\"\n                 type=\"text\"\n                 placeholder=\"Base64-encoded key...\"\n                 i18n-placeholder\n                 id=\"key\"\n                 name=\"key\"\n                 formControlName=\"key\">\n          <span class=\"invalid-feedback\"\n                *ngIf=\"editPeerForm.showError('key', formDir, 'invalidKey')\"\n                i18n>CephX key must be base64 encoded.</span>\n        </div>\n\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"update()\"\n                              [form]=\"editPeerForm\"\n                              [submitText]=\"actionLabels.SUBMIT\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","export class PoolEditPeerResponseModel {\n  cluster_name: string;\n  client_id: string;\n  mon_host: string;\n  key: string;\n  uuid: string;\n}\n","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable, Subscriber, Subscription } from 'rxjs';\n\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { TableStatusViewCache } from '~/app/shared/classes/table-status-view-cache';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { URLVerbs } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { PoolEditPeerModalComponent } from '../pool-edit-peer-modal/pool-edit-peer-modal.component';\n\nconst BASE_URL = '/block/mirroring';\n@Component({\n  selector: 'cd-mirroring-pools',\n  templateUrl: './pool-list.component.html',\n  styleUrls: ['./pool-list.component.scss']\n})\nexport class PoolListComponent implements OnInit, OnDestroy {\n  @ViewChild('healthTmpl', { static: true })\n  healthTmpl: TemplateRef<any>;\n  @ViewChild('localTmpl', { static: true })\n  localTmpl: TemplateRef<any>;\n  @ViewChild('remoteTmpl', { static: true })\n  remoteTmpl: TemplateRef<any>;\n\n  subs: Subscription;\n\n  permission: Permission;\n  tableActions: CdTableAction[];\n  selection = new CdTableSelection();\n\n  modalRef: NgbModalRef;\n\n  data: [];\n  columns: {};\n\n  tableStatus = new TableStatusViewCache();\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rbdMirroringService: RbdMirroringService,\n    private modalService: ModalService,\n    private taskWrapper: TaskWrapperService,\n    private router: Router\n  ) {\n    this.data = [];\n    this.permission = this.authStorageService.getPermissions().rbdMirroring;\n\n    const editModeAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      click: () => this.editModeModal(),\n      name: $localize`Edit Mode`,\n      canBePrimary: () => true\n    };\n    const addPeerAction: CdTableAction = {\n      permission: 'create',\n      icon: Icons.add,\n      name: $localize`Add Peer`,\n      click: () => this.editPeersModal('add'),\n      disable: () => !this.selection.first() || this.selection.first().mirror_mode === 'disabled',\n      visible: () => !this.getPeerUUID(),\n      canBePrimary: () => false\n    };\n    const editPeerAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.exchange,\n      name: $localize`Edit Peer`,\n      click: () => this.editPeersModal('edit'),\n      visible: () => !!this.getPeerUUID()\n    };\n    const deletePeerAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      name: $localize`Delete Peer`,\n      click: () => this.deletePeersModal(),\n      visible: () => !!this.getPeerUUID()\n    };\n    this.tableActions = [editModeAction, addPeerAction, editPeerAction, deletePeerAction];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      { prop: 'name', name: $localize`Name`, flexGrow: 2 },\n      { prop: 'mirror_mode', name: $localize`Mode`, flexGrow: 2 },\n      { prop: 'leader_id', name: $localize`Leader`, flexGrow: 2 },\n      {\n        prop: 'image_local_count',\n        name: $localize`# Local`,\n        headerTemplate: this.localTmpl,\n        flexGrow: 2\n      },\n      {\n        prop: 'image_remote_count',\n        name: $localize`# Remote`,\n        headerTemplate: this.remoteTmpl,\n        flexGrow: 2\n      },\n      {\n        prop: 'health',\n        name: $localize`Health`,\n        cellTemplate: this.healthTmpl,\n        flexGrow: 1\n      }\n    ];\n\n    this.subs = this.rbdMirroringService.subscribeSummary((data) => {\n      this.data = data.content_data.pools;\n      this.tableStatus = new TableStatusViewCache(data.status);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  refresh() {\n    this.rbdMirroringService.refresh();\n  }\n\n  editModeModal() {\n    this.router.navigate([\n      BASE_URL,\n      { outlets: { modal: [URLVerbs.EDIT, this.selection.first().name] } }\n    ]);\n  }\n\n  editPeersModal(mode: string) {\n    const initialState = {\n      poolName: this.selection.first().name,\n      mode: mode\n    };\n    if (mode === 'edit') {\n      initialState['peerUUID'] = this.getPeerUUID();\n    }\n    this.modalRef = this.modalService.show(PoolEditPeerModalComponent, initialState);\n  }\n\n  deletePeersModal() {\n    const poolName = this.selection.first().name;\n    const peerUUID = this.getPeerUUID();\n\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: $localize`mirror peer`,\n      itemNames: [`${poolName} (${peerUUID})`],\n      submitActionObservable: () =>\n        new Observable((observer: Subscriber<any>) => {\n          this.taskWrapper\n            .wrapTaskAroundCall({\n              task: new FinishedTask('rbd/mirroring/peer/delete', {\n                pool_name: poolName\n              }),\n              call: this.rbdMirroringService.deletePeer(poolName, peerUUID)\n            })\n            .subscribe({\n              error: (resp) => observer.error(resp),\n              complete: () => {\n                this.rbdMirroringService.refresh();\n                observer.complete();\n              }\n            });\n        })\n    });\n  }\n\n  getPeerUUID(): any {\n    const selection = this.selection.first();\n    const pool = this.data.find((o) => selection && selection.name === o['name']);\n    if (pool && pool['peer_uuids']) {\n      return pool['peer_uuids'][0];\n    }\n\n    return undefined;\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n}\n","<cd-table [data]=\"data\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          identifier=\"name\"\n          forceIdentifier=\"true\"\n          [autoReload]=\"-1\"\n          (fetchData)=\"refresh()\"\n          selectionType=\"single\"\n          (updateSelection)=\"updateSelection($event)\"\n          [status]=\"tableStatus\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n</cd-table>\n\n<ng-template #healthTmpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <span [ngClass]=\"row.health_color | mirrorHealthColor\">{{ value }}</span>\n</ng-template>\n<ng-template #localTmpl>\n  <span i18n\n        i18n-ngbTooltip\n        ngbTooltip=\"Local image count\"># Local</span>\n</ng-template>\n<ng-template #remoteTmpl>\n  <span i18n\n        i18n-ngbTooltip\n        ngbTooltip=\"Remote image count\"># Remote</span>\n</ng-template>\n<router-outlet name=\"modal\"></router-outlet>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport _ from 'lodash';\nimport { ReplaySubject } from 'rxjs';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport {\n  RbdConfigurationEntry,\n  RbdConfigurationSourceField,\n  RbdConfigurationType\n} from '~/app/shared/models/configuration';\nimport { FormatterService } from '~/app/shared/services/formatter.service';\nimport { RbdConfigurationService } from '~/app/shared/services/rbd-configuration.service';\n\n@Component({\n  selector: 'cd-rbd-configuration-form',\n  templateUrl: './rbd-configuration-form.component.html',\n  styleUrls: ['./rbd-configuration-form.component.scss']\n})\nexport class RbdConfigurationFormComponent implements OnInit {\n  @Input()\n  form: CdFormGroup;\n  @Input()\n  initializeData = new ReplaySubject<{\n    initialData: RbdConfigurationEntry[];\n    sourceType: RbdConfigurationSourceField;\n  }>(1);\n  @Output()\n  changes = new EventEmitter<any>();\n\n  icons = Icons;\n\n  ngDataReady = new EventEmitter<any>();\n  initialData: RbdConfigurationEntry[];\n  configurationType = RbdConfigurationType;\n  sectionVisibility: { [key: string]: boolean } = {};\n\n  constructor(\n    public formatterService: FormatterService,\n    public rbdConfigurationService: RbdConfigurationService\n  ) {}\n\n  ngOnInit() {\n    const configFormGroup = this.createConfigurationFormGroup();\n    this.form.addControl('configuration', configFormGroup);\n\n    // Listen to changes and emit the values to the parent component\n    configFormGroup.valueChanges.subscribe(() => {\n      this.changes.emit(this.getDirtyValues.bind(this));\n    });\n\n    if (this.initializeData) {\n      this.initializeData.subscribe((data: Record<string, any>) => {\n        this.initialData = data.initialData;\n        const dataType = data.sourceType;\n        this.rbdConfigurationService.getWritableOptionFields().forEach((option) => {\n          const optionData = data.initialData\n            .filter((entry: Record<string, any>) => entry.name === option.name)\n            .pop();\n          if (optionData && optionData['source'] === dataType) {\n            this.form.get(`configuration.${option.name}`).setValue(optionData['value']);\n          }\n        });\n        this.ngDataReady.emit();\n      });\n    }\n\n    this.rbdConfigurationService\n      .getWritableSections()\n      .forEach((section) => (this.sectionVisibility[section.class] = false));\n  }\n\n  getDirtyValues(includeLocalValues = false, localFieldType?: RbdConfigurationSourceField) {\n    if (includeLocalValues && !localFieldType) {\n      const msg =\n        'ProgrammingError: If local values shall be included, a proper localFieldType argument has to be provided, too';\n      throw new Error(msg);\n    }\n    const result = {};\n\n    this.rbdConfigurationService.getWritableOptionFields().forEach((config) => {\n      const control: any = this.form.get('configuration').get(config.name);\n      const dirty = control.dirty;\n\n      if (this.initialData && this.initialData[config.name] === control.value) {\n        return; // Skip controls with initial data loaded\n      }\n\n      if (dirty || (includeLocalValues && control['source'] === localFieldType)) {\n        if (control.value === null) {\n          result[config.name] = control.value;\n        } else if (config.type === RbdConfigurationType.bps) {\n          result[config.name] = this.formatterService.toBytes(control.value);\n        } else if (config.type === RbdConfigurationType.milliseconds) {\n          result[config.name] = this.formatterService.toMilliseconds(control.value);\n        } else if (config.type === RbdConfigurationType.iops) {\n          result[config.name] = this.formatterService.toIops(control.value);\n        } else {\n          result[config.name] = control.value;\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Dynamically create form controls.\n   */\n  private createConfigurationFormGroup() {\n    const configFormGroup = new CdFormGroup({});\n\n    this.rbdConfigurationService.getWritableOptionFields().forEach((c) => {\n      let control: FormControl;\n      if (\n        c.type === RbdConfigurationType.milliseconds ||\n        c.type === RbdConfigurationType.iops ||\n        c.type === RbdConfigurationType.bps\n      ) {\n        let initialValue = 0;\n        _.forEach(this.initialData, (configList) => {\n          if (configList['name'] === c.name) {\n            initialValue = configList['value'];\n          }\n        });\n        control = new FormControl(initialValue, Validators.min(0));\n      } else {\n        throw new Error(\n          `Type ${c.type} is unknown, you may need to add it to RbdConfiguration class`\n        );\n      }\n      configFormGroup.addControl(c.name, control);\n    });\n\n    return configFormGroup;\n  }\n\n  /**\n   * Reset the value. The inherited value will be used instead.\n   */\n  reset(optionName: string) {\n    const formControl: any = this.form.get('configuration').get(optionName);\n    if (formControl.disabled) {\n      formControl.setValue(formControl['previousValue'] || 0);\n      formControl.enable();\n      if (!formControl['previousValue']) {\n        formControl.markAsPristine();\n      }\n    } else {\n      formControl['previousValue'] = formControl.value;\n      formControl.setValue(null);\n      formControl.markAsDirty();\n      formControl.disable();\n    }\n  }\n\n  isDisabled(optionName: string) {\n    return this.form.get('configuration').get(optionName).disabled;\n  }\n\n  toggleSectionVisibility(className: string) {\n    this.sectionVisibility[className] = !this.sectionVisibility[className];\n  }\n}\n","<fieldset #cfgFormGroup\n          [formGroup]=\"form.get('configuration')\">\n  <legend i18n>RBD Configuration</legend>\n\n  <div *ngFor=\"let section of rbdConfigurationService.sections\"\n       class=\"col-12\">\n    <h4 class=\"cd-header\">\n      <span (click)=\"toggleSectionVisibility(section.class)\"\n            class=\"collapsible\">\n        {{ section.heading }} <i [ngClass]=\"!sectionVisibility[section.class] ? icons.addCircle : icons.minusCircle\"\n                                 aria-hidden=\"true\"></i>\n      </span>\n    </h4>\n    <div class=\"{{ section.class }}\"\n         [hidden]=\"!sectionVisibility[section.class]\">\n      <div class=\"form-group row\"\n           *ngFor=\"let option of section.options\">\n        <label class=\"cd-col-form-label\"\n               [for]=\"option.name\">{{ option.displayName }}<cd-helper>{{ option.description }}</cd-helper></label>\n\n        <div class=\"cd-col-form-input {{ section.heading }}\">\n          <div class=\"input-group\">\n            <ng-container [ngSwitch]=\"option.type\">\n              <ng-container *ngSwitchCase=\"configurationType.milliseconds\">\n                <input [id]=\"option.name\"\n                       [name]=\"option.name\"\n                       [formControlName]=\"option.name\"\n                       type=\"text\"\n                       class=\"form-control\"\n                       [ngDataReady]=\"ngDataReady\"\n                       cdMilliseconds>\n              </ng-container>\n              <ng-container *ngSwitchCase=\"configurationType.bps\">\n                <input [id]=\"option.name\"\n                       [name]=\"option.name\"\n                       [formControlName]=\"option.name\"\n                       type=\"text\"\n                       class=\"form-control\"\n                       defaultUnit=\"b\"\n                       [ngDataReady]=\"ngDataReady\"\n                       cdDimlessBinaryPerSecond>\n              </ng-container>\n              <ng-container *ngSwitchCase=\"configurationType.iops\">\n                <input [id]=\"option.name\"\n                       [name]=\"option.name\"\n                       [formControlName]=\"option.name\"\n                       type=\"text\"\n                       class=\"form-control\"\n                       [ngDataReady]=\"ngDataReady\"\n                       cdIops>\n              </ng-container>\n            </ng-container>\n            <button class=\"btn btn-light\"\n                    type=\"button\"\n                    data-toggle=\"button\"\n                    [ngClass]=\"{'active': isDisabled(option.name)}\"\n                    title=\"Remove the local configuration value. The parent configuration value will be inherited and used instead.\"\n                    i18n-title\n                    (click)=\"reset(option.name)\">\n              <i [ngClass]=\"[icons.erase]\"\n                 aria-hidden=\"true\"></i>\n            </button>\n          </div>\n          <span i18n\n                class=\"invalid-feedback\"\n                *ngIf=\"form.showError('configuration.' + option.name, cfgFormGroup, 'min')\">The minimum value is 0</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</fieldset>\n","import { Component, Input, OnChanges, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport {\n  RbdConfigurationEntry,\n  RbdConfigurationSourceField,\n  RbdConfigurationType\n} from '~/app/shared/models/configuration';\nimport { RbdConfigurationSourcePipe } from '~/app/shared/pipes/rbd-configuration-source.pipe';\nimport { FormatterService } from '~/app/shared/services/formatter.service';\nimport { RbdConfigurationService } from '~/app/shared/services/rbd-configuration.service';\n\n@Component({\n  selector: 'cd-rbd-configuration-table',\n  templateUrl: './rbd-configuration-list.component.html',\n  styleUrls: ['./rbd-configuration-list.component.scss']\n})\nexport class RbdConfigurationListComponent implements OnInit, OnChanges {\n  @Input()\n  data: RbdConfigurationEntry[];\n  poolConfigurationColumns: CdTableColumn[];\n  @ViewChild('configurationSourceTpl', { static: true })\n  configurationSourceTpl: TemplateRef<any>;\n  @ViewChild('configurationValueTpl', { static: true })\n  configurationValueTpl: TemplateRef<any>;\n  @ViewChild('poolConfTable', { static: true })\n  poolConfTable: TableComponent;\n\n  readonly sourceField = RbdConfigurationSourceField;\n  readonly typeField = RbdConfigurationType;\n\n  constructor(\n    public formatterService: FormatterService,\n    private rbdConfigurationService: RbdConfigurationService\n  ) {}\n\n  ngOnInit() {\n    this.poolConfigurationColumns = [\n      { prop: 'displayName', name: $localize`Name` },\n      { prop: 'description', name: $localize`Description` },\n      { prop: 'name', name: $localize`Key` },\n      {\n        prop: 'source',\n        name: $localize`Source`,\n        cellTemplate: this.configurationSourceTpl,\n        pipe: new RbdConfigurationSourcePipe()\n      },\n      { prop: 'value', name: $localize`Value`, cellTemplate: this.configurationValueTpl }\n    ];\n  }\n\n  ngOnChanges(): void {\n    if (!this.data) {\n      return;\n    }\n    // Filter settings out which are not listed in RbdConfigurationService\n    this.data = this.data.filter((row) =>\n      this.rbdConfigurationService\n        .getOptionFields()\n        .map((o) => o.name)\n        .includes(row.name)\n    );\n  }\n}\n","<cd-table #poolConfTable\n          [data]=\"data\"\n          [columns]=\"poolConfigurationColumns\"\n          identifier=\"name\">\n</cd-table>\n\n<ng-template #configurationSourceTpl\n             let-value=\"value\">\n\n  <div [ngSwitch]=\"value\">\n    <span *ngSwitchCase=\"'global'\"\n          i18n>Global</span>\n    <strong *ngSwitchCase=\"'image'\"\n            i18n>Image</strong>\n    <strong *ngSwitchCase=\"'pool'\"\n            i18n>Pool</strong>\n  </div>\n</ng-template>\n\n<ng-template #configurationValueTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <div [ngSwitch]=\"row.type\">\n    <span *ngSwitchCase=\"typeField.bps\">{{ value | dimlessBinaryPerSecond }}</span>\n    <span *ngSwitchCase=\"typeField.milliseconds\">{{ value | milliseconds }}</span>\n    <span *ngSwitchCase=\"typeField.iops\">{{ value | iops }}</span>\n    <span *ngSwitchDefault>{{ value }}</span>\n  </div>\n</ng-template>\n","import { Component, Input, OnChanges, TemplateRef, ViewChild } from '@angular/core';\n\nimport { NgbNav } from '@ng-bootstrap/ng-bootstrap';\n\nimport { RbdFormModel } from '../rbd-form/rbd-form.model';\n\n@Component({\n  selector: 'cd-rbd-details',\n  templateUrl: './rbd-details.component.html',\n  styleUrls: ['./rbd-details.component.scss']\n})\nexport class RbdDetailsComponent implements OnChanges {\n  @Input()\n  selection: RbdFormModel;\n  @Input()\n  images: any;\n\n  @ViewChild('poolConfigurationSourceTpl', { static: true })\n  poolConfigurationSourceTpl: TemplateRef<any>;\n\n  @ViewChild(NgbNav, { static: true })\n  nav: NgbNav;\n\n  rbdDashboardUrl: string;\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.rbdDashboardUrl = `rbd-details?var-Pool=${this.selection['pool_name']}&var-Image=${this.selection['name']}`;\n    }\n  }\n}\n","<ng-template #usageNotAvailableTooltipTpl>\n  <ng-container i18n>Only available for RBD images with <strong>fast-diff</strong> enabled</ng-container>\n</ng-template>\n\n<ng-container *ngIf=\"selection && selection.source !== 'REMOVING'\">\n  <nav ngbNav\n       #nav=\"ngbNav\"\n       class=\"nav-tabs\"\n       cdStatefulTab=\"rbd-details\">\n    <ng-container ngbNavItem=\"details\">\n      <a ngbNavLink\n         i18n>Details</a>\n      <ng-template ngbNavContent>\n        <table class=\"table table-striped table-bordered\">\n          <tbody>\n            <tr>\n              <td i18n\n                  class=\"bold w-25\">Name</td>\n              <td class=\"w-75\">{{ selection.name }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Pool</td>\n              <td>{{ selection.pool_name }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Data Pool</td>\n              <td>{{ selection.data_pool | empty }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Created</td>\n              <td>{{ selection.timestamp | cdDate }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Size</td>\n              <td>{{ selection.size | dimlessBinary }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Objects</td>\n              <td>{{ selection.num_objs | dimless }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Object size</td>\n              <td>{{ selection.obj_size | dimlessBinary }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Features</td>\n              <td>\n                <span *ngFor=\"let feature of selection.features_name\">\n                  <span class=\"badge badge-dark me-2\">{{ feature }}</span>\n                </span>\n              </td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Provisioned</td>\n              <td>\n                <span *ngIf=\"selection.features_name?.indexOf('fast-diff') === -1\">\n                  <span class=\"form-text text-muted\"\n                        [ngbTooltip]=\"usageNotAvailableTooltipTpl\"\n                        placement=\"top\"\n                        i18n>N/A</span>\n                </span>\n                <span *ngIf=\"selection.features_name?.indexOf('fast-diff') !== -1\">\n                  {{ selection.disk_usage | dimlessBinary }}\n                </span>\n              </td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Total provisioned</td>\n              <td>\n                <span *ngIf=\"selection.features_name?.indexOf('fast-diff') === -1\">\n                  <span class=\"form-text text-muted\"\n                        [ngbTooltip]=\"usageNotAvailableTooltipTpl\"\n                        placement=\"top\"\n                        i18n>N/A</span>\n                </span>\n                <span *ngIf=\"selection.features_name?.indexOf('fast-diff') !== -1\">\n                  {{ selection.total_disk_usage | dimlessBinary }}\n                </span>\n              </td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Striping unit</td>\n              <td>{{ selection.stripe_unit | dimlessBinary }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Striping count</td>\n              <td>{{ selection.stripe_count }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Parent</td>\n              <td>\n                <span *ngIf=\"selection.parent\">{{ selection.parent.pool_name }}<span\n                        *ngIf=\"selection.parent.pool_namespace\">/{{ selection.parent.pool_namespace }}</span>/{{ selection.parent.image_name }}@{{ selection.parent.snap_name }}</span>\n                <span *ngIf=\"!selection.parent\">-</span>\n              </td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Block name prefix</td>\n              <td>{{ selection.block_name_prefix }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Order</td>\n              <td>{{ selection.order }}</td>\n            </tr>\n            <tr>\n              <td i18n\n                  class=\"bold\">Format Version</td>\n              <td>{{ selection.image_format }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"snapshots\">\n      <a ngbNavLink\n         i18n>Snapshots</a>\n      <ng-template ngbNavContent>\n        <cd-rbd-snapshot-list [snapshots]=\"selection.snapshots\"\n                              [featuresName]=\"selection.features_name\"\n                              [poolName]=\"selection.pool_name\"\n                              [primary]=\"selection.primary\"\n                              [namespace]=\"selection.namespace\"\n                              [mirroring]=\"selection.mirror_mode\"\n                              [rbdName]=\"selection.name\"></cd-rbd-snapshot-list>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"configuration\">\n      <a ngbNavLink\n         i18n>Configuration</a>\n      <ng-template ngbNavContent>\n        <cd-rbd-configuration-table [data]=\"selection['configuration']\"></cd-rbd-configuration-table>\n      </ng-template>\n    </ng-container>\n\n    <ng-container ngbNavItem=\"performance\">\n      <a ngbNavLink\n         i18n>Performance</a>\n      <ng-template ngbNavContent>\n        <cd-grafana i18n-title\n                    title=\"RBD details\"\n                    [grafanaPath]=\"rbdDashboardUrl\"\n                    [type]=\"'metrics'\"\n                    uid=\"YhCYGcuZz\"\n                    grafanaStyle=\"one\">\n        </cd-grafana>\n      </ng-template>\n    </ng-container>\n  </nav>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n</ng-container>\n<ng-container *ngIf=\"selection && selection.source === 'REMOVING'\">\n  <cd-alert-panel type=\"warning\"\n                  i18n>Information can not be displayed for RBD in status 'Removing'.</cd-alert-panel>\n</ng-container>\n\n<ng-template #poolConfigurationSourceTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <ng-container *ngIf=\"+value; else global\">\n    <strong i18n\n            i18n-ngbTooltip\n            ngbTooltip=\"This setting overrides the global value\">Image</strong>\n  </ng-container>\n  <ng-template #global>\n    <span i18n\n          i18n-ngbTooltip\n          ngbTooltip=\"This is the global value. No value for this option has been set for this image.\">Global</span>\n  </ng-template>\n</ng-template>\n","import { RbdConfigurationEntry } from '~/app/shared/models/configuration';\n\nexport class RbdFormCloneRequestModel {\n  child_pool_name: string;\n  child_namespace: string;\n  child_image_name: string;\n  obj_size: number;\n  features: Array<string> = [];\n  stripe_unit: number;\n  stripe_count: number;\n  data_pool: string;\n  configuration?: RbdConfigurationEntry[];\n}\n","import { RbdConfigurationEntry } from '~/app/shared/models/configuration';\n\nexport class RbdFormCopyRequestModel {\n  dest_pool_name: string;\n  dest_namespace: string;\n  dest_image_name: string;\n  snapshot_name: string;\n  obj_size: number;\n  features: Array<string> = [];\n  stripe_unit: number;\n  stripe_count: number;\n  data_pool: string;\n  configuration: RbdConfigurationEntry[];\n}\n","import { RbdFormModel } from './rbd-form.model';\n\nexport class RbdFormCreateRequestModel extends RbdFormModel {\n  features: Array<string> = [];\n}\n","import { RbdConfigurationEntry } from '~/app/shared/models/configuration';\n\nexport class RbdFormEditRequestModel {\n  name: string;\n  size: number;\n  features: Array<string> = [];\n  configuration: RbdConfigurationEntry[];\n\n  enable_mirror?: boolean;\n  mirror_mode?: string;\n  primary?: boolean;\n  schedule_interval: string;\n  remove_scheduling? = false;\n}\n","export enum RbdFormMode {\n  editing = 'editing',\n  cloning = 'cloning',\n  copying = 'copying'\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport _ from 'lodash';\nimport { forkJoin, Observable, ReplaySubject } from 'rxjs';\nimport { first, switchMap } from 'rxjs/operators';\n\nimport { Pool } from '~/app/ceph/pool/pool';\nimport { PoolService } from '~/app/shared/api/pool.service';\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport {\n  RbdConfigurationEntry,\n  RbdConfigurationSourceField\n} from '~/app/shared/models/configuration';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { ImageSpec } from '~/app/shared/models/image-spec';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { FormatterService } from '~/app/shared/services/formatter.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { RBDImageFormat, RbdModel } from '../rbd-list/rbd-model';\nimport { RbdImageFeature } from './rbd-feature.interface';\nimport { RbdFormCloneRequestModel } from './rbd-form-clone-request.model';\nimport { RbdFormCopyRequestModel } from './rbd-form-copy-request.model';\nimport { RbdFormCreateRequestModel } from './rbd-form-create-request.model';\nimport { RbdFormEditRequestModel } from './rbd-form-edit-request.model';\nimport { RbdFormMode } from './rbd-form-mode.enum';\nimport { RbdFormResponseModel } from './rbd-form-response.model';\n\nclass ExternalData {\n  rbd: RbdFormResponseModel;\n  defaultFeatures: string[];\n  pools: Pool[];\n}\n\n@Component({\n  selector: 'cd-rbd-form',\n  templateUrl: './rbd-form.component.html',\n  styleUrls: ['./rbd-form.component.scss']\n})\nexport class RbdFormComponent extends CdForm implements OnInit {\n  poolPermission: Permission;\n  rbdForm: CdFormGroup;\n  getDirtyConfigurationValues: (\n    includeLocalField?: boolean,\n    localField?: RbdConfigurationSourceField\n  ) => RbdConfigurationEntry[];\n\n  namespaces: Array<string> = [];\n  namespacesByPoolCache = {};\n  pools: Array<Pool> = null;\n  allPools: Array<Pool> = null;\n  dataPools: Array<Pool> = null;\n  allDataPools: Array<Pool> = [];\n  features: { [key: string]: RbdImageFeature };\n  featuresList: RbdImageFeature[] = [];\n  initializeConfigData = new ReplaySubject<{\n    initialData: RbdConfigurationEntry[];\n    sourceType: RbdConfigurationSourceField;\n  }>(1);\n\n  pool: string;\n  peerConfigured = false;\n\n  advancedEnabled = false;\n\n  public rbdFormMode = RbdFormMode;\n  mode: RbdFormMode;\n\n  response: RbdFormResponseModel;\n  snapName: string;\n\n  defaultObjectSize = '4 MiB';\n\n  mirroringOptions = ['journal', 'snapshot'];\n  poolMirrorMode: string;\n  mirroring = false;\n  currentPoolName = '';\n\n  objectSizes: Array<string> = [\n    '4 KiB',\n    '8 KiB',\n    '16 KiB',\n    '32 KiB',\n    '64 KiB',\n    '128 KiB',\n    '256 KiB',\n    '512 KiB',\n    '1 MiB',\n    '2 MiB',\n    '4 MiB',\n    '8 MiB',\n    '16 MiB',\n    '32 MiB'\n  ];\n\n  defaultStripingUnit = '4 MiB';\n\n  defaultStripingCount = 1;\n\n  action: string;\n  resource: string;\n  private rbdImage = new ReplaySubject(1);\n  private routerUrl: string;\n\n  icons = Icons;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private route: ActivatedRoute,\n    private poolService: PoolService,\n    private rbdService: RbdService,\n    private formatter: FormatterService,\n    private taskWrapper: TaskWrapperService,\n    private dimlessBinaryPipe: DimlessBinaryPipe,\n    public actionLabels: ActionLabelsI18n,\n    private router: Router,\n    private rbdMirroringService: RbdMirroringService\n  ) {\n    super();\n    this.routerUrl = this.router.url;\n    this.poolPermission = this.authStorageService.getPermissions().pool;\n    this.resource = $localize`RBD`;\n    this.features = {\n      'deep-flatten': {\n        desc: $localize`Deep flatten`,\n        requires: null,\n        allowEnable: false,\n        allowDisable: true\n      },\n      layering: {\n        desc: $localize`Layering`,\n        requires: null,\n        allowEnable: false,\n        allowDisable: false\n      },\n      'exclusive-lock': {\n        desc: $localize`Exclusive lock`,\n        requires: null,\n        allowEnable: true,\n        allowDisable: true\n      },\n      'object-map': {\n        desc: $localize`Object map (requires exclusive-lock)`,\n        requires: 'exclusive-lock',\n        allowEnable: true,\n        allowDisable: true,\n        initDisabled: true\n      },\n      'fast-diff': {\n        desc: $localize`Fast diff (interlocked with object-map)`,\n        requires: 'object-map',\n        allowEnable: true,\n        allowDisable: true,\n        interlockedWith: 'object-map',\n        initDisabled: true\n      }\n    };\n    this.featuresList = this.objToArray(this.features);\n    this.createForm();\n  }\n\n  objToArray(obj: { [key: string]: any }) {\n    return _.map(obj, (o, key) => Object.assign(o, { key: key }));\n  }\n\n  createForm() {\n    this.rbdForm = new CdFormGroup(\n      {\n        parent: new FormControl(''),\n        name: new FormControl('', {\n          validators: [Validators.required, Validators.pattern(/^[^@/]+?$/)]\n        }),\n        pool: new FormControl(null, {\n          validators: [Validators.required]\n        }),\n        namespace: new FormControl(null),\n        useDataPool: new FormControl(false),\n        dataPool: new FormControl(null),\n        size: new FormControl(null, {\n          updateOn: 'blur'\n        }),\n        obj_size: new FormControl(this.defaultObjectSize),\n        features: new CdFormGroup(\n          this.featuresList.reduce((acc: object, e) => {\n            acc[e.key] = new FormControl({ value: false, disabled: !!e.initDisabled });\n            return acc;\n          }, {})\n        ),\n        mirroring: new FormControl(''),\n        schedule: new FormControl('', {\n          validators: [Validators.pattern(/^([0-9]+)d|([0-9]+)h|([0-9]+)m$/)] // check schedule interval to be in format - 1d or 1h or 1m\n        }),\n        mirroringMode: new FormControl(''),\n        stripingUnit: new FormControl(this.defaultStripingUnit),\n        stripingCount: new FormControl(this.defaultStripingCount, {\n          updateOn: 'blur'\n        })\n      },\n      this.validateRbdForm(this.formatter)\n    );\n  }\n\n  disableForEdit() {\n    this.rbdForm.get('parent').disable();\n    this.rbdForm.get('pool').disable();\n    this.rbdForm.get('namespace').disable();\n    this.rbdForm.get('useDataPool').disable();\n    this.rbdForm.get('dataPool').disable();\n    this.rbdForm.get('obj_size').disable();\n    this.rbdForm.get('stripingUnit').disable();\n    this.rbdForm.get('stripingCount').disable();\n\n    /* RBD Image Format v1 */\n    this.rbdImage.subscribe((image: RbdModel) => {\n      if (image.image_format === RBDImageFormat.V1) {\n        this.rbdForm.get('deep-flatten').disable();\n        this.rbdForm.get('layering').disable();\n        this.rbdForm.get('exclusive-lock').disable();\n      }\n    });\n  }\n\n  disableForClone() {\n    this.rbdForm.get('parent').disable();\n    this.rbdForm.get('size').disable();\n  }\n\n  disableForCopy() {\n    this.rbdForm.get('parent').disable();\n    this.rbdForm.get('size').disable();\n  }\n\n  ngOnInit() {\n    this.prepareFormForAction();\n    this.gatherNeededData().subscribe(this.handleExternalData.bind(this));\n  }\n\n  setExclusiveLock() {\n    if (this.mirroring && this.rbdForm.get('mirroringMode').value === 'journal') {\n      this.rbdForm.get('exclusive-lock').setValue(true);\n      this.rbdForm.get('exclusive-lock').disable();\n    } else {\n      this.rbdForm.get('exclusive-lock').enable();\n      if (this.poolMirrorMode === 'pool') {\n        this.rbdForm.get('mirroringMode').setValue(this.mirroringOptions[0]);\n      }\n    }\n  }\n\n  setMirrorMode() {\n    this.mirroring = !this.mirroring;\n    this.setExclusiveLock();\n    this.checkPeersConfigured();\n  }\n\n  checkPeersConfigured(poolname?: string) {\n    const poolName = poolname ? poolname : this.rbdForm.get('pool').value;\n    this.rbdMirroringService.getPeerForPool(poolName).subscribe((resp: any) => {\n      if (resp.length > 0) {\n        this.peerConfigured = true;\n      }\n    });\n  }\n\n  setPoolMirrorMode() {\n    this.currentPoolName =\n      this.mode === this.rbdFormMode.editing\n        ? this.response?.pool_name\n        : this.rbdForm.getValue('pool');\n    if (this.currentPoolName) {\n      this.rbdMirroringService.refresh();\n      this.rbdMirroringService.subscribeSummary((data) => {\n        const pool = data.content_data.pools.find((o: any) => o.name === this.currentPoolName);\n        this.poolMirrorMode = pool.mirror_mode;\n\n        if (pool.mirror_mode === 'disabled') {\n          this.mirroring = false;\n          this.rbdForm.get('mirroring').setValue(this.mirroring);\n          this.rbdForm.get('mirroring').disable();\n        }\n      });\n    }\n    this.setExclusiveLock();\n  }\n\n  private prepareFormForAction() {\n    const url = this.routerUrl;\n    if (url.startsWith('/block/rbd/edit')) {\n      this.mode = this.rbdFormMode.editing;\n      this.action = this.actionLabels.EDIT;\n      this.disableForEdit();\n    } else if (url.startsWith('/block/rbd/clone')) {\n      this.mode = this.rbdFormMode.cloning;\n      this.disableForClone();\n      this.action = this.actionLabels.CLONE;\n    } else if (url.startsWith('/block/rbd/copy')) {\n      this.mode = this.rbdFormMode.copying;\n      this.action = this.actionLabels.COPY;\n      this.disableForCopy();\n    } else {\n      this.action = this.actionLabels.CREATE;\n    }\n    _.each(this.features, (feature) => {\n      this.rbdForm\n        .get('features')\n        .get(feature.key)\n        .valueChanges.subscribe((value) => this.featureFormUpdate(feature.key, value));\n    });\n  }\n\n  private gatherNeededData(): Observable<object> {\n    const promises = {};\n    if (this.mode) {\n      // Mode is not set for creation\n      this.route.params.subscribe((params: { image_spec: string; snap: string }) => {\n        const imageSpec = ImageSpec.fromString(decodeURIComponent(params.image_spec));\n        if (params.snap) {\n          this.snapName = decodeURIComponent(params.snap);\n        }\n        promises['rbd'] = this.rbdService.get(imageSpec);\n        this.checkPeersConfigured(imageSpec.poolName);\n      });\n    } else {\n      // New image\n      promises['defaultFeatures'] = this.rbdService.defaultFeatures();\n    }\n    if (this.mode !== this.rbdFormMode.editing && this.poolPermission.read) {\n      promises['pools'] = this.poolService.list([\n        'pool_name',\n        'type',\n        'flags_names',\n        'application_metadata'\n      ]);\n    }\n    return forkJoin(promises);\n  }\n\n  private handleExternalData(data: ExternalData) {\n    this.handlePoolData(data.pools);\n    this.setPoolMirrorMode();\n\n    if (data.defaultFeatures) {\n      // Fetched only during creation\n      this.setFeatures(data.defaultFeatures);\n    }\n\n    if (data.rbd) {\n      // Not fetched for creation\n      const resp = data.rbd;\n      this.setResponse(resp, this.snapName);\n      this.rbdImage.next(resp);\n    }\n\n    this.loadingReady();\n  }\n\n  private handlePoolData(data: Pool[]) {\n    if (!data) {\n      // Not fetched while editing\n      return;\n    }\n    const pools: Pool[] = [];\n    const dataPools = [];\n    for (const pool of data) {\n      if (this.rbdService.isRBDPool(pool)) {\n        if (pool.type === 'replicated') {\n          pools.push(pool);\n          dataPools.push(pool);\n        } else if (pool.type === 'erasure' && pool.flags_names.indexOf('ec_overwrites') !== -1) {\n          dataPools.push(pool);\n        }\n      }\n    }\n    this.pools = pools;\n    this.allPools = pools;\n    this.dataPools = dataPools;\n    this.allDataPools = dataPools;\n    if (this.pools.length === 1) {\n      const poolName = this.pools[0].pool_name;\n      this.rbdForm.get('pool').setValue(poolName);\n      this.onPoolChange(poolName);\n    }\n    if (this.allDataPools.length <= 1) {\n      this.rbdForm.get('useDataPool').disable();\n    }\n  }\n\n  onPoolChange(selectedPoolName: string) {\n    const dataPoolControl = this.rbdForm.get('dataPool');\n    if (dataPoolControl.value === selectedPoolName) {\n      dataPoolControl.setValue(null);\n    }\n    this.dataPools = this.allDataPools\n      ? this.allDataPools.filter((dataPool: any) => {\n          return dataPool.pool_name !== selectedPoolName;\n        })\n      : [];\n    this.namespaces = null;\n    if (selectedPoolName in this.namespacesByPoolCache) {\n      this.namespaces = this.namespacesByPoolCache[selectedPoolName];\n    } else {\n      this.rbdService.listNamespaces(selectedPoolName).subscribe((namespaces: any[]) => {\n        namespaces = namespaces.map((namespace) => namespace.namespace);\n        this.namespacesByPoolCache[selectedPoolName] = namespaces;\n        this.namespaces = namespaces;\n      });\n    }\n    this.rbdForm.get('namespace').setValue(null);\n  }\n\n  onUseDataPoolChange() {\n    if (!this.rbdForm.getValue('useDataPool')) {\n      this.rbdForm.get('dataPool').setValue(null);\n      this.onDataPoolChange(null);\n    }\n  }\n\n  onDataPoolChange(selectedDataPoolName: string) {\n    const newPools = this.allPools.filter((pool: Pool) => {\n      return pool.pool_name !== selectedDataPoolName;\n    });\n    if (this.rbdForm.getValue('pool') === selectedDataPoolName) {\n      this.rbdForm.get('pool').setValue(null);\n    }\n    this.pools = newPools;\n  }\n\n  validateRbdForm(formatter: FormatterService): ValidatorFn {\n    return (formGroup: CdFormGroup) => {\n      // Data Pool\n      const useDataPoolControl = formGroup.get('useDataPool');\n      const dataPoolControl = formGroup.get('dataPool');\n      let dataPoolControlErrors = null;\n      if (useDataPoolControl.value && dataPoolControl.value == null) {\n        dataPoolControlErrors = { required: true };\n      }\n      dataPoolControl.setErrors(dataPoolControlErrors);\n      // Size\n      const sizeControl = formGroup.get('size');\n      const objectSizeControl = formGroup.get('obj_size');\n      const objectSizeInBytes = formatter.toBytes(\n        objectSizeControl.value != null ? objectSizeControl.value : this.defaultObjectSize\n      );\n      const stripingCountControl = formGroup.get('stripingCount');\n      const stripingCount =\n        stripingCountControl.value != null ? stripingCountControl.value : this.defaultStripingCount;\n      let sizeControlErrors = null;\n      if (sizeControl.value === null) {\n        sizeControlErrors = { required: true };\n      } else {\n        const sizeInBytes = formatter.toBytes(sizeControl.value);\n        if (stripingCount * objectSizeInBytes > sizeInBytes) {\n          sizeControlErrors = { invalidSizeObject: true };\n        }\n      }\n      sizeControl.setErrors(sizeControlErrors);\n      // Striping Unit\n      const stripingUnitControl = formGroup.get('stripingUnit');\n      let stripingUnitControlErrors = null;\n      if (stripingUnitControl.value === null && stripingCountControl.value !== null) {\n        stripingUnitControlErrors = { required: true };\n      } else if (stripingUnitControl.value !== null) {\n        const stripingUnitInBytes = formatter.toBytes(stripingUnitControl.value);\n        if (stripingUnitInBytes > objectSizeInBytes) {\n          stripingUnitControlErrors = { invalidStripingUnit: true };\n        }\n      }\n      stripingUnitControl.setErrors(stripingUnitControlErrors);\n      // Striping Count\n      let stripingCountControlErrors = null;\n      if (stripingCountControl.value === null && stripingUnitControl.value !== null) {\n        stripingCountControlErrors = { required: true };\n      } else if (stripingCount < 1) {\n        stripingCountControlErrors = { min: true };\n      }\n      stripingCountControl.setErrors(stripingCountControlErrors);\n      return null;\n    };\n  }\n\n  deepBoxCheck(key: string, checked: boolean) {\n    const childFeatures = this.getDependentChildFeatures(key);\n    childFeatures.forEach((feature) => {\n      const featureControl = this.rbdForm.get(feature.key);\n      if (checked) {\n        featureControl.enable({ emitEvent: false });\n      } else {\n        featureControl.disable({ emitEvent: false });\n        featureControl.setValue(false, { emitEvent: false });\n        this.deepBoxCheck(feature.key, checked);\n      }\n\n      const featureFormGroup = this.rbdForm.get('features');\n      if (this.mode === this.rbdFormMode.editing && featureFormGroup.get(feature.key).enabled) {\n        if (this.response.features_name.indexOf(feature.key) !== -1 && !feature.allowDisable) {\n          featureFormGroup.get(feature.key).disable();\n        } else if (\n          this.response.features_name.indexOf(feature.key) === -1 &&\n          !feature.allowEnable\n        ) {\n          featureFormGroup.get(feature.key).disable();\n        }\n      }\n    });\n  }\n\n  protected getDependentChildFeatures(featureKey: string) {\n    return _.filter(this.features, (f) => f.requires === featureKey) || [];\n  }\n\n  interlockCheck(key: string, checked: boolean) {\n    // Adds a compatibility layer for Ceph cluster where the feature interlock of features hasn't\n    // been implemented yet. It disables the feature interlock for images which only have one of\n    // both interlocked features (at the time of this writing: object-map and fast-diff) enabled.\n    const feature = this.featuresList.find((f) => f.key === key);\n    if (this.response) {\n      // Ignore `create` page\n      const hasInterlockedFeature = feature.interlockedWith != null;\n      const dependentInterlockedFeature = this.featuresList.find(\n        (f) => f.interlockedWith === feature.key\n      );\n      const isOriginFeatureEnabled = !!this.response.features_name.find((e) => e === feature.key); // in this case: fast-diff\n      if (hasInterlockedFeature) {\n        const isLinkedEnabled = !!this.response.features_name.find(\n          (e) => e === feature.interlockedWith\n        ); // depends: object-map\n        if (isOriginFeatureEnabled !== isLinkedEnabled) {\n          return; // Ignore incompatible setting because it's from a previous cluster version\n        }\n      } else if (dependentInterlockedFeature) {\n        const isOtherInterlockedFeatureEnabled = !!this.response.features_name.find(\n          (e) => e === dependentInterlockedFeature.key\n        );\n        if (isOtherInterlockedFeatureEnabled !== isOriginFeatureEnabled) {\n          return; // Ignore incompatible setting because it's from a previous cluster version\n        }\n      }\n    }\n\n    if (checked) {\n      _.filter(this.features, (f) => f.interlockedWith === key).forEach((f) =>\n        this.rbdForm.get(f.key).setValue(true, { emitEvent: false })\n      );\n    } else {\n      if (feature.interlockedWith) {\n        // Don't skip emitting the event here, as it prevents `fast-diff` from\n        // becoming disabled when manually unchecked.  This is because it\n        // triggers an update on `object-map` and if `object-map` doesn't emit,\n        // `fast-diff` will not be automatically disabled.\n        this.rbdForm.get('features').get(feature.interlockedWith).setValue(false);\n      }\n    }\n  }\n\n  featureFormUpdate(key: string, checked: boolean) {\n    if (checked) {\n      const required = this.features[key].requires;\n      if (required && !this.rbdForm.getValue(required)) {\n        this.rbdForm.get(`features.${key}`).setValue(false);\n        return;\n      }\n    }\n    this.deepBoxCheck(key, checked);\n    this.interlockCheck(key, checked);\n  }\n\n  setFeatures(features: Array<string>) {\n    const featuresControl = this.rbdForm.get('features');\n    _.forIn(this.features, (feature) => {\n      if (features.indexOf(feature.key) !== -1) {\n        featuresControl.get(feature.key).setValue(true);\n      }\n      this.featureFormUpdate(feature.key, featuresControl.get(feature.key).value);\n    });\n  }\n\n  setResponse(response: RbdFormResponseModel, snapName: string) {\n    this.response = response;\n    const imageSpec = new ImageSpec(\n      response.pool_name,\n      response.namespace,\n      response.name\n    ).toString();\n    if (this.mode === this.rbdFormMode.cloning) {\n      this.rbdForm.get('parent').setValue(`${imageSpec}@${snapName}`);\n    } else if (this.mode === this.rbdFormMode.copying) {\n      if (snapName) {\n        this.rbdForm.get('parent').setValue(`${imageSpec}@${snapName}`);\n      } else {\n        this.rbdForm.get('parent').setValue(`${imageSpec}`);\n      }\n    } else if (response.parent) {\n      const parent = response.parent;\n      this.rbdForm\n        .get('parent')\n        .setValue(`${parent.pool_name}/${parent.image_name}@${parent.snap_name}`);\n    }\n    if (this.mode === this.rbdFormMode.editing) {\n      this.rbdForm.get('name').setValue(response.name);\n      if (response?.mirror_mode === 'snapshot' || response.features_name.includes('journaling')) {\n        this.mirroring = true;\n        this.rbdForm.get('mirroring').setValue(this.mirroring);\n        this.rbdForm.get('mirroringMode').setValue(response?.mirror_mode);\n        this.rbdForm.get('schedule').setValue(response?.schedule_interval);\n      } else {\n        this.mirroring = false;\n        this.rbdForm.get('mirroring').setValue(this.mirroring);\n      }\n      this.setPoolMirrorMode();\n    }\n    this.rbdForm.get('pool').setValue(response.pool_name);\n    this.onPoolChange(response.pool_name);\n    this.rbdForm.get('namespace').setValue(response.namespace);\n    if (response.data_pool) {\n      this.rbdForm.get('useDataPool').setValue(true);\n      this.rbdForm.get('dataPool').setValue(response.data_pool);\n    }\n    this.rbdForm.get('size').setValue(this.dimlessBinaryPipe.transform(response.size));\n    this.rbdForm.get('obj_size').setValue(this.dimlessBinaryPipe.transform(response.obj_size));\n    this.setFeatures(response.features_name);\n    this.rbdForm\n      .get('stripingUnit')\n      .setValue(this.dimlessBinaryPipe.transform(response.stripe_unit));\n    this.rbdForm.get('stripingCount').setValue(response.stripe_count);\n    /* Configuration */\n    this.initializeConfigData.next({\n      initialData: this.response.configuration,\n      sourceType: RbdConfigurationSourceField.image\n    });\n  }\n\n  createRequest() {\n    const request = new RbdFormCreateRequestModel();\n    request.pool_name = this.rbdForm.getValue('pool');\n    request.namespace = this.rbdForm.getValue('namespace');\n    request.name = this.rbdForm.getValue('name');\n    request.schedule_interval = this.rbdForm.getValue('schedule');\n    request.size = this.formatter.toBytes(this.rbdForm.getValue('size'));\n\n    if (this.poolMirrorMode === 'image') {\n      request.mirror_mode = this.rbdForm.getValue('mirroringMode');\n    }\n    this.addObjectSizeAndStripingToRequest(request);\n    request.configuration = this.getDirtyConfigurationValues();\n    return request;\n  }\n\n  private addObjectSizeAndStripingToRequest(\n    request: RbdFormCreateRequestModel | RbdFormCloneRequestModel | RbdFormCopyRequestModel\n  ) {\n    request.obj_size = this.formatter.toBytes(this.rbdForm.getValue('obj_size'));\n    _.forIn(this.features, (feature) => {\n      if (this.rbdForm.getValue(feature.key)) {\n        request.features.push(feature.key);\n      }\n    });\n\n    if (this.mirroring && this.rbdForm.getValue('mirroringMode') === 'journal') {\n      request.features.push('journaling');\n    }\n\n    /* Striping */\n    request.stripe_unit = this.formatter.toBytes(this.rbdForm.getValue('stripingUnit'));\n    request.stripe_count = this.rbdForm.getValue('stripingCount');\n    request.data_pool = this.rbdForm.getValue('dataPool');\n  }\n\n  createAction(): Observable<any> {\n    const request = this.createRequest();\n    return this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/create', {\n        pool_name: request.pool_name,\n        namespace: request.namespace,\n        image_name: request.name,\n        schedule_interval: request.schedule_interval,\n        start_time: request.start_time\n      }),\n      call: this.rbdService.create(request)\n    });\n  }\n\n  editRequest() {\n    const request = new RbdFormEditRequestModel();\n    request.name = this.rbdForm.getValue('name');\n    request.schedule_interval = this.rbdForm.getValue('schedule');\n    request.name = this.rbdForm.getValue('name');\n    request.size = this.formatter.toBytes(this.rbdForm.getValue('size'));\n    _.forIn(this.features, (feature) => {\n      if (this.rbdForm.getValue(feature.key)) {\n        request.features.push(feature.key);\n      }\n    });\n    request.enable_mirror = this.rbdForm.getValue('mirroring');\n    if (request.enable_mirror) {\n      if (this.rbdForm.getValue('mirroringMode') === 'journal') {\n        request.features.push('journaling');\n      }\n      if (this.poolMirrorMode === 'image') {\n        request.mirror_mode = this.rbdForm.getValue('mirroringMode');\n      }\n    } else {\n      const index = request.features.indexOf('journaling', 0);\n      if (index > -1) {\n        request.features.splice(index, 1);\n      }\n    }\n    request.configuration = this.getDirtyConfigurationValues();\n    return request;\n  }\n\n  cloneRequest(): RbdFormCloneRequestModel {\n    const request = new RbdFormCloneRequestModel();\n    request.child_pool_name = this.rbdForm.getValue('pool');\n    request.child_namespace = this.rbdForm.getValue('namespace');\n    request.child_image_name = this.rbdForm.getValue('name');\n    this.addObjectSizeAndStripingToRequest(request);\n    request.configuration = this.getDirtyConfigurationValues(\n      true,\n      RbdConfigurationSourceField.image\n    );\n    return request;\n  }\n\n  editAction(): Observable<any> {\n    const imageSpec = new ImageSpec(\n      this.response.pool_name,\n      this.response.namespace,\n      this.response.name\n    );\n    return this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/edit', {\n        image_spec: imageSpec.toString()\n      }),\n      call: this.rbdService.update(imageSpec, this.editRequest())\n    });\n  }\n\n  cloneAction(): Observable<any> {\n    const request = this.cloneRequest();\n    const imageSpec = new ImageSpec(\n      this.response.pool_name,\n      this.response.namespace,\n      this.response.name\n    );\n    return this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/clone', {\n        parent_image_spec: imageSpec.toString(),\n        parent_snap_name: this.snapName,\n        child_pool_name: request.child_pool_name,\n        child_namespace: request.child_namespace,\n        child_image_name: request.child_image_name\n      }),\n      call: this.rbdService.cloneSnapshot(imageSpec, this.snapName, request)\n    });\n  }\n\n  copyRequest(): RbdFormCopyRequestModel {\n    const request = new RbdFormCopyRequestModel();\n    if (this.snapName) {\n      request.snapshot_name = this.snapName;\n    }\n    request.dest_pool_name = this.rbdForm.getValue('pool');\n    request.dest_namespace = this.rbdForm.getValue('namespace');\n    request.dest_image_name = this.rbdForm.getValue('name');\n    this.addObjectSizeAndStripingToRequest(request);\n    request.configuration = this.getDirtyConfigurationValues(\n      true,\n      RbdConfigurationSourceField.image\n    );\n    return request;\n  }\n\n  copyAction(): Observable<any> {\n    const request = this.copyRequest();\n    const imageSpec = new ImageSpec(\n      this.response.pool_name,\n      this.response.namespace,\n      this.response.name\n    );\n    return this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/copy', {\n        src_image_spec: imageSpec.toString(),\n        dest_pool_name: request.dest_pool_name,\n        dest_namespace: request.dest_namespace,\n        dest_image_name: request.dest_image_name\n      }),\n      call: this.rbdService.copy(imageSpec, request)\n    });\n  }\n\n  submit() {\n    if (!this.mode) {\n      this.rbdImage.next('create');\n    }\n    this.rbdImage\n      .pipe(\n        first(),\n        switchMap(() => {\n          if (this.mode === this.rbdFormMode.editing) {\n            return this.editAction();\n          } else if (this.mode === this.rbdFormMode.cloning) {\n            return this.cloneAction();\n          } else if (this.mode === this.rbdFormMode.copying) {\n            return this.copyAction();\n          } else {\n            return this.createAction();\n          }\n        })\n      )\n      .subscribe(\n        () => undefined,\n        () => this.rbdForm.setErrors({ cdSubmitButton: true }),\n        () => this.router.navigate(['/block/rbd'])\n      );\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form name=\"rbdForm\"\n        #formDir=\"ngForm\"\n        [formGroup]=\"rbdForm\"\n        novalidate>\n    <div class=\"card\">\n      <div i18n=\"form title\"\n           class=\"card-header\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n      <div class=\"card-body\">\n\n        <!-- Parent -->\n        <div class=\"form-group row\"\n             *ngIf=\"rbdForm.getValue('parent')\">\n          <label i18n\n                 class=\"cd-col-form-label\"\n                 for=\"name\">{{ action | titlecase }} from</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   id=\"parent\"\n                   name=\"parent\"\n                   formControlName=\"parent\">\n            <hr>\n          </div>\n        </div>\n\n        <!-- Name -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"name\"\n                 i18n>Name</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Name...\"\n                   id=\"name\"\n                   name=\"name\"\n                   formControlName=\"name\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"rbdForm.showError('name', formDir, 'required')\">\n              <ng-container i18n>This field is required.</ng-container>\n            </span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"rbdForm.showError('name', formDir, 'pattern')\">\n              <ng-container i18n>'/' and '@' are not allowed.</ng-container>\n            </span>\n          </div>\n        </div>\n\n        <!-- Pool -->\n        <div class=\"form-group row\"\n             (change)=\"onPoolChange($event.target.value)\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': mode !== 'editing'}\"\n                 for=\"pool\"\n                 i18n>Pool</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Pool name...\"\n                   id=\"pool\"\n                   name=\"pool\"\n                   formControlName=\"pool\"\n                   *ngIf=\"mode === 'editing' || !poolPermission.read\">\n            <select id=\"pool\"\n                    name=\"pool\"\n                    class=\"form-select\"\n                    formControlName=\"pool\"\n                    *ngIf=\"mode !== 'editing' && poolPermission.read\"\n                    (change)=\"setPoolMirrorMode()\">\n              <option *ngIf=\"pools === null\"\n                      [ngValue]=\"null\"\n                      i18n>Loading...</option>\n              <option *ngIf=\"pools !== null && pools.length === 0\"\n                      [ngValue]=\"null\"\n                      i18n>-- No rbd pools available --</option>\n              <option *ngIf=\"pools !== null && pools.length > 0\"\n                      [ngValue]=\"null\"\n                      i18n>-- Select a pool --</option>\n              <option *ngFor=\"let pool of pools\"\n                      [value]=\"pool.pool_name\">{{ pool.pool_name }}</option>\n            </select>\n            <span *ngIf=\"rbdForm.showError('pool', formDir, 'required')\"\n                  class=\"invalid-feedback\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Namespace -->\n        <div class=\"form-group row\"\n             *ngIf=\"mode !== 'editing' && rbdForm.getValue('pool') && namespaces === null\">\n          <div class=\"cd-col-form-offset\">\n            <i [ngClass]=\"[icons.spinner, icons.spin]\"></i>\n          </div>\n        </div>\n        <div class=\"form-group row\"\n             *ngIf=\"(mode === 'editing' && rbdForm.getValue('namespace')) || mode !== 'editing' && (namespaces && namespaces.length > 0 || !poolPermission.read)\">\n          <label class=\"cd-col-form-label\"\n                 for=\"pool\">\n            Namespace\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Namespace...\"\n                   id=\"namespace\"\n                   name=\"namespace\"\n                   formControlName=\"namespace\"\n                   *ngIf=\"mode === 'editing' || !poolPermission.read\">\n            <select id=\"namespace\"\n                    name=\"namespace\"\n                    class=\"form-select\"\n                    formControlName=\"namespace\"\n                    *ngIf=\"mode !== 'editing' && poolPermission.read\">\n              <option *ngIf=\"pools === null\"\n                      [ngValue]=\"null\"\n                      i18n>Loading...</option>\n              <option *ngIf=\"pools !== null && pools.length === 0\"\n                      [ngValue]=\"null\"\n                      i18n>-- No namespaces available --</option>\n              <option *ngIf=\"pools !== null && pools.length > 0\"\n                      [ngValue]=\"null\"\n                      i18n>-- Select a namespace --</option>\n              <option *ngFor=\"let namespace of namespaces\"\n                      [value]=\"namespace\">{{ namespace }}</option>\n            </select>\n          </div>\n        </div>\n\n        <!-- Use a dedicated pool -->\n        <div class=\"form-group row\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     id=\"useDataPool\"\n                     name=\"useDataPool\"\n                     formControlName=\"useDataPool\"\n                     (change)=\"onUseDataPoolChange()\">\n              <label class=\"custom-control-label\"\n                     for=\"useDataPool\"\n                     i18n>Use a dedicated data pool</label>\n              <cd-helper *ngIf=\"allDataPools.length <= 1\">\n                <span i18n>You need more than one pool with the rbd application label use to use a dedicated data pool.</span>\n              </cd-helper>\n            </div>\n          </div>\n        </div>\n\n        <!-- Data Pool -->\n        <div class=\"form-group row\"\n             *ngIf=\"rbdForm.getValue('useDataPool')\">\n          <label class=\"cd-col-form-label\"\n                 for=\"dataPool\">\n            <span [ngClass]=\"{'required': mode !== 'editing'}\"\n                  i18n>Data pool</span>\n            <cd-helper i18n-html\n                       html=\"Dedicated pool that stores the object-data of the RBD.\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Data pool name...\"\n                   id=\"dataPool\"\n                   name=\"dataPool\"\n                   formControlName=\"dataPool\"\n                   *ngIf=\"mode === 'editing' || !poolPermission.read\">\n            <select id=\"dataPool\"\n                    name=\"dataPool\"\n                    class=\"form-select\"\n                    formControlName=\"dataPool\"\n                    (change)=\"onDataPoolChange($event.target.value)\"\n                    *ngIf=\"mode !== 'editing' && poolPermission.read\">\n              <option *ngIf=\"dataPools === null\"\n                      [ngValue]=\"null\"\n                      i18n>Loading...</option>\n              <option *ngIf=\"dataPools !== null && dataPools.length === 0\"\n                      [ngValue]=\"null\"\n                      i18n>-- No data pools available --</option>\n              <option *ngIf=\"dataPools !== null && dataPools.length > 0\"\n                      [ngValue]=\"null\">-- Select a data pool --\n              </option>\n              <option *ngFor=\"let dataPool of dataPools\"\n                      [value]=\"dataPool.pool_name\">{{ dataPool.pool_name }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"rbdForm.showError('dataPool', formDir, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Size -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"size\"\n                 i18n>Size</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"size\"\n                   name=\"size\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"size\"\n                   i18n-placeholder\n                   placeholder=\"e.g., 10GiB\"\n                   defaultUnit=\"GiB\"\n                   cdDimlessBinary>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"rbdForm.showError('size', formDir, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"rbdForm.showError('size', formDir, 'invalidSizeObject')\"\n                  i18n>You have to increase the size.</span>\n          </div>\n        </div>\n\n        <!-- Features -->\n        <div class=\"form-group row\"\n             formGroupName=\"features\">\n          <label i18n\n                 class=\"cd-col-form-label\"\n                 for=\"features\">Features</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"custom-control custom-checkbox\"\n                 *ngFor=\"let feature of featuresList\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     id=\"{{ feature.key }}\"\n                     name=\"{{ feature.key }}\"\n                     formControlName=\"{{ feature.key }}\">\n              <label class=\"custom-control-label\"\n                     for=\"{{ feature.key }}\">{{ feature.desc }}</label>\n              <cd-helper *ngIf=\"feature.helperHtml\"\n                         html=\"{{ feature.helperHtml }}\">\n              </cd-helper>\n            </div>\n          </div>\n        </div>\n\n        <!-- Mirroring -->\n        <div class=\"form-group row\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     id=\"mirroring\"\n                     name=\"mirroring\"\n                     (change)=\"setMirrorMode()\"\n                     formControlName=\"mirroring\">\n              <label class=\"custom-control-label\"\n                     for=\"mirroring\">Mirroring</label>\n              <cd-helper *ngIf=\"mirroring === false && this.currentPoolName\">\n                <span i18n>You need to enable a <b>mirror mode</b> in the selected pool. Please <a [routerLink]=\"['/block/mirroring', {outlets: {modal: ['edit', currentPoolName]}}]\">click here to select a mode and enable it in this pool.</a></span>\n              </cd-helper>\n            </div>\n            <div *ngIf=\"mirroring\">\n              <div class=\"custom-control custom-radio ms-2\"\n                   *ngFor=\"let option of mirroringOptions\">\n                <input type=\"radio\"\n                       class=\"form-check-input\"\n                       [id]=\"option\"\n                       [value]=\"option\"\n                       name=\"mirroringMode\"\n                       (change)=\"setExclusiveLock()\"\n                       formControlName=\"mirroringMode\"\n                       [attr.disabled]=\"(poolMirrorMode === 'pool' && option === 'snapshot') ? true : null\">\n                <label class=\"form-check-label\"\n                       [for]=\"option\">{{ option | titlecase }}</label>\n                <cd-helper *ngIf=\"poolMirrorMode === 'pool' && option === 'snapshot'\">\n                  <span i18n>You need to enable <b>image mirror mode</b> in the selected pool. Please <a [routerLink]=\"['/block/mirroring', {outlets: {modal: ['edit', currentPoolName]}}]\">click here to select a mode and enable it in this pool.</a></span>\n                </cd-helper>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\"\n             *ngIf=\"rbdForm.getValue('mirroringMode') === 'snapshot' && mirroring\">\n          <label class=\"cd-col-form-label\"\n                 i18n>Schedule Interval\n          <cd-helper i18n-html\n                     html=\"Create Mirror-Snapshots automatically on a periodic basis. The interval can be specified in days, hours, or minutes using d, h, m suffix respectively. To create mirror snapshots, you must import or create and have available peers to mirror\">\n          </cd-helper></label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"schedule\"\n                   name=\"schedule\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"schedule\"\n                   i18n-placeholder\n                   placeholder=\"e.g., 12h or 1d or 10m\"\n                   [attr.disabled]=\"(peerConfigured === false) ? true : null\">\n          </div>\n        </div>\n\n        <!-- Advanced -->\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <a class=\"float-end margin-right-md\"\n               (click)=\"advancedEnabled = true; false\"\n               *ngIf=\"!advancedEnabled\"\n               href=\"\"\n               i18n>Advanced...</a>\n          </div>\n        </div>\n\n        <div [hidden]=\"!advancedEnabled\">\n\n          <legend class=\"cd-header\"\n                  i18n>Advanced</legend>\n\n          <div class=\"col-md-12\">\n            <h4 class=\"cd-header\"\n                i18n>Striping</h4>\n\n            <!-- Object Size -->\n            <div class=\"form-group row\">\n              <label i18n\n                     class=\"cd-col-form-label\"\n                     for=\"size\">Object size<cd-helper>Objects in the Ceph Storage Cluster have a maximum configurable size (e.g., 2MB, 4MB, etc.). The object size should be large enough to accommodate many stripe units, and should be a multiple of the stripe unit.</cd-helper></label>\n              <div class=\"cd-col-form-input\">\n                <select id=\"obj_size\"\n                        name=\"obj_size\"\n                        class=\"form-select\"\n                        formControlName=\"obj_size\">\n                  <option *ngFor=\"let objectSize of objectSizes\"\n                          [value]=\"objectSize\">{{ objectSize }}</option>\n                </select>\n              </div>\n            </div>\n\n            <!-- stripingUnit -->\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     [ngClass]=\"{'required': rbdForm.getValue('stripingCount')}\"\n                     for=\"stripingUnit\"\n                     i18n>Stripe unit<cd-helper>Stripes have a configurable unit size (e.g., 64kb). The Ceph Client divides the data it will write to objects into equally sized stripe units, except for the last stripe unit. A stripe width, should be a fraction of the Object Size so that an object may contain many stripe units.</cd-helper></label>\n              <div class=\"cd-col-form-input\">\n                <select id=\"stripingUnit\"\n                        name=\"stripingUnit\"\n                        class=\"form-select\"\n                        formControlName=\"stripingUnit\">\n                  <option i18n\n                          [ngValue]=\"null\">-- Select stripe unit --</option>\n                  <option *ngFor=\"let objectSize of objectSizes\"\n                          [value]=\"objectSize\">{{ objectSize }}</option>\n                </select>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"rbdForm.showError('stripingUnit', formDir, 'required')\"\n                      i18n>This field is required because stripe count is defined!</span>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"rbdForm.showError('stripingUnit', formDir, 'invalidStripingUnit')\"\n                      i18n>Stripe unit is greater than object size.</span>\n              </div>\n            </div>\n\n            <!-- Stripe Count -->\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     [ngClass]=\"{'required': rbdForm.getValue('stripingUnit')}\"\n                     for=\"stripingCount\"\n                     i18n>Stripe count<cd-helper>The Ceph Client writes a sequence of stripe units over a series of objects determined by the stripe count. The series of objects is called an object set. After the Ceph Client writes to the last object in the object set, it returns to the first object in the object set.</cd-helper></label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"stripingCount\"\n                       name=\"stripingCount\"\n                       formControlName=\"stripingCount\"\n                       class=\"form-control\"\n                       type=\"number\">\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"rbdForm.showError('stripingCount', formDir, 'required')\"\n                      i18n>This field is required because stripe unit is defined!</span>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"rbdForm.showError('stripingCount', formDir, 'min')\"\n                      i18n>Stripe count must be greater than 0.</span>\n              </div>\n            </div>\n          </div>\n\n          <cd-rbd-configuration-form [form]=\"rbdForm\"\n                                     [initializeData]=\"initializeConfigData\"\n                                     (changes)=\"getDirtyConfigurationValues = $event\"></cd-rbd-configuration-form>\n        </div>\n\n      </div>\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                              [form]=\"formDir\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n","import { RbdConfigurationEntry } from '~/app/shared/models/configuration';\n\nexport class RbdFormModel {\n  name: string;\n  pool_name: string;\n  namespace: string;\n  data_pool: string;\n  size: number;\n\n  /* Striping */\n  obj_size: number;\n  stripe_unit: number;\n  stripe_count: number;\n\n  /* Configuration */\n  configuration: RbdConfigurationEntry[];\n\n  /* Deletion process */\n  source?: string;\n\n  enable_mirror?: boolean;\n  mirror_mode?: string;\n\n  schedule_interval: string;\n  start_time: string;\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { Observable, Subscriber } from 'rxjs';\n\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { TableStatus } from '~/app/shared/classes/table-status';\nimport { ConfirmationModalComponent } from '~/app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { ImageSpec } from '~/app/shared/models/image-spec';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { Task } from '~/app/shared/models/task';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { DimlessPipe } from '~/app/shared/pipes/dimless.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { CdTableServerSideService } from '~/app/shared/services/cd-table-server-side.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskListService } from '~/app/shared/services/task-list.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\nimport { RbdFormEditRequestModel } from '../rbd-form/rbd-form-edit-request.model';\nimport { RbdParentModel } from '../rbd-form/rbd-parent.model';\nimport { RbdTrashMoveModalComponent } from '../rbd-trash-move-modal/rbd-trash-move-modal.component';\nimport { RBDImageFormat, RbdModel } from './rbd-model';\n\nconst BASE_URL = 'block/rbd';\n\n@Component({\n  selector: 'cd-rbd-list',\n  templateUrl: './rbd-list.component.html',\n  styleUrls: ['./rbd-list.component.scss'],\n  providers: [\n    TaskListService,\n    { provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }\n  ]\n})\nexport class RbdListComponent extends ListWithDetails implements OnInit {\n  @ViewChild(TableComponent, { static: true })\n  table: TableComponent;\n  @ViewChild('usageTpl')\n  usageTpl: TemplateRef<any>;\n  @ViewChild('parentTpl', { static: true })\n  parentTpl: TemplateRef<any>;\n  @ViewChild('nameTpl')\n  nameTpl: TemplateRef<any>;\n  @ViewChild('scheduleTpl', { static: true })\n  scheduleTpl: TemplateRef<any>;\n  @ViewChild('mirroringTpl', { static: true })\n  mirroringTpl: TemplateRef<any>;\n  @ViewChild('flattenTpl', { static: true })\n  flattenTpl: TemplateRef<any>;\n  @ViewChild('deleteTpl', { static: true })\n  deleteTpl: TemplateRef<any>;\n  @ViewChild('removingStatTpl', { static: true })\n  removingStatTpl: TemplateRef<any>;\n  @ViewChild('provisionedNotAvailableTooltipTpl', { static: true })\n  provisionedNotAvailableTooltipTpl: TemplateRef<any>;\n  @ViewChild('totalProvisionedNotAvailableTooltipTpl', { static: true })\n  totalProvisionedNotAvailableTooltipTpl: TemplateRef<any>;\n\n  permission: Permission;\n  tableActions: CdTableAction[];\n  images: any;\n  columns: CdTableColumn[];\n  retries: number;\n  tableStatus = new TableStatus('light');\n  selection = new CdTableSelection();\n  icons = Icons;\n  count = 0;\n  private tableContext: CdTableFetchDataContext = null;\n  modalRef: NgbModalRef;\n\n  builders = {\n    'rbd/create': (metadata: object) =>\n      this.createRbdFromTask(metadata['pool_name'], metadata['namespace'], metadata['image_name']),\n    'rbd/delete': (metadata: object) => this.createRbdFromTaskImageSpec(metadata['image_spec']),\n    'rbd/clone': (metadata: object) =>\n      this.createRbdFromTask(\n        metadata['child_pool_name'],\n        metadata['child_namespace'],\n        metadata['child_image_name']\n      ),\n    'rbd/copy': (metadata: object) =>\n      this.createRbdFromTask(\n        metadata['dest_pool_name'],\n        metadata['dest_namespace'],\n        metadata['dest_image_name']\n      )\n  };\n  remove_scheduling: boolean;\n\n  private createRbdFromTaskImageSpec(imageSpecStr: string): RbdModel {\n    const imageSpec = ImageSpec.fromString(imageSpecStr);\n    return this.createRbdFromTask(imageSpec.poolName, imageSpec.namespace, imageSpec.imageName);\n  }\n\n  private createRbdFromTask(pool: string, namespace: string, name: string): RbdModel {\n    const model = new RbdModel();\n    model.id = '-1';\n    model.unique_id = '-1';\n    model.name = name;\n    model.namespace = namespace;\n    model.pool_name = pool;\n    model.image_format = RBDImageFormat.V2;\n    return model;\n  }\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rbdService: RbdService,\n    private dimlessBinaryPipe: DimlessBinaryPipe,\n    private dimlessPipe: DimlessPipe,\n    private modalService: ModalService,\n    private taskWrapper: TaskWrapperService,\n    public taskListService: TaskListService,\n    private urlBuilder: URLBuilderService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.permission = this.authStorageService.getPermissions().rbdImage;\n    const getImageUri = () =>\n      this.selection.first() &&\n      new ImageSpec(\n        this.selection.first().pool_name,\n        this.selection.first().namespace,\n        this.selection.first().name\n      ).toStringEncoded();\n    const addAction: CdTableAction = {\n      permission: 'create',\n      icon: Icons.add,\n      routerLink: () => this.urlBuilder.getCreate(),\n      canBePrimary: (selection: CdTableSelection) => !selection.hasSingleSelection,\n      name: this.actionLabels.CREATE\n    };\n    const editAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      routerLink: () => this.urlBuilder.getEdit(getImageUri()),\n      name: this.actionLabels.EDIT,\n      disable: (selection: CdTableSelection) =>\n        this.getRemovingStatusDesc(selection) || this.getInvalidNameDisable(selection)\n    };\n    const deleteAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      click: () => this.deleteRbdModal(),\n      name: this.actionLabels.DELETE,\n      disable: (selection: CdTableSelection) => this.getDeleteDisableDesc(selection)\n    };\n    const resyncAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.refresh,\n      click: () => this.resyncRbdModal(),\n      name: this.actionLabels.RESYNC,\n      disable: (selection: CdTableSelection) => this.getResyncDisableDesc(selection)\n    };\n    const copyAction: CdTableAction = {\n      permission: 'create',\n      canBePrimary: (selection: CdTableSelection) => selection.hasSingleSelection,\n      disable: (selection: CdTableSelection) =>\n        this.getRemovingStatusDesc(selection) ||\n        this.getInvalidNameDisable(selection) ||\n        !!selection.first().cdExecuting,\n      icon: Icons.copy,\n      routerLink: () => `/block/rbd/copy/${getImageUri()}`,\n      name: this.actionLabels.COPY\n    };\n    const flattenAction: CdTableAction = {\n      permission: 'update',\n      disable: (selection: CdTableSelection) =>\n        this.getRemovingStatusDesc(selection) ||\n        this.getInvalidNameDisable(selection) ||\n        selection.first().cdExecuting ||\n        !selection.first().parent,\n      icon: Icons.flatten,\n      click: () => this.flattenRbdModal(),\n      name: this.actionLabels.FLATTEN\n    };\n    const moveAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.trash,\n      click: () => this.trashRbdModal(),\n      name: this.actionLabels.TRASH,\n      disable: (selection: CdTableSelection) =>\n        this.getRemovingStatusDesc(selection) ||\n        this.getInvalidNameDisable(selection) ||\n        selection.first().image_format === RBDImageFormat.V1\n    };\n    const removeSchedulingAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      click: () => this.removeSchedulingModal(),\n      name: this.actionLabels.REMOVE_SCHEDULING,\n      disable: (selection: CdTableSelection) =>\n        this.getRemovingStatusDesc(selection) ||\n        this.getInvalidNameDisable(selection) ||\n        selection.first().schedule_info === undefined\n    };\n    const promoteAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      click: () => this.actionPrimary(true),\n      name: this.actionLabels.PROMOTE,\n      visible: () => this.selection.first() != null && !this.selection.first().primary\n    };\n    const demoteAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      click: () => this.actionPrimary(false),\n      name: this.actionLabels.DEMOTE,\n      visible: () => this.selection.first() != null && this.selection.first().primary\n    };\n    this.tableActions = [\n      addAction,\n      editAction,\n      copyAction,\n      flattenAction,\n      resyncAction,\n      deleteAction,\n      moveAction,\n      removeSchedulingAction,\n      promoteAction,\n      demoteAction\n    ];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Name`,\n        prop: 'name',\n        flexGrow: 2,\n        cellTemplate: this.removingStatTpl\n      },\n      {\n        name: $localize`Pool`,\n        prop: 'pool_name',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Namespace`,\n        prop: 'namespace',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Size`,\n        prop: 'size',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        sortable: false,\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: $localize`Objects`,\n        prop: 'num_objs',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        sortable: false,\n        pipe: this.dimlessPipe\n      },\n      {\n        name: $localize`Object size`,\n        prop: 'obj_size',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        sortable: false,\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: $localize`Provisioned`,\n        prop: 'disk_usage',\n        cellClass: 'text-center',\n        flexGrow: 1,\n        pipe: this.dimlessBinaryPipe,\n        sortable: false,\n        cellTemplate: this.provisionedNotAvailableTooltipTpl\n      },\n      {\n        name: $localize`Total provisioned`,\n        prop: 'total_disk_usage',\n        cellClass: 'text-center',\n        flexGrow: 1,\n        pipe: this.dimlessBinaryPipe,\n        sortable: false,\n        cellTemplate: this.totalProvisionedNotAvailableTooltipTpl\n      },\n      {\n        name: $localize`Parent`,\n        prop: 'parent',\n        flexGrow: 2,\n        sortable: false,\n        cellTemplate: this.parentTpl\n      },\n      {\n        name: $localize`Mirroring`,\n        prop: 'mirror_mode',\n        flexGrow: 3,\n        sortable: false,\n        cellTemplate: this.mirroringTpl\n      },\n      {\n        name: $localize`Next Scheduled Snapshot`,\n        prop: 'mirror_mode',\n        flexGrow: 3,\n        sortable: false,\n        cellTemplate: this.scheduleTpl\n      }\n    ];\n\n    const itemFilter = (entry: Record<string, any>, task: Task) => {\n      let taskImageSpec: string;\n      switch (task.name) {\n        case 'rbd/copy':\n          taskImageSpec = new ImageSpec(\n            task.metadata['dest_pool_name'],\n            task.metadata['dest_namespace'],\n            task.metadata['dest_image_name']\n          ).toString();\n          break;\n        case 'rbd/clone':\n          taskImageSpec = new ImageSpec(\n            task.metadata['child_pool_name'],\n            task.metadata['child_namespace'],\n            task.metadata['child_image_name']\n          ).toString();\n          break;\n        case 'rbd/create':\n          taskImageSpec = new ImageSpec(\n            task.metadata['pool_name'],\n            task.metadata['namespace'],\n            task.metadata['image_name']\n          ).toString();\n          break;\n        default:\n          taskImageSpec = task.metadata['image_spec'];\n          break;\n      }\n      return (\n        taskImageSpec === new ImageSpec(entry.pool_name, entry.namespace, entry.name).toString()\n      );\n    };\n\n    const taskFilter = (task: Task) => {\n      return [\n        'rbd/clone',\n        'rbd/copy',\n        'rbd/create',\n        'rbd/delete',\n        'rbd/edit',\n        'rbd/flatten',\n        'rbd/trash/move'\n      ].includes(task.name);\n    };\n\n    this.taskListService.init(\n      (context) => this.getRbdImages(context),\n      (resp) => this.prepareResponse(resp),\n      (images) => (this.images = images),\n      () => this.onFetchError(),\n      taskFilter,\n      itemFilter,\n      this.builders\n    );\n  }\n\n  onFetchError() {\n    this.table.reset(); // Disable loading indicator.\n    this.tableStatus = new TableStatus('danger');\n  }\n\n  getRbdImages(context: CdTableFetchDataContext) {\n    if (context !== null) {\n      this.tableContext = context;\n    }\n    if (this.tableContext == null) {\n      this.tableContext = new CdTableFetchDataContext(() => undefined);\n    }\n    return this.rbdService.list(this.tableContext?.toParams());\n  }\n\n  prepareResponse(resp: any[]): any[] {\n    let images: any[] = [];\n\n    resp.forEach((pool) => {\n      images = images.concat(pool.value);\n    });\n\n    images.forEach((image) => {\n      if (image.schedule_info !== undefined) {\n        let scheduling: any[] = [];\n        const scheduleStatus = 'scheduled';\n        let nextSnapshotDate = +new Date(image.schedule_info.schedule_time);\n        const offset = new Date().getTimezoneOffset();\n        nextSnapshotDate = nextSnapshotDate + Math.abs(offset) * 60000;\n        scheduling.push(image.mirror_mode, scheduleStatus, nextSnapshotDate);\n        image.mirror_mode = scheduling;\n        scheduling = [];\n      }\n    });\n\n    if (images.length > 0) {\n      this.count = CdTableServerSideService.getCount(resp[0]);\n    } else {\n      this.count = 0;\n    }\n    return images;\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteRbdModal() {\n    const poolName = this.selection.first().pool_name;\n    const namespace = this.selection.first().namespace;\n    const imageName = this.selection.first().name;\n    const imageSpec = new ImageSpec(poolName, namespace, imageName);\n\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: 'RBD',\n      itemNames: [imageSpec],\n      bodyTemplate: this.deleteTpl,\n      bodyContext: {\n        hasSnapshots: this.hasSnapshots(),\n        snapshots: this.listProtectedSnapshots()\n      },\n      submitActionObservable: () =>\n        this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask('rbd/delete', {\n            image_spec: imageSpec.toString()\n          }),\n          call: this.rbdService.delete(imageSpec)\n        })\n    });\n  }\n\n  resyncRbdModal() {\n    const poolName = this.selection.first().pool_name;\n    const namespace = this.selection.first().namespace;\n    const imageName = this.selection.first().name;\n    const imageSpec = new ImageSpec(poolName, namespace, imageName);\n\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: 'RBD',\n      itemNames: [imageSpec],\n      actionDescription: 'resync',\n      submitActionObservable: () =>\n        this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask('rbd/edit', {\n            image_spec: imageSpec.toString()\n          }),\n          call: this.rbdService.update(imageSpec, { resync: true })\n        })\n    });\n  }\n\n  trashRbdModal() {\n    const initialState = {\n      poolName: this.selection.first().pool_name,\n      namespace: this.selection.first().namespace,\n      imageName: this.selection.first().name,\n      hasSnapshots: this.hasSnapshots()\n    };\n    this.modalRef = this.modalService.show(RbdTrashMoveModalComponent, initialState);\n  }\n\n  flattenRbd(imageSpec: ImageSpec) {\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('rbd/flatten', {\n          image_spec: imageSpec.toString()\n        }),\n        call: this.rbdService.flatten(imageSpec)\n      })\n      .subscribe({\n        complete: () => {\n          this.modalRef.close();\n        }\n      });\n  }\n\n  flattenRbdModal() {\n    const poolName = this.selection.first().pool_name;\n    const namespace = this.selection.first().namespace;\n    const imageName = this.selection.first().name;\n    const parent: RbdParentModel = this.selection.first().parent;\n    const parentImageSpec = new ImageSpec(\n      parent.pool_name,\n      parent.pool_namespace,\n      parent.image_name\n    );\n    const childImageSpec = new ImageSpec(poolName, namespace, imageName);\n\n    const initialState = {\n      titleText: 'RBD flatten',\n      buttonText: 'Flatten',\n      bodyTpl: this.flattenTpl,\n      bodyData: {\n        parent: `${parentImageSpec}@${parent.snap_name}`,\n        child: childImageSpec.toString()\n      },\n      onSubmit: () => {\n        this.flattenRbd(childImageSpec);\n      }\n    };\n\n    this.modalRef = this.modalService.show(ConfirmationModalComponent, initialState);\n  }\n\n  editRequest() {\n    const request = new RbdFormEditRequestModel();\n    request.remove_scheduling = !request.remove_scheduling;\n    return request;\n  }\n\n  removeSchedulingModal() {\n    const imageName = this.selection.first().name;\n\n    const imageSpec = new ImageSpec(\n      this.selection.first().pool_name,\n      this.selection.first().namespace,\n      this.selection.first().name\n    );\n\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      actionDescription: 'remove scheduling on',\n      itemDescription: $localize`image`,\n      itemNames: [`${imageName}`],\n      submitActionObservable: () =>\n        new Observable((observer: Subscriber<any>) => {\n          this.taskWrapper\n            .wrapTaskAroundCall({\n              task: new FinishedTask('rbd/edit', {\n                image_spec: imageSpec.toString()\n              }),\n              call: this.rbdService.update(imageSpec, this.editRequest())\n            })\n            .subscribe({\n              error: (resp) => observer.error(resp),\n              complete: () => {\n                this.modalRef.close();\n              }\n            });\n        })\n    });\n  }\n\n  actionPrimary(primary: boolean) {\n    const request = new RbdFormEditRequestModel();\n    request.primary = primary;\n    request.features = null;\n    const imageSpec = new ImageSpec(\n      this.selection.first().pool_name,\n      this.selection.first().namespace,\n      this.selection.first().name\n    );\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('rbd/edit', {\n          image_spec: imageSpec.toString()\n        }),\n        call: this.rbdService.update(imageSpec, request)\n      })\n      .subscribe();\n  }\n\n  hasSnapshots() {\n    const snapshots = this.selection.first()['snapshots'] || [];\n    return snapshots.length > 0;\n  }\n\n  hasClonedSnapshots(image: object) {\n    const snapshots = image['snapshots'] || [];\n    return snapshots.some((snap: object) => snap['children'] && snap['children'].length > 0);\n  }\n\n  listProtectedSnapshots() {\n    const first = this.selection.first();\n    const snapshots = first['snapshots'];\n    return snapshots.reduce((accumulator: string[], snap: object) => {\n      if (snap['is_protected']) {\n        accumulator.push(snap['name']);\n      }\n      return accumulator;\n    }, []);\n  }\n\n  getDeleteDisableDesc(selection: CdTableSelection): string | boolean {\n    const first = selection.first();\n\n    if (first && this.hasClonedSnapshots(first)) {\n      return $localize`This RBD has cloned snapshots. Please delete related RBDs before deleting this RBD.`;\n    }\n\n    return this.getInvalidNameDisable(selection) || this.hasClonedSnapshots(selection.first());\n  }\n\n  getResyncDisableDesc(selection: CdTableSelection): string | boolean {\n    const first = selection.first();\n\n    if (first && this.imageIsPrimary(first)) {\n      return $localize`Primary RBD images cannot be resynced`;\n    }\n\n    return this.getInvalidNameDisable(selection);\n  }\n\n  imageIsPrimary(image: object) {\n    return image['primary'];\n  }\n  getInvalidNameDisable(selection: CdTableSelection): string | boolean {\n    const first = selection.first();\n\n    if (first?.name?.match(/[@/]/)) {\n      return $localize`This RBD image has an invalid name and can't be managed by ceph.`;\n    }\n\n    return !selection.first() || !selection.hasSingleSelection;\n  }\n\n  getRemovingStatusDesc(selection: CdTableSelection): string | boolean {\n    const first = selection.first();\n    if (first?.source === 'REMOVING') {\n      return $localize`Action not possible for an RBD in status 'Removing'`;\n    }\n    return false;\n  }\n}\n","<cd-rbd-tabs></cd-rbd-tabs>\n\n<cd-table #table\n          [data]=\"images\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          identifier=\"unique_id\"\n          [searchableObjects]=\"true\"\n          [serverSide]=\"true\"\n          [count]=\"count\"\n          forceIdentifier=\"true\"\n          selectionType=\"single\"\n          [hasDetails]=\"true\"\n          [status]=\"tableStatus\"\n          [maxLimit]=\"25\"\n          [autoReload]=\"-1\"\n          (fetchData)=\"taskListService.fetch($event)\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n  <cd-rbd-details cdTableDetail\n                  [selection]=\"expandedRow\">\n  </cd-rbd-details>\n</cd-table>\n\n<ng-template #scheduleStatus>\n  <div i18n\n       [innerHtml]=\"'Only available for RBD images with <strong>fast-diff</strong> enabled'\"></div>\n</ng-template>\n\n<ng-template #provisionedNotAvailableTooltipTpl\n             let-row=\"row\">\n  <span *ngIf=\"row.disk_usage === null && !row.features_name.includes('fast-diff'); else provisioned\"\n        [ngbTooltip]=\"usageNotAvailableTooltipTpl\"\n        placement=\"top\"\n        i18n>N/A</span>\n  <ng-template #provisioned\n               i18n>{{row.disk_usage | dimlessBinary}}</ng-template>\n</ng-template>\n\n<ng-template #totalProvisionedNotAvailableTooltipTpl\n             let-row=\"row\">\n  <span *ngIf=\"row.total_disk_usage === null && !row.features_name.includes('fast-diff'); else totalProvisioned\"\n        [ngbTooltip]=\"usageNotAvailableTooltipTpl\"\n        placement=\"top\"\n        i18n>N/A</span>\n  <ng-template #totalProvisioned\n               i18n>{{row.total_disk_usage | dimlessBinary}}</ng-template>\n</ng-template>\n\n<ng-template #parentTpl\n             let-value=\"value\">\n  <span *ngIf=\"value\">{{ value.pool_name }}<span\n          *ngIf=\"value.pool_namespace\">/{{ value.pool_namespace }}</span>/{{ value.image_name }}@{{ value.snap_name }}</span>\n  <span *ngIf=\"!value\">-</span>\n</ng-template>\n\n<ng-template #mirroringTpl\n             let-value=\"value\"\n             let-row=\"row\">\n  <span *ngIf=\"value.length === 3; else probb\"\n        class=\"badge badge-info\">{{ value[0] }}</span>&nbsp;\n  <span *ngIf=\"value.length === 3\"\n        class=\"badge badge-info\">{{ value[1] }}</span>&nbsp;\n  <span *ngIf=\"row.primary === true\"\n        class=\"badge badge-info\"\n        i18n>primary</span>\n  <span *ngIf=\"row.primary === false\"\n        class=\"badge badge-info\"\n        i18n>secondary</span>\n  <ng-template #probb>\n    <span class=\"badge badge-info\">{{ value }}</span>\n  </ng-template>\n</ng-template>\n\n<ng-template #scheduleTpl\n             let-value=\"value\"\n             let-row=\"row\">\n  <span *ngIf=\"value.length === 3\"\n        class=\"badge badge-info\">{{ value[2] | cdDate  }}</span>\n</ng-template>\n\n<ng-template #flattenTpl\n             let-value>\n  You are about to flatten\n  <strong>{{ value.child }}</strong>.\n  <br>\n  <br> All blocks will be copied from parent\n  <strong>{{ value.parent }}</strong> to child\n  <strong>{{ value.child }}</strong>.\n</ng-template>\n\n<ng-template #deleteTpl\n             let-hasSnapshots=\"hasSnapshots\"\n             let-snapshots=\"snapshots\">\n  <div class=\"alert alert-warning\"\n       *ngIf=\"hasSnapshots\"\n       role=\"alert\">\n    <span i18n>Deleting this image will also delete all its snapshots.</span>\n    <br>\n    <ng-container *ngIf=\"snapshots.length > 0\">\n      <span i18n>The following snapshots are currently protected and will be removed:</span>\n      <ul>\n        <li *ngFor=\"let snapshot of snapshots\">{{ snapshot }}</li>\n      </ul>\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template #removingStatTpl\n             let-column=\"column\"\n             let-value=\"value\"\n             let-row=\"row\">\n\n  <i [ngClass]=\"[icons.spinner, icons.spin]\"\n     *ngIf=\"row.cdExecuting\"></i>\n  <span [ngClass]=\"column?.customTemplateConfig?.valueClass\">\n    {{ value }}\n  </span>\n  <span *ngIf=\"row.cdExecuting\"\n        [ngClass]=\"column?.customTemplateConfig?.executingClass ?\n        column.customTemplateConfig.executingClass :\n        'text-muted italic'\">\n    ({{ row.cdExecuting }})\n  </span>\n  <i *ngIf=\"row.source && row.source === 'REMOVING'\"\n     i18n-title\n     title=\"RBD in status 'Removing'\"\n     class=\"{{ icons.warning }} warn\"></i>\n</ng-template>\n","export class RbdModel {\n  id: string;\n  unique_id: string;\n  name: string;\n  pool_name: string;\n  namespace: string;\n  image_format: RBDImageFormat;\n\n  cdExecuting: string;\n}\n\nexport enum RBDImageFormat {\n  V1 = 1,\n  V2 = 2\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  AsyncValidatorFn,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn\n} from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs';\n\nimport { Pool } from '~/app/ceph/pool/pool';\nimport { PoolService } from '~/app/shared/api/pool.service';\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-rbd-namespace-form-modal',\n  templateUrl: './rbd-namespace-form-modal.component.html',\n  styleUrls: ['./rbd-namespace-form-modal.component.scss']\n})\nexport class RbdNamespaceFormModalComponent implements OnInit {\n  poolPermission: Permission;\n  pools: Array<Pool> = null;\n  pool: string;\n  namespace: string;\n\n  namespaceForm: CdFormGroup;\n\n  editing = false;\n\n  public onSubmit: Subject<void>;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private authStorageService: AuthStorageService,\n    private notificationService: NotificationService,\n    private poolService: PoolService,\n    private rbdService: RbdService\n  ) {\n    this.poolPermission = this.authStorageService.getPermissions().pool;\n    this.createForm();\n  }\n\n  createForm() {\n    this.namespaceForm = new CdFormGroup(\n      {\n        pool: new FormControl(''),\n        namespace: new FormControl('')\n      },\n      this.validator(),\n      this.asyncValidator()\n    );\n  }\n\n  validator(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const poolCtrl = control.get('pool');\n      const namespaceCtrl = control.get('namespace');\n      let poolErrors = null;\n      if (!poolCtrl.value) {\n        poolErrors = { required: true };\n      }\n      poolCtrl.setErrors(poolErrors);\n      let namespaceErrors = null;\n      if (!namespaceCtrl.value) {\n        namespaceErrors = { required: true };\n      }\n      namespaceCtrl.setErrors(namespaceErrors);\n      return null;\n    };\n  }\n\n  asyncValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Promise<ValidationErrors | null> => {\n      return new Promise((resolve) => {\n        const poolCtrl = control.get('pool');\n        const namespaceCtrl = control.get('namespace');\n        this.rbdService.listNamespaces(poolCtrl.value).subscribe((namespaces: any[]) => {\n          if (namespaces.some((ns) => ns.namespace === namespaceCtrl.value)) {\n            const error = { namespaceExists: true };\n            namespaceCtrl.setErrors(error);\n            resolve(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    };\n  }\n\n  ngOnInit() {\n    this.onSubmit = new Subject();\n\n    if (this.poolPermission.read) {\n      this.poolService.list(['pool_name', 'type', 'application_metadata']).then((resp) => {\n        const pools: Pool[] = [];\n        for (const pool of resp) {\n          if (this.rbdService.isRBDPool(pool) && pool.type === 'replicated') {\n            pools.push(pool);\n          }\n        }\n        this.pools = pools;\n        if (this.pools.length === 1) {\n          const poolName = this.pools[0]['pool_name'];\n          this.namespaceForm.get('pool').setValue(poolName);\n        }\n      });\n    }\n  }\n\n  submit() {\n    const pool = this.namespaceForm.getValue('pool');\n    const namespace = this.namespaceForm.getValue('namespace');\n    const finishedTask = new FinishedTask();\n    finishedTask.name = 'rbd/namespace/create';\n    finishedTask.metadata = {\n      pool: pool,\n      namespace: namespace\n    };\n    this.rbdService\n      .createNamespace(pool, namespace)\n      .toPromise()\n      .then(() => {\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Created namespace '${pool}/${namespace}'`\n        );\n        this.activeModal.close();\n        this.onSubmit.next();\n      })\n      .catch(() => {\n        this.namespaceForm.setErrors({ cdSubmitButton: true });\n      });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\"\n                i18n>Create Namespace</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"namespaceForm\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"namespaceForm\"\n          novalidate>\n      <div class=\"modal-body\">\n\n        <!-- Pool -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"pool\"\n                 i18n>Pool</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Pool name...\"\n                   id=\"pool\"\n                   name=\"pool\"\n                   formControlName=\"pool\"\n                   *ngIf=\"!poolPermission.read\">\n            <select id=\"pool\"\n                    name=\"pool\"\n                    class=\"form-select\"\n                    formControlName=\"pool\"\n                    *ngIf=\"poolPermission.read\">\n              <option *ngIf=\"pools === null\"\n                      [ngValue]=\"null\"\n                      i18n>Loading...</option>\n              <option *ngIf=\"pools !== null && pools.length === 0\"\n                      [ngValue]=\"null\"\n                      i18n>-- No rbd pools available --</option>\n              <option *ngIf=\"pools !== null && pools.length > 0\"\n                      [ngValue]=\"null\"\n                      i18n>-- Select a pool --</option>\n              <option *ngFor=\"let pool of pools\"\n                      [value]=\"pool.pool_name\">{{ pool.pool_name }}</option>\n            </select>\n            <span *ngIf=\"namespaceForm.showError('pool', formDir, 'required')\"\n                  class=\"invalid-feedback\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Name -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"namespace\"\n                 i18n>Name</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Namespace name...\"\n                   id=\"namespace\"\n                   name=\"namespace\"\n                   formControlName=\"namespace\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"namespaceForm.showError('namespace', formDir, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"namespaceForm.showError('namespace', formDir, 'namespaceExists')\"\n                  i18n>Namespace already exists.</span>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                              [form]=\"namespaceForm\"\n                              [submitText]=\"actionLabels.CREATE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { forkJoin, Observable } from 'rxjs';\n\nimport { PoolService } from '~/app/shared/api/pool.service';\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { TaskListService } from '~/app/shared/services/task-list.service';\nimport { RbdNamespaceFormModalComponent } from '../rbd-namespace-form/rbd-namespace-form-modal.component';\n\n@Component({\n  selector: 'cd-rbd-namespace-list',\n  templateUrl: './rbd-namespace-list.component.html',\n  styleUrls: ['./rbd-namespace-list.component.scss'],\n  providers: [TaskListService]\n})\nexport class RbdNamespaceListComponent implements OnInit {\n  columns: CdTableColumn[];\n  namespaces: any;\n  modalRef: NgbModalRef;\n  permission: Permission;\n  selection = new CdTableSelection();\n  tableActions: CdTableAction[];\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rbdService: RbdService,\n    private poolService: PoolService,\n    private modalService: ModalService,\n    private notificationService: NotificationService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    this.permission = this.authStorageService.getPermissions().rbdImage;\n    const createAction: CdTableAction = {\n      permission: 'create',\n      icon: Icons.add,\n      click: () => this.createModal(),\n      name: this.actionLabels.CREATE\n    };\n    const deleteAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      click: () => this.deleteModal(),\n      name: this.actionLabels.DELETE,\n      disable: () => this.getDeleteDisableDesc()\n    };\n    this.tableActions = [createAction, deleteAction];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Namespace`,\n        prop: 'namespace',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Pool`,\n        prop: 'pool',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Total images`,\n        prop: 'num_images',\n        flexGrow: 1\n      }\n    ];\n    this.refresh();\n  }\n\n  refresh() {\n    this.poolService.list(['pool_name', 'type', 'application_metadata']).then((pools: any) => {\n      pools = pools.filter(\n        (pool: any) => this.rbdService.isRBDPool(pool) && pool.type === 'replicated'\n      );\n      const promisses: Observable<any>[] = [];\n      pools.forEach((pool: any) => {\n        promisses.push(this.rbdService.listNamespaces(pool['pool_name']));\n      });\n      if (promisses.length > 0) {\n        forkJoin(promisses).subscribe((data: Array<Array<string>>) => {\n          const result: any[] = [];\n          for (let i = 0; i < data.length; i++) {\n            const namespaces = data[i];\n            const pool_name = pools[i]['pool_name'];\n            namespaces.forEach((namespace: any) => {\n              result.push({\n                id: `${pool_name}/${namespace.namespace}`,\n                pool: pool_name,\n                namespace: namespace.namespace,\n                num_images: namespace.num_images\n              });\n            });\n          }\n          this.namespaces = result;\n        });\n      } else {\n        this.namespaces = [];\n      }\n    });\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  createModal() {\n    this.modalRef = this.modalService.show(RbdNamespaceFormModalComponent);\n    this.modalRef.componentInstance.onSubmit.subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  deleteModal() {\n    const pool = this.selection.first().pool;\n    const namespace = this.selection.first().namespace;\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: 'Namespace',\n      itemNames: [`${pool}/${namespace}`],\n      submitAction: () =>\n        this.rbdService.deleteNamespace(pool, namespace).subscribe(\n          () => {\n            this.notificationService.show(\n              NotificationType.success,\n              $localize`Deleted namespace '${pool}/${namespace}'`\n            );\n            this.modalRef.close();\n            this.refresh();\n          },\n          () => {\n            this.modalRef.componentInstance.stopLoadingSpinner();\n          }\n        )\n    });\n  }\n\n  getDeleteDisableDesc(): string | boolean {\n    const first = this.selection.first();\n\n    if (first?.num_images > 0) {\n      return $localize`Namespace contains images`;\n    }\n\n    return !this.selection?.first();\n  }\n}\n","<cd-rbd-tabs></cd-rbd-tabs>\n\n<cd-table [data]=\"namespaces\"\n          (fetchData)=\"refresh()\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          identifier=\"id\"\n          forceIdentifier=\"true\"\n          selectionType=\"single\"\n          (updateSelection)=\"updateSelection($event)\">\n  <div class=\"table-actions btn-toolbar\">\n    <cd-table-actions class=\"btn-group\"\n                      [permission]=\"permission\"\n                      [selection]=\"selection\"\n                      [tableActions]=\"tableActions\">\n    </cd-table-actions>\n  </div>\n</cd-table>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cd-rbd-performance',\n  templateUrl: './rbd-performance.component.html',\n  styleUrls: ['./rbd-performance.component.scss']\n})\nexport class RbdPerformanceComponent {}\n","<cd-rbd-tabs></cd-rbd-tabs>\n\n<cd-grafana i18n-title\n            title=\"RBD overview\"\n            [grafanaPath]=\"'rbd-overview?'\"\n            [type]=\"'metrics'\"\n            uid=\"41FrpeUiz\"\n            grafanaStyle=\"two\">\n</cd-grafana>\n","import { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs';\n\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { ImageSpec } from '~/app/shared/models/image-spec';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { TaskManagerService } from '~/app/shared/services/task-manager.service';\n\n@Component({\n  selector: 'cd-rbd-snapshot-form-modal',\n  templateUrl: './rbd-snapshot-form-modal.component.html',\n  styleUrls: ['./rbd-snapshot-form-modal.component.scss']\n})\nexport class RbdSnapshotFormModalComponent {\n  poolName: string;\n  namespace: string;\n  imageName: string;\n  snapName: string;\n  mirroring: string;\n\n  snapshotForm: CdFormGroup;\n\n  editing = false;\n  action: string;\n  resource: string;\n\n  public onSubmit: Subject<string> = new Subject();\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private rbdService: RbdService,\n    private taskManagerService: TaskManagerService,\n    private notificationService: NotificationService,\n    private actionLabels: ActionLabelsI18n\n  ) {\n    this.action = this.actionLabels.CREATE;\n    this.resource = $localize`RBD Snapshot`;\n    this.createForm();\n  }\n\n  createForm() {\n    this.snapshotForm = new CdFormGroup({\n      snapshotName: new FormControl('', {\n        validators: [Validators.required]\n      })\n    });\n  }\n\n  setSnapName(snapName: string) {\n    this.snapName = snapName;\n    if (this.mirroring !== 'snapshot') {\n      this.snapshotForm.get('snapshotName').setValue(snapName);\n    } else {\n      this.snapshotForm.get('snapshotName').clearValidators();\n    }\n  }\n\n  /**\n   * Set the 'editing' flag. If set to TRUE, the modal dialog is in\n   * 'Edit' mode, otherwise in 'Create' mode.\n   * @param {boolean} editing\n   */\n  setEditing(editing: boolean = true) {\n    this.editing = editing;\n    this.action = this.editing ? this.actionLabels.RENAME : this.actionLabels.CREATE;\n  }\n\n  editAction() {\n    const snapshotName = this.snapshotForm.getValue('snapshotName');\n    const imageSpec = new ImageSpec(this.poolName, this.namespace, this.imageName);\n    const finishedTask = new FinishedTask();\n    finishedTask.name = 'rbd/snap/edit';\n    finishedTask.metadata = {\n      image_spec: imageSpec.toString(),\n      snapshot_name: snapshotName\n    };\n    this.rbdService\n      .renameSnapshot(imageSpec, this.snapName, snapshotName)\n      .toPromise()\n      .then(() => {\n        this.taskManagerService.subscribe(\n          finishedTask.name,\n          finishedTask.metadata,\n          (asyncFinishedTask: FinishedTask) => {\n            this.notificationService.notifyTask(asyncFinishedTask);\n          }\n        );\n        this.activeModal.close();\n        this.onSubmit.next(this.snapName);\n      })\n      .catch(() => {\n        this.snapshotForm.setErrors({ cdSubmitButton: true });\n      });\n  }\n\n  createAction() {\n    const snapshotName = this.snapshotForm.getValue('snapshotName');\n    const imageSpec = new ImageSpec(this.poolName, this.namespace, this.imageName);\n    const finishedTask = new FinishedTask();\n    finishedTask.name = 'rbd/snap/create';\n    finishedTask.metadata = {\n      image_spec: imageSpec.toString(),\n      snapshot_name: snapshotName\n    };\n    this.rbdService\n      .createSnapshot(imageSpec, snapshotName)\n      .toPromise()\n      .then(() => {\n        this.taskManagerService.subscribe(\n          finishedTask.name,\n          finishedTask.metadata,\n          (asyncFinishedTask: FinishedTask) => {\n            this.notificationService.notifyTask(asyncFinishedTask);\n          }\n        );\n        this.activeModal.close();\n        this.onSubmit.next(snapshotName);\n      })\n      .catch(() => {\n        this.snapshotForm.setErrors({ cdSubmitButton: true });\n      });\n  }\n\n  submit() {\n    if (this.editing) {\n      this.editAction();\n    } else {\n      this.createAction();\n    }\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n=\"form title\"\n                class=\"modal-title\">{{ action | titlecase }} {{ resource | upperFirst }}</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"snapshotForm\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"snapshotForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <!-- Name -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"snapshotName\"\n                 i18n>Name</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Snapshot name...\"\n                   id=\"snapshotName\"\n                   name=\"snapshotName\"\n                   [attr.disabled]=\"(mirroring === 'snapshot') ? true : null\"\n                   formControlName=\"snapshotName\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"snapshotForm.showError('snapshotName', formDir, 'required')\"\n                  i18n>This field is required.</span><br><br>\n            <span *ngIf=\"mirroring === 'snapshot'\"\n                  i18n>Snapshot mode is enabled on image <b>{{ imageName }}</b>: snapshot names are auto generated</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                              [form]=\"snapshotForm\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { RbdService } from '~/app/shared/api/rbd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\n\nexport class RbdSnapshotActionsModel {\n  create: CdTableAction;\n  rename: CdTableAction;\n  protect: CdTableAction;\n  unprotect: CdTableAction;\n  clone: CdTableAction;\n  copy: CdTableAction;\n  rollback: CdTableAction;\n  deleteSnap: CdTableAction;\n  ordering: CdTableAction[];\n\n  cloneFormatVersion = 1;\n\n  constructor(\n    actionLabels: ActionLabelsI18n,\n    public featuresName: string[],\n    rbdService: RbdService\n  ) {\n    rbdService.cloneFormatVersion().subscribe((version: number) => {\n      this.cloneFormatVersion = version;\n    });\n\n    this.create = {\n      permission: 'create',\n      icon: Icons.add,\n      name: actionLabels.CREATE\n    };\n    this.rename = {\n      permission: 'update',\n      icon: Icons.edit,\n      name: actionLabels.RENAME,\n      disable: (selection: CdTableSelection) => this.disableForMirrorSnapshot(selection)\n    };\n    this.protect = {\n      permission: 'update',\n      icon: Icons.lock,\n      visible: (selection: CdTableSelection) =>\n        selection.hasSingleSelection && !selection.first().is_protected,\n      name: actionLabels.PROTECT,\n      disable: (selection: CdTableSelection) => this.disableForMirrorSnapshot(selection)\n    };\n    this.unprotect = {\n      permission: 'update',\n      icon: Icons.unlock,\n      visible: (selection: CdTableSelection) =>\n        selection.hasSingleSelection && selection.first().is_protected,\n      name: actionLabels.UNPROTECT,\n      disable: (selection: CdTableSelection) => this.disableForMirrorSnapshot(selection)\n    };\n    this.clone = {\n      permission: 'create',\n      canBePrimary: (selection: CdTableSelection) => selection.hasSingleSelection,\n      disable: (selection: CdTableSelection) =>\n        this.getCloneDisableDesc(selection, this.featuresName) ||\n        this.disableForMirrorSnapshot(selection),\n      icon: Icons.clone,\n      name: actionLabels.CLONE\n    };\n    this.copy = {\n      permission: 'create',\n      canBePrimary: (selection: CdTableSelection) => selection.hasSingleSelection,\n      disable: (selection: CdTableSelection) =>\n        !selection.hasSingleSelection ||\n        selection.first().cdExecuting ||\n        this.disableForMirrorSnapshot(selection),\n      icon: Icons.copy,\n      name: actionLabels.COPY\n    };\n    this.rollback = {\n      permission: 'update',\n      icon: Icons.undo,\n      name: actionLabels.ROLLBACK,\n      disable: (selection: CdTableSelection) => this.disableForMirrorSnapshot(selection)\n    };\n    this.deleteSnap = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      disable: (selection: CdTableSelection) => {\n        const first = selection.first();\n        return (\n          !selection.hasSingleSelection ||\n          first.cdExecuting ||\n          first.is_protected ||\n          this.disableForMirrorSnapshot(selection)\n        );\n      },\n      name: actionLabels.DELETE\n    };\n\n    this.ordering = [\n      this.create,\n      this.rename,\n      this.protect,\n      this.unprotect,\n      this.clone,\n      this.copy,\n      this.rollback,\n      this.deleteSnap\n    ];\n  }\n\n  getCloneDisableDesc(selection: CdTableSelection, featuresName: string[]): boolean | string {\n    if (selection.hasSingleSelection && !selection.first().cdExecuting) {\n      if (!featuresName?.includes('layering')) {\n        return $localize`Parent image must support Layering`;\n      }\n\n      if (this.cloneFormatVersion === 1 && !selection.first().is_protected) {\n        return $localize`Snapshot must be protected in order to clone.`;\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n\n  disableForMirrorSnapshot(selection: CdTableSelection) {\n    return (\n      selection.hasSingleSelection &&\n      selection.first().mirror_mode === 'snapshot' &&\n      selection.first().name.includes('.mirror.')\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport moment from 'moment';\nimport { of } from 'rxjs';\n\nimport { RbdMirroringService } from '~/app/shared/api/rbd-mirroring.service';\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { CdHelperClass } from '~/app/shared/classes/cd-helper.class';\nimport { ConfirmationModalComponent } from '~/app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { ExecutingTask } from '~/app/shared/models/executing-task';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { ImageSpec } from '~/app/shared/models/image-spec';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { Task } from '~/app/shared/models/task';\nimport { CdDatePipe } from '~/app/shared/pipes/cd-date.pipe';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { SummaryService } from '~/app/shared/services/summary.service';\nimport { TaskListService } from '~/app/shared/services/task-list.service';\nimport { TaskManagerService } from '~/app/shared/services/task-manager.service';\nimport { RbdSnapshotFormModalComponent } from '../rbd-snapshot-form/rbd-snapshot-form-modal.component';\nimport { RbdSnapshotActionsModel } from './rbd-snapshot-actions.model';\nimport { RbdSnapshotModel } from './rbd-snapshot.model';\n\n@Component({\n  selector: 'cd-rbd-snapshot-list',\n  templateUrl: './rbd-snapshot-list.component.html',\n  styleUrls: ['./rbd-snapshot-list.component.scss'],\n  providers: [TaskListService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RbdSnapshotListComponent implements OnInit, OnChanges {\n  @Input()\n  snapshots: RbdSnapshotModel[] = [];\n  @Input()\n  featuresName: string[];\n  @Input()\n  poolName: string;\n  @Input()\n  namespace: string;\n  @Input()\n  mirroring: string;\n  @Input()\n  primary: boolean;\n  @Input()\n  rbdName: string;\n  @ViewChild('nameTpl')\n  nameTpl: TemplateRef<any>;\n  @ViewChild('rollbackTpl', { static: true })\n  rollbackTpl: TemplateRef<any>;\n\n  permission: Permission;\n  selection = new CdTableSelection();\n  tableActions: CdTableAction[];\n  rbdTableActions: RbdSnapshotActionsModel;\n  imageSpec: ImageSpec;\n\n  data: RbdSnapshotModel[];\n\n  columns: CdTableColumn[];\n\n  modalRef: NgbModalRef;\n\n  peerConfigured = false;\n\n  builders = {\n    'rbd/snap/create': (metadata: any) => {\n      const model = new RbdSnapshotModel();\n      model.name = metadata['snapshot_name'];\n      return model;\n    }\n  };\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private modalService: ModalService,\n    private dimlessBinaryPipe: DimlessBinaryPipe,\n    private cdDatePipe: CdDatePipe,\n    private rbdService: RbdService,\n    private rbdMirrorService: RbdMirroringService,\n    private taskManagerService: TaskManagerService,\n    private notificationService: NotificationService,\n    private summaryService: SummaryService,\n    private taskListService: TaskListService,\n    private actionLabels: ActionLabelsI18n,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.permission = this.authStorageService.getPermissions().rbdImage;\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Name`,\n        prop: 'name',\n        cellTransformation: CellTemplate.executing,\n        flexGrow: 2\n      },\n      {\n        name: $localize`Size`,\n        prop: 'size',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: $localize`Provisioned`,\n        prop: 'disk_usage',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: $localize`State`,\n        prop: 'is_protected',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            true: { value: $localize`PROTECTED`, class: 'badge-success' },\n            false: { value: $localize`UNPROTECTED`, class: 'badge-info' }\n          }\n        }\n      },\n      {\n        name: $localize`Created`,\n        prop: 'timestamp',\n        flexGrow: 1,\n        pipe: this.cdDatePipe\n      }\n    ];\n\n    this.rbdMirrorService.getPeerForPool(this.poolName).subscribe((resp: any) => {\n      if (resp.length > 0) {\n        this.peerConfigured = true;\n      }\n    });\n\n    this.imageSpec = new ImageSpec(this.poolName, this.namespace, this.rbdName);\n    this.rbdTableActions = new RbdSnapshotActionsModel(\n      this.actionLabels,\n      this.featuresName,\n      this.rbdService\n    );\n    this.rbdTableActions.create.disable = () =>\n      !this.primary || (!this.peerConfigured && this.mirroring === 'snapshot');\n    this.rbdTableActions.create.click = () => this.openCreateSnapshotModal();\n    this.rbdTableActions.rename.click = () => this.openEditSnapshotModal();\n    this.rbdTableActions.protect.click = () => this.toggleProtection();\n    this.rbdTableActions.unprotect.click = () => this.toggleProtection();\n    const getImageUri = () =>\n      this.selection.first() &&\n      `${this.imageSpec.toStringEncoded()}/${encodeURIComponent(this.selection.first().name)}`;\n    this.rbdTableActions.clone.routerLink = () => `/block/rbd/clone/${getImageUri()}`;\n    this.rbdTableActions.copy.routerLink = () => `/block/rbd/copy/${getImageUri()}`;\n    this.rbdTableActions.rollback.click = () => this.rollbackModal();\n    this.rbdTableActions.deleteSnap.click = () => this.deleteSnapshotModal();\n\n    this.tableActions = this.rbdTableActions.ordering;\n\n    const itemFilter = (entry: any, task: Task) => {\n      return entry.name === task.metadata['snapshot_name'];\n    };\n\n    const taskFilter = (task: Task) => {\n      return (\n        ['rbd/snap/create', 'rbd/snap/delete', 'rbd/snap/edit', 'rbd/snap/rollback'].includes(\n          task.name\n        ) && this.imageSpec.toString() === task.metadata['image_spec']\n      );\n    };\n\n    this.taskListService.init(\n      () => of(this.snapshots),\n      null,\n      (items) => {\n        const hasChanges = CdHelperClass.updateChanged(this, {\n          data: items\n        });\n        if (hasChanges) {\n          this.cdr.detectChanges();\n          this.data = [...this.data];\n        }\n      },\n      () => {\n        const hasChanges = CdHelperClass.updateChanged(this, {\n          data: this.snapshots\n        });\n        if (hasChanges) {\n          this.cdr.detectChanges();\n          this.data = [...this.data];\n        }\n      },\n      taskFilter,\n      itemFilter,\n      this.builders\n    );\n  }\n\n  ngOnChanges() {\n    if (this.columns) {\n      this.imageSpec = new ImageSpec(this.poolName, this.namespace, this.rbdName);\n      if (this.rbdTableActions) {\n        this.rbdTableActions.featuresName = this.featuresName;\n      }\n      this.taskListService.fetch();\n    }\n  }\n\n  private openSnapshotModal(taskName: string, snapName: string = null) {\n    const modalVariables = {\n      mirroring: this.mirroring\n    };\n    this.modalRef = this.modalService.show(RbdSnapshotFormModalComponent, modalVariables);\n    this.modalRef.componentInstance.poolName = this.poolName;\n    this.modalRef.componentInstance.imageName = this.rbdName;\n    this.modalRef.componentInstance.namespace = this.namespace;\n    if (snapName) {\n      this.modalRef.componentInstance.setEditing();\n    } else {\n      // Auto-create a name for the snapshot: <image_name>_<timestamp_ISO_8601>\n      // https://en.wikipedia.org/wiki/ISO_8601\n      snapName = `${this.rbdName}_${moment().toISOString(true)}`;\n    }\n    this.modalRef.componentInstance.setSnapName(snapName);\n    this.modalRef.componentInstance.onSubmit.subscribe((snapshotName: string) => {\n      const executingTask = new ExecutingTask();\n      executingTask.name = taskName;\n      executingTask.metadata = {\n        image_spec: this.imageSpec.toString(),\n        snapshot_name: snapshotName\n      };\n      this.summaryService.addRunningTask(executingTask);\n    });\n  }\n\n  openCreateSnapshotModal() {\n    this.openSnapshotModal('rbd/snap/create');\n  }\n\n  openEditSnapshotModal() {\n    this.openSnapshotModal('rbd/snap/edit', this.selection.first().name);\n  }\n\n  toggleProtection() {\n    const snapshotName = this.selection.first().name;\n    const isProtected = this.selection.first().is_protected;\n    const finishedTask = new FinishedTask();\n    finishedTask.name = 'rbd/snap/edit';\n    const imageSpec = new ImageSpec(this.poolName, this.namespace, this.rbdName);\n    finishedTask.metadata = {\n      image_spec: imageSpec.toString(),\n      snapshot_name: snapshotName\n    };\n    this.rbdService\n      .protectSnapshot(imageSpec, snapshotName, !isProtected)\n      .toPromise()\n      .then(() => {\n        const executingTask = new ExecutingTask();\n        executingTask.name = finishedTask.name;\n        executingTask.metadata = finishedTask.metadata;\n        this.summaryService.addRunningTask(executingTask);\n        this.taskManagerService.subscribe(\n          finishedTask.name,\n          finishedTask.metadata,\n          (asyncFinishedTask: FinishedTask) => {\n            this.notificationService.notifyTask(asyncFinishedTask);\n          }\n        );\n      });\n  }\n\n  _asyncTask(task: string, taskName: string, snapshotName: string) {\n    const finishedTask = new FinishedTask();\n    finishedTask.name = taskName;\n    finishedTask.metadata = {\n      image_spec: new ImageSpec(this.poolName, this.namespace, this.rbdName).toString(),\n      snapshot_name: snapshotName\n    };\n    const imageSpec = new ImageSpec(this.poolName, this.namespace, this.rbdName);\n    this.rbdService[task](imageSpec, snapshotName)\n      .toPromise()\n      .then(() => {\n        const executingTask = new ExecutingTask();\n        executingTask.name = finishedTask.name;\n        executingTask.metadata = finishedTask.metadata;\n        this.summaryService.addRunningTask(executingTask);\n        this.modalRef.close();\n        this.taskManagerService.subscribe(\n          executingTask.name,\n          executingTask.metadata,\n          (asyncFinishedTask: FinishedTask) => {\n            this.notificationService.notifyTask(asyncFinishedTask);\n          }\n        );\n      })\n      .catch(() => {\n        this.modalRef.componentInstance.stopLoadingSpinner();\n      });\n  }\n\n  rollbackModal() {\n    const snapshotName = this.selection.selected[0].name;\n    const imageSpec = new ImageSpec(this.poolName, this.namespace, this.rbdName).toString();\n    const initialState = {\n      titleText: $localize`RBD snapshot rollback`,\n      buttonText: $localize`Rollback`,\n      bodyTpl: this.rollbackTpl,\n      bodyData: {\n        snapName: `${imageSpec}@${snapshotName}`\n      },\n      onSubmit: () => {\n        this._asyncTask('rollbackSnapshot', 'rbd/snap/rollback', snapshotName);\n      }\n    };\n\n    this.modalRef = this.modalService.show(ConfirmationModalComponent, initialState);\n  }\n\n  deleteSnapshotModal() {\n    const snapshotName = this.selection.selected[0].name;\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: $localize`RBD snapshot`,\n      itemNames: [snapshotName],\n      submitAction: () => this._asyncTask('deleteSnapshot', 'rbd/snap/delete', snapshotName)\n    });\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n}\n","<cd-table [data]=\"data\"\n          columnMode=\"flex\"\n          selectionType=\"single\"\n          (updateSelection)=\"updateSelection($event)\"\n          [columns]=\"columns\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n</cd-table>\n\n<ng-template #rollbackTpl\n             let-value>\n  <ng-container i18n>You are about to rollback</ng-container>\n  <strong> {{ value.snapName }}</strong>.\n</ng-template>\n","export class RbdSnapshotModel {\n  id: number;\n  name: string;\n  size: number;\n  timestamp: string;\n  is_protected: boolean;\n\n  cdExecuting: string;\n}\n","import { Component } from '@angular/core';\n\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-rbd-tabs',\n  templateUrl: './rbd-tabs.component.html',\n  styleUrls: ['./rbd-tabs.component.scss']\n})\nexport class RbdTabsComponent {\n  grafanaPermission: Permission;\n  url: string;\n\n  constructor(private authStorageService: AuthStorageService) {\n    this.grafanaPermission = this.authStorageService.getPermissions().grafana;\n  }\n}\n","<ul class=\"nav nav-tabs\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/block/rbd\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       [routerLinkActiveOptions]=\"{exact: true}\"\n       i18n>Images</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/block/rbd/namespaces\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       [routerLinkActiveOptions]=\"{exact: true}\"\n       i18n>Namespaces</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/block/rbd/trash\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       [routerLinkActiveOptions]=\"{exact: true}\"\n       i18n>Trash</a>\n  </li>\n  <li class=\"nav-item\"\n      *ngIf=\"grafanaPermission.read\">\n    <a class=\"nav-link\"\n       routerLink=\"/block/rbd/performance\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       [routerLinkActiveOptions]=\"{exact: true}\"\n       i18n>Overall Performance</a>\n  </li>\n</ul>\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { TableStatusViewCache } from '~/app/shared/classes/table-status-view-cache';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { ViewCacheStatus } from '~/app/shared/enum/view-cache-status.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { ExecutingTask } from '~/app/shared/models/executing-task';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { ImageSpec } from '~/app/shared/models/image-spec';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { Task } from '~/app/shared/models/task';\nimport { CdDatePipe } from '~/app/shared/pipes/cd-date.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskListService } from '~/app/shared/services/task-list.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { RbdTrashPurgeModalComponent } from '../rbd-trash-purge-modal/rbd-trash-purge-modal.component';\nimport { RbdTrashRestoreModalComponent } from '../rbd-trash-restore-modal/rbd-trash-restore-modal.component';\n\n@Component({\n  selector: 'cd-rbd-trash-list',\n  templateUrl: './rbd-trash-list.component.html',\n  styleUrls: ['./rbd-trash-list.component.scss'],\n  providers: [TaskListService]\n})\nexport class RbdTrashListComponent implements OnInit {\n  @ViewChild(TableComponent, { static: true })\n  table: TableComponent;\n  @ViewChild('expiresTpl', { static: true })\n  expiresTpl: TemplateRef<any>;\n  @ViewChild('deleteTpl', { static: true })\n  deleteTpl: TemplateRef<any>;\n\n  icons = Icons;\n\n  columns: CdTableColumn[];\n  executingTasks: ExecutingTask[] = [];\n  images: any;\n  modalRef: NgbModalRef;\n  permission: Permission;\n  retries: number;\n  selection = new CdTableSelection();\n  tableActions: CdTableAction[];\n  tableStatus = new TableStatusViewCache();\n  disablePurgeBtn = true;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rbdService: RbdService,\n    private modalService: ModalService,\n    private cdDatePipe: CdDatePipe,\n    public taskListService: TaskListService,\n    private taskWrapper: TaskWrapperService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    this.permission = this.authStorageService.getPermissions().rbdImage;\n    const restoreAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.undo,\n      click: () => this.restoreModal(),\n      name: this.actionLabels.RESTORE\n    };\n    const deleteAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      click: () => this.deleteModal(),\n      name: this.actionLabels.DELETE\n    };\n    this.tableActions = [restoreAction, deleteAction];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`ID`,\n        prop: 'id',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.executing\n      },\n      {\n        name: $localize`Name`,\n        prop: 'name',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Pool`,\n        prop: 'pool_name',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Namespace`,\n        prop: 'namespace',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Status`,\n        prop: 'deferment_end_time',\n        flexGrow: 1,\n        cellTemplate: this.expiresTpl\n      },\n      {\n        name: $localize`Deleted At`,\n        prop: 'deletion_time',\n        flexGrow: 1,\n        pipe: this.cdDatePipe\n      }\n    ];\n\n    const itemFilter = (entry: any, task: Task) => {\n      const imageSpec = new ImageSpec(entry.pool_name, entry.namespace, entry.id);\n      return imageSpec.toString() === task.metadata['image_id_spec'];\n    };\n\n    const taskFilter = (task: Task) => {\n      return ['rbd/trash/remove', 'rbd/trash/restore'].includes(task.name);\n    };\n\n    this.taskListService.init(\n      () => this.rbdService.listTrash(),\n      (resp) => this.prepareResponse(resp),\n      (images) => (this.images = images),\n      () => this.onFetchError(),\n      taskFilter,\n      itemFilter,\n      undefined\n    );\n  }\n\n  prepareResponse(resp: any[]): any[] {\n    let images: any[] = [];\n    const viewCacheStatusMap = {};\n\n    resp.forEach((pool: Record<string, any>) => {\n      if (_.isUndefined(viewCacheStatusMap[pool.status])) {\n        viewCacheStatusMap[pool.status] = [];\n      }\n      viewCacheStatusMap[pool.status].push(pool.pool_name);\n      images = images.concat(pool.value);\n      this.disablePurgeBtn = !images.length;\n    });\n\n    let status: number;\n    if (viewCacheStatusMap[3]) {\n      status = 3;\n    } else if (viewCacheStatusMap[1]) {\n      status = 1;\n    } else if (viewCacheStatusMap[2]) {\n      status = 2;\n    }\n\n    if (status) {\n      const statusFor =\n        (viewCacheStatusMap[status].length > 1 ? 'pools ' : 'pool ') +\n        viewCacheStatusMap[status].join();\n\n      this.tableStatus = new TableStatusViewCache(status, statusFor);\n    } else {\n      this.tableStatus = new TableStatusViewCache();\n    }\n\n    images.forEach((image) => {\n      image.cdIsExpired = moment().isAfter(image.deferment_end_time);\n    });\n\n    return images;\n  }\n\n  onFetchError() {\n    this.table.reset(); // Disable loading indicator.\n    this.tableStatus = new TableStatusViewCache(ViewCacheStatus.ValueException);\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  restoreModal() {\n    const initialState = {\n      poolName: this.selection.first().pool_name,\n      namespace: this.selection.first().namespace,\n      imageName: this.selection.first().name,\n      imageId: this.selection.first().id\n    };\n\n    this.modalRef = this.modalService.show(RbdTrashRestoreModalComponent, initialState);\n  }\n\n  deleteModal() {\n    const poolName = this.selection.first().pool_name;\n    const namespace = this.selection.first().namespace;\n    const imageId = this.selection.first().id;\n    const expiresAt = this.selection.first().deferment_end_time;\n    const isExpired = moment().isAfter(expiresAt);\n    const imageIdSpec = new ImageSpec(poolName, namespace, imageId);\n\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: 'RBD',\n      itemNames: [imageIdSpec],\n      bodyTemplate: this.deleteTpl,\n      bodyContext: { expiresAt, isExpired },\n      submitActionObservable: () =>\n        this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask('rbd/trash/remove', {\n            image_id_spec: imageIdSpec.toString()\n          }),\n          call: this.rbdService.removeTrash(imageIdSpec, true)\n        })\n    });\n  }\n\n  purgeModal() {\n    this.modalService.show(RbdTrashPurgeModalComponent);\n  }\n}\n","<cd-rbd-tabs></cd-rbd-tabs>\n\n<cd-table [data]=\"images\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          identifier=\"id\"\n          forceIdentifier=\"true\"\n          selectionType=\"single\"\n          [status]=\"tableStatus\"\n          [autoReload]=\"-1\"\n          (fetchData)=\"taskListService.fetch()\"\n          (updateSelection)=\"updateSelection($event)\">\n  <div class=\"table-actions btn-toolbar\">\n    <cd-table-actions class=\"btn-group\"\n                      [permission]=\"permission\"\n                      [selection]=\"selection\"\n                      [tableActions]=\"tableActions\">\n    </cd-table-actions>\n    <button class=\"btn btn-light\"\n            type=\"button\"\n            (click)=\"purgeModal()\"\n            [disabled]=\"disablePurgeBtn\"\n            *ngIf=\"permission.delete\">\n      <i [ngClass]=\"[icons.destroy]\"\n         aria-hidden=\"true\"></i>\n      <ng-container i18n>Purge Trash</ng-container>\n    </button>\n  </div>\n</cd-table>\n\n<ng-template #expiresTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <ng-container *ngIf=\"row.cdIsExpired\"\n                i18n>Expired at</ng-container>\n\n  <ng-container *ngIf=\"!row.cdIsExpired\"\n                i18n>Protected until</ng-container>\n\n  {{ value | cdDate }}\n</ng-template>\n\n<ng-template #deleteTpl\n             let-expiresAt=\"expiresAt\"\n             let-isExpired=\"isExpired\">\n  <p class=\"text-danger\"\n     *ngIf=\"!isExpired\">\n    <strong>\n      <ng-container i18n>This image is protected until {{ expiresAt | cdDate }}.</ng-container>\n    </strong>\n  </p>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport moment from 'moment';\n\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { ExecutingTask } from '~/app/shared/models/executing-task';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { ImageSpec } from '~/app/shared/models/image-spec';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-rbd-trash-move-modal',\n  templateUrl: './rbd-trash-move-modal.component.html',\n  styleUrls: ['./rbd-trash-move-modal.component.scss']\n})\nexport class RbdTrashMoveModalComponent implements OnInit {\n  // initial state\n  poolName: string;\n  namespace: string;\n  imageName: string;\n  hasSnapshots: boolean;\n\n  imageSpec: ImageSpec;\n  imageSpecStr: string;\n  executingTasks: ExecutingTask[];\n\n  moveForm: CdFormGroup;\n  pattern: string;\n\n  constructor(\n    private rbdService: RbdService,\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private fb: CdFormBuilder,\n    private taskWrapper: TaskWrapperService\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.moveForm = this.fb.group({\n      expiresAt: [\n        '',\n        [\n          CdValidators.custom('format', (expiresAt: string) => {\n            const result = expiresAt === '' || moment(expiresAt, 'YYYY-MM-DD HH:mm:ss').isValid();\n            return !result;\n          }),\n          CdValidators.custom('expired', (expiresAt: string) => {\n            const result = moment().isAfter(expiresAt);\n            return result;\n          })\n        ]\n      ]\n    });\n  }\n\n  ngOnInit() {\n    this.imageSpec = new ImageSpec(this.poolName, this.namespace, this.imageName);\n    this.imageSpecStr = this.imageSpec.toString();\n    this.pattern = `${this.poolName}/${this.imageName}`;\n  }\n\n  moveImage() {\n    let delay = 0;\n    const expiresAt = this.moveForm.getValue('expiresAt');\n\n    if (expiresAt) {\n      delay = moment(expiresAt, 'YYYY-MM-DD HH:mm:ss').diff(moment(), 'seconds', true);\n    }\n\n    if (delay < 0) {\n      delay = 0;\n    }\n\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('rbd/trash/move', {\n          image_spec: this.imageSpecStr\n        }),\n        call: this.rbdService.moveTrash(this.imageSpec, delay)\n      })\n      .subscribe({\n        complete: () => {\n          this.activeModal.close();\n        }\n      });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n\n                class=\"modal-title\">Move an image to trash</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"moveForm\"\n          class=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"moveForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <div class=\"alert alert-warning\"\n             *ngIf=\"hasSnapshots\"\n             role=\"alert\">\n          <span i18n>This image contains snapshot(s), which will prevent it\n            from being removed after moved to trash.</span>\n        </div>\n\n        <p i18n>To move <kbd>{{ imageSpecStr }}</kbd> to trash,\n          click <kbd>Move</kbd>. Optionally, you can pick an expiration date.</p>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label\"\n                 for=\"expiresAt\"\n                 i18n>Protection expires at</label>\n          <input type=\"text\"\n                 placeholder=\"NOT PROTECTED\"\n                 i18n-placeholder\n                 class=\"form-control\"\n                 formControlName=\"expiresAt\"\n                 [ngbPopover]=\"popContent\"\n                 triggers=\"manual\"\n                 #p=\"ngbPopover\"\n                 (click)=\"p.open()\"\n                 (keypress)=\"p.close()\">\n\n          <span class=\"invalid-feedback\"\n                *ngIf=\"moveForm.showError('expiresAt', formDir, 'format')\"\n                i18n>Wrong date format. Please use \"YYYY-MM-DD HH:mm:ss\".</span>\n          <span class=\"invalid-feedback\"\n                *ngIf=\"moveForm.showError('expiresAt', formDir, 'expired')\"\n                i18n>Protection has already expired. Please pick a future date or leave it empty.</span>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"moveImage()\"\n                              [form]=\"moveForm\"\n                              [submitText]=\"actionLabels.MOVE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n\n<ng-template #popContent>\n  <cd-date-time-picker [control]=\"moveForm.get('expiresAt')\"></cd-date-time-picker>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Pool } from '~/app/ceph/pool/pool';\nimport { PoolService } from '~/app/shared/api/pool.service';\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-rbd-trash-purge-modal',\n  templateUrl: './rbd-trash-purge-modal.component.html',\n  styleUrls: ['./rbd-trash-purge-modal.component.scss']\n})\nexport class RbdTrashPurgeModalComponent implements OnInit {\n  poolPermission: Permission;\n  purgeForm: CdFormGroup;\n  pools: any[];\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rbdService: RbdService,\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private fb: CdFormBuilder,\n    private poolService: PoolService,\n    private taskWrapper: TaskWrapperService\n  ) {\n    this.poolPermission = this.authStorageService.getPermissions().pool;\n  }\n\n  createForm() {\n    this.purgeForm = this.fb.group({\n      poolName: ''\n    });\n  }\n\n  ngOnInit() {\n    if (this.poolPermission.read) {\n      this.poolService.list(['pool_name', 'application_metadata']).then((resp) => {\n        this.pools = resp\n          .filter((pool: Pool) => pool.application_metadata.includes('rbd'))\n          .map((pool: Pool) => pool.pool_name);\n      });\n    }\n\n    this.createForm();\n  }\n\n  purge() {\n    const poolName = this.purgeForm.getValue('poolName') || '';\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('rbd/trash/purge', {\n          pool_name: poolName\n        }),\n        call: this.rbdService.purgeTrash(poolName)\n      })\n      .subscribe({\n        error: () => {\n          this.purgeForm.setErrors({ cdSubmitButton: true });\n        },\n        complete: () => {\n          this.activeModal.close();\n        }\n      });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n\n                class=\"modal-title\">Purge Trash</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"purgeForm\"\n          class=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"purgeForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p i18n>To purge, select&nbsp;\n          <kbd>All</kbd>&nbsp;\n          or one pool and click&nbsp;\n          <kbd>Purge</kbd>.&nbsp;</p>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label mx-auto\"\n                 i18n>Pool:</label>\n          <input class=\"form-control\"\n                 type=\"text\"\n                 placeholder=\"Pool name...\"\n                 i18n-placeholder\n                 formControlName=\"poolName\"\n                 *ngIf=\"!poolPermission.read\">\n          <select id=\"poolName\"\n                  name=\"poolName\"\n                  class=\"form-control\"\n                  formControlName=\"poolName\"\n                  *ngIf=\"poolPermission.read\">\n            <option value=\"\"\n                    i18n>All</option>\n            <option *ngFor=\"let pool of pools\"\n                    [value]=\"pool\">{{ pool }}</option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"purge()\"\n                              [form]=\"purgeForm\"\n                              [submitText]=\"actionLabels.PURGE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { RbdService } from '~/app/shared/api/rbd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { ExecutingTask } from '~/app/shared/models/executing-task';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { ImageSpec } from '~/app/shared/models/image-spec';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-rbd-trash-restore-modal',\n  templateUrl: './rbd-trash-restore-modal.component.html',\n  styleUrls: ['./rbd-trash-restore-modal.component.scss']\n})\nexport class RbdTrashRestoreModalComponent implements OnInit {\n  poolName: string;\n  namespace: string;\n  imageName: string;\n  imageSpec: string;\n  imageId: string;\n  executingTasks: ExecutingTask[];\n\n  restoreForm: CdFormGroup;\n\n  constructor(\n    private rbdService: RbdService,\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private fb: CdFormBuilder,\n    private taskWrapper: TaskWrapperService\n  ) {}\n\n  ngOnInit() {\n    this.imageSpec = new ImageSpec(this.poolName, this.namespace, this.imageName).toString();\n    this.restoreForm = this.fb.group({\n      name: this.imageName\n    });\n  }\n\n  restore() {\n    const name = this.restoreForm.getValue('name');\n    const imageSpec = new ImageSpec(this.poolName, this.namespace, this.imageId);\n\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('rbd/trash/restore', {\n          image_id_spec: imageSpec.toString(),\n          new_image_name: name\n        }),\n        call: this.rbdService.restoreTrash(imageSpec, name)\n      })\n      .subscribe({\n        error: () => {\n          this.restoreForm.setErrors({ cdSubmitButton: true });\n        },\n        complete: () => {\n          this.activeModal.close();\n        }\n      });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n\n                class=\"modal-title\">Restore Image</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"restoreForm\"\n          class=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"restoreForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p i18n>To restore&nbsp;\n          <kbd>{{ imageSpec }}@{{ imageId }}</kbd>,&nbsp;\n          type the image's new name and click&nbsp;\n          <kbd>Restore</kbd>.</p>\n\n        <div class=\"form-group\">\n          <label class=\"col-form-label\"\n                 for=\"name\"\n                 i18n>New Name</label>\n          <input type=\"text\"\n                 class=\"form-control\"\n                 name=\"name\"\n                 id=\"name\"\n                 autocomplete=\"off\"\n                 formControlName=\"name\"\n                 autofocus>\n          <span class=\"invalid-feedback\"\n                *ngIf=\"restoreForm.showError('name', formDir, 'required')\"\n                i18n>This field is required.</span>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"restore()\"\n                              [form]=\"restoreForm\"\n                              [submitText]=\"actionLabels.RESTORE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { cdEncode } from '../decorators/cd-encode';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class IscsiService {\n  constructor(private http: HttpClient) {}\n\n  listTargets() {\n    return this.http.get(`api/iscsi/target`);\n  }\n\n  getTarget(target_iqn: string) {\n    return this.http.get(`api/iscsi/target/${target_iqn}`);\n  }\n\n  updateTarget(target_iqn: string, target: any) {\n    return this.http.put(`api/iscsi/target/${target_iqn}`, target, { observe: 'response' });\n  }\n\n  status() {\n    return this.http.get(`ui-api/iscsi/status`);\n  }\n\n  settings() {\n    return this.http.get(`ui-api/iscsi/settings`);\n  }\n\n  version() {\n    return this.http.get(`ui-api/iscsi/version`);\n  }\n\n  portals() {\n    return this.http.get(`ui-api/iscsi/portals`);\n  }\n\n  createTarget(target: any) {\n    return this.http.post(`api/iscsi/target`, target, { observe: 'response' });\n  }\n\n  deleteTarget(target_iqn: string) {\n    return this.http.delete(`api/iscsi/target/${target_iqn}`, { observe: 'response' });\n  }\n\n  getDiscovery() {\n    return this.http.get(`api/iscsi/discoveryauth`);\n  }\n\n  updateDiscovery(auth: any) {\n    return this.http.put(`api/iscsi/discoveryauth`, auth);\n  }\n\n  overview() {\n    return this.http.get(`ui-api/iscsi/overview`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { cdEncode, cdEncodeNot } from '../decorators/cd-encode';\nimport { MirroringSummary } from '../models/mirroring-summary';\nimport { TimerService } from '../services/timer.service';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class RbdMirroringService {\n  readonly REFRESH_INTERVAL = 30000;\n  // Observable sources\n  private summaryDataSource = new BehaviorSubject<MirroringSummary>(null);\n  // Observable streams\n  summaryData$ = this.summaryDataSource.asObservable();\n\n  constructor(private http: HttpClient, private timerService: TimerService) {}\n\n  startPolling(): Subscription {\n    return this.timerService\n      .get(() => this.retrieveSummaryObservable(), this.REFRESH_INTERVAL)\n      .subscribe(this.retrieveSummaryObserver());\n  }\n\n  refresh(): Subscription {\n    return this.retrieveSummaryObservable().subscribe(this.retrieveSummaryObserver());\n  }\n\n  private retrieveSummaryObservable(): Observable<MirroringSummary> {\n    return this.http.get('api/block/mirroring/summary');\n  }\n\n  private retrieveSummaryObserver(): (data: MirroringSummary) => void {\n    return (data: any) => {\n      this.summaryDataSource.next(data);\n    };\n  }\n\n  /**\n   * Subscribes to the summaryData,\n   * which is updated periodically or when a new task is created.\n   */\n  subscribeSummary(\n    next: (summary: MirroringSummary) => void,\n    error?: (error: any) => void\n  ): Subscription {\n    return this.summaryData$.pipe(filter((value) => !!value)).subscribe(next, error);\n  }\n\n  getPool(poolName: string) {\n    return this.http.get(`api/block/mirroring/pool/${poolName}`);\n  }\n\n  updatePool(poolName: string, request: any) {\n    return this.http.put(`api/block/mirroring/pool/${poolName}`, request, { observe: 'response' });\n  }\n\n  getSiteName() {\n    return this.http.get(`api/block/mirroring/site_name`);\n  }\n\n  setSiteName(@cdEncodeNot siteName: string) {\n    return this.http.put(\n      `api/block/mirroring/site_name`,\n      { site_name: siteName },\n      { observe: 'response' }\n    );\n  }\n\n  createBootstrapToken(poolName: string) {\n    return this.http.post(`api/block/mirroring/pool/${poolName}/bootstrap/token`, {});\n  }\n\n  importBootstrapToken(\n    poolName: string,\n    @cdEncodeNot direction: string,\n    @cdEncodeNot token: string\n  ) {\n    const request = {\n      direction: direction,\n      token: token\n    };\n    return this.http.post(`api/block/mirroring/pool/${poolName}/bootstrap/peer`, request, {\n      observe: 'response'\n    });\n  }\n\n  getPeer(poolName: string, peerUUID: string) {\n    return this.http.get(`api/block/mirroring/pool/${poolName}/peer/${peerUUID}`);\n  }\n\n  getPeerForPool(poolName: string) {\n    return this.http.get(`api/block/mirroring/pool/${poolName}/peer`);\n  }\n\n  addPeer(poolName: string, request: any) {\n    return this.http.post(`api/block/mirroring/pool/${poolName}/peer`, request, {\n      observe: 'response'\n    });\n  }\n\n  updatePeer(poolName: string, peerUUID: string, request: any) {\n    return this.http.put(`api/block/mirroring/pool/${poolName}/peer/${peerUUID}`, request, {\n      observe: 'response'\n    });\n  }\n\n  deletePeer(poolName: string, peerUUID: string) {\n    return this.http.delete(`api/block/mirroring/pool/${poolName}/peer/${peerUUID}`, {\n      observe: 'response'\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { map } from 'rxjs/operators';\n\nimport { ApiClient } from '~/app/shared/api/api-client';\nimport { cdEncode, cdEncodeNot } from '../decorators/cd-encode';\nimport { ImageSpec } from '../models/image-spec';\nimport { RbdConfigurationService } from '../services/rbd-configuration.service';\nimport { RbdPool } from './rbd.model';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class RbdService extends ApiClient {\n  constructor(private http: HttpClient, private rbdConfigurationService: RbdConfigurationService) {\n    super();\n  }\n\n  isRBDPool(pool: any) {\n    return _.indexOf(pool.application_metadata, 'rbd') !== -1 && !pool.pool_name.includes('/');\n  }\n\n  create(rbd: any) {\n    return this.http.post('api/block/image', rbd, { observe: 'response' });\n  }\n\n  delete(imageSpec: ImageSpec) {\n    return this.http.delete(`api/block/image/${imageSpec.toStringEncoded()}`, {\n      observe: 'response'\n    });\n  }\n\n  update(imageSpec: ImageSpec, rbd: any) {\n    return this.http.put(`api/block/image/${imageSpec.toStringEncoded()}`, rbd, {\n      observe: 'response'\n    });\n  }\n\n  get(imageSpec: ImageSpec) {\n    return this.http.get(`api/block/image/${imageSpec.toStringEncoded()}`);\n  }\n\n  list(params: any) {\n    return this.http\n      .get<RbdPool[]>('api/block/image', {\n        params: params,\n        headers: { Accept: this.getVersionHeaderValue(2, 0) },\n        observe: 'response'\n      })\n      .pipe(\n        map((response: any) => {\n          return response['body'].map((pool: any) => {\n            pool.value.map((image: any) => {\n              if (!image.configuration) {\n                return image;\n              }\n              image.configuration.map((option: any) =>\n                Object.assign(option, this.rbdConfigurationService.getOptionByName(option.name))\n              );\n              return image;\n            });\n            pool['headers'] = response.headers;\n            return pool;\n          });\n        })\n      );\n  }\n\n  copy(imageSpec: ImageSpec, rbd: any) {\n    return this.http.post(`api/block/image/${imageSpec.toStringEncoded()}/copy`, rbd, {\n      observe: 'response'\n    });\n  }\n\n  flatten(imageSpec: ImageSpec) {\n    return this.http.post(`api/block/image/${imageSpec.toStringEncoded()}/flatten`, null, {\n      observe: 'response'\n    });\n  }\n\n  defaultFeatures() {\n    return this.http.get('api/block/image/default_features');\n  }\n\n  cloneFormatVersion() {\n    return this.http.get<number>('api/block/image/clone_format_version');\n  }\n\n  createSnapshot(imageSpec: ImageSpec, @cdEncodeNot snapshotName: string) {\n    const request = {\n      snapshot_name: snapshotName\n    };\n    return this.http.post(`api/block/image/${imageSpec.toStringEncoded()}/snap`, request, {\n      observe: 'response'\n    });\n  }\n\n  renameSnapshot(imageSpec: ImageSpec, snapshotName: string, @cdEncodeNot newSnapshotName: string) {\n    const request = {\n      new_snap_name: newSnapshotName\n    };\n    return this.http.put(\n      `api/block/image/${imageSpec.toStringEncoded()}/snap/${snapshotName}`,\n      request,\n      {\n        observe: 'response'\n      }\n    );\n  }\n\n  protectSnapshot(imageSpec: ImageSpec, snapshotName: string, @cdEncodeNot isProtected: boolean) {\n    const request = {\n      is_protected: isProtected\n    };\n    return this.http.put(\n      `api/block/image/${imageSpec.toStringEncoded()}/snap/${snapshotName}`,\n      request,\n      {\n        observe: 'response'\n      }\n    );\n  }\n\n  rollbackSnapshot(imageSpec: ImageSpec, snapshotName: string) {\n    return this.http.post(\n      `api/block/image/${imageSpec.toStringEncoded()}/snap/${snapshotName}/rollback`,\n      null,\n      { observe: 'response' }\n    );\n  }\n\n  cloneSnapshot(imageSpec: ImageSpec, snapshotName: string, request: any) {\n    return this.http.post(\n      `api/block/image/${imageSpec.toStringEncoded()}/snap/${snapshotName}/clone`,\n      request,\n      { observe: 'response' }\n    );\n  }\n\n  deleteSnapshot(imageSpec: ImageSpec, snapshotName: string) {\n    return this.http.delete(`api/block/image/${imageSpec.toStringEncoded()}/snap/${snapshotName}`, {\n      observe: 'response'\n    });\n  }\n\n  listTrash() {\n    return this.http.get(`api/block/image/trash/`);\n  }\n\n  createNamespace(pool: string, namespace: string) {\n    const request = {\n      namespace: namespace\n    };\n    return this.http.post(`api/block/pool/${pool}/namespace`, request, { observe: 'response' });\n  }\n\n  listNamespaces(pool: string) {\n    return this.http.get(`api/block/pool/${pool}/namespace/`);\n  }\n\n  deleteNamespace(pool: string, namespace: string) {\n    return this.http.delete(`api/block/pool/${pool}/namespace/${namespace}`, {\n      observe: 'response'\n    });\n  }\n\n  moveTrash(imageSpec: ImageSpec, delay: number) {\n    return this.http.post(\n      `api/block/image/${imageSpec.toStringEncoded()}/move_trash`,\n      { delay: delay },\n      { observe: 'response' }\n    );\n  }\n\n  purgeTrash(poolName: string) {\n    return this.http.post(`api/block/image/trash/purge/?pool_name=${poolName}`, null, {\n      observe: 'response'\n    });\n  }\n\n  restoreTrash(imageSpec: ImageSpec, @cdEncodeNot newImageName: string) {\n    return this.http.post(\n      `api/block/image/trash/${imageSpec.toStringEncoded()}/restore`,\n      { new_image_name: newImageName },\n      { observe: 'response' }\n    );\n  }\n\n  removeTrash(imageSpec: ImageSpec, force = false) {\n    return this.http.delete(\n      `api/block/image/trash/${imageSpec.toStringEncoded()}/?force=${force}`,\n      { observe: 'response' }\n    );\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CdTableServerSideService {\n  /* tslint:disable:no-empty */\n  constructor() {}\n\n  static getCount(resp: HttpResponse<any>): number {\n    return Number(resp.headers?.get('X-Total-Count'));\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}