{"version":3,"file":"main.js","mappings":"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","sources":["en-US-POSIX.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/ceph/ceph.module.ts","./src/app/ceph/cephfs/cephfs-chart/cephfs-chart.component.ts","./src/app/ceph/cephfs/cephfs-chart/cephfs-chart.component.html","./src/app/ceph/cephfs/cephfs-clients/cephfs-clients.component.ts","./src/app/ceph/cephfs/cephfs-clients/cephfs-clients.component.html","./src/app/ceph/cephfs/cephfs-detail/cephfs-detail.component.ts","./src/app/ceph/cephfs/cephfs-detail/cephfs-detail.component.html","./src/app/ceph/cephfs/cephfs-directories/cephfs-directories.component.ts","./src/app/ceph/cephfs/cephfs-directories/cephfs-directories.component.html","./src/app/ceph/cephfs/cephfs-list/cephfs-list.component.ts","./src/app/ceph/cephfs/cephfs-list/cephfs-list.component.html","./src/app/ceph/cephfs/cephfs-tabs/cephfs-tabs.component.ts","./src/app/ceph/cephfs/cephfs-tabs/cephfs-tabs.component.html","./src/app/ceph/cephfs/cephfs.module.ts","./src/app/ceph/cluster/cluster.module.ts","./src/app/ceph/cluster/configuration/configuration-details/configuration-details.component.ts","./src/app/ceph/cluster/configuration/configuration-details/configuration-details.component.html","./src/app/ceph/cluster/configuration/configuration-form/configuration-form-create-request.model.ts","./src/app/ceph/cluster/configuration/configuration-form/configuration-form.component.ts","./src/app/ceph/cluster/configuration/configuration-form/configuration-form.component.html","./src/app/ceph/cluster/configuration/configuration.component.ts","./src/app/ceph/cluster/configuration/configuration.component.html","./src/app/ceph/cluster/create-cluster/create-cluster-review.component.ts","./src/app/ceph/cluster/create-cluster/create-cluster-review.component.html","./src/app/ceph/cluster/create-cluster/create-cluster.component.ts","./src/app/ceph/cluster/create-cluster/create-cluster.component.html","./src/app/ceph/cluster/crushmap/crushmap.component.ts","./src/app/ceph/cluster/crushmap/crushmap.component.html","./src/app/ceph/cluster/hosts/host-details/host-details.component.ts","./src/app/ceph/cluster/hosts/host-details/host-details.component.html","./src/app/ceph/cluster/hosts/host-form/host-form.component.ts","./src/app/ceph/cluster/hosts/host-form/host-form.component.html","./src/app/ceph/cluster/hosts/hosts.component.ts","./src/app/ceph/cluster/hosts/hosts.component.html","./src/app/ceph/cluster/inventory/inventory-devices/inventory-devices.component.ts","./src/app/ceph/cluster/inventory/inventory-devices/inventory-devices.component.html","./src/app/ceph/cluster/inventory/inventory.component.ts","./src/app/ceph/cluster/inventory/inventory.component.html","./src/app/ceph/cluster/logs/logs.component.ts","./src/app/ceph/cluster/logs/logs.component.html","./src/app/ceph/cluster/mgr-modules/mgr-module-details/mgr-module-details.component.ts","./src/app/ceph/cluster/mgr-modules/mgr-module-details/mgr-module-details.component.html","./src/app/ceph/cluster/mgr-modules/mgr-module-form/mgr-module-form.component.ts","./src/app/ceph/cluster/mgr-modules/mgr-module-form/mgr-module-form.component.html","./src/app/ceph/cluster/mgr-modules/mgr-module-list/mgr-module-list.component.ts","./src/app/ceph/cluster/mgr-modules/mgr-module-list/mgr-module-list.component.html","./src/app/ceph/cluster/mgr-modules/mgr-modules.module.ts","./src/app/ceph/cluster/monitor/monitor.component.ts","./src/app/ceph/cluster/monitor/monitor.component.html","./src/app/ceph/cluster/osd/osd-creation-preview-modal/osd-creation-preview-modal.component.ts","./src/app/ceph/cluster/osd/osd-creation-preview-modal/osd-creation-preview-modal.component.html","./src/app/ceph/cluster/osd/osd-details/osd-details.component.ts","./src/app/ceph/cluster/osd/osd-details/osd-details.component.html","./src/app/ceph/cluster/osd/osd-devices-selection-groups/osd-devices-selection-groups.component.ts","./src/app/ceph/cluster/osd/osd-devices-selection-groups/osd-devices-selection-groups.component.html","./src/app/ceph/cluster/osd/osd-devices-selection-modal/osd-devices-selection-modal.component.ts","./src/app/ceph/cluster/osd/osd-devices-selection-modal/osd-devices-selection-modal.component.html","./src/app/ceph/cluster/osd/osd-flags-indiv-modal/osd-flags-indiv-modal.component.ts","./src/app/ceph/cluster/osd/osd-flags-indiv-modal/osd-flags-indiv-modal.component.html","./src/app/ceph/cluster/osd/osd-flags-modal/osd-flags-modal.component.ts","./src/app/ceph/cluster/osd/osd-flags-modal/osd-flags-modal.component.html","./src/app/ceph/cluster/osd/osd-form/drive-group.model.ts","./src/app/ceph/cluster/osd/osd-form/osd-form.component.ts","./src/app/ceph/cluster/osd/osd-form/osd-form.component.html","./src/app/ceph/cluster/osd/osd-list/osd-list.component.ts","./src/app/ceph/cluster/osd/osd-list/osd-list.component.html","./src/app/ceph/cluster/osd/osd-pg-scrub-modal/osd-pg-scrub-modal.component.ts","./src/app/ceph/cluster/osd/osd-pg-scrub-modal/osd-pg-scrub-modal.component.html","./src/app/ceph/cluster/osd/osd-pg-scrub-modal/osd-pg-scrub-modal.options.ts","./src/app/ceph/cluster/osd/osd-recv-speed-modal/osd-recv-speed-modal.component.ts","./src/app/ceph/cluster/osd/osd-recv-speed-modal/osd-recv-speed-modal.component.html","./src/app/ceph/cluster/osd/osd-reweight-modal/osd-reweight-modal.component.ts","./src/app/ceph/cluster/osd/osd-reweight-modal/osd-reweight-modal.component.html","./src/app/ceph/cluster/osd/osd-scrub-modal/osd-scrub-modal.component.ts","./src/app/ceph/cluster/osd/osd-scrub-modal/osd-scrub-modal.component.html","./src/app/ceph/cluster/prometheus/active-alert-list/active-alert-list.component.ts","./src/app/ceph/cluster/prometheus/active-alert-list/active-alert-list.component.html","./src/app/ceph/cluster/prometheus/prometheus-list-helper.ts","./src/app/ceph/cluster/prometheus/prometheus-tabs/prometheus-tabs.component.ts","./src/app/ceph/cluster/prometheus/prometheus-tabs/prometheus-tabs.component.html","./src/app/ceph/cluster/prometheus/rules-list/rules-list.component.ts","./src/app/ceph/cluster/prometheus/rules-list/rules-list.component.html","./src/app/ceph/cluster/prometheus/silence-form/silence-form.component.ts","./src/app/ceph/cluster/prometheus/silence-form/silence-form.component.html","./src/app/ceph/cluster/prometheus/silence-list/silence-list.component.ts","./src/app/ceph/cluster/prometheus/silence-list/silence-list.component.html","./src/app/ceph/cluster/prometheus/silence-matcher-modal/silence-matcher-modal.component.ts","./src/app/ceph/cluster/prometheus/silence-matcher-modal/silence-matcher-modal.component.html","./src/app/ceph/cluster/services/placement.pipe.ts","./src/app/ceph/cluster/services/service-daemon-list/service-daemon-list.component.ts","./src/app/ceph/cluster/services/service-daemon-list/service-daemon-list.component.html","./src/app/ceph/cluster/services/service-details/service-details.component.ts","./src/app/ceph/cluster/services/service-details/service-details.component.html","./src/app/ceph/cluster/services/service-form/service-form.component.ts","./src/app/ceph/cluster/services/service-form/service-form.component.html","./src/app/ceph/cluster/services/services.component.ts","./src/app/ceph/cluster/services/services.component.html","./src/app/ceph/cluster/telemetry/telemetry.component.ts","./src/app/ceph/cluster/telemetry/telemetry.component.html","./src/app/ceph/dashboard/dashboard.module.ts","./src/app/ceph/dashboard/dashboard/dashboard.component.ts","./src/app/ceph/dashboard/dashboard/dashboard.component.html","./src/app/ceph/dashboard/health-pie/health-pie.component.ts","./src/app/ceph/dashboard/health-pie/health-pie.component.html","./src/app/ceph/dashboard/health/health.component.ts","./src/app/ceph/dashboard/health/health.component.html","./src/app/ceph/dashboard/info-card/info-card.component.ts","./src/app/ceph/dashboard/info-card/info-card.component.html","./src/app/ceph/dashboard/info-group/info-group.component.ts","./src/app/ceph/dashboard/info-group/info-group.component.html","./src/app/ceph/dashboard/mds-summary.pipe.ts","./src/app/ceph/dashboard/mgr-summary.pipe.ts","./src/app/ceph/dashboard/mon-summary.pipe.ts","./src/app/ceph/dashboard/osd-summary.pipe.ts","./src/app/ceph/nfs/nfs-details/nfs-details.component.ts","./src/app/ceph/nfs/nfs-details/nfs-details.component.html","./src/app/ceph/nfs/nfs-form-client/nfs-form-client.component.ts","./src/app/ceph/nfs/nfs-form-client/nfs-form-client.component.html","./src/app/ceph/nfs/nfs-form/nfs-form.component.ts","./src/app/ceph/nfs/nfs-form/nfs-form.component.html","./src/app/ceph/nfs/nfs-list/nfs-list.component.ts","./src/app/ceph/nfs/nfs-list/nfs-list.component.html","./src/app/ceph/nfs/nfs.module.ts","./src/app/ceph/performance-counter/performance-counter.module.ts","./src/app/ceph/performance-counter/performance-counter/performance-counter.component.ts","./src/app/ceph/performance-counter/performance-counter/performance-counter.component.html","./src/app/ceph/performance-counter/table-performance-counter/table-performance-counter.component.ts","./src/app/ceph/performance-counter/table-performance-counter/table-performance-counter.component.html","./src/app/ceph/shared/ceph-shared.module.ts","./src/app/ceph/shared/device-list/device-list.component.ts","./src/app/ceph/shared/device-list/device-list.component.html","./src/app/ceph/shared/feedback/feedback.component.ts","./src/app/ceph/shared/feedback/feedback.component.html","./src/app/ceph/shared/pg-category.model.ts","./src/app/ceph/shared/pg-category.service.ts","./src/app/ceph/shared/smart-list/smart-list.component.ts","./src/app/ceph/shared/smart-list/smart-list.component.html","./src/app/core/auth/auth.module.ts","./src/app/core/auth/login-password-form/login-password-form.component.ts","./src/app/core/auth/login-password-form/login-password-form.component.html","./src/app/core/auth/login/login.component.ts","./src/app/core/auth/login/login.component.html","./src/app/core/auth/role-details/role-details.component.ts","./src/app/core/auth/role-details/role-details.component.html","./src/app/core/auth/role-form/role-form-mode.enum.ts","./src/app/core/auth/role-form/role-form.component.ts","./src/app/core/auth/role-form/role-form.component.html","./src/app/core/auth/role-form/role-form.model.ts","./src/app/core/auth/role-list/role-list.component.ts","./src/app/core/auth/role-list/role-list.component.html","./src/app/core/auth/user-form/user-form-mode.enum.ts","./src/app/core/auth/user-form/user-form.component.ts","./src/app/core/auth/user-form/user-form.component.html","./src/app/core/auth/user-form/user-form.model.ts","./src/app/core/auth/user-list/user-list.component.ts","./src/app/core/auth/user-list/user-list.component.html","./src/app/core/auth/user-password-form/user-password-form.component.ts","./src/app/core/auth/user-password-form/user-password-form.component.html","./src/app/core/auth/user-tabs/user-tabs.component.ts","./src/app/core/auth/user-tabs/user-tabs.component.html","./src/app/core/context/context.component.ts","./src/app/core/context/context.component.html","./src/app/core/core.module.ts","./src/app/core/error/error.component.ts","./src/app/core/error/error.component.html","./src/app/core/error/error.ts","./src/app/core/layouts/blank-layout/blank-layout.component.ts","./src/app/core/layouts/blank-layout/blank-layout.component.html","./src/app/core/layouts/login-layout/login-layout.component.ts","./src/app/core/layouts/login-layout/login-layout.component.html","./src/app/core/layouts/workbench-layout/workbench-layout.component.ts","./src/app/core/layouts/workbench-layout/workbench-layout.component.html","./src/app/core/navigation/about/about.component.ts","./src/app/core/navigation/about/about.component.html","./src/app/core/navigation/administration/administration.component.ts","./src/app/core/navigation/administration/administration.component.html","./src/app/core/navigation/api-docs/api-docs.component.ts","./src/app/core/navigation/api-docs/api-docs.component.html","./src/app/core/navigation/breadcrumbs/breadcrumbs.component.ts","./src/app/core/navigation/breadcrumbs/breadcrumbs.component.html","./src/app/core/navigation/dashboard-help/dashboard-help.component.ts","./src/app/core/navigation/dashboard-help/dashboard-help.component.html","./src/app/core/navigation/identity/identity.component.ts","./src/app/core/navigation/identity/identity.component.html","./src/app/core/navigation/navigation.module.ts","./src/app/core/navigation/navigation/navigation.component.ts","./src/app/core/navigation/navigation/navigation.component.html","./src/app/core/navigation/notifications/notifications.component.ts","./src/app/core/navigation/notifications/notifications.component.html","./src/app/shared/api/api-client.ts","./src/app/shared/api/auth.service.ts","./src/app/shared/api/ceph-service.service.ts","./src/app/shared/api/cephfs.service.ts","./src/app/shared/api/cluster.service.ts","./src/app/shared/api/configuration.service.ts","./src/app/shared/api/crush-rule.service.ts","./src/app/shared/api/custom-login-banner.service.ts","./src/app/shared/api/daemon.service.ts","./src/app/shared/api/feedback.service.ts","./src/app/shared/api/health.service.ts","./src/app/shared/api/host.service.ts","./src/app/shared/api/logging.service.ts","./src/app/shared/api/logs.service.ts","./src/app/shared/api/mgr-module.service.ts","./src/app/shared/api/monitor.service.ts","./src/app/shared/api/motd.service.ts","./src/app/shared/api/nfs.service.ts","./src/app/shared/api/orchestrator.service.ts","./src/app/shared/api/osd.service.ts","./src/app/shared/api/paginate.model.ts","./src/app/shared/api/performance-counter.service.ts","./src/app/shared/api/pool.service.ts","./src/app/shared/api/prometheus.service.ts","./src/app/shared/api/rgw-bucket.service.ts","./src/app/shared/api/rgw-daemon.service.ts","./src/app/shared/api/rgw-site.service.ts","./src/app/shared/api/role.service.ts","./src/app/shared/api/scope.service.ts","./src/app/shared/api/settings.service.ts","./src/app/shared/api/telemetry.service.ts","./src/app/shared/api/user.service.ts","./src/app/shared/classes/cd-helper.class.ts","./src/app/shared/classes/css-helper.ts","./src/app/shared/classes/list-with-details.class.ts","./src/app/shared/classes/table-status-view-cache.ts","./src/app/shared/classes/table-status.ts","./src/app/shared/components/alert-panel/alert-panel.component.ts","./src/app/shared/components/alert-panel/alert-panel.component.html","./src/app/shared/components/back-button/back-button.component.ts","./src/app/shared/components/back-button/back-button.component.html","./src/app/shared/components/cd-label/cd-label.component.ts","./src/app/shared/components/cd-label/cd-label.component.html","./src/app/shared/components/cd-label/color-class-from-text.pipe.ts","./src/app/shared/components/components.module.ts","./src/app/shared/components/config-option/config-option.component.ts","./src/app/shared/components/config-option/config-option.component.html","./src/app/shared/components/config-option/config-option.types.ts","./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","./src/app/shared/components/confirmation-modal/confirmation-modal.component.html","./src/app/shared/components/copy2clipboard-button/copy2clipboard-button.component.ts","./src/app/shared/components/copy2clipboard-button/copy2clipboard-button.component.html","./src/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component.ts","./src/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component.html","./src/app/shared/components/custom-login-banner/custom-login-banner.component.ts","./src/app/shared/components/custom-login-banner/custom-login-banner.component.html","./src/app/shared/components/date-time-picker/date-time-picker.component.ts","./src/app/shared/components/date-time-picker/date-time-picker.component.html","./src/app/shared/components/doc/doc.component.ts","./src/app/shared/components/doc/doc.component.html","./src/app/shared/components/download-button/download-button.component.ts","./src/app/shared/components/download-button/download-button.component.html","./src/app/shared/components/form-button-panel/form-button-panel.component.ts","./src/app/shared/components/form-button-panel/form-button-panel.component.html","./src/app/shared/components/form-modal/form-modal.component.ts","./src/app/shared/components/form-modal/form-modal.component.html","./src/app/shared/components/grafana/grafana.component.ts","./src/app/shared/components/grafana/grafana.component.html","./src/app/shared/components/helper/helper.component.ts","./src/app/shared/components/helper/helper.component.html","./src/app/shared/components/language-selector/language-selector.component.ts","./src/app/shared/components/language-selector/language-selector.component.html","./src/app/shared/components/language-selector/supported-languages.enum.ts","./src/app/shared/components/loading-panel/loading-panel.component.ts","./src/app/shared/components/loading-panel/loading-panel.component.html","./src/app/shared/components/modal/modal.component.ts","./src/app/shared/components/modal/modal.component.html","./src/app/shared/components/motd/motd.component.ts","./src/app/shared/components/motd/motd.component.html","./src/app/shared/components/notifications-sidebar/notifications-sidebar.component.ts","./src/app/shared/components/notifications-sidebar/notifications-sidebar.component.html","./src/app/shared/components/orchestrator-doc-panel/orchestrator-doc-panel.component.ts","./src/app/shared/components/orchestrator-doc-panel/orchestrator-doc-panel.component.html","./src/app/shared/components/pwd-expiration-notification/pwd-expiration-notification.component.ts","./src/app/shared/components/pwd-expiration-notification/pwd-expiration-notification.component.html","./src/app/shared/components/refresh-selector/refresh-selector.component.ts","./src/app/shared/components/refresh-selector/refresh-selector.component.html","./src/app/shared/components/select-badges/select-badges.component.ts","./src/app/shared/components/select-badges/select-badges.component.html","./src/app/shared/components/select/select-messages.model.ts","./src/app/shared/components/select/select-option.model.ts","./src/app/shared/components/select/select.component.ts","./src/app/shared/components/select/select.component.html","./src/app/shared/components/sparkline/sparkline.component.ts","./src/app/shared/components/sparkline/sparkline.component.html","./src/app/shared/components/submit-button/submit-button.component.ts","./src/app/shared/components/submit-button/submit-button.component.html","./src/app/shared/components/telemetry-notification/telemetry-notification.component.ts","./src/app/shared/components/telemetry-notification/telemetry-notification.component.html","./src/app/shared/components/usage-bar/usage-bar.component.ts","./src/app/shared/components/usage-bar/usage-bar.component.html","./src/app/shared/components/wizard/wizard.component.ts","./src/app/shared/components/wizard/wizard.component.html","./src/app/shared/constants/app.constants.ts","./src/app/shared/datatable/datatable.module.ts","./src/app/shared/datatable/table-actions/table-actions.component.ts","./src/app/shared/datatable/table-actions/table-actions.component.html","./src/app/shared/datatable/table-key-value/table-key-value.component.ts","./src/app/shared/datatable/table-key-value/table-key-value.component.html","./src/app/shared/datatable/table-pagination/table-pagination.component.ts","./src/app/shared/datatable/table-pagination/table-pagination.component.html","./src/app/shared/datatable/table/table.component.ts","./src/app/shared/datatable/table/table.component.html","./src/app/shared/decorators/cd-encode.ts","./src/app/shared/directives/auth-storage.directive.ts","./src/app/shared/directives/autofocus.directive.ts","./src/app/shared/directives/dimless-binary-per-second.directive.ts","./src/app/shared/directives/dimless-binary.directive.ts","./src/app/shared/directives/directives.module.ts","./src/app/shared/directives/form-input-disable.directive.ts","./src/app/shared/directives/form-loading.directive.ts","./src/app/shared/directives/form-scope.directive.ts","./src/app/shared/directives/iops.directive.ts","./src/app/shared/directives/milliseconds.directive.ts","./src/app/shared/directives/ng-bootstrap-form-validation/cd-form-control.directive.ts","./src/app/shared/directives/ng-bootstrap-form-validation/cd-form-group.directive.ts","./src/app/shared/directives/ng-bootstrap-form-validation/cd-form-validation.directive.ts","./src/app/shared/directives/password-button.directive.ts","./src/app/shared/directives/stateful-tab.directive.ts","./src/app/shared/directives/trim.directive.ts","./src/app/shared/enum/cell-template.enum.ts","./src/app/shared/enum/components.enum.ts","./src/app/shared/enum/health-color.enum.ts","./src/app/shared/enum/health-label.enum.ts","./src/app/shared/enum/icons.enum.ts","./src/app/shared/enum/notification-type.enum.ts","./src/app/shared/enum/view-cache-status.enum.ts","./src/app/shared/forms/cd-form-builder.ts","./src/app/shared/forms/cd-form-group.ts","./src/app/shared/forms/cd-form.ts","./src/app/shared/forms/cd-validators.ts","./src/app/shared/models/breadcrumbs.ts","./src/app/shared/models/cd-notification.ts","./src/app/shared/models/cd-pwd-expiration-settings.ts","./src/app/shared/models/cd-pwd-policy-settings.ts","./src/app/shared/models/cd-table-fetch-data-context.ts","./src/app/shared/models/cd-table-paging.ts","./src/app/shared/models/cd-table-selection.ts","./src/app/shared/models/chart-tooltip.ts","./src/app/shared/models/configuration.ts","./src/app/shared/models/credentials.ts","./src/app/shared/models/executing-task.ts","./src/app/shared/models/finished-task.ts","./src/app/shared/models/image-spec.ts","./src/app/shared/models/orchestrator.enum.ts","./src/app/shared/models/osd-deployment-options.ts","./src/app/shared/models/osd-settings.ts","./src/app/shared/models/permissions.ts","./src/app/shared/models/task.ts","./src/app/shared/pipes/array.pipe.ts","./src/app/shared/pipes/boolean-text.pipe.ts","./src/app/shared/pipes/boolean.pipe.ts","./src/app/shared/pipes/cd-date.pipe.ts","./src/app/shared/pipes/ceph-release-name.pipe.ts","./src/app/shared/pipes/ceph-short-version.pipe.ts","./src/app/shared/pipes/dimless-binary-per-second.pipe.ts","./src/app/shared/pipes/dimless-binary.pipe.ts","./src/app/shared/pipes/dimless.pipe.ts","./src/app/shared/pipes/duration.pipe.ts","./src/app/shared/pipes/empty.pipe.ts","./src/app/shared/pipes/encode-uri.pipe.ts","./src/app/shared/pipes/filter.pipe.ts","./src/app/shared/pipes/health-color.pipe.ts","./src/app/shared/pipes/health-label.pipe.ts","./src/app/shared/pipes/iops.pipe.ts","./src/app/shared/pipes/iscsi-backstore.pipe.ts","./src/app/shared/pipes/join.pipe.ts","./src/app/shared/pipes/log-priority.pipe.ts","./src/app/shared/pipes/map.pipe.ts","./src/app/shared/pipes/milliseconds.pipe.ts","./src/app/shared/pipes/not-available.pipe.ts","./src/app/shared/pipes/ordinal.pipe.ts","./src/app/shared/pipes/pipes.module.ts","./src/app/shared/pipes/rbd-configuration-source.pipe.ts","./src/app/shared/pipes/relative-date.pipe.ts","./src/app/shared/pipes/round.pipe.ts","./src/app/shared/pipes/sanitize-html.pipe.ts","./src/app/shared/pipes/search-highlight.pipe.ts","./src/app/shared/pipes/truncate.pipe.ts","./src/app/shared/pipes/upper-first.pipe.ts","./src/app/shared/rxjs/operators/page-visibilty.operator.ts","./src/app/shared/services/api-interceptor.service.ts","./src/app/shared/services/auth-guard.service.ts","./src/app/shared/services/auth-storage.service.ts","./src/app/shared/services/change-password-guard.service.ts","./src/app/shared/services/device.service.ts","./src/app/shared/services/doc.service.ts","./src/app/shared/services/favicon.service.ts","./src/app/shared/services/feature-toggles-guard.service.ts","./src/app/shared/services/feature-toggles.service.ts","./src/app/shared/services/formatter.service.ts","./src/app/shared/services/js-error-handler.service.ts","./src/app/shared/services/language.service.ts","./src/app/shared/services/modal.service.ts","./src/app/shared/services/module-status-guard.service.ts","./src/app/shared/services/motd-notification.service.ts","./src/app/shared/services/ngzone-scheduler.service.ts","./src/app/shared/services/no-sso-guard.service.ts","./src/app/shared/services/notification.service.ts","./src/app/shared/services/password-policy.service.ts","./src/app/shared/services/prometheus-alert-formatter.ts","./src/app/shared/services/prometheus-alert.service.ts","./src/app/shared/services/prometheus-notification.service.ts","./src/app/shared/services/prometheus-silence-matcher.service.ts","./src/app/shared/services/rbd-configuration.service.ts","./src/app/shared/services/refresh-interval.service.ts","./src/app/shared/services/summary.service.ts","./src/app/shared/services/task-list.service.ts","./src/app/shared/services/task-manager.service.ts","./src/app/shared/services/task-message.service.ts","./src/app/shared/services/task-wrapper.service.ts","./src/app/shared/services/telemetry-notification.service.ts","./src/app/shared/services/text-to-download.service.ts","./src/app/shared/services/time-diff.service.ts","./src/app/shared/services/timer.service.ts","./src/app/shared/services/url-builder.service.ts","./src/app/shared/services/wizard-steps.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts","/root/ceph/src/pybind/mgr/dashboard/frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","ignored|/root/ceph/src/pybind/mgr/dashboard/frontend/node_modules/object-inspect|./util.inspect"],"sourcesContent":["\"use strict\";(function(global){global.ng=global.ng||{};global.ng.common=global.ng.common||{};global.ng.common.locales=global.ng.common.locales||{};const u=undefined;function plural(val){const n=val,i=Math.floor(Math.abs(val)),v=val.toString().replace(/^[^.]*\\.?/,\"\").length;if(i===1&&v===0)return 1;return 5}global.ng.common.locales[\"en-us-posix\"]=[\"en-US-POSIX\",[[\"a\",\"p\"],[\"AM\",\"PM\"],u],[[\"AM\",\"PM\"],u,u],[[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"]],u,[[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]],u,[[\"B\",\"A\"],[\"BC\",\"AD\"],[\"Before Christ\",\"Anno Domini\"]],0,[6,0],[\"M/d/yy\",\"MMM d, y\",\"MMMM d, y\",\"EEEE, MMMM d, y\"],[\"h:mm a\",\"h:mm:ss a\",\"h:mm:ss a z\",\"h:mm:ss a zzzz\"],[\"{1}, {0}\",u,\"{1} 'at' {0}\",u],[\".\",\",\",\";\",\"%\",\"+\",\"-\",\"E\",\"\\xD7\",\"0/00\",\"INF\",\"NaN\",\":\"],[\"0.######\",\"0%\",\"\\xA4\\xA00.00\",\"0.000000E+000\"],\"USD\",\"$\",\"US Dollar\",{},\"ltr\",plural,[[[\"mi\",\"n\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],[\"midnight\",\"noon\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],u],[[\"midnight\",\"noon\",\"morning\",\"afternoon\",\"evening\",\"night\"],u,u],[\"00:00\",\"12:00\",[\"06:00\",\"12:00\"],[\"12:00\",\"18:00\"],[\"18:00\",\"21:00\"],[\"21:00\",\"06:00\"]]]]})(typeof globalThis!==\"undefined\"&&globalThis||typeof global!==\"undefined\"&&global||typeof window!==\"undefined\"&&window);","import { Injectable, NgModule } from '@angular/core';\nimport { ActivatedRouteSnapshot, PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport _ from 'lodash';\n\nimport { CephfsListComponent } from './ceph/cephfs/cephfs-list/cephfs-list.component';\nimport { ConfigurationFormComponent } from './ceph/cluster/configuration/configuration-form/configuration-form.component';\nimport { ConfigurationComponent } from './ceph/cluster/configuration/configuration.component';\nimport { CreateClusterComponent } from './ceph/cluster/create-cluster/create-cluster.component';\nimport { CrushmapComponent } from './ceph/cluster/crushmap/crushmap.component';\nimport { HostFormComponent } from './ceph/cluster/hosts/host-form/host-form.component';\nimport { HostsComponent } from './ceph/cluster/hosts/hosts.component';\nimport { InventoryComponent } from './ceph/cluster/inventory/inventory.component';\nimport { LogsComponent } from './ceph/cluster/logs/logs.component';\nimport { MgrModuleFormComponent } from './ceph/cluster/mgr-modules/mgr-module-form/mgr-module-form.component';\nimport { MgrModuleListComponent } from './ceph/cluster/mgr-modules/mgr-module-list/mgr-module-list.component';\nimport { MonitorComponent } from './ceph/cluster/monitor/monitor.component';\nimport { OsdFormComponent } from './ceph/cluster/osd/osd-form/osd-form.component';\nimport { OsdListComponent } from './ceph/cluster/osd/osd-list/osd-list.component';\nimport { ActiveAlertListComponent } from './ceph/cluster/prometheus/active-alert-list/active-alert-list.component';\nimport { RulesListComponent } from './ceph/cluster/prometheus/rules-list/rules-list.component';\nimport { SilenceFormComponent } from './ceph/cluster/prometheus/silence-form/silence-form.component';\nimport { SilenceListComponent } from './ceph/cluster/prometheus/silence-list/silence-list.component';\nimport { ServiceFormComponent } from './ceph/cluster/services/service-form/service-form.component';\nimport { ServicesComponent } from './ceph/cluster/services/services.component';\nimport { TelemetryComponent } from './ceph/cluster/telemetry/telemetry.component';\nimport { DashboardComponent } from './ceph/dashboard/dashboard/dashboard.component';\nimport { NfsFormComponent } from './ceph/nfs/nfs-form/nfs-form.component';\nimport { NfsListComponent } from './ceph/nfs/nfs-list/nfs-list.component';\nimport { PerformanceCounterComponent } from './ceph/performance-counter/performance-counter/performance-counter.component';\nimport { LoginPasswordFormComponent } from './core/auth/login-password-form/login-password-form.component';\nimport { LoginComponent } from './core/auth/login/login.component';\nimport { UserPasswordFormComponent } from './core/auth/user-password-form/user-password-form.component';\nimport { ErrorComponent } from './core/error/error.component';\nimport { BlankLayoutComponent } from './core/layouts/blank-layout/blank-layout.component';\nimport { LoginLayoutComponent } from './core/layouts/login-layout/login-layout.component';\nimport { WorkbenchLayoutComponent } from './core/layouts/workbench-layout/workbench-layout.component';\nimport { ApiDocsComponent } from './core/navigation/api-docs/api-docs.component';\nimport { ActionLabels, URLVerbs } from './shared/constants/app.constants';\nimport { BreadcrumbsResolver, IBreadcrumb } from './shared/models/breadcrumbs';\nimport { AuthGuardService } from './shared/services/auth-guard.service';\nimport { ChangePasswordGuardService } from './shared/services/change-password-guard.service';\nimport { FeatureTogglesGuardService } from './shared/services/feature-toggles-guard.service';\nimport { ModuleStatusGuardService } from './shared/services/module-status-guard.service';\nimport { NoSsoGuardService } from './shared/services/no-sso-guard.service';\n\n@Injectable()\nexport class PerformanceCounterBreadcrumbsResolver extends BreadcrumbsResolver {\n  resolve(route: ActivatedRouteSnapshot) {\n    const result: IBreadcrumb[] = [];\n\n    const fromPath = route.queryParams.fromLink || null;\n    let fromText = '';\n    switch (fromPath) {\n      case '/monitor':\n        fromText = 'Monitors';\n        break;\n      case '/hosts':\n        fromText = 'Hosts';\n        break;\n    }\n    result.push({ text: 'Cluster', path: null });\n    result.push({ text: fromText, path: fromPath });\n    result.push({ text: 'Performance Counters', path: '' });\n\n    return result;\n  }\n}\n\n@Injectable()\nexport class StartCaseBreadcrumbsResolver extends BreadcrumbsResolver {\n  resolve(route: ActivatedRouteSnapshot) {\n    const path = route.params.name;\n    const text = _.startCase(path);\n    return [{ text: `${text}/Edit`, path: path }];\n  }\n}\n\nconst routes: Routes = [\n  // Dashboard\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n  { path: 'api-docs', component: ApiDocsComponent },\n  {\n    path: '',\n    component: WorkbenchLayoutComponent,\n    canActivate: [AuthGuardService, ChangePasswordGuardService],\n    canActivateChild: [AuthGuardService, ChangePasswordGuardService],\n    children: [\n      { path: 'dashboard', component: DashboardComponent },\n      { path: 'error', component: ErrorComponent },\n\n      // Cluster\n      {\n        path: 'expand-cluster',\n        component: CreateClusterComponent,\n        canActivate: [ModuleStatusGuardService],\n        data: {\n          moduleStatusGuardConfig: {\n            uiApiPath: 'orchestrator',\n            redirectTo: 'dashboard',\n            backend: 'cephadm'\n          },\n          breadcrumbs: 'Expand Cluster'\n        }\n      },\n      {\n        path: 'hosts',\n        component: HostsComponent,\n        data: { breadcrumbs: 'Cluster/Hosts' },\n        children: [\n          {\n            path: URLVerbs.ADD,\n            component: HostFormComponent,\n            outlet: 'modal'\n          }\n        ]\n      },\n      {\n        path: 'monitor',\n        component: MonitorComponent,\n        data: { breadcrumbs: 'Cluster/Monitors' }\n      },\n      {\n        path: 'services',\n        component: ServicesComponent,\n        canActivate: [ModuleStatusGuardService],\n        data: {\n          moduleStatusGuardConfig: {\n            uiApiPath: 'orchestrator',\n            redirectTo: 'error',\n            section: 'orch',\n            section_info: 'Orchestrator',\n            header: 'Orchestrator is not available'\n          },\n          breadcrumbs: 'Cluster/Services'\n        },\n        children: [\n          {\n            path: URLVerbs.CREATE,\n            component: ServiceFormComponent,\n            outlet: 'modal'\n          },\n          {\n            path: `${URLVerbs.EDIT}/:type/:name`,\n            component: ServiceFormComponent,\n            outlet: 'modal'\n          }\n        ]\n      },\n      {\n        path: 'inventory',\n        canActivate: [ModuleStatusGuardService],\n        component: InventoryComponent,\n        data: {\n          moduleStatusGuardConfig: {\n            uiApiPath: 'orchestrator',\n            redirectTo: 'error',\n            section: 'orch',\n            section_info: 'Orchestrator',\n            header: 'Orchestrator is not available'\n          },\n          breadcrumbs: 'Cluster/Physical Disks'\n        }\n      },\n      {\n        path: 'osd',\n        data: { breadcrumbs: 'Cluster/OSDs' },\n        children: [\n          { path: '', component: OsdListComponent },\n          {\n            path: URLVerbs.CREATE,\n            component: OsdFormComponent,\n            data: { breadcrumbs: ActionLabels.CREATE }\n          }\n        ]\n      },\n      {\n        path: 'configuration',\n        data: { breadcrumbs: 'Cluster/Configuration' },\n        children: [\n          { path: '', component: ConfigurationComponent },\n          {\n            path: 'edit/:name',\n            component: ConfigurationFormComponent,\n            data: { breadcrumbs: ActionLabels.EDIT }\n          }\n        ]\n      },\n      {\n        path: 'crush-map',\n        component: CrushmapComponent,\n        data: { breadcrumbs: 'Cluster/CRUSH map' }\n      },\n      {\n        path: 'logs',\n        component: LogsComponent,\n        data: { breadcrumbs: 'Cluster/Logs' }\n      },\n      {\n        path: 'telemetry',\n        component: TelemetryComponent,\n        data: { breadcrumbs: 'Telemetry configuration' }\n      },\n      {\n        path: 'monitoring',\n        data: { breadcrumbs: 'Cluster/Monitoring' },\n        children: [\n          { path: '', redirectTo: 'active-alerts', pathMatch: 'full' },\n          {\n            path: 'active-alerts',\n            data: { breadcrumbs: 'Active Alerts' },\n            component: ActiveAlertListComponent\n          },\n          {\n            path: 'alerts',\n            data: { breadcrumbs: 'Alerts' },\n            component: RulesListComponent\n          },\n          {\n            path: 'silences',\n            data: { breadcrumbs: 'Silences' },\n            children: [\n              {\n                path: '',\n                component: SilenceListComponent\n              },\n              {\n                path: URLVerbs.CREATE,\n                component: SilenceFormComponent,\n                data: { breadcrumbs: `${ActionLabels.CREATE} Silence` }\n              },\n              {\n                path: `${URLVerbs.CREATE}/:id`,\n                component: SilenceFormComponent,\n                data: { breadcrumbs: ActionLabels.CREATE }\n              },\n              {\n                path: `${URLVerbs.EDIT}/:id`,\n                component: SilenceFormComponent,\n                data: { breadcrumbs: ActionLabels.EDIT }\n              },\n              {\n                path: `${URLVerbs.RECREATE}/:id`,\n                component: SilenceFormComponent,\n                data: { breadcrumbs: ActionLabels.RECREATE }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        path: 'perf_counters/:type/:id',\n        component: PerformanceCounterComponent,\n        data: {\n          breadcrumbs: PerformanceCounterBreadcrumbsResolver\n        }\n      },\n      // Mgr modules\n      {\n        path: 'mgr-modules',\n        data: { breadcrumbs: 'Cluster/Manager Modules' },\n        children: [\n          {\n            path: '',\n            component: MgrModuleListComponent\n          },\n          {\n            path: 'edit/:name',\n            component: MgrModuleFormComponent,\n            data: {\n              breadcrumbs: StartCaseBreadcrumbsResolver\n            }\n          }\n        ]\n      },\n      // Pools\n      {\n        path: 'pool',\n        data: { breadcrumbs: 'Pools' },\n        loadChildren: () => import('./ceph/pool/pool.module').then((m) => m.RoutedPoolModule)\n      },\n      // Block\n      {\n        path: 'block',\n        data: { breadcrumbs: true, text: 'Block', path: null },\n        loadChildren: () => import('./ceph/block/block.module').then((m) => m.RoutedBlockModule)\n      },\n      // File Systems\n      {\n        path: 'cephfs',\n        component: CephfsListComponent,\n        canActivate: [FeatureTogglesGuardService],\n        data: { breadcrumbs: 'File Systems' }\n      },\n      // Object Gateway\n      {\n        path: 'rgw',\n        canActivateChild: [FeatureTogglesGuardService, ModuleStatusGuardService],\n        data: {\n          moduleStatusGuardConfig: {\n            uiApiPath: 'rgw',\n            redirectTo: 'error',\n            section: 'rgw',\n            section_info: 'Object Gateway',\n            header: 'The Object Gateway Service is not configured'\n          },\n          breadcrumbs: true,\n          text: 'Object Gateway',\n          path: null\n        },\n        loadChildren: () => import('./ceph/rgw/rgw.module').then((m) => m.RoutedRgwModule)\n      },\n      // User/Role Management\n      {\n        path: 'user-management',\n        data: { breadcrumbs: 'User management', path: null },\n        loadChildren: () => import('./core/auth/auth.module').then((m) => m.RoutedAuthModule)\n      },\n      // User Profile\n      {\n        path: 'user-profile',\n        data: { breadcrumbs: 'User profile', path: null },\n        children: [\n          {\n            path: URLVerbs.EDIT,\n            component: UserPasswordFormComponent,\n            canActivate: [NoSsoGuardService],\n            data: { breadcrumbs: ActionLabels.EDIT }\n          }\n        ]\n      },\n      // NFS\n      {\n        path: 'nfs',\n        canActivateChild: [FeatureTogglesGuardService, ModuleStatusGuardService],\n        data: {\n          moduleStatusGuardConfig: {\n            uiApiPath: 'nfs-ganesha',\n            redirectTo: 'error',\n            section: 'nfs-ganesha',\n            section_info: 'NFS GANESHA',\n            header: 'NFS-Ganesha is not configured'\n          },\n          breadcrumbs: 'NFS'\n        },\n        children: [\n          { path: '', component: NfsListComponent },\n          {\n            path: URLVerbs.CREATE,\n            component: NfsFormComponent,\n            data: { breadcrumbs: ActionLabels.CREATE }\n          },\n          {\n            path: `${URLVerbs.EDIT}/:cluster_id/:export_id`,\n            component: NfsFormComponent,\n            data: { breadcrumbs: ActionLabels.EDIT }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    path: '',\n    component: LoginLayoutComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      {\n        path: 'login-change-password',\n        component: LoginPasswordFormComponent,\n        canActivate: [NoSsoGuardService]\n      }\n    ]\n  },\n  {\n    path: '',\n    component: BlankLayoutComponent,\n    children: [{ path: '**', redirectTo: '/error' }]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      preloadingStrategy: PreloadAllModules,\n      relativeLinkResolution: 'legacy'\n    })\n  ],\n  exports: [RouterModule],\n  providers: [StartCaseBreadcrumbsResolver, PerformanceCounterBreadcrumbsResolver]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'cd-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(popoverConfig: NgbPopoverConfig, tooltipConfig: NgbTooltipConfig) {\n    popoverConfig.autoClose = 'outside';\n    popoverConfig.container = 'body';\n    popoverConfig.placement = 'bottom';\n\n    tooltipConfig.container = 'body';\n  }\n}\n","<router-outlet></router-outlet>\n","import { APP_BASE_HREF } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CephModule } from './ceph/ceph.module';\nimport { CoreModule } from './core/core.module';\nimport { ApiInterceptorService } from './shared/services/api-interceptor.service';\nimport { JsErrorHandler } from './shared/services/js-error-handler.service';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n      enableHtml: true\n    }),\n    AppRoutingModule,\n    CoreModule,\n    SharedModule,\n    CephModule\n  ],\n  exports: [SharedModule],\n  providers: [\n    {\n      provide: ErrorHandler,\n      useClass: JsErrorHandler\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiInterceptorService,\n      multi: true\n    },\n    {\n      provide: APP_BASE_HREF,\n      useValue: '/' + (window.location.pathname.split('/', 1)[1] || '')\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { CephfsModule } from './cephfs/cephfs.module';\nimport { ClusterModule } from './cluster/cluster.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { NfsModule } from './nfs/nfs.module';\nimport { PerformanceCounterModule } from './performance-counter/performance-counter.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClusterModule,\n    DashboardModule,\n    PerformanceCounterModule,\n    CephfsModule,\n    NfsModule,\n    SharedModule\n  ],\n  declarations: []\n})\nexport class CephModule {}\n","import { Component, ElementRef, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\n\nimport { ChartDataSets, ChartOptions, ChartPoint, ChartType } from 'chart.js';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { ChartTooltip } from '~/app/shared/models/chart-tooltip';\n\n@Component({\n  selector: 'cd-cephfs-chart',\n  templateUrl: './cephfs-chart.component.html',\n  styleUrls: ['./cephfs-chart.component.scss']\n})\nexport class CephfsChartComponent implements OnChanges, OnInit {\n  @ViewChild('chartCanvas', { static: true })\n  chartCanvas: ElementRef;\n  @ViewChild('chartTooltip', { static: true })\n  chartTooltip: ElementRef;\n\n  @Input()\n  mdsCounter: any;\n\n  lhsCounter = 'mds_mem.ino';\n  rhsCounter = 'mds_server.handle_client_request';\n\n  chart: {\n    datasets: ChartDataSets[];\n    options: ChartOptions;\n    chartType: ChartType;\n  } = {\n    datasets: [\n      {\n        label: this.lhsCounter,\n        yAxisID: 'LHS',\n        data: [],\n        lineTension: 0.1\n      },\n      {\n        label: this.rhsCounter,\n        yAxisID: 'RHS',\n        data: [],\n        lineTension: 0.1\n      }\n    ],\n    options: {\n      title: {\n        text: '',\n        display: true\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        position: 'top'\n      },\n      scales: {\n        xAxes: [\n          {\n            position: 'top',\n            type: 'time',\n            time: {\n              displayFormats: {\n                quarter: 'MMM YYYY'\n              }\n            },\n            ticks: {\n              maxRotation: 0\n            }\n          }\n        ],\n        yAxes: [\n          {\n            id: 'LHS',\n            type: 'linear',\n            position: 'left'\n          },\n          {\n            id: 'RHS',\n            type: 'linear',\n            position: 'right'\n          }\n        ]\n      },\n      tooltips: {\n        enabled: false,\n        mode: 'index',\n        intersect: false,\n        position: 'nearest',\n        callbacks: {\n          // Pick the Unix timestamp of the first tooltip item.\n          title: (tooltipItems, data): string => {\n            let ts = 0;\n            if (tooltipItems.length > 0) {\n              const item = tooltipItems[0];\n              const point = data.datasets[item.datasetIndex].data[item.index] as ChartPoint;\n              ts = point.x as number;\n            }\n            return ts.toString();\n          }\n        }\n      }\n    },\n    chartType: 'line'\n  };\n\n  ngOnInit() {\n    if (_.isUndefined(this.mdsCounter)) {\n      return;\n    }\n    this.setChartTooltip();\n    this.updateChart();\n  }\n\n  ngOnChanges() {\n    if (_.isUndefined(this.mdsCounter)) {\n      return;\n    }\n    this.updateChart();\n  }\n\n  private setChartTooltip() {\n    const chartTooltip = new ChartTooltip(\n      this.chartCanvas,\n      this.chartTooltip,\n      (tooltip: any) => tooltip.caretX + 'px',\n      (tooltip: any) => tooltip.caretY - tooltip.height - 23 + 'px'\n    );\n    chartTooltip.getTitle = (ts) => moment(ts, 'x').format('LTS');\n    chartTooltip.checkOffset = true;\n    const chartOptions: ChartOptions = {\n      title: {\n        text: this.mdsCounter.name\n      },\n      tooltips: {\n        custom: (tooltip) => chartTooltip.customTooltips(tooltip)\n      }\n    };\n    _.merge(this.chart, { options: chartOptions });\n  }\n\n  private updateChart() {\n    const chartDataSets: ChartDataSets[] = [\n      {\n        data: this.convertTimeSeries(this.mdsCounter[this.lhsCounter])\n      },\n      {\n        data: this.deltaTimeSeries(this.mdsCounter[this.rhsCounter])\n      }\n    ];\n    _.merge(this.chart, {\n      datasets: chartDataSets\n    });\n    this.chart.datasets = [...this.chart.datasets]; // Force angular to update\n  }\n\n  /**\n   * Convert ceph-mgr's time series format (list of 2-tuples\n   * with seconds-since-epoch timestamps) into what chart.js\n   * can handle (list of objects with millisecs-since-epoch\n   * timestamps)\n   */\n  private convertTimeSeries(sourceSeries: any) {\n    const data: any[] = [];\n    _.each(sourceSeries, (dp) => {\n      data.push({\n        x: dp[0] * 1000,\n        y: dp[1]\n      });\n    });\n\n    /**\n     * MDS performance counters chart is expecting the same number of items\n     * from each data series. Since in deltaTimeSeries we are ignoring the first\n     * element, we will do the same here.\n     */\n    data.shift();\n\n    return data;\n  }\n\n  private deltaTimeSeries(sourceSeries: any) {\n    let i;\n    let prev = sourceSeries[0];\n    const result = [];\n    for (i = 1; i < sourceSeries.length; i++) {\n      const cur = sourceSeries[i];\n\n      result.push({\n        x: cur[0] * 1000,\n        y: cur[1] - prev[1]\n      });\n\n      prev = cur;\n    }\n    return result;\n  }\n}\n","<div class=\"chart-container\">\n  <canvas baseChart\n          #chartCanvas\n          [datasets]=\"chart.datasets\"\n          [options]=\"chart.options\"\n          [chartType]=\"chart.chartType\">\n  </canvas>\n  <div class=\"chartjs-tooltip\"\n       #chartTooltip>\n    <table></table>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CephfsService } from '~/app/shared/api/cephfs.service';\nimport { TableStatusViewCache } from '~/app/shared/classes/table-status-view-cache';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-cephfs-clients',\n  templateUrl: './cephfs-clients.component.html',\n  styleUrls: ['./cephfs-clients.component.scss']\n})\nexport class CephfsClientsComponent implements OnInit {\n  @Input()\n  id: number;\n\n  @Input()\n  clients: {\n    data: any[];\n    status: TableStatusViewCache;\n  };\n\n  @Output()\n  triggerApiUpdate = new EventEmitter();\n\n  columns: CdTableColumn[];\n\n  permission: Permission;\n  tableActions: CdTableAction[];\n  modalRef: NgbModalRef;\n\n  selection = new CdTableSelection();\n\n  constructor(\n    private cephfsService: CephfsService,\n    private modalService: ModalService,\n    private notificationService: NotificationService,\n    private authStorageService: AuthStorageService,\n    private actionLabels: ActionLabelsI18n\n  ) {\n    this.permission = this.authStorageService.getPermissions().cephfs;\n    const evictAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.signOut,\n      click: () => this.evictClientModal(),\n      name: this.actionLabels.EVICT\n    };\n    this.tableActions = [evictAction];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      { prop: 'id', name: $localize`id` },\n      { prop: 'type', name: $localize`type` },\n      { prop: 'state', name: $localize`state` },\n      { prop: 'version', name: $localize`version` },\n      { prop: 'hostname', name: $localize`Host` },\n      { prop: 'root', name: $localize`root` }\n    ];\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  evictClient(clientId: number) {\n    this.cephfsService.evictClient(this.id, clientId).subscribe(\n      () => {\n        this.triggerApiUpdate.emit();\n        this.modalRef.close();\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Evicted client '${clientId}'`\n        );\n      },\n      () => {\n        this.modalRef.componentInstance.stopLoadingSpinner();\n      }\n    );\n  }\n\n  evictClientModal() {\n    const clientId = this.selection.first().id;\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: 'client',\n      itemNames: [clientId],\n      actionDescription: 'evict',\n      submitAction: () => this.evictClient(clientId)\n    });\n  }\n}\n","<cd-table [data]=\"clients.data\"\n          [columns]=\"columns\"\n          [status]=\"clients.status\"\n          [autoReload]=\"-1\"\n          (fetchData)=\"triggerApiUpdate.emit()\"\n          selectionType=\"single\"\n          (updateSelection)=\"updateSelection($event)\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n</cd-table>\n","import { Component, Input, OnChanges, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { DimlessPipe } from '~/app/shared/pipes/dimless.pipe';\n\n@Component({\n  selector: 'cd-cephfs-detail',\n  templateUrl: './cephfs-detail.component.html',\n  styleUrls: ['./cephfs-detail.component.scss']\n})\nexport class CephfsDetailComponent implements OnChanges, OnInit {\n  @ViewChild('poolUsageTpl', { static: true })\n  poolUsageTpl: TemplateRef<any>;\n  @ViewChild('activityTmpl', { static: true })\n  activityTmpl: TemplateRef<any>;\n\n  @Input()\n  data: {\n    standbys: string;\n    pools: any[];\n    ranks: any[];\n    mdsCounters: object;\n    name: string;\n  };\n\n  columns: {\n    ranks: CdTableColumn[];\n    pools: CdTableColumn[];\n  };\n  standbys: any[] = [];\n\n  objectValues = Object.values;\n\n  constructor(private dimlessBinary: DimlessBinaryPipe, private dimless: DimlessPipe) {}\n\n  ngOnChanges() {\n    this.setStandbys();\n  }\n\n  private setStandbys() {\n    this.standbys = [\n      {\n        key: $localize`Standby daemons`,\n        value: this.data.standbys\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.columns = {\n      ranks: [\n        { prop: 'rank', name: $localize`Rank` },\n        { prop: 'state', name: $localize`State` },\n        { prop: 'mds', name: $localize`Daemon` },\n        { prop: 'activity', name: $localize`Activity`, cellTemplate: this.activityTmpl },\n        { prop: 'dns', name: $localize`Dentries`, pipe: this.dimless },\n        { prop: 'inos', name: $localize`Inodes`, pipe: this.dimless },\n        { prop: 'dirs', name: $localize`Dirs`, pipe: this.dimless },\n        { prop: 'caps', name: $localize`Caps`, pipe: this.dimless }\n      ],\n      pools: [\n        { prop: 'pool', name: $localize`Pool` },\n        { prop: 'type', name: $localize`Type` },\n        { prop: 'size', name: $localize`Size`, pipe: this.dimlessBinary },\n        {\n          name: $localize`Usage`,\n          cellTemplate: this.poolUsageTpl,\n          comparator: (_valueA: any, _valueB: any, rowA: any, rowB: any) => {\n            const valA = rowA.used / rowA.avail;\n            const valB = rowB.used / rowB.avail;\n\n            if (valA === valB) {\n              return 0;\n            }\n\n            if (valA > valB) {\n              return 1;\n            } else {\n              return -1;\n            }\n          }\n        } as CdTableColumn\n      ]\n    };\n  }\n\n  trackByFn(_index: any, item: any) {\n    return item.name;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-6\">\n    <legend i18n>Ranks</legend>\n    <cd-table [data]=\"data.ranks\"\n              [columns]=\"columns.ranks\"\n              [toolHeader]=\"false\">\n    </cd-table>\n\n    <legend i18n>Standbys</legend>\n    <cd-table-key-value [data]=\"standbys\">\n    </cd-table-key-value>\n  </div>\n\n  <div class=\"col-sm-6\">\n    <legend i18n>Pools</legend>\n    <cd-table [data]=\"data.pools\"\n              [columns]=\"columns.pools\"\n              [toolHeader]=\"false\">\n    </cd-table>\n  </div>\n</div>\n\n<legend i18n>MDS performance counters</legend>\n<div class=\"row\"\n     *ngFor=\"let mdsCounter of objectValues(data.mdsCounters); trackBy: trackByFn\">\n  <div class=\"col-md-12\">\n    <cd-cephfs-chart [mdsCounter]=\"mdsCounter\"></cd-cephfs-chart>\n  </div>\n</div>\n\n<!-- templates -->\n<ng-template #poolUsageTpl\n             let-row=\"row\">\n  <cd-usage-bar [total]=\"row.size\"\n                [used]=\"row.used\"\n                [title]=\"row.pool_name\"></cd-usage-bar>\n</ng-template>\n\n<ng-template #activityTmpl\n             let-row=\"row\"\n             let-value=\"value\">\n  {{ row.state === 'standby-replay' ? 'Evts' : 'Reqs' }}: {{ value | dimless }} /s\n</ng-template>\n","import { Component, Input, OnChanges, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AbstractControl, Validators } from '@angular/forms';\n\nimport {\n  ITreeOptions,\n  TreeComponent,\n  TreeModel,\n  TreeNode,\n  TREE_ACTIONS\n} from '@circlon/angular-tree-component';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { CephfsService } from '~/app/shared/api/cephfs.service';\nimport { ConfirmationModalComponent } from '~/app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { FormModalComponent } from '~/app/shared/components/form-modal/form-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { CdFormModalFieldConfig } from '~/app/shared/models/cd-form-modal-field-config';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport {\n  CephfsDir,\n  CephfsQuotas,\n  CephfsSnapshot\n} from '~/app/shared/models/cephfs-directory-models';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { CdDatePipe } from '~/app/shared/pipes/cd-date.pipe';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\nclass QuotaSetting {\n  row: {\n    // Used in quota table\n    name: string;\n    value: number | string;\n    originPath: string;\n  };\n  quotaKey: string;\n  dirValue: number;\n  nextTreeMaximum: {\n    value: number;\n    path: string;\n  };\n}\n\n@Component({\n  selector: 'cd-cephfs-directories',\n  templateUrl: './cephfs-directories.component.html',\n  styleUrls: ['./cephfs-directories.component.scss']\n})\nexport class CephfsDirectoriesComponent implements OnInit, OnChanges {\n  @ViewChild(TreeComponent)\n  treeComponent: TreeComponent;\n  @ViewChild('origin', { static: true })\n  originTmpl: TemplateRef<any>;\n\n  @Input()\n  id: number;\n\n  private modalRef: NgbModalRef;\n  private dirs: CephfsDir[];\n  private nodeIds: { [path: string]: CephfsDir };\n  private requestedPaths: string[];\n  private loadingTimeout: any;\n\n  icons = Icons;\n  loadingIndicator = false;\n  loading = {};\n  treeOptions: ITreeOptions = {\n    useVirtualScroll: true,\n    getChildren: (node: TreeNode): Promise<any[]> => {\n      return this.updateDirectory(node.id);\n    },\n    actionMapping: {\n      mouse: {\n        click: this.selectAndShowNode.bind(this),\n        expanderClick: this.selectAndShowNode.bind(this)\n      }\n    }\n  };\n\n  permission: Permission;\n  selectedDir: CephfsDir;\n  settings: QuotaSetting[];\n  quota: {\n    columns: CdTableColumn[];\n    selection: CdTableSelection;\n    tableActions: CdTableAction[];\n    updateSelection: Function;\n  };\n  snapshot: {\n    columns: CdTableColumn[];\n    selection: CdTableSelection;\n    tableActions: CdTableAction[];\n    updateSelection: Function;\n  };\n  nodes: any[];\n  alreadyExists: boolean;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private modalService: ModalService,\n    private cephfsService: CephfsService,\n    private cdDatePipe: CdDatePipe,\n    private actionLabels: ActionLabelsI18n,\n    private notificationService: NotificationService,\n    private dimlessBinaryPipe: DimlessBinaryPipe\n  ) {}\n\n  private selectAndShowNode(tree: TreeModel, node: TreeNode, $event: any) {\n    TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n    this.selectNode(node);\n  }\n\n  private selectNode(node: TreeNode) {\n    TREE_ACTIONS.TOGGLE_ACTIVE(undefined, node, undefined);\n    this.selectedDir = this.getDirectory(node);\n    if (node.id === '/') {\n      return;\n    }\n    this.setSettings(node);\n  }\n\n  ngOnInit() {\n    this.permission = this.authStorageService.getPermissions().cephfs;\n    this.setUpQuotaTable();\n    this.setUpSnapshotTable();\n  }\n\n  private setUpQuotaTable() {\n    this.quota = {\n      columns: [\n        {\n          prop: 'row.name',\n          name: $localize`Name`,\n          flexGrow: 1\n        },\n        {\n          prop: 'row.value',\n          name: $localize`Value`,\n          sortable: false,\n          flexGrow: 1\n        },\n        {\n          prop: 'row.originPath',\n          name: $localize`Origin`,\n          sortable: false,\n          cellTemplate: this.originTmpl,\n          flexGrow: 1\n        }\n      ],\n      selection: new CdTableSelection(),\n      updateSelection: (selection: CdTableSelection) => {\n        this.quota.selection = selection;\n      },\n      tableActions: [\n        {\n          name: this.actionLabels.SET,\n          icon: Icons.edit,\n          permission: 'update',\n          visible: (selection) =>\n            !selection.hasSelection || (selection.first() && selection.first().dirValue === 0),\n          click: () => this.updateQuotaModal()\n        },\n        {\n          name: this.actionLabels.UPDATE,\n          icon: Icons.edit,\n          permission: 'update',\n          visible: (selection) => selection.first() && selection.first().dirValue > 0,\n          click: () => this.updateQuotaModal()\n        },\n        {\n          name: this.actionLabels.UNSET,\n          icon: Icons.destroy,\n          permission: 'update',\n          disable: (selection) =>\n            !selection.hasSelection || (selection.first() && selection.first().dirValue === 0),\n          click: () => this.unsetQuotaModal()\n        }\n      ]\n    };\n  }\n\n  private setUpSnapshotTable() {\n    this.snapshot = {\n      columns: [\n        {\n          prop: 'name',\n          name: $localize`Name`,\n          flexGrow: 1\n        },\n        {\n          prop: 'path',\n          name: $localize`Path`,\n          isHidden: true,\n          flexGrow: 2\n        },\n        {\n          prop: 'created',\n          name: $localize`Created`,\n          flexGrow: 1,\n          pipe: this.cdDatePipe\n        }\n      ],\n      selection: new CdTableSelection(),\n      updateSelection: (selection: CdTableSelection) => {\n        this.snapshot.selection = selection;\n      },\n      tableActions: [\n        {\n          name: this.actionLabels.CREATE,\n          icon: Icons.add,\n          permission: 'create',\n          canBePrimary: (selection) => !selection.hasSelection,\n          click: () => this.createSnapshot(),\n          disable: () => this.disableCreateSnapshot()\n        },\n        {\n          name: this.actionLabels.DELETE,\n          icon: Icons.destroy,\n          permission: 'delete',\n          click: () => this.deleteSnapshotModal(),\n          canBePrimary: (selection) => selection.hasSelection,\n          disable: (selection) => !selection.hasSelection\n        }\n      ]\n    };\n  }\n\n  private disableCreateSnapshot(): string | boolean {\n    const folders = this.selectedDir.path.split('/').slice(1);\n    // With deph of 4 or more we have the subvolume files/folders for which we cannot create\n    // a snapshot. Somehow, you can create a snapshot of the subvolume but not its files.\n    if (folders.length >= 4 && folders[0] === 'volumes') {\n      return $localize`Cannot create snapshots for files/folders in the subvolume ${folders[2]}`;\n    }\n    return false;\n  }\n\n  ngOnChanges() {\n    this.selectedDir = undefined;\n    this.dirs = [];\n    this.requestedPaths = [];\n    this.nodeIds = {};\n    if (this.id) {\n      this.setRootNode();\n      this.firstCall();\n    }\n  }\n\n  private setRootNode() {\n    this.nodes = [\n      {\n        name: '/',\n        id: '/',\n        isExpanded: true\n      }\n    ];\n  }\n\n  private firstCall() {\n    const path = '/';\n    setTimeout(() => {\n      this.getNode(path).loadNodeChildren();\n    }, 10);\n  }\n\n  updateDirectory(path: string): Promise<any[]> {\n    this.unsetLoadingIndicator();\n    if (!this.requestedPaths.includes(path)) {\n      this.requestedPaths.push(path);\n    } else if (this.loading[path] === true) {\n      return undefined; // Path is currently fetched.\n    }\n    return new Promise((resolve) => {\n      this.setLoadingIndicator(path, true);\n      this.cephfsService.lsDir(this.id, path).subscribe((dirs) => {\n        this.updateTreeStructure(dirs);\n        this.updateQuotaTable();\n        this.updateTree();\n        resolve(this.getChildren(path));\n        this.setLoadingIndicator(path, false);\n      });\n    });\n  }\n\n  private setLoadingIndicator(path: string, loading: boolean) {\n    this.loading[path] = loading;\n    this.unsetLoadingIndicator();\n  }\n\n  private getSubDirectories(path: string, tree: CephfsDir[] = this.dirs): CephfsDir[] {\n    return tree.filter((d) => d.parent === path);\n  }\n\n  private getChildren(path: string): any[] {\n    const subTree = this.getSubTree(path);\n    return _.sortBy(this.getSubDirectories(path), 'path').map((dir) =>\n      this.createNode(dir, subTree)\n    );\n  }\n\n  private createNode(dir: CephfsDir, subTree?: CephfsDir[]): any {\n    this.nodeIds[dir.path] = dir;\n    if (!subTree) {\n      this.getSubTree(dir.parent);\n    }\n    return {\n      name: dir.name,\n      id: dir.path,\n      hasChildren: this.getSubDirectories(dir.path, subTree).length > 0\n    };\n  }\n\n  private getSubTree(path: string): CephfsDir[] {\n    return this.dirs.filter((d) => d.parent && d.parent.startsWith(path));\n  }\n\n  private setSettings(node: TreeNode) {\n    const readable = (value: number, fn?: (arg0: number) => number | string): number | string =>\n      value ? (fn ? fn(value) : value) : '';\n\n    this.settings = [\n      this.getQuota(node, 'max_files', readable),\n      this.getQuota(node, 'max_bytes', (value) =>\n        readable(value, (v) => this.dimlessBinaryPipe.transform(v))\n      )\n    ];\n  }\n\n  private getQuota(\n    tree: TreeNode,\n    quotaKey: string,\n    valueConvertFn: (number: number) => number | string\n  ): QuotaSetting {\n    // Get current maximum\n    const currentPath = tree.id;\n    tree = this.getOrigin(tree, quotaKey);\n    const dir = this.getDirectory(tree);\n    const value = dir.quotas[quotaKey];\n    // Get next tree maximum\n    // => The value that isn't changeable through a change of the current directories quota value\n    let nextMaxValue = value;\n    let nextMaxPath = dir.path;\n    if (tree.id === currentPath) {\n      if (tree.parent.id === '/') {\n        // The value will never inherit any other value, so it has no maximum.\n        nextMaxValue = 0;\n      } else {\n        const nextMaxDir = this.getDirectory(this.getOrigin(tree.parent, quotaKey));\n        nextMaxValue = nextMaxDir.quotas[quotaKey];\n        nextMaxPath = nextMaxDir.path;\n      }\n    }\n    return {\n      row: {\n        name: quotaKey === 'max_bytes' ? $localize`Max size` : $localize`Max files`,\n        value: valueConvertFn(value),\n        originPath: value ? dir.path : ''\n      },\n      quotaKey,\n      dirValue: this.nodeIds[currentPath].quotas[quotaKey],\n      nextTreeMaximum: {\n        value: nextMaxValue,\n        path: nextMaxValue ? nextMaxPath : ''\n      }\n    };\n  }\n\n  /**\n   * Get the node where the quota limit originates from in the current node\n   *\n   * Example as it's a recursive method:\n   *\n   * |  Path + Value | Call depth |       useOrigin?      | Output |\n   * |:-------------:|:----------:|:---------------------:|:------:|\n   * | /a/b/c/d (15) |     1st    | 2nd (5) < 15 => false |  /a/b  |\n   * | /a/b/c (20)   |     2nd    | 3rd (5) < 20 => false |  /a/b  |\n   * | /a/b (5)      |     3rd    |  4th (10) < 5 => true |  /a/b  |\n   * | /a (10)       |     4th    |       10 => true      |   /a   |\n   *\n   */\n  private getOrigin(tree: TreeNode, quotaSetting: string): TreeNode {\n    if (tree.parent && tree.parent.id !== '/') {\n      const current = this.getQuotaFromTree(tree, quotaSetting);\n\n      // Get the next used quota and node above the current one (until it hits the root directory)\n      const originTree = this.getOrigin(tree.parent, quotaSetting);\n      const inherited = this.getQuotaFromTree(originTree, quotaSetting);\n\n      // Select if the current quota is in use or the above\n      const useOrigin = current === 0 || (inherited !== 0 && inherited < current);\n      return useOrigin ? originTree : tree;\n    }\n    return tree;\n  }\n\n  private getQuotaFromTree(tree: TreeNode, quotaSetting: string): number {\n    return this.getDirectory(tree).quotas[quotaSetting];\n  }\n\n  private getDirectory(node: TreeNode): CephfsDir {\n    const path = node.id as string;\n    return this.nodeIds[path];\n  }\n\n  selectOrigin(path: string) {\n    this.selectNode(this.getNode(path));\n  }\n\n  private getNode(path: string): TreeNode {\n    return this.treeComponent.treeModel.getNodeById(path);\n  }\n\n  updateQuotaModal() {\n    const path = this.selectedDir.path;\n    const selection: QuotaSetting = this.quota.selection.first();\n    const nextMax = selection.nextTreeMaximum;\n    const key = selection.quotaKey;\n    const value = selection.dirValue;\n    this.modalService.show(FormModalComponent, {\n      titleText: this.getModalQuotaTitle(\n        value === 0 ? this.actionLabels.SET : this.actionLabels.UPDATE,\n        path\n      ),\n      message: nextMax.value\n        ? $localize`The inherited ${this.getQuotaValueFromPathMsg(\n            nextMax.value,\n            nextMax.path\n          )} is the maximum value to be used.`\n        : undefined,\n      fields: [this.getQuotaFormField(selection.row.name, key, value, nextMax.value)],\n      submitButtonText: $localize`Save`,\n      onSubmit: (values: CephfsQuotas) => this.updateQuota(values)\n    });\n  }\n\n  private getModalQuotaTitle(action: string, path: string): string {\n    return $localize`${action} CephFS ${this.getQuotaName()} quota for '${path}'`;\n  }\n\n  private getQuotaName(): string {\n    return this.isBytesQuotaSelected() ? $localize`size` : $localize`files`;\n  }\n\n  private isBytesQuotaSelected(): boolean {\n    return this.quota.selection.first().quotaKey === 'max_bytes';\n  }\n\n  private getQuotaValueFromPathMsg(value: number, path: string): string {\n    value = this.isBytesQuotaSelected() ? this.dimlessBinaryPipe.transform(value) : value;\n\n    return $localize`${this.getQuotaName()} quota ${value} from '${path}'`;\n  }\n\n  private getQuotaFormField(\n    label: string,\n    name: string,\n    value: number,\n    maxValue: number\n  ): CdFormModalFieldConfig {\n    const isBinary = name === 'max_bytes';\n    const formValidators = [isBinary ? CdValidators.binaryMin(0) : Validators.min(0)];\n    if (maxValue) {\n      formValidators.push(isBinary ? CdValidators.binaryMax(maxValue) : Validators.max(maxValue));\n    }\n    const field: CdFormModalFieldConfig = {\n      type: isBinary ? 'binary' : 'number',\n      label,\n      name,\n      value,\n      validators: formValidators,\n      required: true\n    };\n    if (!isBinary) {\n      field.errors = {\n        min: $localize`Value has to be at least 0 or more`,\n        max: $localize`Value has to be at most ${maxValue} or less`\n      };\n    }\n    return field;\n  }\n\n  private updateQuota(values: CephfsQuotas, onSuccess?: Function) {\n    const path = this.selectedDir.path;\n    const key = this.quota.selection.first().quotaKey;\n    const action =\n      this.selectedDir.quotas[key] === 0\n        ? this.actionLabels.SET\n        : values[key] === 0\n        ? this.actionLabels.UNSET\n        : $localize`Updated`;\n    this.cephfsService.quota(this.id, path, values).subscribe(() => {\n      if (onSuccess) {\n        onSuccess();\n      }\n      this.notificationService.show(\n        NotificationType.success,\n        this.getModalQuotaTitle(action, path)\n      );\n      this.forceDirRefresh();\n    });\n  }\n\n  unsetQuotaModal() {\n    const path = this.selectedDir.path;\n    const selection: QuotaSetting = this.quota.selection.first();\n    const key = selection.quotaKey;\n    const nextMax = selection.nextTreeMaximum;\n    const dirValue = selection.dirValue;\n\n    const quotaValue = this.getQuotaValueFromPathMsg(nextMax.value, nextMax.path);\n    const conclusion =\n      nextMax.value > 0\n        ? nextMax.value > dirValue\n          ? $localize`in order to inherit ${quotaValue}`\n          : $localize`which isn't used because of the inheritance of ${quotaValue}`\n        : $localize`in order to have no quota on the directory`;\n\n    this.modalRef = this.modalService.show(ConfirmationModalComponent, {\n      titleText: this.getModalQuotaTitle(this.actionLabels.UNSET, path),\n      buttonText: this.actionLabels.UNSET,\n      description: $localize`${this.actionLabels.UNSET} ${this.getQuotaValueFromPathMsg(\n        dirValue,\n        path\n      )} ${conclusion}.`,\n      onSubmit: () => this.updateQuota({ [key]: 0 }, () => this.modalRef.close())\n    });\n  }\n\n  createSnapshot() {\n    // Create a snapshot. Auto-generate a snapshot name by default.\n    const path = this.selectedDir.path;\n    this.modalService.show(FormModalComponent, {\n      titleText: $localize`Create Snapshot`,\n      message: $localize`Please enter the name of the snapshot.`,\n      fields: [\n        {\n          type: 'text',\n          name: 'name',\n          value: `${moment().toISOString(true)}`,\n          required: true,\n          validators: [this.validateValue.bind(this)]\n        }\n      ],\n      submitButtonText: $localize`Create Snapshot`,\n      onSubmit: (values: CephfsSnapshot) => {\n        if (!this.alreadyExists) {\n          this.cephfsService.mkSnapshot(this.id, path, values.name).subscribe((name) => {\n            this.notificationService.show(\n              NotificationType.success,\n              $localize`Created snapshot '${name}' for '${path}'`\n            );\n            this.forceDirRefresh();\n          });\n        } else {\n          this.notificationService.show(\n            NotificationType.error,\n            $localize`Snapshot name '${values.name}' is already in use. Please use another name.`\n          );\n        }\n      }\n    });\n  }\n\n  validateValue(control: AbstractControl) {\n    this.alreadyExists = this.selectedDir.snapshots.some((s) => s.name === control.value);\n  }\n\n  /**\n   * Forces an update of the current selected directory\n   *\n   * As all nodes point by their path on an directory object, the easiest way is to update\n   * the objects by merge with their latest change.\n   */\n  private forceDirRefresh(path?: string) {\n    if (!path) {\n      const dir = this.selectedDir;\n      if (!dir) {\n        throw new Error('This function can only be called without path if an selection was made');\n      }\n      // Parent has to be called in order to update the object referring\n      // to the current selected directory\n      path = dir.parent ? dir.parent : dir.path;\n    }\n    const node = this.getNode(path);\n    node.loadNodeChildren();\n  }\n\n  private updateTreeStructure(dirs: CephfsDir[]) {\n    const getChildrenAndPaths = (\n      directories: CephfsDir[],\n      parent: string\n    ): { children: CephfsDir[]; paths: string[] } => {\n      const children = directories.filter((d) => d.parent === parent);\n      const paths = children.map((d) => d.path);\n      return { children, paths };\n    };\n\n    const parents = _.uniq(dirs.map((d) => d.parent).sort());\n    parents.forEach((p) => {\n      const received = getChildrenAndPaths(dirs, p);\n      const cached = getChildrenAndPaths(this.dirs, p);\n\n      cached.children.forEach((d) => {\n        if (!received.paths.includes(d.path)) {\n          this.removeOldDirectory(d);\n        }\n      });\n      received.children.forEach((d) => {\n        if (cached.paths.includes(d.path)) {\n          this.updateExistingDirectory(cached.children, d);\n        } else {\n          this.addNewDirectory(d);\n        }\n      });\n    });\n  }\n\n  private removeOldDirectory(rmDir: CephfsDir) {\n    const path = rmDir.path;\n    // Remove directory from local variables\n    _.remove(this.dirs, (d) => d.path === path);\n    delete this.nodeIds[path];\n    this.updateDirectoriesParentNode(rmDir);\n  }\n\n  private updateDirectoriesParentNode(dir: CephfsDir) {\n    const parent = dir.parent;\n    if (!parent) {\n      return;\n    }\n    const node = this.getNode(parent);\n    if (!node) {\n      // Node will not be found for new sub sub directories - this is the intended behaviour\n      return;\n    }\n    const children = this.getChildren(parent);\n    node.data.children = children;\n    node.data.hasChildren = children.length > 0;\n    this.treeComponent.treeModel.update();\n  }\n\n  private addNewDirectory(newDir: CephfsDir) {\n    this.dirs.push(newDir);\n    this.nodeIds[newDir.path] = newDir;\n    this.updateDirectoriesParentNode(newDir);\n  }\n\n  private updateExistingDirectory(source: CephfsDir[], updatedDir: CephfsDir) {\n    const currentDirObject = source.find((sub) => sub.path === updatedDir.path);\n    Object.assign(currentDirObject, updatedDir);\n  }\n\n  private updateQuotaTable() {\n    const node = this.selectedDir ? this.getNode(this.selectedDir.path) : undefined;\n    if (node && node.id !== '/') {\n      this.setSettings(node);\n    }\n  }\n\n  private updateTree(force: boolean = false) {\n    if (this.loadingIndicator && !force) {\n      // In order to make the page scrollable during load, the render cycle for each node\n      // is omitted and only be called if all updates were loaded.\n      return;\n    }\n    this.treeComponent.treeModel.update();\n    this.nodes = [...this.nodes];\n    this.treeComponent.sizeChanged();\n  }\n\n  deleteSnapshotModal() {\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: $localize`CephFs Snapshot`,\n      itemNames: this.snapshot.selection.selected.map((snapshot: CephfsSnapshot) => snapshot.name),\n      submitAction: () => this.deleteSnapshot()\n    });\n  }\n\n  deleteSnapshot() {\n    const path = this.selectedDir.path;\n    this.snapshot.selection.selected.forEach((snapshot: CephfsSnapshot) => {\n      const name = snapshot.name;\n      this.cephfsService.rmSnapshot(this.id, path, name).subscribe(() => {\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Deleted snapshot '${name}' for '${path}'`\n        );\n      });\n    });\n    this.modalRef.close();\n    this.forceDirRefresh();\n  }\n\n  refreshAllDirectories() {\n    // In order to make the page scrollable during load, the render cycle for each node\n    // is omitted and only be called if all updates were loaded.\n    this.loadingIndicator = true;\n    this.requestedPaths.map((path) => this.forceDirRefresh(path));\n    const interval = setInterval(() => {\n      this.updateTree(true);\n      if (!this.loadingIndicator) {\n        clearInterval(interval);\n      }\n    }, 3000);\n  }\n\n  unsetLoadingIndicator() {\n    if (!this.loadingIndicator) {\n      return;\n    }\n    clearTimeout(this.loadingTimeout);\n    this.loadingTimeout = setTimeout(() => {\n      const loading = Object.values(this.loading).some((l) => l);\n      if (loading) {\n        return this.unsetLoadingIndicator();\n      }\n      this.loadingIndicator = false;\n      this.updateTree();\n      // The problem is that we can't subscribe to an useful updated tree event and the time\n      // between fetching all calls and rebuilding the tree can take some time\n    }, 3000);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-4 pe-0\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <button type=\"button\"\n                [class.disabled]=\"loadingIndicator\"\n                class=\"btn btn-light pull-right\"\n                (click)=\"refreshAllDirectories()\">\n          <i [ngClass]=\"[icons.large, icons.refresh]\"\n             [class.fa-spin]=\"loadingIndicator\"></i>\n        </button>\n      </div>\n      <div class=\"card-body\">\n        <tree-root *ngIf=\"nodes\"\n                   [nodes]=\"nodes\"\n                   [options]=\"treeOptions\">\n          <ng-template #loadingTemplate>\n            <i [ngClass]=\"[icons.spinner, icons.spin]\"></i>\n          </ng-template>\n        </tree-root>\n      </div>\n    </div>\n  </div>\n  <!-- Selection details -->\n  <div class=\"col-sm-8 metadata\"\n       *ngIf=\"selectedDir\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        {{ selectedDir.path }}\n      </div>\n      <div class=\"card-body\">\n        <ng-container *ngIf=\"selectedDir.path !== '/'\">\n          <legend i18n>Quotas</legend>\n          <cd-table [data]=\"settings\"\n                    [columns]=\"quota.columns\"\n                    [limit]=\"0\"\n                    [footer]=\"false\"\n                    selectionType=\"single\"\n                    (updateSelection)=\"quota.updateSelection($event)\"\n                    [onlyActionHeader]=\"true\"\n                    identifier=\"quotaKey\"\n                    [forceIdentifier]=\"true\"\n                    [toolHeader]=\"false\">\n            <cd-table-actions class=\"only-table-actions\"\n                              [permission]=\"permission\"\n                              [selection]=\"quota.selection\"\n                              [tableActions]=\"quota.tableActions\">\n            </cd-table-actions>\n          </cd-table>\n        </ng-container>\n\n        <legend i18n>Snapshots</legend>\n        <cd-table [data]=\"selectedDir.snapshots\"\n                  [columns]=\"snapshot.columns\"\n                  identifier=\"name\"\n                  forceIdentifier=\"true\"\n                  selectionType=\"multiClick\"\n                  (updateSelection)=\"snapshot.updateSelection($event)\">\n          <cd-table-actions class=\"table-actions\"\n                            [permission]=\"permission\"\n                            [selection]=\"snapshot.selection\"\n                            [tableActions]=\"snapshot.tableActions\">\n          </cd-table-actions>\n        </cd-table>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #origin\n             let-row=\"row\"\n             let-value=\"value\">\n  <span class=\"quota-origin\"\n        (click)=\"selectOrigin(value)\">{{value}}</span>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\nimport { CephfsService } from '~/app/shared/api/cephfs.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { CdDatePipe } from '~/app/shared/pipes/cd-date.pipe';\n\n@Component({\n  selector: 'cd-cephfs-list',\n  templateUrl: './cephfs-list.component.html',\n  styleUrls: ['./cephfs-list.component.scss']\n})\nexport class CephfsListComponent extends ListWithDetails implements OnInit {\n  columns: CdTableColumn[];\n  filesystems: any = [];\n  selection = new CdTableSelection();\n\n  constructor(private cephfsService: CephfsService, private cdDatePipe: CdDatePipe) {\n    super();\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Name`,\n        prop: 'mdsmap.fs_name',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Created`,\n        prop: 'mdsmap.created',\n        flexGrow: 2,\n        pipe: this.cdDatePipe\n      },\n      {\n        name: $localize`Enabled`,\n        prop: 'mdsmap.enabled',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.checkIcon\n      }\n    ];\n  }\n\n  loadFilesystems(context: CdTableFetchDataContext) {\n    this.cephfsService.list().subscribe(\n      (resp: any[]) => {\n        this.filesystems = resp;\n      },\n      () => {\n        context.error();\n      }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n}\n","<cd-table [data]=\"filesystems\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          (fetchData)=\"loadFilesystems($event)\"\n          identifier=\"id\"\n          forceIdentifier=\"true\"\n          selectionType=\"single\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\">\n  <cd-cephfs-tabs cdTableDetail\n                  [selection]=\"expandedRow\">\n  </cd-cephfs-tabs>\n</cd-table>\n","import { Component, Input, NgZone, OnChanges, OnDestroy } from '@angular/core';\n\nimport _ from 'lodash';\nimport { Subscription, timer } from 'rxjs';\n\nimport { CephfsService } from '~/app/shared/api/cephfs.service';\nimport { TableStatusViewCache } from '~/app/shared/classes/table-status-view-cache';\nimport { ViewCacheStatus } from '~/app/shared/enum/view-cache-status.enum';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-cephfs-tabs',\n  templateUrl: './cephfs-tabs.component.html',\n  styleUrls: ['./cephfs-tabs.component.scss']\n})\nexport class CephfsTabsComponent implements OnChanges, OnDestroy {\n  @Input()\n  selection: any;\n\n  // Grafana tab\n  grafanaId: any;\n  grafanaPermission: Permission;\n\n  // Client tab\n  id: number;\n  clients: Record<string, any> = {\n    data: [],\n    status: new TableStatusViewCache(ViewCacheStatus.ValueNone)\n  };\n\n  // Details tab\n  details: Record<string, any> = {\n    standbys: '',\n    pools: [],\n    ranks: [],\n    mdsCounters: {},\n    name: ''\n  };\n\n  private data: any;\n  private reloadSubscriber: Subscription;\n\n  constructor(\n    private ngZone: NgZone,\n    private authStorageService: AuthStorageService,\n    private cephfsService: CephfsService\n  ) {\n    this.grafanaPermission = this.authStorageService.getPermissions().grafana;\n  }\n\n  ngOnChanges() {\n    if (!this.selection) {\n      this.unsubscribeInterval();\n      return;\n    }\n    if (this.selection.id !== this.id) {\n      this.setupSelected(this.selection.id, this.selection.mdsmap.info);\n    }\n  }\n\n  private setupSelected(id: number, mdsInfo: any) {\n    this.id = id;\n    const firstMds: any = _.first(Object.values(mdsInfo));\n    this.grafanaId = firstMds && firstMds['name'];\n    this.details = {\n      standbys: '',\n      pools: [],\n      ranks: [],\n      mdsCounters: {},\n      name: ''\n    };\n    this.clients = {\n      data: [],\n      status: new TableStatusViewCache(ViewCacheStatus.ValueNone)\n    };\n    this.updateInterval();\n  }\n\n  private updateInterval() {\n    this.unsubscribeInterval();\n    this.subscribeInterval();\n  }\n\n  private unsubscribeInterval() {\n    if (this.reloadSubscriber) {\n      this.reloadSubscriber.unsubscribe();\n    }\n  }\n\n  private subscribeInterval() {\n    this.ngZone.runOutsideAngular(\n      () =>\n        (this.reloadSubscriber = timer(0, 5000).subscribe(() =>\n          this.ngZone.run(() => this.refresh())\n        ))\n    );\n  }\n\n  refresh() {\n    this.cephfsService.getTabs(this.id).subscribe(\n      (data: any) => {\n        this.data = data;\n        this.softRefresh();\n      },\n      () => {\n        this.clients.status = new TableStatusViewCache(ViewCacheStatus.ValueException);\n      }\n    );\n  }\n\n  softRefresh() {\n    const data = _.cloneDeep(this.data); // Forces update of tab tables on tab switch\n    // Clients tab\n    this.clients = data.clients;\n    this.clients.status = new TableStatusViewCache(this.clients.status);\n    // Details tab\n    this.details = {\n      standbys: data.standbys,\n      pools: data.pools,\n      ranks: data.ranks,\n      mdsCounters: data.mds_counters,\n      name: data.name\n    };\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeInterval();\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <nav ngbNav\n       #nav=\"ngbNav\"\n       (navChange)=\"softRefresh()\"\n       class=\"nav-tabs\"\n       cdStatefulTab=\"cephfs-tabs\">\n    <ng-container ngbNavItem=\"details\">\n      <a ngbNavLink\n         i18n>Details</a>\n      <ng-template ngbNavContent>\n        <cd-cephfs-detail [data]=\"details\">\n        </cd-cephfs-detail>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"clients\">\n      <a ngbNavLink>\n        <ng-container i18n>Clients</ng-container>\n        <span class=\"badge badge-pill badge-tab ms-1\">{{ clients.data.length }}</span>\n      </a>\n      <ng-template ngbNavContent>\n        <cd-cephfs-clients [id]=\"id\"\n                           [clients]=\"clients\"\n                           (triggerApiUpdate)=\"refresh()\">\n        </cd-cephfs-clients>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"directories\">\n      <a ngbNavLink\n         i18n>Directories</a>\n      <ng-template ngbNavContent>\n        <cd-cephfs-directories [id]=\"id\"></cd-cephfs-directories>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"performance-details\">\n      <a ngbNavLink\n         i18n>Performance Details</a>\n      <ng-template ngbNavContent>\n        <cd-grafana i18n-title\n                    title=\"CephFS MDS performance\"\n                    [grafanaPath]=\"'mds-performance?var-mds_servers=mds.' + grafanaId\"\n                    [type]=\"'metrics'\"\n                    uid=\"tbO9LAiZz\"\n                    grafanaStyle=\"one\">\n        </cd-grafana>\n      </ng-template>\n    </ng-container>\n  </nav>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TreeModule } from '@circlon/angular-tree-component';\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartsModule } from 'ng2-charts';\n\nimport { AppRoutingModule } from '~/app/app-routing.module';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { CephfsChartComponent } from './cephfs-chart/cephfs-chart.component';\nimport { CephfsClientsComponent } from './cephfs-clients/cephfs-clients.component';\nimport { CephfsDetailComponent } from './cephfs-detail/cephfs-detail.component';\nimport { CephfsDirectoriesComponent } from './cephfs-directories/cephfs-directories.component';\nimport { CephfsListComponent } from './cephfs-list/cephfs-list.component';\nimport { CephfsTabsComponent } from './cephfs-tabs/cephfs-tabs.component';\n\n@NgModule({\n  imports: [CommonModule, SharedModule, AppRoutingModule, ChartsModule, TreeModule, NgbNavModule],\n  declarations: [\n    CephfsDetailComponent,\n    CephfsClientsComponent,\n    CephfsChartComponent,\n    CephfsListComponent,\n    CephfsTabsComponent,\n    CephfsDirectoriesComponent\n  ]\n})\nexport class CephfsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { TreeModule } from '@circlon/angular-tree-component';\nimport {\n  NgbActiveModal,\n  NgbDatepickerModule,\n  NgbDropdownModule,\n  NgbNavModule,\n  NgbPopoverModule,\n  NgbTimepickerModule,\n  NgbTooltipModule,\n  NgbTypeaheadModule\n} from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPipeFunctionModule } from 'ngx-pipe-function';\n\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { PerformanceCounterModule } from '../performance-counter/performance-counter.module';\nimport { CephSharedModule } from '../shared/ceph-shared.module';\nimport { ConfigurationDetailsComponent } from './configuration/configuration-details/configuration-details.component';\nimport { ConfigurationFormComponent } from './configuration/configuration-form/configuration-form.component';\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { CreateClusterReviewComponent } from './create-cluster/create-cluster-review.component';\nimport { CreateClusterComponent } from './create-cluster/create-cluster.component';\nimport { CrushmapComponent } from './crushmap/crushmap.component';\nimport { HostDetailsComponent } from './hosts/host-details/host-details.component';\nimport { HostFormComponent } from './hosts/host-form/host-form.component';\nimport { HostsComponent } from './hosts/hosts.component';\nimport { InventoryDevicesComponent } from './inventory/inventory-devices/inventory-devices.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { LogsComponent } from './logs/logs.component';\nimport { MgrModulesModule } from './mgr-modules/mgr-modules.module';\nimport { MonitorComponent } from './monitor/monitor.component';\nimport { OsdCreationPreviewModalComponent } from './osd/osd-creation-preview-modal/osd-creation-preview-modal.component';\nimport { OsdDetailsComponent } from './osd/osd-details/osd-details.component';\nimport { OsdDevicesSelectionGroupsComponent } from './osd/osd-devices-selection-groups/osd-devices-selection-groups.component';\nimport { OsdDevicesSelectionModalComponent } from './osd/osd-devices-selection-modal/osd-devices-selection-modal.component';\nimport { OsdFlagsIndivModalComponent } from './osd/osd-flags-indiv-modal/osd-flags-indiv-modal.component';\nimport { OsdFlagsModalComponent } from './osd/osd-flags-modal/osd-flags-modal.component';\nimport { OsdFormComponent } from './osd/osd-form/osd-form.component';\nimport { OsdListComponent } from './osd/osd-list/osd-list.component';\nimport { OsdPgScrubModalComponent } from './osd/osd-pg-scrub-modal/osd-pg-scrub-modal.component';\nimport { OsdRecvSpeedModalComponent } from './osd/osd-recv-speed-modal/osd-recv-speed-modal.component';\nimport { OsdReweightModalComponent } from './osd/osd-reweight-modal/osd-reweight-modal.component';\nimport { OsdScrubModalComponent } from './osd/osd-scrub-modal/osd-scrub-modal.component';\nimport { ActiveAlertListComponent } from './prometheus/active-alert-list/active-alert-list.component';\nimport { PrometheusTabsComponent } from './prometheus/prometheus-tabs/prometheus-tabs.component';\nimport { RulesListComponent } from './prometheus/rules-list/rules-list.component';\nimport { SilenceFormComponent } from './prometheus/silence-form/silence-form.component';\nimport { SilenceListComponent } from './prometheus/silence-list/silence-list.component';\nimport { SilenceMatcherModalComponent } from './prometheus/silence-matcher-modal/silence-matcher-modal.component';\nimport { PlacementPipe } from './services/placement.pipe';\nimport { ServiceDaemonListComponent } from './services/service-daemon-list/service-daemon-list.component';\nimport { ServiceDetailsComponent } from './services/service-details/service-details.component';\nimport { ServiceFormComponent } from './services/service-form/service-form.component';\nimport { ServicesComponent } from './services/services.component';\nimport { TelemetryComponent } from './telemetry/telemetry.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PerformanceCounterModule,\n    NgbNavModule,\n    SharedModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbTooltipModule,\n    MgrModulesModule,\n    NgbTypeaheadModule,\n    NgbTimepickerModule,\n    TreeModule,\n    CephSharedModule,\n    NgbDatepickerModule,\n    NgbPopoverModule,\n    NgbDropdownModule,\n    NgxPipeFunctionModule\n  ],\n  declarations: [\n    HostsComponent,\n    MonitorComponent,\n    ConfigurationComponent,\n    OsdListComponent,\n    OsdDetailsComponent,\n    OsdScrubModalComponent,\n    OsdFlagsModalComponent,\n    HostDetailsComponent,\n    ConfigurationDetailsComponent,\n    ConfigurationFormComponent,\n    OsdReweightModalComponent,\n    CrushmapComponent,\n    LogsComponent,\n    OsdRecvSpeedModalComponent,\n    OsdPgScrubModalComponent,\n    OsdRecvSpeedModalComponent,\n    SilenceFormComponent,\n    SilenceListComponent,\n    SilenceMatcherModalComponent,\n    ServicesComponent,\n    InventoryComponent,\n    HostFormComponent,\n    OsdFormComponent,\n    OsdDevicesSelectionModalComponent,\n    InventoryDevicesComponent,\n    OsdDevicesSelectionGroupsComponent,\n    OsdCreationPreviewModalComponent,\n    RulesListComponent,\n    ActiveAlertListComponent,\n    ServiceDetailsComponent,\n    ServiceDaemonListComponent,\n    TelemetryComponent,\n    PrometheusTabsComponent,\n    ServiceFormComponent,\n    OsdFlagsIndivModalComponent,\n    PlacementPipe,\n    CreateClusterComponent,\n    CreateClusterReviewComponent\n  ],\n  providers: [NgbActiveModal]\n})\nexport class ClusterModule {}\n","import { Component, Input, OnChanges } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Component({\n  selector: 'cd-configuration-details',\n  templateUrl: './configuration-details.component.html',\n  styleUrls: ['./configuration-details.component.scss']\n})\nexport class ConfigurationDetailsComponent implements OnChanges {\n  @Input()\n  selection: any;\n  flags = {\n    runtime: $localize`The value can be updated at runtime.`,\n    no_mon_update: $localize`Daemons/clients do not pull this value from the\n      monitor config database. We disallow setting this option via 'ceph config\n      set ...'. This option should be configured via ceph.conf or via the\n      command line.`,\n    startup: $localize`Option takes effect only during daemon startup.`,\n    cluster_create: $localize`Option only affects cluster creation.`,\n    create: $localize`Option only affects daemon creation.`\n  };\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.selection.services = _.split(this.selection.services, ',');\n    }\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <table class=\"table table-striped table-bordered\">\n    <tbody>\n      <tr>\n        <td i18n\n            class=\"bold w-25\">Name</td>\n        <td class=\"w-75\">{{ selection.name }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Description</td>\n        <td>{{ selection.desc }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Long description</td>\n        <td>{{ selection.long_desc }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Current values</td>\n        <td>\n          <span *ngFor=\"let conf of selection.value; last as isLast\">\n            {{ conf.section }}: {{ conf.value }}{{ !isLast ? \",\" : \"\" }}<br />\n          </span>\n        </td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Default</td>\n        <td>{{ selection.default }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Daemon default</td>\n        <td>{{ selection.daemon_default }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Type</td>\n        <td>{{ selection.type }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Min</td>\n        <td>{{ selection.min }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Max</td>\n        <td>{{ selection.max }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Flags</td>\n        <td>\n          <span *ngFor=\"let flag of selection.flags\">\n            <span title=\"{{ flags[flag] }}\">\n              <span class=\"badge badge-dark me-2\">{{ flag | uppercase }}</span>\n            </span>\n          </span>\n        </td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Services</td>\n        <td>\n          <span *ngFor=\"let service of selection.services\">\n            <span class=\"badge badge-dark me-2\">{{ service }}</span>\n          </span>\n        </td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Source</td>\n        <td>{{ selection.source }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Level</td>\n        <td>{{ selection.level }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Can be updated at runtime (editable)</td>\n        <td>{{ selection.can_update_at_runtime | booleanText }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Tags</td>\n        <td>{{ selection.tags }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">Enum values</td>\n        <td>{{ selection.enum_values }}</td>\n      </tr>\n      <tr>\n        <td i18n\n            class=\"bold\">See also</td>\n        <td>{{ selection.see_also }}</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n","export class ConfigFormCreateRequestModel {\n  name: string;\n  value: Array<any> = [];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport _ from 'lodash';\n\nimport { ConfigurationService } from '~/app/shared/api/configuration.service';\nimport { ConfigFormModel } from '~/app/shared/components/config-option/config-option.model';\nimport { ConfigOptionTypes } from '~/app/shared/components/config-option/config-option.types';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { ConfigFormCreateRequestModel } from './configuration-form-create-request.model';\n\n@Component({\n  selector: 'cd-configuration-form',\n  templateUrl: './configuration-form.component.html',\n  styleUrls: ['./configuration-form.component.scss']\n})\nexport class ConfigurationFormComponent extends CdForm implements OnInit {\n  configForm: CdFormGroup;\n  response: ConfigFormModel;\n  type: string;\n  inputType: string;\n  humanReadableType: string;\n  minValue: number;\n  maxValue: number;\n  patternHelpText: string;\n  availSections = ['global', 'mon', 'mgr', 'osd', 'mds', 'client'];\n\n  constructor(\n    public actionLabels: ActionLabelsI18n,\n    private route: ActivatedRoute,\n    private router: Router,\n    private configService: ConfigurationService,\n    private notificationService: NotificationService\n  ) {\n    super();\n    this.createForm();\n  }\n\n  createForm() {\n    const formControls = {\n      name: new FormControl({ value: null }),\n      desc: new FormControl({ value: null }),\n      long_desc: new FormControl({ value: null }),\n      values: new FormGroup({}),\n      default: new FormControl({ value: null }),\n      daemon_default: new FormControl({ value: null }),\n      services: new FormControl([])\n    };\n\n    this.availSections.forEach((section) => {\n      formControls.values.addControl(section, new FormControl(null));\n    });\n\n    this.configForm = new CdFormGroup(formControls);\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params: { name: string }) => {\n      const configName = params.name;\n      this.configService.get(configName).subscribe((resp: ConfigFormModel) => {\n        this.setResponse(resp);\n        this.loadingReady();\n      });\n    });\n  }\n\n  getValidators(configOption: any): ValidatorFn[] {\n    const typeValidators = ConfigOptionTypes.getTypeValidators(configOption);\n    if (typeValidators) {\n      this.patternHelpText = typeValidators.patternHelpText;\n\n      if ('max' in typeValidators && typeValidators.max !== '') {\n        this.maxValue = typeValidators.max;\n      }\n\n      if ('min' in typeValidators && typeValidators.min !== '') {\n        this.minValue = typeValidators.min;\n      }\n\n      return typeValidators.validators;\n    }\n\n    return undefined;\n  }\n\n  getStep(type: string, value: number): number | undefined {\n    return ConfigOptionTypes.getTypeStep(type, value);\n  }\n\n  setResponse(response: ConfigFormModel) {\n    this.response = response;\n    const validators = this.getValidators(response);\n\n    this.configForm.get('name').setValue(response.name);\n    this.configForm.get('desc').setValue(response.desc);\n    this.configForm.get('long_desc').setValue(response.long_desc);\n    this.configForm.get('default').setValue(response.default);\n    this.configForm.get('daemon_default').setValue(response.daemon_default);\n    this.configForm.get('services').setValue(response.services);\n\n    if (this.response.value) {\n      this.response.value.forEach((value) => {\n        // Check value type. If it's a boolean value we need to convert it because otherwise we\n        // would use the string representation. That would cause issues for e.g. checkboxes.\n        let sectionValue = null;\n        if (value.value === 'true') {\n          sectionValue = true;\n        } else if (value.value === 'false') {\n          sectionValue = false;\n        } else {\n          sectionValue = value.value;\n        }\n        this.configForm.get('values').get(value.section).setValue(sectionValue);\n      });\n    }\n\n    this.availSections.forEach((section) => {\n      this.configForm.get('values').get(section).setValidators(validators);\n    });\n\n    const currentType = ConfigOptionTypes.getType(response.type);\n    this.type = currentType.name;\n    this.inputType = currentType.inputType;\n    this.humanReadableType = currentType.humanReadable;\n  }\n\n  createRequest(): ConfigFormCreateRequestModel | null {\n    const values: any[] = [];\n\n    this.availSections.forEach((section) => {\n      const sectionValue = this.configForm.getValue(section);\n      if (sectionValue !== null && sectionValue !== '') {\n        values.push({ section: section, value: sectionValue });\n      }\n    });\n\n    if (!_.isEqual(this.response.value, values)) {\n      const request = new ConfigFormCreateRequestModel();\n      request.name = this.configForm.getValue('name');\n      request.value = values;\n      return request;\n    }\n\n    return null;\n  }\n\n  submit() {\n    const request = this.createRequest();\n\n    if (request) {\n      this.configService.create(request).subscribe(\n        () => {\n          this.notificationService.show(\n            NotificationType.success,\n            $localize`Updated config option ${request.name}`\n          );\n          this.router.navigate(['/configuration']);\n        },\n        () => {\n          this.configForm.setErrors({ cdSubmitButton: true });\n        }\n      );\n    }\n\n    this.router.navigate(['/configuration']);\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form name=\"configForm\"\n        #formDir=\"ngForm\"\n        [formGroup]=\"configForm\"\n        novalidate>\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <ng-container i18>Edit</ng-container> {{ configForm.getValue('name') }}\n      </div>\n\n      <div class=\"card-body\">\n        <!-- Name -->\n        <div class=\"form-group row\">\n          <label i18n\n                 class=\"cd-col-form-label\">Name</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   id=\"name\"\n                   formControlName=\"name\"\n                   readonly>\n          </div>\n        </div>\n\n        <!-- Description -->\n        <div class=\"form-group row\"\n             *ngIf=\"configForm.getValue('desc')\">\n          <label i18n\n                 class=\"cd-col-form-label\">Description</label>\n          <div class=\"cd-col-form-input\">\n            <textarea class=\"form-control resize-vertical\"\n                      id=\"desc\"\n                      formControlName=\"desc\"\n                      readonly>\n            </textarea>\n          </div>\n        </div>\n\n        <!-- Long description -->\n        <div class=\"form-group row\"\n             *ngIf=\"configForm.getValue('long_desc')\">\n          <label i18n\n                 class=\"cd-col-form-label\">Long description</label>\n          <div class=\"cd-col-form-input\">\n            <textarea class=\"form-control resize-vertical\"\n                      id=\"long_desc\"\n                      formControlName=\"long_desc\"\n                      readonly>\n            </textarea>\n          </div>\n        </div>\n\n        <!-- Default -->\n        <div class=\"form-group row\"\n             *ngIf=\"configForm.getValue('default') !== ''\">\n          <label i18n\n                 class=\"cd-col-form-label\">Default</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   id=\"default\"\n                   formControlName=\"default\"\n                   readonly>\n          </div>\n        </div>\n\n        <!-- Daemon default -->\n        <div class=\"form-group row\"\n             *ngIf=\"configForm.getValue('daemon_default') !== ''\">\n          <label i18n\n                 class=\"cd-col-form-label\">Daemon default</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   id=\"daemon_default\"\n                   formControlName=\"daemon_default\"\n                   readonly>\n          </div>\n        </div>\n\n        <!-- Services -->\n        <div class=\"form-group row\"\n             *ngIf=\"configForm.getValue('services').length > 0\">\n          <label i18n\n                 class=\"cd-col-form-label\">Services</label>\n          <div class=\"cd-col-form-input\">\n            <span *ngFor=\"let service of configForm.getValue('services')\"\n                  class=\"form-component-badge\">\n              <span class=\"badge badge-dark\">{{ service }}</span>\n            </span>\n          </div>\n        </div>\n\n        <!-- Values -->\n        <div formGroupName=\"values\">\n          <h3 i18n\n              class=\"cd-header\">Values</h3>\n          <ng-container *ngFor=\"let section of availSections\">\n            <div class=\"form-group row\"\n                 *ngIf=\"type === 'bool'\">\n              <label class=\"cd-col-form-label\"\n                     [for]=\"section\">{{ section }}\n              </label>\n              <div class=\"cd-col-form-input\">\n                <select id=\"pool\"\n                        name=\"pool\"\n                        class=\"form-select\"\n                        [formControlName]=\"section\">\n                  <option [ngValue]=\"null\"\n                          i18n>-- Default --</option>\n                  <option [ngValue]=\"true\"\n                          i18n>true</option>\n                  <option [ngValue]=\"false\"\n                          i18n>false</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"form-group row\"\n                 *ngIf=\"type !== 'bool'\">\n              <label class=\"cd-col-form-label\"\n                     [for]=\"section\">{{ section }}\n              </label>\n              <div class=\"cd-col-form-input\">\n                <input class=\"form-control\"\n                       [type]=\"inputType\"\n                       [id]=\"section\"\n                       [placeholder]=\"humanReadableType\"\n                       [formControlName]=\"section\"\n                       [step]=\"getStep(type, this.configForm.getValue(section))\">\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"configForm.showError(section, formDir, 'pattern')\">\n                  {{ patternHelpText }}\n                </span>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"configForm.showError(section, formDir, 'invalidUuid')\">\n                  {{ patternHelpText }}\n                </span>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"configForm.showError(section, formDir, 'max')\"\n                      i18n>The entered value is too high! It must not be greater than {{ maxValue }}.</span>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"configForm.showError(section, formDir, 'min')\"\n                      i18n>The entered value is too low! It must not be lower than {{ minValue }}.</span>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n      <!-- Footer -->\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                              [form]=\"configForm\"\n                              [submitText]=\"actionLabels.UPDATE\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ConfigurationService } from '~/app/shared/api/configuration.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.scss']\n})\nexport class ConfigurationComponent extends ListWithDetails implements OnInit {\n  permission: Permission;\n  tableActions: CdTableAction[];\n  data: any[] = [];\n  icons = Icons;\n  columns: CdTableColumn[];\n  selection = new CdTableSelection();\n  filters: CdTableColumn[] = [\n    {\n      name: $localize`Level`,\n      prop: 'level',\n      filterOptions: ['basic', 'advanced', 'dev'],\n      filterInitValue: 'basic',\n      filterPredicate: (row, value) => {\n        enum Level {\n          basic = 0,\n          advanced = 1,\n          dev = 2\n        }\n\n        const levelVal = Level[value];\n\n        return Level[row.level] <= levelVal;\n      }\n    },\n    {\n      name: $localize`Service`,\n      prop: 'services',\n      filterOptions: ['mon', 'mgr', 'osd', 'mds', 'common', 'mds_client', 'rgw'],\n      filterPredicate: (row, value) => {\n        return row.services.includes(value);\n      }\n    },\n    {\n      name: $localize`Source`,\n      prop: 'source',\n      filterOptions: ['mon'],\n      filterPredicate: (row, value) => {\n        if (!row.hasOwnProperty('source')) {\n          return false;\n        }\n        return row.source.includes(value);\n      }\n    },\n    {\n      name: $localize`Modified`,\n      prop: 'modified',\n      filterOptions: ['yes', 'no'],\n      filterPredicate: (row, value) => {\n        if (value === 'yes' && row.hasOwnProperty('value')) {\n          return true;\n        }\n\n        if (value === 'no' && !row.hasOwnProperty('value')) {\n          return true;\n        }\n\n        return false;\n      }\n    }\n  ];\n\n  @ViewChild('confValTpl', { static: true })\n  public confValTpl: TemplateRef<any>;\n  @ViewChild('confFlagTpl')\n  public confFlagTpl: TemplateRef<any>;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private configurationService: ConfigurationService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.permission = this.authStorageService.getPermissions().configOpt;\n    const getConfigOptUri = () =>\n      this.selection.first() && `${encodeURIComponent(this.selection.first().name)}`;\n    const editAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      routerLink: () => `/configuration/edit/${getConfigOptUri()}`,\n      name: this.actionLabels.EDIT,\n      disable: () => !this.isEditable(this.selection)\n    };\n    this.tableActions = [editAction];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      { canAutoResize: true, prop: 'name', name: $localize`Name` },\n      { prop: 'desc', name: $localize`Description`, cellClass: 'wrap' },\n      {\n        prop: 'value',\n        name: $localize`Current value`,\n        cellClass: 'wrap',\n        cellTemplate: this.confValTpl\n      },\n      { prop: 'default', name: $localize`Default`, cellClass: 'wrap' },\n      {\n        prop: 'can_update_at_runtime',\n        name: $localize`Editable`,\n        cellTransformation: CellTemplate.checkIcon,\n        flexGrow: 0.4,\n        cellClass: 'text-center'\n      }\n    ];\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  getConfigurationList(context: CdTableFetchDataContext) {\n    this.configurationService.getConfigData().subscribe(\n      (data: any) => {\n        this.data = data;\n      },\n      () => {\n        context.error();\n      }\n    );\n  }\n\n  isEditable(selection: CdTableSelection): boolean {\n    if (selection.selected.length !== 1) {\n      return false;\n    }\n\n    return selection.selected[0].can_update_at_runtime;\n  }\n}\n","<cd-table [data]=\"data\"\n          (fetchData)=\"getConfigurationList($event)\"\n          [columns]=\"columns\"\n          [extraFilterableColumns]=\"filters\"\n          selectionType=\"single\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n  <cd-configuration-details cdTableDetail\n                            [selection]=\"expandedRow\">\n  </cd-configuration-details>\n</cd-table>\n\n<ng-template #confValTpl\n             let-value=\"value\">\n  <span *ngIf=\"value\">\n    <span *ngFor=\"let conf of value; last as isLast\">\n      {{ conf.section }}: {{ conf.value }}{{ !isLast ? \",\" : \"\" }}<br />\n    </span>\n  </span>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { CephServiceService } from '~/app/shared/api/ceph-service.service';\nimport { HostService } from '~/app/shared/api/host.service';\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { CephServiceSpec } from '~/app/shared/models/service.interface';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { WizardStepsService } from '~/app/shared/services/wizard-steps.service';\n\n@Component({\n  selector: 'cd-create-cluster-review',\n  templateUrl: './create-cluster-review.component.html',\n  styleUrls: ['./create-cluster-review.component.scss']\n})\nexport class CreateClusterReviewComponent implements OnInit {\n  hosts: object[] = [];\n  hostsCount: number;\n  totalDevices: number;\n  totalCapacity = 0;\n  services: Array<CephServiceSpec> = [];\n  totalCPUs = 0;\n  totalMemory = 0;\n\n  constructor(\n    public wizardStepsService: WizardStepsService,\n    public cephServiceService: CephServiceService,\n    private dimlessBinary: DimlessBinaryPipe,\n    public hostService: HostService,\n    private osdService: OsdService\n  ) {}\n\n  ngOnInit() {\n    let dataDevices = 0;\n    let dataDeviceCapacity = 0;\n    let walDevices = 0;\n    let walDeviceCapacity = 0;\n    let dbDevices = 0;\n    let dbDeviceCapacity = 0;\n\n    this.hostService.list('true').subscribe((resp: object[]) => {\n      this.hosts = resp;\n      this.hostsCount = this.hosts.length;\n      _.forEach(this.hosts, (hostKey) => {\n        this.totalCPUs = this.totalCPUs + hostKey['cpu_count'];\n        // convert to bytes\n        this.totalMemory = this.totalMemory + hostKey['memory_total_kb'] * 1024;\n      });\n      this.totalMemory = this.dimlessBinary.transform(this.totalMemory);\n    });\n\n    if (this.osdService.osdDevices['data']) {\n      dataDevices = this.osdService.osdDevices['data']?.length;\n      dataDeviceCapacity = this.osdService.osdDevices['data']['capacity'];\n    }\n\n    if (this.osdService.osdDevices['wal']) {\n      walDevices = this.osdService.osdDevices['wal']?.length;\n      walDeviceCapacity = this.osdService.osdDevices['wal']['capacity'];\n    }\n\n    if (this.osdService.osdDevices['db']) {\n      dbDevices = this.osdService.osdDevices['db']?.length;\n      dbDeviceCapacity = this.osdService.osdDevices['db']['capacity'];\n    }\n\n    this.totalDevices = dataDevices + walDevices + dbDevices;\n    this.osdService.osdDevices['totalDevices'] = this.totalDevices;\n    this.totalCapacity = dataDeviceCapacity + walDeviceCapacity + dbDeviceCapacity;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-3\">\n    <fieldset>\n      <legend class=\"cd-header\"\n              i18n>Cluster Resources</legend>\n      <table class=\"table table-striped\">\n        <tr>\n          <td i18n\n              class=\"bold\">Hosts</td>\n          <td>{{ hostsCount }}</td>\n        </tr>\n        <tr>\n          <td>\n          <dl>\n            <dt>\n              <p i18n>Storage Capacity</p>\n            </dt>\n            <dd>\n              <p i18n>Number of devices</p>\n            </dd>\n            <dd>\n              <p i18n>Raw capacity</p>\n            </dd>\n          </dl>\n        </td>\n          <td class=\"pt-5\"><p>{{ totalDevices }}</p><p>\n            {{ totalCapacity | dimlessBinary }}</p></td>\n        </tr>\n        <tr>\n          <td i18n\n              class=\"bold\">CPUs</td>\n          <td>{{ totalCPUs }}</td>\n        </tr>\n        <tr>\n          <td i18n\n              class=\"bold\">Memory</td>\n          <td>{{ totalMemory }}</td>\n        </tr>\n      </table>\n    </fieldset>\n  </div>\n\n<div class=\"col-lg-9\">\n  <legend i18n\n          class=\"cd-header\">Host Details</legend>\n  <cd-hosts [hiddenColumns]=\"['services', 'status']\"\n            [hideToolHeader]=\"true\"\n            [hasTableDetails]=\"false\"\n            [showGeneralActionsOnly]=\"true\">\n  </cd-hosts>\n</div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { forkJoin, Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { ClusterService } from '~/app/shared/api/cluster.service';\nimport { HostService } from '~/app/shared/api/host.service';\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { ConfirmationModalComponent } from '~/app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { ActionLabelsI18n, AppConstants, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { DeploymentOptions } from '~/app/shared/models/osd-deployment-options';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { WizardStepModel } from '~/app/shared/models/wizard-steps';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { WizardStepsService } from '~/app/shared/services/wizard-steps.service';\nimport { DriveGroup } from '../osd/osd-form/drive-group.model';\n\n@Component({\n  selector: 'cd-create-cluster',\n  templateUrl: './create-cluster.component.html',\n  styleUrls: ['./create-cluster.component.scss']\n})\nexport class CreateClusterComponent implements OnInit, OnDestroy {\n  @ViewChild('skipConfirmTpl', { static: true })\n  skipConfirmTpl: TemplateRef<any>;\n  currentStep: WizardStepModel;\n  currentStepSub: Subscription;\n  permissions: Permissions;\n  projectConstants: typeof AppConstants = AppConstants;\n  stepTitles = ['Add Hosts', 'Create OSDs', 'Create Services', 'Review'];\n  startClusterCreation = false;\n  observables: any = [];\n  modalRef: NgbModalRef;\n  driveGroup = new DriveGroup();\n  driveGroups: Object[] = [];\n  deploymentOption: DeploymentOptions;\n  selectedOption = {};\n  simpleDeployment = true;\n\n  @Output()\n  submitAction = new EventEmitter();\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private wizardStepsService: WizardStepsService,\n    private router: Router,\n    private hostService: HostService,\n    private notificationService: NotificationService,\n    private actionLabels: ActionLabelsI18n,\n    private clusterService: ClusterService,\n    private modalService: ModalService,\n    private taskWrapper: TaskWrapperService,\n    private osdService: OsdService\n  ) {\n    this.permissions = this.authStorageService.getPermissions();\n    this.currentStepSub = this.wizardStepsService\n      .getCurrentStep()\n      .subscribe((step: WizardStepModel) => {\n        this.currentStep = step;\n      });\n    this.currentStep.stepIndex = 1;\n  }\n\n  ngOnInit(): void {\n    this.osdService.getDeploymentOptions().subscribe((options) => {\n      this.deploymentOption = options;\n      this.selectedOption = { option: options.recommended_option };\n    });\n  }\n\n  createCluster() {\n    this.startClusterCreation = true;\n  }\n\n  skipClusterCreation() {\n    const modalVariables = {\n      titleText: $localize`Warning`,\n      buttonText: $localize`Continue`,\n      warning: true,\n      bodyTpl: this.skipConfirmTpl,\n      showSubmit: true,\n      onSubmit: () => {\n        this.clusterService.updateStatus('POST_INSTALLED').subscribe({\n          error: () => this.modalRef.close(),\n          complete: () => {\n            this.notificationService.show(\n              NotificationType.info,\n              $localize`Cluster expansion skipped by user`\n            );\n            this.router.navigate(['/dashboard']);\n            this.modalRef.close();\n          }\n        });\n      }\n    };\n    this.modalRef = this.modalService.show(ConfirmationModalComponent, modalVariables);\n  }\n\n  onSubmit() {\n    this.hostService.list('false').subscribe((hosts) => {\n      hosts.forEach((host) => {\n        const index = host['labels'].indexOf('_no_schedule', 0);\n        if (index > -1) {\n          host['labels'].splice(index, 1);\n          this.observables.push(this.hostService.update(host['hostname'], true, host['labels']));\n        }\n      });\n      forkJoin(this.observables)\n        .pipe(\n          finalize(() =>\n            this.clusterService.updateStatus('POST_INSTALLED').subscribe(() => {\n              this.notificationService.show(\n                NotificationType.success,\n                $localize`Cluster expansion was successful`\n              );\n              this.router.navigate(['/dashboard']);\n            })\n          )\n        )\n        .subscribe({\n          error: (error) => error.preventDefault()\n        });\n    });\n\n    if (this.driveGroup) {\n      const user = this.authStorageService.getUsername();\n      this.driveGroup.setName(`dashboard-${user}-${_.now()}`);\n      this.driveGroups.push(this.driveGroup.spec);\n    }\n\n    if (this.simpleDeployment) {\n      const title = this.deploymentOption?.options[this.selectedOption['option']].title;\n      const trackingId = $localize`${title} deployment`;\n      this.taskWrapper\n        .wrapTaskAroundCall({\n          task: new FinishedTask('osd/' + URLVerbs.CREATE, {\n            tracking_id: trackingId\n          }),\n          call: this.osdService.create([this.selectedOption], trackingId, 'predefined')\n        })\n        .subscribe({\n          error: (error) => error.preventDefault(),\n          complete: () => {\n            this.submitAction.emit();\n          }\n        });\n    } else {\n      if (this.osdService.osdDevices['totalDevices'] > 0) {\n        this.driveGroup.setFeature('encrypted', this.selectedOption['encrypted']);\n        const trackingId = _.join(_.map(this.driveGroups, 'service_id'), ', ');\n        this.taskWrapper\n          .wrapTaskAroundCall({\n            task: new FinishedTask('osd/' + URLVerbs.CREATE, {\n              tracking_id: trackingId\n            }),\n            call: this.osdService.create(this.driveGroups, trackingId)\n          })\n          .subscribe({\n            error: (error) => error.preventDefault(),\n            complete: () => {\n              this.submitAction.emit();\n              this.osdService.osdDevices = [];\n            }\n          });\n      }\n    }\n  }\n\n  setDriveGroup(driveGroup: DriveGroup) {\n    this.driveGroup = driveGroup;\n  }\n\n  setDeploymentOptions(option: object) {\n    this.selectedOption = option;\n  }\n\n  setDeploymentMode(mode: boolean) {\n    this.simpleDeployment = mode;\n  }\n\n  onNextStep() {\n    if (!this.wizardStepsService.isLastStep()) {\n      this.wizardStepsService.getCurrentStep().subscribe((step: WizardStepModel) => {\n        this.currentStep = step;\n      });\n      this.wizardStepsService.moveToNextStep();\n    } else {\n      this.onSubmit();\n    }\n  }\n\n  onPreviousStep() {\n    if (!this.wizardStepsService.isFirstStep()) {\n      this.wizardStepsService.moveToPreviousStep();\n    } else {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  showSubmitButtonLabel() {\n    return !this.wizardStepsService.isLastStep()\n      ? this.actionLabels.NEXT\n      : $localize`Expand Cluster`;\n  }\n\n  showCancelButtonLabel() {\n    return !this.wizardStepsService.isFirstStep()\n      ? this.actionLabels.BACK\n      : this.actionLabels.CANCEL;\n  }\n\n  ngOnDestroy(): void {\n    this.currentStepSub.unsubscribe();\n  }\n}\n","<div class=\"container h-75\"\n     *ngIf=\"!startClusterCreation\">\n  <div class=\"row h-100 justify-content-center align-items-center\">\n    <div class=\"blank-page\">\n      <!-- htmllint img-req-src=\"false\" -->\n      <img [src]=\"projectConstants.cephLogo\"\n           alt=\"Ceph\"\n           class=\"img-fluid mx-auto d-block\">\n      <h3 class=\"text-center m-2\"\n          i18n>Welcome to {{ projectConstants.projectName }}</h3>\n\n      <div class=\"m-4\">\n        <h4 class=\"text-center\"\n            i18n>Please expand your cluster first</h4>\n        <div class=\"text-center\">\n          <button class=\"btn btn-accent m-2\"\n                  name=\"expand-cluster\"\n                  (click)=\"createCluster()\"\n                  aria-label=\"Expand Cluster\"\n                  i18n>Expand Cluster</button>\n          <button class=\"btn btn-light\"\n                  name=\"skip-cluster-creation\"\n                  aria-label=\"Skip\"\n                  (click)=\"skipClusterCreation()\"\n                  i18n>Skip</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"card\"\n     *ngIf=\"startClusterCreation\">\n  <div class=\"card-header\"\n       i18n>Expand Cluster</div>\n  <div class=\"container-fluid\">\n    <cd-wizard [stepsTitle]=\"stepTitles\"></cd-wizard>\n    <div class=\"card-body vertical-line\">\n      <ng-container [ngSwitch]=\"currentStep?.stepIndex\">\n        <div *ngSwitchCase=\"'1'\"\n             class=\"ms-5\">\n          <h4 class=\"title\"\n              i18n>Add Hosts</h4>\n          <br>\n          <cd-hosts [hiddenColumns]=\"['services']\"\n                    [hideMaintenance]=\"true\"\n                    [hasTableDetails]=\"false\"\n                    [showGeneralActionsOnly]=\"true\"></cd-hosts>\n        </div>\n        <div *ngSwitchCase=\"'2'\"\n             class=\"ms-5\">\n          <h4 class=\"title\"\n              i18n>Create OSDs</h4>\n          <div class=\"alignForm\">\n            <cd-osd-form [hideTitle]=\"true\"\n                         [hideSubmitBtn]=\"true\"\n                         (emitDriveGroup)=\"setDriveGroup($event)\"\n                         (emitDeploymentOption)=\"setDeploymentOptions($event)\"\n                         (emitMode)=\"setDeploymentMode($event)\"></cd-osd-form>\n          </div>\n        </div>\n        <div *ngSwitchCase=\"'3'\"\n             class=\"ms-5\">\n          <h4 class=\"title\"\n              i18n>Create Services</h4>\n          <br>\n          <cd-services [hasDetails]=\"false\"\n                       [hiddenServices]=\"['mon', 'mgr', 'crash', 'agent']\"\n                       [hiddenColumns]=\"['status.running', 'status.size', 'status.last_refresh']\"\n                       [routedModal]=\"false\"></cd-services>\n        </div>\n        <div *ngSwitchCase=\"'4'\"\n             class=\"ms-5\">\n          <cd-create-cluster-review></cd-create-cluster-review>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"card-footer\">\n    <button class=\"btn btn-accent m-2 float-end\"\n            (click)=\"onNextStep()\"\n            aria-label=\"Next\"\n            i18n>{{ showSubmitButtonLabel() }}</button>\n    <cd-back-button class=\"m-2 float-end\"\n                    aria-label=\"Close\"\n                    (backAction)=\"onPreviousStep()\"\n                    [name]=\"showCancelButtonLabel()\"></cd-back-button>\n  </div>\n</div>\n\n<ng-template #skipConfirmTpl>\n  <span i18n>You are about to skip the cluster expansion process.\n             You’ll need to <strong>navigate through the menu to add hosts and services.</strong></span>\n\n  <div class=\"mt-4\"\n       i18n>Are you sure you want to continue?</div>\n</ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport {\n  ITreeOptions,\n  TreeComponent,\n  TreeModel,\n  TreeNode,\n  TREE_ACTIONS\n} from '@circlon/angular-tree-component';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { CrushRuleService } from '~/app/shared/api/crush-rule.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { TimerService } from '~/app/shared/services/timer.service';\n\n@Component({\n  selector: 'cd-crushmap',\n  templateUrl: './crushmap.component.html',\n  styleUrls: ['./crushmap.component.scss']\n})\nexport class CrushmapComponent implements OnDestroy, OnInit {\n  private sub = new Subscription();\n\n  @ViewChild('tree') tree: TreeComponent;\n\n  icons = Icons;\n  loadingIndicator = true;\n  nodes: any[] = [];\n  treeOptions: ITreeOptions = {\n    useVirtualScroll: true,\n    nodeHeight: 22,\n    actionMapping: {\n      mouse: {\n        click: this.onNodeSelected.bind(this)\n      }\n    }\n  };\n\n  metadata: any;\n  metadataTitle: string;\n  metadataKeyMap: { [key: number]: any } = {};\n  data$: Observable<object>;\n\n  constructor(private crushRuleService: CrushRuleService, private timerService: TimerService) {}\n\n  ngOnInit() {\n    this.sub = this.timerService\n      .get(() => this.crushRuleService.getInfo(), 5000)\n      .subscribe((data: any) => {\n        this.loadingIndicator = false;\n        this.nodes = this.abstractTreeData(data);\n      });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  private abstractTreeData(data: any): any[] {\n    const nodes = data.nodes || [];\n    const rootNodes = data.roots || [];\n    const treeNodeMap: { [key: number]: any } = {};\n\n    if (0 === nodes.length) {\n      return [\n        {\n          name: 'No nodes!'\n        }\n      ];\n    }\n\n    const roots: any[] = [];\n    nodes.reverse().forEach((node: any) => {\n      if (rootNodes.includes(node.id)) {\n        roots.push(node.id);\n      }\n      treeNodeMap[node.id] = this.generateTreeLeaf(node, treeNodeMap);\n    });\n\n    const children = roots.map((id) => {\n      return treeNodeMap[id];\n    });\n\n    return children;\n  }\n\n  private generateTreeLeaf(node: any, treeNodeMap: any) {\n    const cdId = node.id;\n    this.metadataKeyMap[cdId] = node;\n\n    const name: string = node.name + ' (' + node.type + ')';\n    const status: string = node.status;\n\n    const children: any[] = [];\n    const resultNode = { name, status, cdId, type: node.type };\n    if (node.children) {\n      node.children.sort().forEach((childId: any) => {\n        children.push(treeNodeMap[childId]);\n      });\n\n      resultNode['children'] = children;\n    }\n\n    return resultNode;\n  }\n\n  onNodeSelected(tree: TreeModel, node: TreeNode) {\n    TREE_ACTIONS.ACTIVATE(tree, node, true);\n    if (node.data.cdId !== undefined) {\n      const { name, type, status, ...remain } = this.metadataKeyMap[node.data.cdId];\n      this.metadata = remain;\n      this.metadataTitle = name + ' (' + type + ')';\n    } else {\n      delete this.metadata;\n      delete this.metadataTitle;\n    }\n  }\n\n  onUpdateData() {\n    this.tree.treeModel.expandAll();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-12 col-lg-12\">\n    <div class=\"card\">\n      <div class=\"card-header\"\n           i18n>CRUSH map viewer</div>\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-sm-6 col-lg-6 tree-container\">\n            <i *ngIf=\"loadingIndicator\"\n               [ngClass]=\"[icons.large, icons.spinner, icons.spin]\"></i>\n\n            <tree-root #tree\n                       [nodes]=\"nodes\"\n                       [options]=\"treeOptions\"\n                       (updateData)=\"onUpdateData()\">\n              <ng-template #treeNodeTemplate\n                           let-node>\n                <span *ngIf=\"node.data.status\"\n                      class=\"badge\"\n                      [ngClass]=\"{'badge-success': ['in', 'up'].includes(node.data.status), 'badge-danger': ['down', 'out', 'destroyed'].includes(node.data.status)}\">\n                  {{ node.data.status }}\n                </span>\n                <span>&nbsp;</span>\n                <span class=\"node-name\"\n                      [ngClass]=\"{'type-osd': node.data.type === 'osd'}\"\n                      [innerHTML]=\"node.data.name\"></span>\n              </ng-template>\n            </tree-root>\n          </div>\n          <div class=\"col-sm-6 col-lg-6 metadata\"\n               *ngIf=\"metadata\">\n            <legend>{{ metadataTitle }}</legend>\n            <cd-table-key-value [data]=\"metadata\"></cd-table-key-value>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { Permissions } from '~/app/shared/models/permissions';\n\n@Component({\n  selector: 'cd-host-details',\n  templateUrl: './host-details.component.html',\n  styleUrls: ['./host-details.component.scss']\n})\nexport class HostDetailsComponent {\n  @Input()\n  permissions: Permissions;\n\n  @Input()\n  selection: any;\n\n  get selectedHostname(): string {\n    return this.selection !== undefined ? this.selection['hostname'] : null;\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <nav ngbNav\n       #nav=\"ngbNav\"\n       class=\"nav-tabs\"\n       cdStatefulTab=\"host-details\">\n    <ng-container ngbNavItem=\"devices\">\n      <a ngbNavLink\n         i18n>Devices</a>\n      <ng-template ngbNavContent>\n        <cd-device-list [hostname]=\"selection['hostname']\"></cd-device-list>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"inventory\"\n                  *ngIf=\"permissions.hosts.read\">\n      <a ngbNavLink\n         i18n>Physical Disks</a>\n      <ng-template ngbNavContent>\n        <cd-inventory [hostname]=\"selectedHostname\"></cd-inventory>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"daemons\"\n                  *ngIf=\"permissions.hosts.read\">\n      <a ngbNavLink\n         i18n>Daemons</a>\n      <ng-template ngbNavContent>\n        <cd-service-daemon-list [hostname]=\"selectedHostname\"\n                                flag=\"hostDetails\"\n                                [hiddenColumns]=\"['hostname']\">\n        </cd-service-daemon-list>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"performance-details\"\n                  *ngIf=\"permissions.grafana.read\">\n      <a ngbNavLink\n         i18n>Performance Details</a>\n      <ng-template ngbNavContent>\n        <cd-grafana i18n-title\n                    title=\"Host details\"\n                    [grafanaPath]=\"'host-details?var-ceph_hosts=' + selectedHostname\"\n                    [type]=\"'metrics'\"\n                    uid=\"rtOg0AiWz\"\n                    grafanaStyle=\"four\">\n        </cd-grafana>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"device-health\">\n      <a ngbNavLink\n         i18n>Device health</a>\n      <ng-template ngbNavContent>\n        <cd-smart-list *ngIf=\"selectedHostname; else noHostname\"\n                       [hostname]=\"selectedHostname\"></cd-smart-list>\n      </ng-template>\n    </ng-container>\n  </nav>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n</ng-container>\n\n<ng-template #noHostname>\n  <cd-alert-panel type=\"error\"\n                  i18n>No hostname found.</cd-alert-panel>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport expand from 'brace-expansion';\n\nimport { HostService } from '~/app/shared/api/host.service';\nimport { SelectMessages } from '~/app/shared/components/select/select-messages.model';\nimport { SelectOption } from '~/app/shared/components/select/select-option.model';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-host-form',\n  templateUrl: './host-form.component.html',\n  styleUrls: ['./host-form.component.scss']\n})\nexport class HostFormComponent extends CdForm implements OnInit {\n  hostForm: CdFormGroup;\n  action: string;\n  resource: string;\n  hostnames: string[];\n  hostnameArray: string[] = [];\n  addr: string;\n  status: string;\n  allLabels: string[];\n  pageURL: string;\n  hostPattern = false;\n  labelsOption: Array<SelectOption> = [];\n  hideMaintenance: boolean;\n\n  messages = new SelectMessages({\n    empty: $localize`There are no labels.`,\n    filter: $localize`Filter or add labels`,\n    add: $localize`Add label`\n  });\n\n  constructor(\n    private router: Router,\n    private actionLabels: ActionLabelsI18n,\n    private hostService: HostService,\n    private taskWrapper: TaskWrapperService,\n    public activeModal: NgbActiveModal\n  ) {\n    super();\n    this.resource = $localize`host`;\n    this.action = this.actionLabels.ADD;\n  }\n\n  ngOnInit() {\n    if (this.router.url.includes('hosts')) {\n      this.pageURL = 'hosts';\n    }\n    this.createForm();\n    this.hostService.list('false').subscribe((resp: any[]) => {\n      this.hostnames = resp.map((host) => {\n        return host['hostname'];\n      });\n      this.loadingReady();\n    });\n\n    this.hostService.getLabels().subscribe((resp: string[]) => {\n      const uniqueLabels = new Set(resp.concat(this.hostService.predefinedLabels));\n      this.labelsOption = Array.from(uniqueLabels).map((label) => {\n        return { enabled: true, name: label, selected: false, description: null };\n      });\n    });\n  }\n\n  // check if hostname is a single value or pattern to hide network address field\n  checkHostNameValue() {\n    const hostNames = this.hostForm.get('hostname').value;\n    hostNames.match(/[()\\[\\]{},]/g) ? (this.hostPattern = true) : (this.hostPattern = false);\n  }\n\n  private createForm() {\n    this.hostForm = new CdFormGroup({\n      hostname: new FormControl('', {\n        validators: [\n          Validators.required,\n          CdValidators.custom('uniqueName', (hostname: string) => {\n            return this.hostnames && this.hostnames.indexOf(hostname) !== -1;\n          })\n        ]\n      }),\n      addr: new FormControl('', {\n        validators: [CdValidators.ip()]\n      }),\n      labels: new FormControl([]),\n      maintenance: new FormControl(false)\n    });\n  }\n\n  private isCommaSeparatedPattern(hostname: string) {\n    // eg. ceph-node-01.cephlab.com,ceph-node-02.cephlab.com\n    return hostname.includes(',');\n  }\n\n  private isRangeTypePattern(hostname: string) {\n    // check if it is a range expression or comma separated range expression\n    // eg. ceph-mon-[01-05].lab.com,ceph-osd-[02-08].lab.com,ceph-rgw-[01-09]\n    return hostname.includes('[') && hostname.includes(']') && !hostname.match(/(?![^(]*\\)),/g);\n  }\n\n  private replaceBraces(hostname: string) {\n    // pattern to replace range [0-5] to [0..5](valid expression for brace expansion)\n    // replace any kind of brackets with curly braces\n    return hostname\n      .replace(/(\\d)\\s*-\\s*(\\d)/g, '$1..$2')\n      .replace(/\\(/g, '{')\n      .replace(/\\)/g, '}')\n      .replace(/\\[/g, '{')\n      .replace(/]/g, '}');\n  }\n\n  // expand hostnames in case hostname is a pattern\n  private checkHostNamePattern(hostname: string) {\n    if (this.isRangeTypePattern(hostname)) {\n      const hostnameRange = this.replaceBraces(hostname);\n      this.hostnameArray = expand(hostnameRange);\n    } else if (this.isCommaSeparatedPattern(hostname)) {\n      let hostArray = [];\n      hostArray = hostname.split(',');\n      hostArray.forEach((host: string) => {\n        if (this.isRangeTypePattern(host)) {\n          const hostnameRange = this.replaceBraces(host);\n          this.hostnameArray = this.hostnameArray.concat(expand(hostnameRange));\n        } else {\n          this.hostnameArray.push(host);\n        }\n      });\n    } else {\n      // single hostname\n      this.hostnameArray.push(hostname);\n    }\n  }\n\n  submit() {\n    const hostname = this.hostForm.get('hostname').value;\n    this.checkHostNamePattern(hostname);\n    this.addr = this.hostForm.get('addr').value;\n    this.status = this.hostForm.get('maintenance').value ? 'maintenance' : '';\n    this.allLabels = this.hostForm.get('labels').value;\n    if (this.pageURL !== 'hosts' && !this.allLabels.includes('_no_schedule')) {\n      this.allLabels.push('_no_schedule');\n    }\n    this.hostnameArray.forEach((hostName: string) => {\n      this.taskWrapper\n        .wrapTaskAroundCall({\n          task: new FinishedTask('host/' + URLVerbs.ADD, {\n            hostname: hostName\n          }),\n          call: this.hostService.create(hostName, this.addr, this.allLabels, this.status)\n        })\n        .subscribe({\n          error: () => {\n            this.hostForm.setErrors({ cdSubmitButton: true });\n          },\n          complete: () => {\n            this.pageURL === 'hosts'\n              ? this.router.navigate([this.pageURL, { outlets: { modal: null } }])\n              : this.activeModal.close();\n          }\n        });\n    });\n  }\n}\n","<cd-modal [pageURL]=\"pageURL\"\n          [modalRef]=\"activeModal\">\n  <span class=\"modal-title\"\n        i18n>{{ action | titlecase }} {{ resource | upperFirst }}</span>\n\n  <ng-container class=\"modal-content\">\n\n    <div *cdFormLoading=\"loading\">\n      <form name=\"hostForm\"\n            #formDir=\"ngForm\"\n            [formGroup]=\"hostForm\"\n            novalidate>\n\n        <div class=\"modal-body\">\n\n          <!-- Hostname -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"hostname\">\n            <ng-container i18n>Hostname</ng-container>\n            <cd-helper>\n              <p i18n>To add multiple hosts at once, you can enter:</p>\n              <ul>\n                <li i18n>a comma-separated list of hostnames <samp>(e.g.: example-01,example-02,example-03)</samp>,</li>\n                <li i18n>a range expression <samp>(e.g.: example-[01-03].ceph)</samp>,</li>\n                <li i18n>a comma separated range expression <samp>(e.g.: example-[01-05].lab.com,example2-[1-4].lab.com,example3-[001-006].lab.com)</samp></li>\n              </ul>\n            </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input class=\"form-control\"\n                     type=\"text\"\n                     placeholder=\"mon-123\"\n                     id=\"hostname\"\n                     name=\"hostname\"\n                     formControlName=\"hostname\"\n                     autofocus\n                     (keyup)=\"checkHostNameValue()\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"hostForm.showError('hostname', formDir, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"hostForm.showError('hostname', formDir, 'uniqueName')\"\n                    i18n>The chosen hostname is already in use.</span>\n            </div>\n          </div>\n\n          <!-- Address -->\n          <div class=\"form-group row\"\n               *ngIf=\"!hostPattern\">\n            <label class=\"cd-col-form-label\"\n                   for=\"addr\"\n                   i18n>Network address</label>\n            <div class=\"cd-col-form-input\">\n              <input class=\"form-control\"\n                     type=\"text\"\n                     placeholder=\"192.168.0.1\"\n                     id=\"addr\"\n                     name=\"addr\"\n                     formControlName=\"addr\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"hostForm.showError('addr', formDir, 'pattern')\"\n                    i18n>The value is not a valid IP address.</span>\n            </div>\n          </div>\n\n          <!-- Labels -->\n          <div class=\"form-group row\">\n            <label i18n\n                   for=\"labels\"\n                   class=\"cd-col-form-label\">Labels</label>\n            <div class=\"cd-col-form-input\">\n              <cd-select-badges id=\"labels\"\n                                [data]=\"hostForm.controls.labels.value\"\n                                [options]=\"labelsOption\"\n                                [customBadges]=\"true\"\n                                [messages]=\"messages\">\n              </cd-select-badges>\n            </div>\n          </div>\n\n          <!-- Maintenance Mode -->\n          <div class=\"form-group row\"\n               *ngIf=\"!hideMaintenance\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"maintenance\"\n                       type=\"checkbox\"\n                       formControlName=\"maintenance\">\n                <label class=\"custom-control-label\"\n                       for=\"maintenance\"\n                       i18n>Maintenance Mode</label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"modal-footer\">\n          <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                                [form]=\"hostForm\"\n                                [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                                wrappingClass=\"text-right\"></cd-form-button-panel>\n        </div>\n      </form>\n    </div>\n  </ng-container>\n</cd-modal>\n","import { Component, Input, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { Subscription } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { HostService } from '~/app/shared/api/host.service';\nimport { OrchestratorService } from '~/app/shared/api/orchestrator.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { ConfirmationModalComponent } from '~/app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { FormModalComponent } from '~/app/shared/components/form-modal/form-modal.component';\nimport { SelectMessages } from '~/app/shared/components/select/select-messages.model';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { OrchestratorFeature } from '~/app/shared/models/orchestrator.enum';\nimport { OrchestratorStatus } from '~/app/shared/models/orchestrator.interface';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { EmptyPipe } from '~/app/shared/pipes/empty.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\nimport { HostFormComponent } from './host-form/host-form.component';\n\nconst BASE_URL = 'hosts';\n\n@Component({\n  selector: 'cd-hosts',\n  templateUrl: './hosts.component.html',\n  styleUrls: ['./hosts.component.scss'],\n  providers: [{ provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }]\n})\nexport class HostsComponent extends ListWithDetails implements OnDestroy, OnInit {\n  private sub = new Subscription();\n\n  @ViewChild(TableComponent)\n  table: TableComponent;\n  @ViewChild('servicesTpl', { static: true })\n  public servicesTpl: TemplateRef<any>;\n  @ViewChild('maintenanceConfirmTpl', { static: true })\n  maintenanceConfirmTpl: TemplateRef<any>;\n  @ViewChild('orchTmpl', { static: true })\n  orchTmpl: TemplateRef<any>;\n  @ViewChild('flashTmpl', { static: true })\n  flashTmpl: TemplateRef<any>;\n\n  @Input()\n  hiddenColumns: string[] = [];\n\n  @Input()\n  hideMaintenance = false;\n\n  @Input()\n  hasTableDetails = true;\n\n  @Input()\n  hideToolHeader = false;\n\n  @Input()\n  showGeneralActionsOnly = false;\n\n  permissions: Permissions;\n  columns: Array<CdTableColumn> = [];\n  hosts: Array<object> = [];\n  isLoadingHosts = false;\n  cdParams = { fromLink: '/hosts' };\n  tableActions: CdTableAction[];\n  selection = new CdTableSelection();\n  modalRef: NgbModalRef;\n  isExecuting = false;\n  errorMessage: string;\n  enableMaintenanceBtn: boolean;\n  enableDrainBtn: boolean;\n  bsModalRef: NgbModalRef;\n\n  icons = Icons;\n\n  messages = {\n    nonOrchHost: $localize`The feature is disabled because the selected host is not managed by Orchestrator.`\n  };\n\n  orchStatus: OrchestratorStatus;\n  actionOrchFeatures = {\n    add: [OrchestratorFeature.HOST_ADD],\n    edit: [OrchestratorFeature.HOST_LABEL_ADD, OrchestratorFeature.HOST_LABEL_REMOVE],\n    remove: [OrchestratorFeature.HOST_REMOVE],\n    maintenance: [\n      OrchestratorFeature.HOST_MAINTENANCE_ENTER,\n      OrchestratorFeature.HOST_MAINTENANCE_EXIT\n    ],\n    drain: [OrchestratorFeature.HOST_DRAIN]\n  };\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private dimlessBinary: DimlessBinaryPipe,\n    private emptyPipe: EmptyPipe,\n    private hostService: HostService,\n    private actionLabels: ActionLabelsI18n,\n    private modalService: ModalService,\n    private taskWrapper: TaskWrapperService,\n    private router: Router,\n    private notificationService: NotificationService,\n    private orchService: OrchestratorService\n  ) {\n    super();\n    this.permissions = this.authStorageService.getPermissions();\n    this.tableActions = [\n      {\n        name: this.actionLabels.ADD,\n        permission: 'create',\n        icon: Icons.add,\n        click: () =>\n          this.router.url.includes('/hosts')\n            ? this.router.navigate([BASE_URL, { outlets: { modal: [URLVerbs.ADD] } }])\n            : (this.bsModalRef = this.modalService.show(HostFormComponent, {\n                hideMaintenance: this.hideMaintenance\n              })),\n        disable: (selection: CdTableSelection) => this.getDisable('add', selection)\n      },\n      {\n        name: this.actionLabels.EDIT,\n        permission: 'update',\n        icon: Icons.edit,\n        click: () => this.editAction(),\n        disable: (selection: CdTableSelection) => this.getDisable('edit', selection)\n      },\n      {\n        name: this.actionLabels.START_DRAIN,\n        permission: 'update',\n        icon: Icons.exit,\n        click: () => this.hostDrain(),\n        disable: (selection: CdTableSelection) =>\n          this.getDisable('drain', selection) || !this.enableDrainBtn,\n        visible: () => !this.showGeneralActionsOnly && this.enableDrainBtn\n      },\n      {\n        name: this.actionLabels.STOP_DRAIN,\n        permission: 'update',\n        icon: Icons.exit,\n        click: () => this.hostDrain(true),\n        disable: (selection: CdTableSelection) =>\n          this.getDisable('drain', selection) || this.enableDrainBtn,\n        visible: () => !this.showGeneralActionsOnly && !this.enableDrainBtn\n      },\n      {\n        name: this.actionLabels.REMOVE,\n        permission: 'delete',\n        icon: Icons.destroy,\n        click: () => this.deleteAction(),\n        disable: (selection: CdTableSelection) => this.getDisable('remove', selection)\n      },\n      {\n        name: this.actionLabels.ENTER_MAINTENANCE,\n        permission: 'update',\n        icon: Icons.enter,\n        click: () => this.hostMaintenance(),\n        disable: (selection: CdTableSelection) =>\n          this.getDisable('maintenance', selection) ||\n          this.isExecuting ||\n          this.enableMaintenanceBtn,\n        visible: () => !this.showGeneralActionsOnly && !this.enableMaintenanceBtn\n      },\n      {\n        name: this.actionLabels.EXIT_MAINTENANCE,\n        permission: 'update',\n        icon: Icons.exit,\n        click: () => this.hostMaintenance(),\n        disable: (selection: CdTableSelection) =>\n          this.getDisable('maintenance', selection) ||\n          this.isExecuting ||\n          !this.enableMaintenanceBtn,\n        visible: () => !this.showGeneralActionsOnly && this.enableMaintenanceBtn\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Hostname`,\n        prop: 'hostname',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Service Instances`,\n        prop: 'service_instances',\n        flexGrow: 1.5,\n        cellTemplate: this.servicesTpl\n      },\n      {\n        name: $localize`Labels`,\n        prop: 'labels',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          class: 'badge-dark'\n        }\n      },\n      {\n        name: $localize`Status`,\n        prop: 'status',\n        flexGrow: 0.8,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            maintenance: { class: 'badge-warning' }\n          }\n        }\n      },\n      {\n        name: $localize`Model`,\n        prop: 'model',\n        flexGrow: 1\n      },\n      {\n        name: $localize`CPUs`,\n        prop: 'cpu_count',\n        flexGrow: 0.3\n      },\n      {\n        name: $localize`Cores`,\n        prop: 'cpu_cores',\n        flexGrow: 0.3\n      },\n      {\n        name: $localize`Total Memory`,\n        prop: 'memory_total_bytes',\n        pipe: this.dimlessBinary,\n        flexGrow: 0.4\n      },\n      {\n        name: $localize`Raw Capacity`,\n        prop: 'raw_capacity',\n        pipe: this.dimlessBinary,\n        flexGrow: 0.5\n      },\n      {\n        name: $localize`HDDs`,\n        prop: 'hdd_count',\n        flexGrow: 0.3\n      },\n      {\n        name: $localize`Flash`,\n        prop: 'flash_count',\n        headerTemplate: this.flashTmpl,\n        flexGrow: 0.3\n      },\n      {\n        name: $localize`NICs`,\n        prop: 'nic_count',\n        flexGrow: 0.3\n      }\n    ];\n\n    this.columns = this.columns.filter((col: any) => {\n      return !this.hiddenColumns.includes(col.prop);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n    this.enableMaintenanceBtn = false;\n    this.enableDrainBtn = false;\n    if (this.selection.hasSelection) {\n      if (this.selection.first().status === 'maintenance') {\n        this.enableMaintenanceBtn = true;\n      }\n\n      if (!this.selection.first().labels.includes('_no_schedule')) {\n        this.enableDrainBtn = true;\n      }\n    }\n  }\n\n  editAction() {\n    this.hostService.getLabels().subscribe((resp: string[]) => {\n      const host = this.selection.first();\n      const labels = new Set(resp.concat(this.hostService.predefinedLabels));\n      const allLabels = Array.from(labels).map((label) => {\n        return { enabled: true, name: label };\n      });\n      this.modalService.show(FormModalComponent, {\n        titleText: $localize`Edit Host: ${host.hostname}`,\n        fields: [\n          {\n            type: 'select-badges',\n            name: 'labels',\n            value: host['labels'],\n            label: $localize`Labels`,\n            typeConfig: {\n              customBadges: true,\n              options: allLabels,\n              messages: new SelectMessages({\n                empty: $localize`There are no labels.`,\n                filter: $localize`Filter or add labels`,\n                add: $localize`Add label`\n              })\n            }\n          }\n        ],\n        submitButtonText: $localize`Edit Host`,\n        onSubmit: (values: any) => {\n          this.hostService.update(host['hostname'], true, values.labels).subscribe(() => {\n            this.notificationService.show(\n              NotificationType.success,\n              $localize`Updated Host \"${host.hostname}\"`\n            );\n            // Reload the data table content.\n            this.table.refreshBtn();\n          });\n        }\n      });\n    });\n  }\n\n  hostMaintenance() {\n    this.isExecuting = true;\n    const host = this.selection.first();\n    if (host['status'] !== 'maintenance') {\n      this.hostService.update(host['hostname'], false, [], true).subscribe(\n        () => {\n          this.isExecuting = false;\n          this.notificationService.show(\n            NotificationType.success,\n            $localize`\"${host.hostname}\" moved to maintenance`\n          );\n          this.table.refreshBtn();\n        },\n        (error) => {\n          this.isExecuting = false;\n          this.errorMessage = error.error['detail'].split(/\\n/);\n          error.preventDefault();\n          if (\n            error.error['detail'].includes('WARNING') &&\n            !error.error['detail'].includes('It is NOT safe to stop') &&\n            !error.error['detail'].includes('ALERT') &&\n            !error.error['detail'].includes('unsafe to stop')\n          ) {\n            const modalVariables = {\n              titleText: $localize`Warning`,\n              buttonText: $localize`Continue`,\n              warning: true,\n              bodyTpl: this.maintenanceConfirmTpl,\n              showSubmit: true,\n              onSubmit: () => {\n                this.hostService.update(host['hostname'], false, [], true, true).subscribe(\n                  () => {\n                    this.modalRef.close();\n                  },\n                  () => this.modalRef.close()\n                );\n              }\n            };\n            this.modalRef = this.modalService.show(ConfirmationModalComponent, modalVariables);\n          } else {\n            this.notificationService.show(\n              NotificationType.error,\n              $localize`\"${host.hostname}\" cannot be put into maintenance`,\n              $localize`${error.error['detail']}`\n            );\n          }\n        }\n      );\n    } else {\n      this.hostService.update(host['hostname'], false, [], true).subscribe(() => {\n        this.isExecuting = false;\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`\"${host.hostname}\" has exited maintenance`\n        );\n        this.table.refreshBtn();\n      });\n    }\n  }\n\n  hostDrain(stop = false) {\n    const host = this.selection.first();\n    if (stop) {\n      const index = host['labels'].indexOf('_no_schedule', 0);\n      host['labels'].splice(index, 1);\n      this.hostService.update(host['hostname'], true, host['labels']).subscribe(() => {\n        this.notificationService.show(\n          NotificationType.info,\n          $localize`\"${host['hostname']}\" stopped draining`\n        );\n        this.table.refreshBtn();\n      });\n    } else {\n      this.hostService.update(host['hostname'], false, [], false, false, true).subscribe(() => {\n        this.notificationService.show(\n          NotificationType.info,\n          $localize`\"${host['hostname']}\" started draining`\n        );\n        this.table.refreshBtn();\n      });\n    }\n  }\n\n  getDisable(\n    action: 'add' | 'edit' | 'remove' | 'maintenance' | 'drain',\n    selection: CdTableSelection\n  ): boolean | string {\n    if (\n      action === 'remove' ||\n      action === 'edit' ||\n      action === 'maintenance' ||\n      action === 'drain'\n    ) {\n      if (!selection?.hasSingleSelection) {\n        return true;\n      }\n      if (!_.every(selection.selected, 'sources.orchestrator')) {\n        return this.messages.nonOrchHost;\n      }\n    }\n    return this.orchService.getTableActionDisableDesc(\n      this.orchStatus,\n      this.actionOrchFeatures[action]\n    );\n  }\n\n  deleteAction() {\n    const hostname = this.selection.first().hostname;\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: 'Host',\n      itemNames: [hostname],\n      actionDescription: 'remove',\n      submitActionObservable: () =>\n        this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask('host/remove', { hostname: hostname }),\n          call: this.hostService.delete(hostname)\n        })\n    });\n  }\n\n  checkHostsFactsAvailable() {\n    const orchFeatures = this.orchStatus.features;\n    if (!_.isEmpty(orchFeatures)) {\n      if (orchFeatures.get_facts.available) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  }\n\n  transformHostsData() {\n    if (this.checkHostsFactsAvailable()) {\n      _.forEach(this.hosts, (hostKey) => {\n        hostKey['memory_total_bytes'] = this.emptyPipe.transform(hostKey['memory_total_kb'] * 1024);\n        hostKey['raw_capacity'] = this.emptyPipe.transform(\n          hostKey['hdd_capacity_bytes'] + hostKey['flash_capacity_bytes']\n        );\n      });\n    } else {\n      // mark host facts columns unavailable\n      for (let column = 4; column < this.columns.length; column++) {\n        this.columns[column]['cellTemplate'] = this.orchTmpl;\n      }\n    }\n  }\n\n  getHosts(context: CdTableFetchDataContext) {\n    if (this.isLoadingHosts) {\n      return;\n    }\n    this.isLoadingHosts = true;\n    this.sub = this.orchService\n      .status()\n      .pipe(\n        mergeMap((orchStatus) => {\n          this.orchStatus = orchStatus;\n          const factsAvailable = this.checkHostsFactsAvailable();\n          return this.hostService.list(`${factsAvailable}`);\n        })\n      )\n      .subscribe(\n        (hostList) => {\n          this.hosts = hostList;\n          this.transformHostsData();\n          this.isLoadingHosts = false;\n        },\n        () => {\n          this.isLoadingHosts = false;\n          context.error();\n        }\n      );\n  }\n}\n","<nav ngbNav\n     #nav=\"ngbNav\"\n     class=\"nav-tabs\">\n  <ng-container ngbNavItem>\n    <a ngbNavLink\n       i18n>Hosts List</a>\n    <ng-template ngbNavContent>\n      <cd-table #table\n                [data]=\"hosts\"\n                [columns]=\"columns\"\n                columnMode=\"flex\"\n                (fetchData)=\"getHosts($event)\"\n                selectionType=\"single\"\n                [hasDetails]=\"hasTableDetails\"\n                (setExpandedRow)=\"setExpandedRow($event)\"\n                (updateSelection)=\"updateSelection($event)\"\n                [toolHeader]=\"!hideToolHeader\">\n        <div class=\"table-actions btn-toolbar\">\n          <cd-table-actions [permission]=\"permissions.hosts\"\n                            [selection]=\"selection\"\n                            class=\"btn-group\"\n                            id=\"host-actions\"\n                            [tableActions]=\"tableActions\">\n          </cd-table-actions>\n        </div>\n        <cd-host-details cdTableDetail\n                         [permissions]=\"permissions\"\n                         [selection]=\"expandedRow\">\n        </cd-host-details>\n      </cd-table>\n    </ng-template>\n  </ng-container>\n  <ng-container ngbNavItem\n                *ngIf=\"permissions.grafana.read\">\n  </ng-container>\n  <ng-container ngbNavItem\n                *ngIf=\"permissions.grafana.read\">\n    <a ngbNavLink\n       i18n>Overall Performance</a>\n    <ng-template ngbNavContent>\n      <cd-grafana i18n-title\n                  title=\"Host overview\"\n                  [grafanaPath]=\"'host-overview?'\"\n                  [type]=\"'metrics'\"\n                  uid=\"y0KGL0iZz\"\n                  grafanaStyle=\"two\">\n      </cd-grafana>\n    </ng-template>\n  </ng-container>\n</nav>\n\n<div [ngbNavOutlet]=\"nav\"></div>\n\n<ng-template #servicesTpl\n             let-services=\"value\">\n  <span *ngFor=\"let service of services\">\n    <cd-label [key]=\"service['type']\"\n              [value]=\"service['count']\"\n              class=\"me-1\"></cd-label>\n  </span>\n</ng-template>\n\n<ng-template #maintenanceConfirmTpl>\n  <div *ngFor=\"let msg of errorMessage; let last=last\">\n    <ul *ngIf=\"!last || errorMessage.length === '1'\">\n      <li i18n>{{ msg }}</li>\n    </ul>\n  </div>\n  <ng-container i18n\n                *ngIf=\"showSubmit\">Are you sure you want to continue?</ng-container>\n</ng-template>\n\n<ng-template #orchTmpl>\n  <span i18n\n        i18n-ngbTooltip\n        ngbTooltip=\"Data will be available only if Orchestrator is available.\">N/A</span>\n</ng-template>\n\n<ng-template #flashTmpl>\n  <span i18n\n        i18n-ngbTooltip\n        ngbTooltip=\"SSD, NVMEs\">Flash</span>\n</ng-template>\n<router-outlet name=\"modal\"></router-outlet>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\n\nimport _ from 'lodash';\nimport { Subscription } from 'rxjs';\n\nimport { HostService } from '~/app/shared/api/host.service';\nimport { OrchestratorService } from '~/app/shared/api/orchestrator.service';\nimport { FormModalComponent } from '~/app/shared/components/form-modal/form-modal.component';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableColumnFiltersChange } from '~/app/shared/models/cd-table-column-filters-change';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { OrchestratorFeature } from '~/app/shared/models/orchestrator.enum';\nimport { OrchestratorStatus } from '~/app/shared/models/orchestrator.interface';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { InventoryDevice } from './inventory-device.model';\n\n@Component({\n  selector: 'cd-inventory-devices',\n  templateUrl: './inventory-devices.component.html',\n  styleUrls: ['./inventory-devices.component.scss']\n})\nexport class InventoryDevicesComponent implements OnInit, OnDestroy {\n  @ViewChild(TableComponent, { static: true })\n  table: TableComponent;\n\n  // Devices\n  @Input() devices: InventoryDevice[] = [];\n\n  @Input() showAvailDeviceOnly = false;\n  // Do not display these columns\n  @Input() hiddenColumns: string[] = [];\n\n  @Input() hostname = '';\n\n  @Input() diskType = '';\n\n  // Show filters for these columns, specify empty array to disable\n  @Input() filterColumns = [\n    'hostname',\n    'human_readable_type',\n    'available',\n    'sys_api.vendor',\n    'sys_api.model',\n    'sys_api.size'\n  ];\n\n  // Device table row selection type\n  @Input() selectionType: string = undefined;\n\n  @Output() filterChange = new EventEmitter<CdTableColumnFiltersChange>();\n\n  @Output() fetchInventory = new EventEmitter();\n\n  icons = Icons;\n  columns: Array<CdTableColumn> = [];\n  selection: CdTableSelection = new CdTableSelection();\n  permission: Permission;\n  tableActions: CdTableAction[];\n  fetchInventorySub: Subscription;\n\n  @Input() orchStatus: OrchestratorStatus = undefined;\n\n  actionOrchFeatures = {\n    identify: [OrchestratorFeature.DEVICE_BLINK_LIGHT]\n  };\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private dimlessBinary: DimlessBinaryPipe,\n    private modalService: ModalService,\n    private notificationService: NotificationService,\n    private orchService: OrchestratorService,\n    private hostService: HostService\n  ) {}\n\n  ngOnInit() {\n    this.permission = this.authStorageService.getPermissions().osd;\n    this.tableActions = [\n      {\n        permission: 'update',\n        icon: Icons.show,\n        click: () => this.identifyDevice(),\n        name: $localize`Identify`,\n        disable: (selection: CdTableSelection) => this.getDisable('identify', selection),\n        canBePrimary: (selection: CdTableSelection) => !selection.hasSingleSelection,\n        visible: () => _.isString(this.selectionType)\n      }\n    ];\n    const columns = [\n      {\n        name: $localize`Hostname`,\n        prop: 'hostname',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Device path`,\n        prop: 'path',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Type`,\n        prop: 'human_readable_type',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            hdd: { value: 'HDD', class: 'badge-hdd' },\n            ssd: { value: 'SSD', class: 'badge-ssd' }\n          }\n        }\n      },\n      {\n        name: $localize`Available`,\n        prop: 'available',\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTransformation: CellTemplate.checkIcon\n      },\n      {\n        name: $localize`Vendor`,\n        prop: 'sys_api.vendor',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Model`,\n        prop: 'sys_api.model',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Size`,\n        prop: 'sys_api.size',\n        flexGrow: 1,\n        pipe: this.dimlessBinary\n      },\n      {\n        name: $localize`OSDs`,\n        prop: 'osd_ids',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          class: 'badge-dark',\n          prefix: 'osd.'\n        }\n      }\n    ];\n\n    this.columns = columns.filter((col: any) => {\n      return !this.hiddenColumns.includes(col.prop);\n    });\n\n    // init column filters\n    _.forEach(this.filterColumns, (prop) => {\n      const col = _.find(this.columns, { prop: prop });\n      if (col) {\n        col.filterable = true;\n      }\n\n      if (col?.prop === 'human_readable_type' && this.diskType === 'ssd') {\n        col.filterInitValue = this.diskType;\n      }\n\n      if (col?.prop === 'hostname' && this.hostname) {\n        col.filterInitValue = this.hostname;\n      }\n    });\n\n    if (this.fetchInventory.observers.length > 0) {\n      this.fetchInventorySub = this.table.fetchData.subscribe(() => {\n        this.fetchInventory.emit();\n      });\n    }\n  }\n\n  getDevices() {\n    if (this.showAvailDeviceOnly) {\n      this.hostService.inventoryDeviceList().subscribe(\n        (devices: InventoryDevice[]) => {\n          this.devices = _.filter(devices, 'available');\n          this.devices = [...this.devices];\n        },\n        () => {\n          this.devices = [];\n        }\n      );\n    } else {\n      this.devices = [...this.devices];\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.fetchInventorySub) {\n      this.fetchInventorySub.unsubscribe();\n    }\n  }\n\n  onColumnFiltersChanged(event: CdTableColumnFiltersChange) {\n    this.filterChange.emit(event);\n  }\n\n  getDisable(action: 'identify', selection: CdTableSelection): boolean | string {\n    if (!selection.hasSingleSelection) {\n      return true;\n    }\n    return this.orchService.getTableActionDisableDesc(\n      this.orchStatus,\n      this.actionOrchFeatures[action]\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  identifyDevice() {\n    const selected = this.selection.first();\n    const hostname = selected.hostname;\n    const device = selected.path || selected.device_id;\n    this.modalService.show(FormModalComponent, {\n      titleText: $localize`Identify device ${device}`,\n      message: $localize`Please enter the duration how long to blink the LED.`,\n      fields: [\n        {\n          type: 'select',\n          name: 'duration',\n          value: 300,\n          required: true,\n          typeConfig: {\n            options: [\n              { text: $localize`1 minute`, value: 60 },\n              { text: $localize`2 minutes`, value: 120 },\n              { text: $localize`5 minutes`, value: 300 },\n              { text: $localize`10 minutes`, value: 600 },\n              { text: $localize`15 minutes`, value: 900 }\n            ]\n          }\n        }\n      ],\n      submitButtonText: $localize`Execute`,\n      onSubmit: (values: any) => {\n        this.hostService.identifyDevice(hostname, device, values.duration).subscribe(() => {\n          this.notificationService.show(\n            NotificationType.success,\n            $localize`Identifying '${device}' started on host '${hostname}'`\n          );\n        });\n      }\n    });\n  }\n}\n","<cd-table [data]=\"devices\"\n          [columns]=\"columns\"\n          identifier=\"uid\"\n          [forceIdentifier]=\"true\"\n          [selectionType]=\"selectionType\"\n          columnMode=\"flex\"\n          (fetchData)=\"getDevices()\"\n          [searchField]=\"false\"\n          (updateSelection)=\"updateSelection($event)\"\n          (columnFiltersChanged)=\"onColumnFiltersChanged($event)\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n</cd-table>\n","import { Component, Input, NgZone, OnChanges, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription, timer as observableTimer } from 'rxjs';\n\nimport { HostService } from '~/app/shared/api/host.service';\nimport { OrchestratorService } from '~/app/shared/api/orchestrator.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { OrchestratorStatus } from '~/app/shared/models/orchestrator.interface';\nimport { InventoryDevice } from './inventory-devices/inventory-device.model';\n\n@Component({\n  selector: 'cd-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\nexport class InventoryComponent implements OnChanges, OnInit, OnDestroy {\n  // Display inventory page only for this hostname, ignore to display all.\n  @Input() hostname?: string;\n\n  private reloadSubscriber: Subscription;\n  private reloadInterval = 5000;\n  private firstRefresh = true;\n\n  icons = Icons;\n\n  orchStatus: OrchestratorStatus;\n  showDocPanel = false;\n\n  devices: Array<InventoryDevice> = [];\n\n  constructor(\n    private orchService: OrchestratorService,\n    private hostService: HostService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    this.orchService.status().subscribe((status) => {\n      this.orchStatus = status;\n      this.showDocPanel = !status.available;\n      if (status.available) {\n        // Create a timer to get cached inventory from the orchestrator.\n        // Do not ask the orchestrator frequently to refresh its cache data because it's expensive.\n        this.ngZone.runOutsideAngular(() => {\n          // start after first pass because the embedded table calls refresh at init.\n          this.reloadSubscriber = observableTimer(\n            this.reloadInterval,\n            this.reloadInterval\n          ).subscribe(() => {\n            this.ngZone.run(() => {\n              this.getInventory(false);\n            });\n          });\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.reloadSubscriber?.unsubscribe();\n  }\n\n  ngOnChanges() {\n    if (this.orchStatus?.available) {\n      this.devices = [];\n      this.getInventory(false);\n    }\n  }\n\n  getInventory(refresh: boolean) {\n    if (this.hostname === '') {\n      return;\n    }\n    this.hostService.inventoryDeviceList(this.hostname, refresh).subscribe(\n      (devices: InventoryDevice[]) => {\n        this.devices = devices;\n      },\n      () => {\n        this.devices = [];\n      }\n    );\n  }\n\n  refresh() {\n    // Make the first reload (triggered by table) use cached data, and\n    // the remaining reloads (triggered by users) ask orchestrator to refresh inventory.\n    this.getInventory(!this.firstRefresh);\n    this.firstRefresh = false;\n  }\n}\n","<cd-orchestrator-doc-panel *ngIf=\"showDocPanel\"></cd-orchestrator-doc-panel>\n<ng-container *ngIf=\"orchStatus?.available\">\n  <legend i18n>Physical Disks</legend>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <cd-inventory-devices [devices]=\"devices\"\n                            [hiddenColumns]=\"hostname === undefined ? [] : ['hostname']\"\n                            selectionType=\"single\"\n                            (fetchInventory)=\"refresh()\"\n                            [orchStatus]=\"orchStatus\">\n      </cd-inventory-devices>\n    </div>\n  </div>\n</ng-container>\n","import { DatePipe } from '@angular/common';\nimport { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\n\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CephServiceService } from '~/app/shared/api/ceph-service.service';\nimport { LogsService } from '~/app/shared/api/logs.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\n\n@Component({\n  selector: 'cd-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit, OnDestroy {\n  contentData: any;\n  clog: Array<any>;\n  audit_log: Array<any>;\n  icons = Icons;\n  clogText: string;\n  auditLogText: string;\n  lokiServiceStatus$: Observable<boolean>;\n  promtailServiceStatus$: Observable<boolean>;\n\n  interval: number;\n  priorities: Array<{ name: string; value: string }> = [\n    { name: 'Debug', value: '[DBG]' },\n    { name: 'Info', value: '[INF]' },\n    { name: 'Warning', value: '[WRN]' },\n    { name: 'Error', value: '[ERR]' },\n    { name: 'All', value: 'All' }\n  ];\n  priority = 'All';\n  search = '';\n  selectedDate: NgbDateStruct;\n  startTime = { hour: 0, minute: 0 };\n  endTime = { hour: 23, minute: 59 };\n  maxDate = {\n    year: new Date().getFullYear(),\n    month: new Date().getMonth() + 1,\n    day: new Date().getDate()\n  };\n\n  constructor(\n    private logsService: LogsService,\n    private cephService: CephServiceService,\n    private datePipe: DatePipe,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    this.getInfo();\n    this.ngZone.runOutsideAngular(() => {\n      this.getDaemonDetails();\n      this.interval = window.setInterval(() => {\n        this.ngZone.run(() => {\n          this.getInfo();\n        });\n      }, 5000);\n    });\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.interval);\n  }\n\n  getDaemonDetails() {\n    this.lokiServiceStatus$ = this.cephService.getDaemons('loki').pipe(\n      map((data: any) => {\n        return data.length > 0 && data[0].status === 1;\n      })\n    );\n    this.promtailServiceStatus$ = this.cephService.getDaemons('promtail').pipe(\n      map((data: any) => {\n        return data.length > 0 && data[0].status === 1;\n      })\n    );\n  }\n\n  getInfo() {\n    this.logsService.getLogs().subscribe((data: any) => {\n      this.contentData = data;\n      this.clogText = this.logToText(this.contentData.clog);\n      this.auditLogText = this.logToText(this.contentData.audit_log);\n      this.filterLogs();\n    });\n  }\n\n  abstractFilters(): any {\n    const priority = this.priority;\n    const key = this.search.toLowerCase();\n    let yearMonthDay: string;\n    if (this.selectedDate) {\n      const m = this.selectedDate.month;\n      const d = this.selectedDate.day;\n\n      const year = this.selectedDate.year;\n      const month = m <= 9 ? `0${m}` : `${m}`;\n      const day = d <= 9 ? `0${d}` : `${d}`;\n      yearMonthDay = `${year}-${month}-${day}`;\n    } else {\n      yearMonthDay = '';\n    }\n\n    const sHour = this.startTime?.hour ?? 0;\n    const sMinutes = this.startTime?.minute ?? 0;\n    const sTime = sHour * 60 + sMinutes;\n\n    const eHour = this.endTime?.hour ?? 23;\n    const eMinutes = this.endTime?.minute ?? 59;\n    const eTime = eHour * 60 + eMinutes;\n\n    return { priority, key, yearMonthDay, sTime, eTime };\n  }\n\n  filterExecutor(logs: Array<any>, filters: any): Array<any> {\n    return logs.filter((line) => {\n      const localDate = this.datePipe.transform(line.stamp, 'mediumTime');\n      const hour = parseInt(localDate.split(':')[0], 10);\n      const minutes = parseInt(localDate.split(':')[1], 10);\n      let prio: string, y_m_d: string, timeSpan: number;\n\n      prio = filters.priority === 'All' ? line.priority : filters.priority;\n      y_m_d = filters.yearMonthDay ? filters.yearMonthDay : line.stamp;\n      timeSpan = hour * 60 + minutes;\n      return (\n        line.priority === prio &&\n        line.message.toLowerCase().indexOf(filters.key) !== -1 &&\n        line.stamp.indexOf(y_m_d) !== -1 &&\n        timeSpan >= filters.sTime &&\n        timeSpan <= filters.eTime\n      );\n    });\n  }\n\n  filterLogs() {\n    const filters = this.abstractFilters();\n    this.clog = this.filterExecutor(this.contentData.clog, filters);\n    this.audit_log = this.filterExecutor(this.contentData.audit_log, filters);\n  }\n\n  clearSearchKey() {\n    this.search = '';\n    this.filterLogs();\n  }\n  clearDate() {\n    this.selectedDate = null;\n    this.filterLogs();\n  }\n  resetFilter() {\n    this.priority = 'All';\n    this.search = '';\n    this.selectedDate = null;\n    this.startTime = { hour: 0, minute: 0 };\n    this.endTime = { hour: 23, minute: 59 };\n    this.filterLogs();\n\n    return false;\n  }\n\n  logToText(log: object) {\n    let logText = '';\n    for (const line of Object.keys(log)) {\n      logText =\n        logText +\n        this.datePipe.transform(log[line].stamp, 'medium') +\n        '\\t' +\n        log[line].priority +\n        '\\t' +\n        log[line].message +\n        '\\n';\n    }\n    return logText;\n  }\n}\n","<div *ngIf=\"contentData\">\n  <ng-container *ngTemplateOutlet=\"logFiltersTpl\"></ng-container>\n\n  <nav ngbNav\n       #nav=\"ngbNav\"\n       class=\"nav-tabs\"\n       cdStatefulTab=\"logs\">\n    <ng-container ngbNavItem=\"cluster-logs\">\n      <a ngbNavLink\n         i18n>Cluster Logs</a>\n      <ng-template ngbNavContent>\n        <div class=\"card bg-light mb-3\"\n             *ngIf=\"clog\">\n          <div class=\"btn-group\"\n               role=\"group\"\n               *ngIf=\"clog.length\">\n            <cd-download-button [objectItem]=\"clog\"\n                                [textItem]=\"clogText\"\n                                fileName=\"cluster_log\">\n            </cd-download-button>\n            <cd-copy-2-clipboard-button\n                    [source]=\"clogText\"\n                    [byId]=\"false\">\n            </cd-copy-2-clipboard-button>\n          </div>\n          <div class=\"card-body\">\n            <p *ngFor=\"let line of clog\">\n              <span class=\"timestamp\">{{ line.stamp | cdDate }}</span>\n              <span class=\"priority {{ line.priority | logPriority }}\">{{ line.priority }}</span>\n              <span class=\"message\"\n                    [innerHTML]=\"line.message | searchHighlight: search\"></span>\n            </p>\n\n            <ng-container *ngIf=\"clog.length !== 0 else noEntriesTpl\"></ng-container>\n          </div>\n        </div>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"audit-logs\">\n      <a ngbNavLink\n         i18n>Audit Logs</a>\n      <ng-template ngbNavContent>\n        <div class=\"card bg-light mb-3\"\n             *ngIf=\"audit_log\">\n          <div class=\"btn-group\"\n               role=\"group\"\n               *ngIf=\"audit_log.length\">\n            <cd-download-button [objectItem]=\"audit_log\"\n                                [textItem]=\"auditLogText\"\n                                fileName=\"audit_log\">\n            </cd-download-button>\n            <cd-copy-2-clipboard-button\n                    [source]=\"auditLogText\"\n                    [byId]=\"false\">\n            </cd-copy-2-clipboard-button>\n          </div>\n          <div class=\"card-body\">\n            <p *ngFor=\"let line of audit_log\">\n              <span class=\"timestamp\">{{ line.stamp | cdDate }}</span>\n              <span class=\"priority {{ line.priority | logPriority }}\">{{ line.priority }}</span>\n              <span class=\"message\"\n                    [innerHTML]=\"line.message | searchHighlight: search\"></span>\n            </p>\n\n            <ng-container *ngIf=\"audit_log.length !== 0 else noEntriesTpl\"></ng-container>\n          </div>\n        </div>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"daemon-logs\">\n      <a ngbNavLink\n         i18n>Daemon Logs</a>\n      <ng-template ngbNavContent>\n        <ng-container *ngIf=\"lokiServiceStatus$ | async as lokiServiceStatus; else daemonLogsTpl\">\n          <div *ngIf=\"promtailServiceStatus$ | async as promtailServiceStatus; else daemonLogsTpl\">\n            <cd-grafana i18n-title\n                        title=\"Daemon logs\"\n                        [grafanaPath]=\"'explore?'\"\n                        [type]=\"'logs'\"\n                        uid=\"CrAHE0iZz\"\n                        grafanaStyle=\"two\">\n            </cd-grafana>\n          </div>\n        </ng-container>\n      </ng-template>\n    </ng-container>\n  </nav>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n</div>\n\n<ng-template #logFiltersTpl>\n  <div class=\"row mb-3\">\n  <div class=\"col-lg-10 d-flex\">\n    <div class=\"col-sm-1 me-3\">\n      <label for=\"logs-priority\"\n             class=\"fw-bold\"\n             i18n>Priority:</label>\n      <select id=\"logs-priority\"\n              class=\"form-select\"\n              [(ngModel)]=\"priority\"\n              (ngModelChange)=\"filterLogs()\">\n        <option *ngFor=\"let prio of priorities\"\n                [value]=\"prio.value\">{{ prio.name }}</option>\n      </select>\n    </div>\n\n    <div class=\"col-md-3 me-3\">\n      <label for=\"logs-keyword\"\n             class=\"fw-bold\"\n             i18n>Keyword:</label>\n      <div class=\"input-group\">\n        <span class=\"input-group-text\">\n          <i [ngClass]=\"[icons.search]\"></i>\n        </span>\n\n        <input class=\"form-control\"\n               id=\"logs-keyword\"\n               type=\"text\"\n               [(ngModel)]=\"search\"\n               (keyup)=\"filterLogs()\">\n\n        <button type=\"button\"\n                class=\"btn btn-light\"\n                (click)=\"clearSearchKey()\"\n                title=\"Clear\">\n          <i class=\"icon-prepend {{ icons.destroy }}\"></i>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"col-md-3 me-3\">\n      <label for=\"logs-date\"\n             class=\"fw-bold\"\n             i18n>Date:</label>\n      <div class=\"input-group\">\n        <input class=\"form-control\"\n               id=\"logs-date\"\n               placeholder=\"YYYY-MM-DD\"\n               ngbDatepicker\n               [maxDate]=\"maxDate\"\n               #d=\"ngbDatepicker\"\n               (click)=\"d.open()\"\n               [(ngModel)]=\"selectedDate\"\n               (ngModelChange)=\"filterLogs()\">\n        <button type=\"button\"\n                class=\"btn btn-light\"\n                (click)=\"clearDate()\"\n                title=\"Clear\">\n          <i class=\"icon-prepend {{ icons.destroy }}\"></i>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"col-md-5\">\n      <label i18n\n             class=\"fw-bold\">Time range:</label>\n      <div class=\"d-flex\">\n      <ngb-timepicker [spinners]=\"false\"\n                      [(ngModel)]=\"startTime\"\n                      (ngModelChange)=\"filterLogs()\"></ngb-timepicker>\n\n      <span class=\"mt-2\">&nbsp;&mdash;&nbsp;</span>\n\n      <ngb-timepicker [spinners]=\"false\"\n                      [(ngModel)]=\"endTime\"\n                      (ngModelChange)=\"filterLogs()\"></ngb-timepicker>\n    </div></div>\n  </div></div>\n</ng-template>\n\n<ng-template #noEntriesTpl>\n  <span i18n>No log entries found. Please try to select different filter options.</span>\n  <span>&nbsp;</span>\n  <a href=\"#\"\n     (click)=\"resetFilter()\"\n     i18n>Reset filter.</a>\n</ng-template>\n\n<ng-template #daemonLogsTpl>\n  <cd-alert-panel type=\"info\"\n                  title=\"Loki/Promtail service not running\"\n                  i18n-title>\n  <ng-container i18n>Please start the loki and promtail service to see these logs.</ng-container>\n  </cd-alert-panel>\n</ng-template>\n","import { Component, Input, OnChanges } from '@angular/core';\n\nimport { MgrModuleService } from '~/app/shared/api/mgr-module.service';\n\n@Component({\n  selector: 'cd-mgr-module-details',\n  templateUrl: './mgr-module-details.component.html',\n  styleUrls: ['./mgr-module-details.component.scss']\n})\nexport class MgrModuleDetailsComponent implements OnChanges {\n  module_config: any;\n\n  @Input()\n  selection: any;\n\n  constructor(private mgrModuleService: MgrModuleService) {}\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.mgrModuleService.getConfig(this.selection.name).subscribe((resp: any) => {\n        this.module_config = resp;\n      });\n    }\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <cd-table-key-value [data]=\"module_config\">\n  </cd-table-key-value>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport _ from 'lodash';\nimport { forkJoin as observableForkJoin } from 'rxjs';\n\nimport { MgrModuleService } from '~/app/shared/api/mgr-module.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-mgr-module-form',\n  templateUrl: './mgr-module-form.component.html',\n  styleUrls: ['./mgr-module-form.component.scss']\n})\nexport class MgrModuleFormComponent extends CdForm implements OnInit {\n  mgrModuleForm: CdFormGroup;\n  moduleName = '';\n  moduleOptions: any[] = [];\n\n  constructor(\n    public actionLabels: ActionLabelsI18n,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: CdFormBuilder,\n    private mgrModuleService: MgrModuleService,\n    private notificationService: NotificationService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params: { name: string }) => {\n      this.moduleName = decodeURIComponent(params.name);\n      const observables = [\n        this.mgrModuleService.getOptions(this.moduleName),\n        this.mgrModuleService.getConfig(this.moduleName)\n      ];\n      observableForkJoin(observables).subscribe(\n        (resp: object) => {\n          this.moduleOptions = resp[0];\n          // Create the form dynamically.\n          this.createForm();\n          // Set the form field values.\n          this.mgrModuleForm.setValue(resp[1]);\n          this.loadingReady();\n        },\n        (_error) => {\n          this.loadingError();\n        }\n      );\n    });\n  }\n\n  getValidators(moduleOption: any): ValidatorFn[] {\n    const result = [];\n    switch (moduleOption.type) {\n      case 'addr':\n        result.push(CdValidators.ip());\n        break;\n      case 'uint':\n      case 'int':\n      case 'size':\n      case 'secs':\n        result.push(Validators.required);\n        break;\n      case 'str':\n        if (_.isNumber(moduleOption.min)) {\n          result.push(Validators.minLength(moduleOption.min));\n        }\n        if (_.isNumber(moduleOption.max)) {\n          result.push(Validators.maxLength(moduleOption.max));\n        }\n        break;\n      case 'float':\n        result.push(Validators.required);\n        result.push(CdValidators.decimalNumber());\n        break;\n      case 'uuid':\n        result.push(CdValidators.uuid());\n        break;\n    }\n    return result;\n  }\n\n  createForm() {\n    const controlsConfig = {};\n    _.forEach(this.moduleOptions, (moduleOption) => {\n      controlsConfig[moduleOption.name] = [\n        moduleOption.default_value,\n        this.getValidators(moduleOption)\n      ];\n    });\n    this.mgrModuleForm = this.formBuilder.group(controlsConfig);\n  }\n\n  goToListView() {\n    this.router.navigate(['/mgr-modules']);\n  }\n\n  onSubmit() {\n    // Exit immediately if the form isn't dirty.\n    if (this.mgrModuleForm.pristine) {\n      this.goToListView();\n      return;\n    }\n    const config = {};\n    _.forEach(this.moduleOptions, (moduleOption) => {\n      const control = this.mgrModuleForm.get(moduleOption.name);\n      // Append the option only if the value has been modified.\n      if (control.dirty && control.valid) {\n        config[moduleOption.name] = control.value;\n      }\n    });\n    this.mgrModuleService.updateConfig(this.moduleName, config).subscribe(\n      () => {\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Updated options for module '${this.moduleName}'.`\n        );\n        this.goToListView();\n      },\n      () => {\n        // Reset the 'Submit' button.\n        this.mgrModuleForm.setErrors({ cdSubmitButton: true });\n      }\n    );\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form name=\"mgrModuleForm\"\n        #frm=\"ngForm\"\n        [formGroup]=\"mgrModuleForm\"\n        novalidate>\n    <div class=\"card\">\n      <div class=\"card-header\"\n           i18n>Edit Manager module</div>\n      <div class=\"card-body\">\n        <div class=\"form-group row\"\n             *ngFor=\"let moduleOption of moduleOptions | keyvalue\">\n\n          <!-- Field label -->\n          <label class=\"cd-col-form-label\"\n                 for=\"{{ moduleOption.value.name }}\">\n            {{ moduleOption.value.name }}\n            <cd-helper *ngIf=\"moduleOption.value.long_desc || moduleOption.value.desc\">\n              {{ moduleOption.value.long_desc || moduleOption.value.desc | upperFirst }}\n            </cd-helper>\n          </label>\n\n          <!-- Field control -->\n          <!-- bool -->\n          <div class=\"cd-col-form-input\"\n               *ngIf=\"moduleOption.value.type === 'bool'\">\n            <div class=\"custom-control custom-checkbox\">\n              <input id=\"{{ moduleOption.value.name }}\"\n                     type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     formControlName=\"{{ moduleOption.value.name }}\">\n              <label class=\"custom-control-label\"\n                     for=\"{{ moduleOption.value.name }}\"></label>\n            </div>\n          </div>\n\n          <!-- addr|str|uuid -->\n          <div class=\"cd-col-form-input\"\n               *ngIf=\"['addr', 'str', 'uuid'].includes(moduleOption.value.type)\">\n            <input id=\"{{ moduleOption.value.name }}\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"{{ moduleOption.value.name }}\"\n                   *ngIf=\"moduleOption.value.enum_allowed.length === 0\">\n            <select id=\"{{ moduleOption.value.name }}\"\n                    class=\"form-select\"\n                    formControlName=\"{{ moduleOption.value.name }}\"\n                    *ngIf=\"moduleOption.value.enum_allowed.length > 0\">\n              <option *ngFor=\"let value of moduleOption.value.enum_allowed\"\n                      [ngValue]=\"value\">\n                {{ value }}\n              </option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"mgrModuleForm.showError(moduleOption.value.name, frm, 'invalidUuid')\"\n                  i18n>The entered value is not a valid UUID, e.g.: 67dcac9f-2c03-4d6c-b7bd-1210b3a259a8</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"mgrModuleForm.showError(moduleOption.value.name, frm, 'pattern')\"\n                  i18n>The entered value needs to be a valid IP address.</span>\n          </div>\n\n          <!-- uint|int|size|secs -->\n          <div class=\"cd-col-form-input\"\n               *ngIf=\"['uint', 'int', 'size', 'secs'].includes(moduleOption.value.type)\">\n            <input id=\"{{ moduleOption.value.name }}\"\n                   class=\"form-control\"\n                   type=\"number\"\n                   formControlName=\"{{ moduleOption.value.name }}\"\n                   min=\"{{ moduleOption.value.min }}\"\n                   max=\"{{ moduleOption.value.max }}\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"mgrModuleForm.showError(moduleOption.value.name, frm, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"mgrModuleForm.showError(moduleOption.value.name, frm, 'max')\"\n                  i18n>The entered value is too high! It must be lower or equal to {{ moduleOption.value.max }}.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"mgrModuleForm.showError(moduleOption.value.name, frm, 'min')\"\n                  i18n>The entered value is too low! It must be greater or equal to {{ moduleOption.value.min }}.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"mgrModuleForm.showError(moduleOption.value.name, frm, 'pattern')\"\n                  i18n>The entered value needs to be a number.</span>\n          </div>\n\n          <!-- float -->\n          <div class=\"cd-col-form-input\"\n               *ngIf=\"moduleOption.value.type === 'float'\">\n            <input id=\"{{ moduleOption.value.name }}\"\n                   class=\"form-control\"\n                   type=\"number\"\n                   formControlName=\"{{ moduleOption.value.name }}\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"mgrModuleForm.showError(moduleOption.value.name, frm, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"mgrModuleForm.showError(moduleOption.value.name, frm, 'pattern')\"\n                  i18n>The entered value needs to be a number or decimal.</span>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"mgrModuleForm\"\n                              [submitText]=\"actionLabels.UPDATE\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, ViewChild } from '@angular/core';\n\nimport { BlockUI, NgBlockUI } from 'ng-block-ui';\nimport { timer as observableTimer } from 'rxjs';\n\nimport { MgrModuleService } from '~/app/shared/api/mgr-module.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-mgr-module-list',\n  templateUrl: './mgr-module-list.component.html',\n  styleUrls: ['./mgr-module-list.component.scss']\n})\nexport class MgrModuleListComponent extends ListWithDetails {\n  @ViewChild(TableComponent, { static: true })\n  table: TableComponent;\n  @BlockUI()\n  blockUI: NgBlockUI;\n\n  permission: Permission;\n  tableActions: CdTableAction[];\n  columns: CdTableColumn[] = [];\n  modules: object[] = [];\n  selection: CdTableSelection = new CdTableSelection();\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private mgrModuleService: MgrModuleService,\n    private notificationService: NotificationService\n  ) {\n    super();\n    this.permission = this.authStorageService.getPermissions().configOpt;\n    this.columns = [\n      {\n        name: $localize`Name`,\n        prop: 'name',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Enabled`,\n        prop: 'enabled',\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTransformation: CellTemplate.checkIcon\n      },\n      {\n        name: $localize`Always-On`,\n        prop: 'always_on',\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTransformation: CellTemplate.checkIcon\n      }\n    ];\n    const getModuleUri = () =>\n      this.selection.first() && encodeURIComponent(this.selection.first().name);\n    this.tableActions = [\n      {\n        name: $localize`Edit`,\n        permission: 'update',\n        disable: () => {\n          if (!this.selection.hasSelection) {\n            return true;\n          }\n          // Disable the 'edit' button when the module has no options.\n          return Object.values(this.selection.first().options).length === 0;\n        },\n        routerLink: () => `/mgr-modules/edit/${getModuleUri()}`,\n        icon: Icons.edit\n      },\n      {\n        name: $localize`Enable`,\n        permission: 'update',\n        click: () => this.updateModuleState(),\n        disable: () => this.isTableActionDisabled('enabled'),\n        icon: Icons.start\n      },\n      {\n        name: $localize`Disable`,\n        permission: 'update',\n        click: () => this.updateModuleState(),\n        disable: () => this.getTableActionDisabledDesc(),\n        icon: Icons.stop\n      }\n    ];\n  }\n\n  getModuleList(context: CdTableFetchDataContext) {\n    this.mgrModuleService.list().subscribe(\n      (resp: object[]) => {\n        this.modules = resp;\n      },\n      () => {\n        context.error();\n      }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  /**\n   * Check if the table action is disabled.\n   * @param state The expected module state, e.g. ``enabled`` or ``disabled``.\n   * @returns If the specified state is validated to true or no selection is\n   *   done, then ``true`` is returned, otherwise ``false``.\n   */\n  isTableActionDisabled(state: 'enabled' | 'disabled') {\n    if (!this.selection.hasSelection) {\n      return true;\n    }\n    const selected = this.selection.first();\n    // Make sure the user can't modify the run state of the 'Dashboard' module.\n    // This check is only done in the UI because the REST API should still be\n    // able to do so.\n    if (selected.name === 'dashboard') {\n      return true;\n    }\n    // Always-on modules can't be disabled.\n    if (selected.always_on) {\n      return true;\n    }\n    switch (state) {\n      case 'enabled':\n        return selected.enabled;\n      case 'disabled':\n        return !selected.enabled;\n    }\n  }\n\n  getTableActionDisabledDesc(): string | boolean {\n    if (this.selection.first()?.always_on) {\n      return $localize`This Manager module is always on.`;\n    }\n\n    return this.isTableActionDisabled('disabled');\n  }\n\n  /**\n   * Update the Ceph Mgr module state to enabled or disabled.\n   */\n  updateModuleState() {\n    if (!this.selection.hasSelection) {\n      return;\n    }\n\n    let $obs;\n    const fnWaitUntilReconnected = () => {\n      observableTimer(2000).subscribe(() => {\n        // Trigger an API request to check if the connection is\n        // re-established.\n        this.mgrModuleService.list().subscribe(\n          () => {\n            // Resume showing the notification toasties.\n            this.notificationService.suspendToasties(false);\n            // Unblock the whole UI.\n            this.blockUI.stop();\n            // Reload the data table content.\n            this.table.refreshBtn();\n          },\n          () => {\n            fnWaitUntilReconnected();\n          }\n        );\n      });\n    };\n\n    // Note, the Ceph Mgr is always restarted when a module\n    // is enabled/disabled.\n    const module = this.selection.first();\n    if (module.enabled) {\n      $obs = this.mgrModuleService.disable(module.name);\n    } else {\n      $obs = this.mgrModuleService.enable(module.name);\n    }\n    $obs.subscribe(\n      () => undefined,\n      () => {\n        // Suspend showing the notification toasties.\n        this.notificationService.suspendToasties(true);\n        // Block the whole UI to prevent user interactions until\n        // the connection to the backend is reestablished\n        this.blockUI.start($localize`Reconnecting, please wait ...`);\n        fnWaitUntilReconnected();\n      }\n    );\n  }\n}\n","<cd-table #table\n          [autoReload]=\"false\"\n          [data]=\"modules\"\n          [columns]=\"columns\"\n          columnMode=\"flex\"\n          selectionType=\"single\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\"\n          identifier=\"module\"\n          (fetchData)=\"getModuleList($event)\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n  <cd-mgr-module-details cdTableDetail\n                         [selection]=\"expandedRow\">\n  </cd-mgr-module-details>\n</cd-table>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from '~/app/app-routing.module';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { MgrModuleDetailsComponent } from './mgr-module-details/mgr-module-details.component';\nimport { MgrModuleFormComponent } from './mgr-module-form/mgr-module-form.component';\nimport { MgrModuleListComponent } from './mgr-module-list/mgr-module-list.component';\n\n@NgModule({\n  imports: [AppRoutingModule, CommonModule, ReactiveFormsModule, SharedModule, NgbNavModule],\n  declarations: [MgrModuleListComponent, MgrModuleFormComponent, MgrModuleDetailsComponent]\n})\nexport class MgrModulesModule {}\n","import { Component } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { MonitorService } from '~/app/shared/api/monitor.service';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\n\n@Component({\n  selector: 'cd-monitor',\n  templateUrl: './monitor.component.html',\n  styleUrls: ['./monitor.component.scss']\n})\nexport class MonitorComponent {\n  mon_status: any;\n  inQuorum: any;\n  notInQuorum: any;\n\n  interval: any;\n\n  constructor(private monitorService: MonitorService) {\n    this.inQuorum = {\n      columns: [\n        { prop: 'name', name: $localize`Name`, cellTransformation: CellTemplate.routerLink },\n        { prop: 'rank', name: $localize`Rank` },\n        { prop: 'public_addr', name: $localize`Public Address` },\n        {\n          prop: 'cdOpenSessions',\n          name: $localize`Open Sessions`,\n          cellTransformation: CellTemplate.sparkline,\n          comparator: (dataA: any, dataB: any) => {\n            // We get the last value of time series to compare:\n            const lastValueA = _.last(dataA);\n            const lastValueB = _.last(dataB);\n\n            if (!lastValueA || !lastValueB || lastValueA === lastValueB) {\n              return 0;\n            }\n\n            return lastValueA > lastValueB ? 1 : -1;\n          }\n        }\n      ]\n    };\n\n    this.notInQuorum = {\n      columns: [\n        { prop: 'name', name: $localize`Name`, cellTransformation: CellTemplate.routerLink },\n        { prop: 'rank', name: $localize`Rank` },\n        { prop: 'public_addr', name: $localize`Public Address` }\n      ]\n    };\n  }\n\n  refresh() {\n    this.monitorService.getMonitor().subscribe((data: any) => {\n      data.in_quorum.map((row: any) => {\n        row.cdOpenSessions = row.stats.num_sessions.map((i: string) => i[1]);\n        row.cdLink = '/perf_counters/mon/' + row.name;\n        row.cdParams = { fromLink: '/monitor' };\n        return row;\n      });\n\n      data.out_quorum.map((row: any) => {\n        row.cdLink = '/perf_counters/mon/' + row.name;\n        row.cdParams = { fromLink: '/monitor' };\n        return row;\n      });\n\n      this.inQuorum.data = [...data.in_quorum];\n      this.notInQuorum.data = [...data.out_quorum];\n      this.mon_status = data.mon_status;\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-4\">\n    <fieldset>\n      <legend class=\"cd-header\"\n              i18n>Status</legend>\n      <table class=\"table table-striped\"\n             *ngIf=\"mon_status\">\n        <tbody>\n          <tr>\n            <td i18n\n                class=\"bold\">Cluster ID</td>\n            <td>{{ mon_status.monmap.fsid }}</td>\n          </tr>\n          <tr>\n            <td i18n\n                class=\"bold\">monmap modified</td>\n            <td>{{ mon_status.monmap.modified | relativeDate }}</td>\n          </tr>\n          <tr>\n            <td i18n\n                class=\"bold\">monmap epoch</td>\n            <td>{{ mon_status.monmap.epoch }}</td>\n          </tr>\n          <tr>\n            <td i18n\n                class=\"bold\">quorum con</td>\n            <td>{{ mon_status.features.quorum_con }}</td>\n          </tr>\n          <tr>\n            <td i18n\n                class=\"bold\">quorum mon</td>\n            <td>{{ mon_status.features.quorum_mon }}</td>\n          </tr>\n          <tr>\n            <td i18n\n                class=\"bold\">required con</td>\n            <td>{{ mon_status.features.required_con }}</td>\n          </tr>\n          <tr>\n            <td i18n\n                class=\"bold\">required mon</td>\n            <td>{{ mon_status.features.required_mon }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </fieldset>\n  </div>\n\n  <div class=\"col-lg-8\">\n    <legend i18n\n            class=\"in-quorum cd-header\">In Quorum</legend>\n    <div>\n    <cd-table [data]=\"inQuorum.data\"\n              [columns]=\"inQuorum.columns\">\n    </cd-table></div>\n\n    <legend i18n\n            class=\"in-quorum cd-header\">Not In Quorum</legend>\n    <div>\n    <cd-table [data]=\"notInQuorum.data\"\n              (fetchData)=\"refresh()\"\n              [columns]=\"notInQuorum.columns\">\n    </cd-table></div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-osd-creation-preview-modal',\n  templateUrl: './osd-creation-preview-modal.component.html',\n  styleUrls: ['./osd-creation-preview-modal.component.scss']\n})\nexport class OsdCreationPreviewModalComponent {\n  @Input()\n  driveGroups: Object[] = [];\n\n  @Output()\n  submitAction = new EventEmitter();\n\n  action: string;\n  formGroup: CdFormGroup;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private formBuilder: CdFormBuilder,\n    private osdService: OsdService,\n    private taskWrapper: TaskWrapperService\n  ) {\n    this.action = actionLabels.CREATE;\n    this.createForm();\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({});\n  }\n\n  onSubmit() {\n    const trackingId = _.join(_.map(this.driveGroups, 'service_id'), ', ');\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('osd/' + URLVerbs.CREATE, {\n          tracking_id: trackingId\n        }),\n        call: this.osdService.create(this.driveGroups, trackingId)\n      })\n      .subscribe({\n        error: () => {\n          this.formGroup.setErrors({ cdSubmitButton: true });\n        },\n        complete: () => {\n          this.submitAction.emit();\n          this.activeModal.close();\n        }\n      });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\"\n                i18n>OSD creation preview</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form #frm=\"ngForm\"\n          [formGroup]=\"formGroup\"\n          novalidate>\n      <div class=\"modal-body\">\n        <h4 i18n>DriveGroups</h4>\n        <pre>{{ driveGroups | json}}</pre>\n      </div>\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"formGroup\"\n                              [submitText]=\"action | titlecase\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, Input, OnChanges } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-osd-details',\n  templateUrl: './osd-details.component.html',\n  styleUrls: ['./osd-details.component.scss']\n})\nexport class OsdDetailsComponent implements OnChanges {\n  @Input()\n  selection: any;\n\n  osd: {\n    id?: number;\n    details?: any;\n    tree?: any;\n  };\n  grafanaPermission: Permission;\n\n  constructor(private osdService: OsdService, private authStorageService: AuthStorageService) {\n    this.grafanaPermission = this.authStorageService.getPermissions().grafana;\n  }\n\n  ngOnChanges() {\n    if (this.osd?.id !== this.selection?.id) {\n      this.osd = this.selection;\n    }\n\n    if (_.isNumber(this.osd?.id)) {\n      this.refresh();\n    }\n  }\n\n  refresh() {\n    this.osdService.getDetails(this.osd.id).subscribe((data) => {\n      this.osd.details = data;\n    });\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <nav ngbNav\n       #nav=\"ngbNav\"\n       id=\"tabset-osd-details\"\n       class=\"nav-tabs\"\n       cdStatefulTab=\"osd-details\">\n    <ng-container ngbNavItem=\"devices\">\n      <a ngbNavLink\n         i18n>Devices</a>\n      <ng-template ngbNavContent>\n        <cd-device-list [osdId]=\"osd?.id\"\n                        [hostname]=\"selection?.host.name\"\n                        [osdList]=\"true\"></cd-device-list>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"attributes\">\n      <a ngbNavLink\n         i18n>Attributes (OSD map)</a>\n      <ng-template ngbNavContent>\n        <cd-table-key-value [data]=\"osd?.details?.osd_map\">\n        </cd-table-key-value>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"metadata\">\n      <a ngbNavLink\n         i18n>Metadata</a>\n      <ng-template ngbNavContent>\n        <cd-table-key-value *ngIf=\"osd?.details?.osd_metadata; else noMetaData\"\n                            (fetchData)=\"refresh()\"\n                            [data]=\"osd?.details?.osd_metadata\">\n        </cd-table-key-value>\n        <ng-template #noMetaData>\n          <cd-alert-panel type=\"warning\"\n                          i18n>Metadata not available</cd-alert-panel>\n        </ng-template>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"device-health\">\n      <a ngbNavLink\n         i18n>Device health</a>\n      <ng-template ngbNavContent>\n        <cd-smart-list [osdId]=\"osd?.id\"></cd-smart-list>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"performance-counter\">\n      <a ngbNavLink\n         i18n>Performance counter</a>\n      <ng-template ngbNavContent>\n        <cd-table-performance-counter *ngIf=\"osd?.details\"\n                                      serviceType=\"osd\"\n                                      [serviceId]=\"osd?.id\">\n        </cd-table-performance-counter>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"performance-details\"\n                  *ngIf=\"grafanaPermission.read\">\n      <a ngbNavLink\n         i18n>Performance Details</a>\n      <ng-template ngbNavContent>\n        <cd-grafana i18n-title\n                    title=\"OSD details\"\n                    [grafanaPath]=\"'osd-device-details?var-osd=osd.' + osd['id']\"\n                    [type]=\"'metrics'\"\n                    uid=\"CrAHE0iZz\"\n                    grafanaStyle=\"three\">\n        </cd-grafana>\n      </ng-template>\n    </ng-container>\n  </nav>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport _ from 'lodash';\n\nimport { InventoryDevice } from '~/app/ceph/cluster/inventory/inventory-devices/inventory-device.model';\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableColumnFiltersChange } from '~/app/shared/models/cd-table-column-filters-change';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { OsdDevicesSelectionModalComponent } from '../osd-devices-selection-modal/osd-devices-selection-modal.component';\nimport { DevicesSelectionChangeEvent } from './devices-selection-change-event.interface';\nimport { DevicesSelectionClearEvent } from './devices-selection-clear-event.interface';\n\n@Component({\n  selector: 'cd-osd-devices-selection-groups',\n  templateUrl: './osd-devices-selection-groups.component.html',\n  styleUrls: ['./osd-devices-selection-groups.component.scss']\n})\nexport class OsdDevicesSelectionGroupsComponent implements OnInit, OnChanges {\n  // data, wal, db\n  @Input() type: string;\n\n  // Data, WAL, DB\n  @Input() name: string;\n\n  @Input() hostname: string;\n\n  @Input() availDevices: InventoryDevice[];\n\n  @Input() canSelect: boolean;\n\n  @Output()\n  selected = new EventEmitter<DevicesSelectionChangeEvent>();\n\n  @Output()\n  cleared = new EventEmitter<DevicesSelectionClearEvent>();\n\n  icons = Icons;\n  devices: InventoryDevice[] = [];\n  capacity = 0;\n  appliedFilters = new Array();\n  expansionCanSelect = false;\n  isOsdPage: boolean;\n\n  addButtonTooltip: String;\n  tooltips = {\n    noAvailDevices: $localize`No available devices`,\n    addPrimaryFirst: $localize`Please add primary devices first`,\n    addByFilters: $localize`Add devices by using filters`\n  };\n\n  constructor(\n    private modalService: ModalService,\n    public osdService: OsdService,\n    private router: Router\n  ) {\n    this.isOsdPage = this.router.url.includes('/osd');\n  }\n\n  ngOnInit() {\n    if (!this.isOsdPage) {\n      this.osdService?.osdDevices[this.type]\n        ? (this.devices = this.osdService.osdDevices[this.type])\n        : (this.devices = []);\n      this.capacity = _.sumBy(this.devices, 'sys_api.size');\n      this.osdService?.osdDevices\n        ? (this.expansionCanSelect = this.osdService?.osdDevices['disableSelect'])\n        : (this.expansionCanSelect = false);\n    }\n    this.updateAddButtonTooltip();\n  }\n\n  ngOnChanges() {\n    this.updateAddButtonTooltip();\n  }\n\n  showSelectionModal() {\n    const filterColumns = [\n      'hostname',\n      'human_readable_type',\n      'sys_api.vendor',\n      'sys_api.model',\n      'sys_api.size'\n    ];\n    const diskType = this.name === 'Primary' ? 'hdd' : 'ssd';\n    const initialState = {\n      hostname: this.hostname,\n      deviceType: this.name,\n      diskType: diskType,\n      devices: this.availDevices,\n      filterColumns: filterColumns\n    };\n    const modalRef = this.modalService.show(OsdDevicesSelectionModalComponent, initialState, {\n      size: 'xl'\n    });\n    modalRef.componentInstance.submitAction.subscribe((result: CdTableColumnFiltersChange) => {\n      this.devices = result.data;\n      this.capacity = _.sumBy(this.devices, 'sys_api.size');\n      this.appliedFilters = result.filters;\n      const event = _.assign({ type: this.type }, result);\n      if (!this.isOsdPage) {\n        this.osdService.osdDevices[this.type] = this.devices;\n        this.osdService.osdDevices['disableSelect'] =\n          this.canSelect || this.devices.length === this.availDevices.length;\n        this.osdService.osdDevices[this.type]['capacity'] = this.capacity;\n      }\n      this.selected.emit(event);\n    });\n  }\n\n  private updateAddButtonTooltip() {\n    if (this.type === 'data' && this.availDevices.length === 0) {\n      this.addButtonTooltip = this.tooltips.noAvailDevices;\n    } else {\n      if (!this.canSelect) {\n        // No primary devices added yet.\n        this.addButtonTooltip = this.tooltips.addPrimaryFirst;\n      } else if (this.availDevices.length === 0) {\n        this.addButtonTooltip = this.tooltips.noAvailDevices;\n      } else {\n        this.addButtonTooltip = this.tooltips.addByFilters;\n      }\n    }\n  }\n\n  clearDevices() {\n    if (!this.isOsdPage) {\n      this.expansionCanSelect = false;\n      this.osdService.osdDevices['disableSelect'] = false;\n      this.osdService.osdDevices = [];\n    }\n    const event = {\n      type: this.type,\n      clearedDevices: [...this.devices]\n    };\n    this.devices = [];\n    this.cleared.emit(event);\n  }\n}\n","<!-- button -->\n<div class=\"form-group row\">\n  <label class=\"cd-col-form-label\"\n         for=\"createDeleteButton\">\n    <ng-container i18n>{{ name }} devices</ng-container>\n    <cd-helper>\n      <span i18n\n            *ngIf=\"type === 'data'\">The primary storage devices. These devices contain all OSD data.</span>\n      <span i18n\n            *ngIf=\"type === 'wal'\">Write-Ahead-Log devices. These devices are used for BlueStore’s internal journal. It is only useful to use a WAL device if the device is faster than the primary device (e.g. NVME devices or SSDs). If there is only a small amount of fast storage available (e.g., less than a gigabyte), we recommend using it as a WAL device.</span>\n      <span i18n\n            *ngIf=\"type === 'db'\">DB devices can be used for storing BlueStore’s internal metadata.  It is only helpful to provision a DB device if it is faster than the primary device (e.g. NVME devices or SSD).</span>\n    </cd-helper>\n  </label>\n  <div class=\"cd-col-form-input\">\n    <ng-container *ngIf=\"devices.length === 0; else blockClearDevices\">\n      <button type=\"button\"\n              class=\"btn btn-light\"\n              (click)=\"showSelectionModal()\"\n              data-toggle=\"tooltip\"\n              [title]=\"addButtonTooltip\"\n              [disabled]=\"availDevices.length === 0 || !canSelect || expansionCanSelect\">\n        <i [ngClass]=\"[icons.add]\"></i>\n        <ng-container i18n>Add</ng-container>\n      </button>\n    </ng-container>\n    <ng-template #blockClearDevices>\n      <div class=\"pb-2 my-2 border-bottom\">\n        <span *ngFor=\"let filter of appliedFilters\">\n          <span class=\"badge badge-dark me-2\">{{ filter.name }}: {{ filter.value.formatted }}</span>\n        </span>\n        <a class=\"tc_clearSelections\"\n           href=\"\"\n           (click)=\"clearDevices(); false\">\n          <i [ngClass]=\"[icons.clearFilters]\"></i>\n          <ng-container i18n>Clear</ng-container>\n        </a>\n      </div>\n      <div>\n        <cd-inventory-devices [devices]=\"devices\"\n                              [hiddenColumns]=\"['available', 'osd_ids']\"\n                              [filterColumns]=\"[]\">\n        </cd-inventory-devices>\n      </div>\n      <div *ngIf=\"type === 'data'\"\n           class=\"float-end\">\n        <span i18n>Raw capacity: {{ capacity | dimlessBinary }}</span>\n      </div>\n    </ng-template>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Output,\n  ViewChild\n} from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TableColumnProp } from '@swimlane/ngx-datatable';\nimport _ from 'lodash';\n\nimport { InventoryDevice } from '~/app/ceph/cluster/inventory/inventory-devices/inventory-device.model';\nimport { InventoryDevicesComponent } from '~/app/ceph/cluster/inventory/inventory-devices/inventory-devices.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdTableColumnFiltersChange } from '~/app/shared/models/cd-table-column-filters-change';\nimport { WizardStepsService } from '~/app/shared/services/wizard-steps.service';\n\n@Component({\n  selector: 'cd-osd-devices-selection-modal',\n  templateUrl: './osd-devices-selection-modal.component.html',\n  styleUrls: ['./osd-devices-selection-modal.component.scss']\n})\nexport class OsdDevicesSelectionModalComponent implements AfterViewInit {\n  @ViewChild('inventoryDevices')\n  inventoryDevices: InventoryDevicesComponent;\n\n  @Output()\n  submitAction = new EventEmitter<CdTableColumnFiltersChange>();\n\n  icons = Icons;\n  filterColumns: TableColumnProp[] = [];\n\n  hostname: string;\n  deviceType: string;\n  diskType: string;\n  formGroup: CdFormGroup;\n  action: string;\n\n  devices: InventoryDevice[] = [];\n  filteredDevices: InventoryDevice[] = [];\n  capacity = 0;\n  event: CdTableColumnFiltersChange;\n  canSubmit = false;\n  requiredFilters: string[] = [];\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    private cdRef: ChangeDetectorRef,\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    public wizardStepService: WizardStepsService\n  ) {\n    this.action = actionLabels.ADD;\n    this.createForm();\n  }\n\n  ngAfterViewInit() {\n    // At least one filter other than hostname is required\n    // Extract the name from table columns for i18n strings\n    const cols = _.filter(this.inventoryDevices.columns, (col) => {\n      return this.filterColumns.includes(col.prop) && col.prop !== 'hostname';\n    });\n    // Fixes 'ExpressionChangedAfterItHasBeenCheckedError'\n    setTimeout(() => {\n      this.requiredFilters = _.map(cols, 'name');\n    }, 0);\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({});\n  }\n\n  onFilterChange(event: CdTableColumnFiltersChange) {\n    this.capacity = 0;\n    this.canSubmit = false;\n    if (_.isEmpty(event.filters)) {\n      // filters are cleared\n      this.filteredDevices = [];\n      this.event = undefined;\n    } else {\n      // at least one filter is required (except hostname)\n      const filters = event.filters.filter((filter) => {\n        return filter.prop !== 'hostname';\n      });\n      this.canSubmit = !_.isEmpty(filters);\n      this.filteredDevices = event.data;\n      this.capacity = _.sumBy(this.filteredDevices, 'sys_api.size');\n      this.event = event;\n    }\n    this.cdRef.detectChanges();\n  }\n\n  onSubmit() {\n    this.submitAction.emit(this.event);\n    this.activeModal.close();\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\"\n                i18n>{{ deviceType }} devices</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form #frm=\"ngForm\"\n          [formGroup]=\"formGroup\"\n          novalidate>\n      <div class=\"modal-body\">\n        <cd-alert-panel *ngIf=\"!canSubmit\"\n                        type=\"warning\"\n                        size=\"slim\"\n                        [showTitle]=\"false\">\n          <ng-container i18n>At least one of these filters must be applied in order to proceed:</ng-container>\n          <span *ngFor=\"let filter of requiredFilters\"\n                class=\"badge badge-dark ms-2\">\n            {{ filter }}\n          </span>\n        </cd-alert-panel>\n        <cd-inventory-devices #inventoryDevices\n                              [devices]=\"devices\"\n                              [filterColumns]=\"filterColumns\"\n                              [hostname]=\"hostname\"\n                              [diskType]=\"diskType\"\n                              [hiddenColumns]=\"['available', 'osd_ids']\"\n                              (filterChange)=\"onFilterChange($event)\">\n        </cd-inventory-devices>\n        <div *ngIf=\"canSubmit\">\n          <p class=\"text-center\">\n            <span i18n>Number of devices: {{ filteredDevices.length }}. Raw capacity:\n              {{ capacity | dimlessBinary }}.</span>\n          </p>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"formGroup\"\n                              [disabled]=\"!canSubmit || filteredDevices.length === 0\"\n                              [submitText]=\"action | titlecase\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { Flag } from '~/app/shared/models/flag';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-osd-flags-indiv-modal',\n  templateUrl: './osd-flags-indiv-modal.component.html',\n  styleUrls: ['./osd-flags-indiv-modal.component.scss']\n})\nexport class OsdFlagsIndivModalComponent implements OnInit {\n  permissions: Permissions;\n  selected: object[];\n  initialSelection: Flag[] = [];\n  osdFlagsForm = new FormGroup({});\n  flags: Flag[] = [\n    {\n      code: 'noup',\n      name: $localize`No Up`,\n      description: $localize`OSDs are not allowed to start`,\n      value: false,\n      clusterWide: false,\n      indeterminate: false\n    },\n    {\n      code: 'nodown',\n      name: $localize`No Down`,\n      description: $localize`OSD failure reports are being ignored, such that the monitors will not mark OSDs down`,\n      value: false,\n      clusterWide: false,\n      indeterminate: false\n    },\n    {\n      code: 'noin',\n      name: $localize`No In`,\n      description: $localize`OSDs that were previously marked out will not be marked back in when they start`,\n      value: false,\n      clusterWide: false,\n      indeterminate: false\n    },\n    {\n      code: 'noout',\n      name: $localize`No Out`,\n      description: $localize`OSDs will not automatically be marked out after the configured interval`,\n      value: false,\n      clusterWide: false,\n      indeterminate: false\n    }\n  ];\n  clusterWideTooltip: string = $localize`The flag has been enabled for the entire cluster.`;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private authStorageService: AuthStorageService,\n    private osdService: OsdService,\n    private notificationService: NotificationService\n  ) {\n    this.permissions = this.authStorageService.getPermissions();\n  }\n\n  ngOnInit() {\n    const osdCount = this.selected.length;\n    this.osdService.getFlags().subscribe((clusterWideFlags: string[]) => {\n      const activatedIndivFlags = this.getActivatedIndivFlags();\n      this.flags.forEach((flag) => {\n        const flagCount = activatedIndivFlags[flag.code];\n        if (clusterWideFlags.includes(flag.code)) {\n          flag.clusterWide = true;\n        }\n\n        if (flagCount === osdCount) {\n          flag.value = true;\n        } else if (flagCount > 0) {\n          flag.indeterminate = true;\n        }\n      });\n      this.initialSelection = _.cloneDeep(this.flags);\n    });\n  }\n\n  getActivatedIndivFlags(): { [flag: string]: number } {\n    const flagsCount = {};\n    this.flags.forEach((flag) => {\n      flagsCount[flag.code] = 0;\n    });\n\n    [].concat(...this.selected.map((osd) => osd['state'])).map((activatedFlag) => {\n      if (Object.keys(flagsCount).includes(activatedFlag)) {\n        flagsCount[activatedFlag] = flagsCount[activatedFlag] + 1;\n      }\n    });\n    return flagsCount;\n  }\n\n  changeValue(flag: Flag) {\n    flag.value = !flag.value;\n    flag.indeterminate = false;\n  }\n\n  resetSelection() {\n    this.flags = _.cloneDeep(this.initialSelection);\n  }\n\n  submitAction() {\n    const activeFlags = {};\n    this.flags.forEach((flag) => {\n      if (flag.indeterminate) {\n        activeFlags[flag.code] = null;\n      } else {\n        activeFlags[flag.code] = flag.value;\n      }\n    });\n    const selectedIds = this.selected.map((selection) => selection['osd']);\n    this.osdService.updateIndividualFlags(activeFlags, selectedIds).subscribe(\n      () => {\n        this.notificationService.show(NotificationType.success, $localize`Updated OSD Flags`);\n        this.activeModal.close();\n      },\n      () => {\n        this.activeModal.close();\n      }\n    );\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\"\n                i18n>Individual OSD Flags</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"osdFlagsForm\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"osdFlagsForm\"\n          novalidate>\n      <div class=\"modal-body osd-modal\">\n        <div class=\"custom-control custom-checkbox\"\n             *ngFor=\"let flag of flags; let last = last\">\n          <input class=\"custom-control-input\"\n                 type=\"checkbox\"\n                 [checked]=\"flag.value\"\n                 [indeterminate]=\"flag.indeterminate\"\n                 (change)=\"changeValue(flag)\"\n                 [name]=\"flag.code\"\n                 [id]=\"flag.code\">\n          <label class=\"custom-control-label\"\n                 [for]=\"flag.code\"\n                 ng-class=\"['tc_' + key]\">\n            <strong>{{ flag.name }}</strong>\n            <span class=\"badge badge-hdd ms-2\"\n                  [ngbTooltip]=\"clusterWideTooltip\"\n                  *ngIf=\"flag.clusterWide\"\n                  i18n>Cluster-wide</span>\n            <br>\n            <span class=\"form-text text-muted\">{{ flag.description }}</span>\n          </label>\n          <hr class=\"m-1\"\n              *ngIf=\"!last\">\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <button type=\"button\"\n                class=\"btn btn-light\"\n                (click)=\"resetSelection()\"\n                i18n>Restore previous selection</button>\n        <cd-form-button-panel (submitActionEvent)=\"submitAction()\"\n                              [form]=\"osdFlagsForm\"\n                              [showSubmit]=\"permissions.osd.update\"\n                              [submitText]=\"actionLabels.UPDATE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-osd-flags-modal',\n  templateUrl: './osd-flags-modal.component.html',\n  styleUrls: ['./osd-flags-modal.component.scss']\n})\nexport class OsdFlagsModalComponent implements OnInit {\n  permissions: Permissions;\n\n  osdFlagsForm = new FormGroup({});\n\n  allFlags = {\n    noin: {\n      code: 'noin',\n      name: $localize`No In`,\n      value: false,\n      description: $localize`OSDs that were previously marked out will not be marked back in when they start`\n    },\n    noout: {\n      code: 'noout',\n      name: $localize`No Out`,\n      value: false,\n      description: $localize`OSDs will not automatically be marked out after the configured interval`\n    },\n    noup: {\n      code: 'noup',\n      name: $localize`No Up`,\n      value: false,\n      description: $localize`OSDs are not allowed to start`\n    },\n    nodown: {\n      code: 'nodown',\n      name: $localize`No Down`,\n      value: false,\n      description: $localize`OSD failure reports are being ignored, such that the monitors will not mark OSDs down`\n    },\n    pause: {\n      code: 'pause',\n      name: $localize`Pause`,\n      value: false,\n      description: $localize`Pauses reads and writes`\n    },\n    noscrub: {\n      code: 'noscrub',\n      name: $localize`No Scrub`,\n      value: false,\n      description: $localize`Scrubbing is disabled`\n    },\n    'nodeep-scrub': {\n      code: 'nodeep-scrub',\n      name: $localize`No Deep Scrub`,\n      value: false,\n      description: $localize`Deep Scrubbing is disabled`\n    },\n    nobackfill: {\n      code: 'nobackfill',\n      name: $localize`No Backfill`,\n      value: false,\n      description: $localize`Backfilling of PGs is suspended`\n    },\n    norebalance: {\n      code: 'norebalance',\n      name: $localize`No Rebalance`,\n      value: false,\n      description: $localize`OSD will choose not to backfill unless PG is also degraded`\n    },\n    norecover: {\n      code: 'norecover',\n      name: $localize`No Recover`,\n      value: false,\n      description: $localize`Recovery of PGs is suspended`\n    },\n    sortbitwise: {\n      code: 'sortbitwise',\n      name: $localize`Bitwise Sort`,\n      value: false,\n      description: $localize`Use bitwise sort`,\n      disabled: true\n    },\n    purged_snapdirs: {\n      code: 'purged_snapdirs',\n      name: $localize`Purged Snapdirs`,\n      value: false,\n      description: $localize`OSDs have converted snapsets`,\n      disabled: true\n    },\n    recovery_deletes: {\n      code: 'recovery_deletes',\n      name: $localize`Recovery Deletes`,\n      value: false,\n      description: $localize`Deletes performed during recovery instead of peering`,\n      disabled: true\n    },\n    pglog_hardlimit: {\n      code: 'pglog_hardlimit',\n      name: $localize`PG Log Hard Limit`,\n      value: false,\n      description: $localize`Puts a hard limit on pg log length`,\n      disabled: true\n    }\n  };\n  flags: any[];\n  unknownFlags: string[] = [];\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private authStorageService: AuthStorageService,\n    private osdService: OsdService,\n    private notificationService: NotificationService\n  ) {\n    this.permissions = this.authStorageService.getPermissions();\n  }\n\n  ngOnInit() {\n    this.osdService.getFlags().subscribe((res: string[]) => {\n      res.forEach((value) => {\n        if (this.allFlags[value]) {\n          this.allFlags[value].value = true;\n        } else {\n          this.unknownFlags.push(value);\n        }\n      });\n      this.flags = _.toArray(this.allFlags);\n    });\n  }\n\n  submitAction() {\n    const newFlags = this.flags\n      .filter((flag) => flag.value)\n      .map((flag) => flag.code)\n      .concat(this.unknownFlags);\n\n    this.osdService.updateFlags(newFlags).subscribe(\n      () => {\n        this.notificationService.show(NotificationType.success, $localize`Updated OSD Flags`);\n        this.activeModal.close();\n      },\n      () => {\n        this.activeModal.close();\n      }\n    );\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\"\n                i18n>Cluster-wide OSD Flags</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"osdFlagsForm\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"osdFlagsForm\"\n          novalidate\n          cdFormScope=\"osd\">\n      <div class=\"modal-body osd-modal\">\n        <div class=\"custom-control custom-checkbox\"\n             *ngFor=\"let flag of flags; let last = last\">\n          <input class=\"custom-control-input\"\n                 type=\"checkbox\"\n                 [checked]=\"flag.value\"\n                 (change)=\"flag.value = !flag.value\"\n                 [name]=\"flag.code\"\n                 [id]=\"flag.code\"\n                 [disabled]=\"flag.disabled\">\n          <label class=\"custom-control-label\"\n                 [for]=\"flag.code\"\n                 ng-class=\"['tc_' + key]\">\n            <strong>{{ flag.name }}</strong>\n            <br>\n            <span class=\"form-text text-muted\">{{ flag.description }}</span>\n          </label>\n          <hr class=\"m-1\"\n              *ngIf=\"!last\">\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submitAction()\"\n                              [form]=\"osdFlagsForm\"\n                              [showSubmit]=\"permissions.osd.update\"\n                              [submitText]=\"actionLabels.UPDATE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import _ from 'lodash';\n\nimport { CdTableColumnFiltersChange } from '~/app/shared/models/cd-table-column-filters-change';\nimport { FormatterService } from '~/app/shared/services/formatter.service';\n\nexport class DriveGroup {\n  spec: Object;\n\n  // Map from filter column prop to device selection attribute name\n  private deviceSelectionAttrs: {\n    [key: string]: {\n      name: string;\n      formatter?: Function;\n    };\n  };\n\n  private formatterService: FormatterService;\n\n  constructor() {\n    this.reset();\n    this.formatterService = new FormatterService();\n    this.deviceSelectionAttrs = {\n      'sys_api.vendor': {\n        name: 'vendor'\n      },\n      'sys_api.model': {\n        name: 'model'\n      },\n      device_id: {\n        name: 'device_id'\n      },\n      human_readable_type: {\n        name: 'rotational',\n        formatter: (value: string) => {\n          return value.toLowerCase() === 'hdd';\n        }\n      },\n      'sys_api.size': {\n        name: 'size',\n        formatter: (value: string) => {\n          return this.formatterService\n            .format_number(value, 1024, ['B', 'KB', 'MB', 'GB', 'TB', 'PB'])\n            .replace(' ', '');\n        }\n      }\n    };\n  }\n\n  reset() {\n    this.spec = {\n      service_type: 'osd',\n      service_id: `dashboard-${_.now()}`\n    };\n  }\n\n  setName(name: string) {\n    this.spec['service_id'] = name;\n  }\n\n  setHostPattern(pattern: string) {\n    this.spec['host_pattern'] = pattern;\n  }\n\n  setDeviceSelection(type: string, appliedFilters: CdTableColumnFiltersChange['filters']) {\n    const key = `${type}_devices`;\n    this.spec[key] = {};\n    appliedFilters.forEach((filter) => {\n      const attr = this.deviceSelectionAttrs[filter.prop];\n      if (attr) {\n        const name = attr.name;\n        this.spec[key][name] = attr.formatter ? attr.formatter(filter.value.raw) : filter.value.raw;\n      }\n    });\n  }\n\n  clearDeviceSelection(type: string) {\n    const key = `${type}_devices`;\n    delete this.spec[key];\n  }\n\n  setSlots(type: string, slots: number) {\n    const key = `${type}_slots`;\n    if (slots === 0) {\n      delete this.spec[key];\n    } else {\n      this.spec[key] = slots;\n    }\n  }\n\n  setFeature(feature: string, enabled: boolean) {\n    if (enabled) {\n      this.spec[feature] = true;\n    } else {\n      delete this.spec[feature];\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport _ from 'lodash';\n\nimport { InventoryDevice } from '~/app/ceph/cluster/inventory/inventory-devices/inventory-device.model';\nimport { HostService } from '~/app/shared/api/host.service';\nimport { OrchestratorService } from '~/app/shared/api/orchestrator.service';\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { FormButtonPanelComponent } from '~/app/shared/components/form-button-panel/form-button-panel.component';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport {\n  DeploymentOptions,\n  OsdDeploymentOptions\n} from '~/app/shared/models/osd-deployment-options';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { OsdCreationPreviewModalComponent } from '../osd-creation-preview-modal/osd-creation-preview-modal.component';\nimport { DevicesSelectionChangeEvent } from '../osd-devices-selection-groups/devices-selection-change-event.interface';\nimport { DevicesSelectionClearEvent } from '../osd-devices-selection-groups/devices-selection-clear-event.interface';\nimport { OsdDevicesSelectionGroupsComponent } from '../osd-devices-selection-groups/osd-devices-selection-groups.component';\nimport { DriveGroup } from './drive-group.model';\nimport { OsdFeature } from './osd-feature.interface';\n\n@Component({\n  selector: 'cd-osd-form',\n  templateUrl: './osd-form.component.html',\n  styleUrls: ['./osd-form.component.scss']\n})\nexport class OsdFormComponent extends CdForm implements OnInit {\n  @ViewChild('dataDeviceSelectionGroups')\n  dataDeviceSelectionGroups: OsdDevicesSelectionGroupsComponent;\n\n  @ViewChild('walDeviceSelectionGroups')\n  walDeviceSelectionGroups: OsdDevicesSelectionGroupsComponent;\n\n  @ViewChild('dbDeviceSelectionGroups')\n  dbDeviceSelectionGroups: OsdDevicesSelectionGroupsComponent;\n\n  @ViewChild('previewButtonPanel')\n  previewButtonPanel: FormButtonPanelComponent;\n\n  @Input()\n  hideTitle = false;\n\n  @Input()\n  hideSubmitBtn = false;\n\n  @Output() emitDriveGroup: EventEmitter<DriveGroup> = new EventEmitter();\n\n  @Output() emitDeploymentOption: EventEmitter<object> = new EventEmitter();\n\n  @Output() emitMode: EventEmitter<boolean> = new EventEmitter();\n\n  icons = Icons;\n\n  form: CdFormGroup;\n  columns: Array<CdTableColumn> = [];\n\n  allDevices: InventoryDevice[] = [];\n\n  availDevices: InventoryDevice[] = [];\n  dataDeviceFilters: any[] = [];\n  dbDeviceFilters: any[] = [];\n  walDeviceFilters: any[] = [];\n  hostname = '';\n  driveGroup = new DriveGroup();\n\n  action: string;\n  resource: string;\n\n  features: { [key: string]: OsdFeature };\n  featureList: OsdFeature[] = [];\n\n  hasOrchestrator = true;\n\n  simpleDeployment = true;\n\n  deploymentOptions: DeploymentOptions;\n  optionNames = Object.values(OsdDeploymentOptions);\n\n  constructor(\n    public actionLabels: ActionLabelsI18n,\n    private authStorageService: AuthStorageService,\n    private orchService: OrchestratorService,\n    private hostService: HostService,\n    private router: Router,\n    private modalService: ModalService,\n    private osdService: OsdService,\n    private taskWrapper: TaskWrapperService\n  ) {\n    super();\n    this.resource = $localize`OSDs`;\n    this.action = this.actionLabels.CREATE;\n    this.features = {\n      encrypted: {\n        key: 'encrypted',\n        desc: $localize`Encryption`\n      }\n    };\n    this.featureList = _.map(this.features, (o, key) => Object.assign(o, { key: key }));\n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.orchService.status().subscribe((status) => {\n      this.hasOrchestrator = status.available;\n      if (status.available) {\n        this.getDataDevices();\n      } else {\n        this.loadingNone();\n      }\n    });\n\n    this.osdService.getDeploymentOptions().subscribe((options) => {\n      this.deploymentOptions = options;\n      this.form.get('deploymentOption').setValue(this.deploymentOptions?.recommended_option);\n\n      if (this.deploymentOptions?.recommended_option) {\n        this.enableFeatures();\n      }\n    });\n    this.form.get('walSlots').valueChanges.subscribe((value) => this.setSlots('wal', value));\n    this.form.get('dbSlots').valueChanges.subscribe((value) => this.setSlots('db', value));\n    _.each(this.features, (feature) => {\n      this.form\n        .get('features')\n        .get(feature.key)\n        .valueChanges.subscribe((value) => this.featureFormUpdate(feature.key, value));\n    });\n  }\n\n  createForm() {\n    this.form = new CdFormGroup({\n      walSlots: new FormControl(0),\n      dbSlots: new FormControl(0),\n      features: new CdFormGroup(\n        this.featureList.reduce((acc: object, e) => {\n          // disable initially because no data devices are selected\n          acc[e.key] = new FormControl({ value: false, disabled: true });\n          return acc;\n        }, {})\n      ),\n      deploymentOption: new FormControl(0)\n    });\n  }\n\n  getDataDevices() {\n    this.hostService.inventoryDeviceList().subscribe(\n      (devices: InventoryDevice[]) => {\n        this.allDevices = _.filter(devices, 'available');\n        this.availDevices = [...this.allDevices];\n        this.loadingReady();\n      },\n      () => {\n        this.allDevices = [];\n        this.availDevices = [];\n        this.loadingError();\n      }\n    );\n  }\n\n  setSlots(type: string, slots: number) {\n    if (typeof slots !== 'number') {\n      return;\n    }\n    if (slots >= 0) {\n      this.driveGroup.setSlots(type, slots);\n    }\n  }\n\n  featureFormUpdate(key: string, checked: boolean) {\n    this.driveGroup.setFeature(key, checked);\n  }\n\n  enableFeatures() {\n    this.featureList.forEach((feature) => {\n      this.form.get(feature.key).enable({ emitEvent: false });\n    });\n  }\n\n  disableFeatures() {\n    this.featureList.forEach((feature) => {\n      const control = this.form.get(feature.key);\n      control.disable({ emitEvent: false });\n      control.setValue(false, { emitEvent: false });\n    });\n  }\n\n  onDevicesSelected(event: DevicesSelectionChangeEvent) {\n    this.availDevices = event.dataOut;\n\n    if (event.type === 'data') {\n      // If user selects data devices for a single host, make only remaining devices on\n      // that host as available.\n      const hostnameFilter = _.find(event.filters, { prop: 'hostname' });\n      if (hostnameFilter) {\n        this.hostname = hostnameFilter.value.raw;\n        this.availDevices = event.dataOut.filter((device: InventoryDevice) => {\n          return device.hostname === this.hostname;\n        });\n        this.driveGroup.setHostPattern(this.hostname);\n      } else {\n        this.driveGroup.setHostPattern('*');\n      }\n      this.enableFeatures();\n    }\n    this.driveGroup.setDeviceSelection(event.type, event.filters);\n\n    this.emitDriveGroup.emit(this.driveGroup);\n  }\n\n  onDevicesCleared(event: DevicesSelectionClearEvent) {\n    if (event.type === 'data') {\n      this.hostname = '';\n      this.availDevices = [...this.allDevices];\n      this.walDeviceSelectionGroups.devices = [];\n      this.dbDeviceSelectionGroups.devices = [];\n      this.disableFeatures();\n      this.driveGroup.reset();\n      this.form.get('walSlots').setValue(0, { emitEvent: false });\n      this.form.get('dbSlots').setValue(0, { emitEvent: false });\n    } else {\n      this.availDevices = [...this.availDevices, ...event.clearedDevices];\n      this.driveGroup.clearDeviceSelection(event.type);\n      const slotControlName = `${event.type}Slots`;\n      this.form.get(slotControlName).setValue(0, { emitEvent: false });\n    }\n  }\n\n  emitDeploymentSelection() {\n    const option = this.form.get('deploymentOption').value;\n    const encrypted = this.form.get('encrypted').value;\n    this.emitDeploymentOption.emit({ option: option, encrypted: encrypted });\n  }\n\n  emitDeploymentMode() {\n    this.simpleDeployment = !this.simpleDeployment;\n    if (!this.simpleDeployment && this.dataDeviceSelectionGroups.devices.length === 0) {\n      this.disableFeatures();\n    } else {\n      this.enableFeatures();\n    }\n    this.emitMode.emit(this.simpleDeployment);\n  }\n\n  submit() {\n    if (this.simpleDeployment) {\n      const option = this.form.get('deploymentOption').value;\n      const encrypted = this.form.get('encrypted').value;\n      const deploymentSpec = { option: option, encrypted: encrypted };\n      const title = this.deploymentOptions.options[deploymentSpec.option].title;\n      const trackingId = `${title} deployment`;\n      this.taskWrapper\n        .wrapTaskAroundCall({\n          task: new FinishedTask('osd/' + URLVerbs.CREATE, {\n            tracking_id: trackingId\n          }),\n          call: this.osdService.create([deploymentSpec], trackingId, 'predefined')\n        })\n        .subscribe({\n          complete: () => {\n            this.router.navigate(['/osd']);\n          }\n        });\n    } else {\n      // use user name and timestamp for drive group name\n      const user = this.authStorageService.getUsername();\n      this.driveGroup.setName(`dashboard-${user}-${_.now()}`);\n      const modalRef = this.modalService.show(OsdCreationPreviewModalComponent, {\n        driveGroups: [this.driveGroup.spec]\n      });\n      modalRef.componentInstance.submitAction.subscribe(() => {\n        this.router.navigate(['/osd']);\n      });\n      this.previewButtonPanel.submitButton.loading = false;\n    }\n  }\n}\n","<cd-orchestrator-doc-panel *ngIf=\"!hasOrchestrator\"></cd-orchestrator-doc-panel>\n\n<div class=\"card\"\n     *cdFormLoading=\"loading\">\n  <div i18n=\"form title|Example: Create Pool@@formTitle\"\n       class=\"card-header\"\n       *ngIf=\"!hideTitle\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n  <div class=\"card-body ms-2\">\n    <form name=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"form\"\n          novalidate>\n      <div class=\"accordion\">\n        <div class=\"accordion-item\">\n          <h2 class=\"accordion-header\">\n            <button class=\"accordion-button\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    aria-label=\"toggle deployment options\"\n                    [ngClass]=\"{collapsed: !simpleDeployment}\"\n                    (click)=\"emitDeploymentMode()\"\n                    i18n>Deployment Options</button>\n          </h2>\n        </div>\n        <div class=\"accordion-collapse collapse\"\n             [ngClass]=\"{show: simpleDeployment}\">\n          <div class=\"accordion-body\">\n            <div class=\"pt-3 pb-3\"\n                 *ngFor=\"let optionName of optionNames\">\n              <div class=\"custom-control form-check custom-control-inline\">\n                <input class=\"form-check-input\"\n                       type=\"radio\"\n                       name=\"deploymentOption\"\n                       [id]=\"optionName\"\n                       [value]=\"optionName\"\n                       formControlName=\"deploymentOption\"\n                       (change)=\"emitDeploymentSelection()\"\n                       [attr.disabled]=\"!deploymentOptions?.options[optionName].available ? true : null\">\n                <label class=\"form-check-label\"\n                       [id]=\"'label_' + optionName\"\n                       [for]=\"optionName\"\n                       i18n>{{ deploymentOptions?.options[optionName].title }}\n                       {{ deploymentOptions.recommended_option === optionName ? \"(Recommended)\" : \"\" }}\n                  <cd-helper>\n                    <span>{{ deploymentOptions?.options[optionName].desc }}</span>\n                  </cd-helper>\n                </label>\n              </div>\n            </div>\n            <!-- @TODO: Visualize the storage used on a chart -->\n            <!-- <div class=\"pie-chart\">\n              <h4 class=\"text-center\">Selected Capacity</h4>\n              <h5 class=\"margin text-center\">10 Hosts | 30 NVMes </h5>\n              <div class=\"char-i-contain\">\n                <cd-health-pie [data]=\"data\"\n                               [config]=\"rawCapacityChartConfig\"\n                               [isBytesData]=\"true\"\n                               (prepareFn)=\"prepareRawUsage($event[0], $event[1])\">\n                </cd-health-pie>\n              </div>\n            </div> -->\n          </div>\n        </div>\n        <div class=\"accordion-item\">\n          <h2 class=\"accordion-header\">\n            <button class=\"accordion-button\"\n                    type=\"button\"\n                    aria-label=\"toggle advanced mode\"\n                    [ngClass]=\"{collapsed: simpleDeployment}\"\n                    (click)=\"emitDeploymentMode()\"\n                    i18n>Advanced Mode</button>\n          </h2>\n        </div>\n        <div class=\"accordion-collapse collapse\"\n             [ngClass]=\"{show: !simpleDeployment}\">\n          <div class=\"accordion-body\">\n            <div class=\"card-body\">\n              <fieldset>\n                <cd-osd-devices-selection-groups #dataDeviceSelectionGroups\n                                                 name=\"Primary\"\n                                                 type=\"data\"\n                                                 [availDevices]=\"availDevices\"\n                                                 [canSelect]=\"availDevices.length !== 0\"\n                                                 (selected)=\"onDevicesSelected($event)\"\n                                                 (cleared)=\"onDevicesCleared($event)\">\n                </cd-osd-devices-selection-groups>\n              </fieldset>\n\n              <!-- Shared devices -->\n              <fieldset>\n                <legend i18n>Shared devices</legend>\n\n                <!-- WAL devices button and table -->\n                <cd-osd-devices-selection-groups #walDeviceSelectionGroups\n                                                 name=\"WAL\"\n                                                 type=\"wal\"\n                                                 [availDevices]=\"availDevices\"\n                                                 [canSelect]=\"dataDeviceSelectionGroups.devices.length !== 0\"\n                                                 (selected)=\"onDevicesSelected($event)\"\n                                                 (cleared)=\"onDevicesCleared($event)\"\n                                                 [hostname]=\"hostname\">\n                </cd-osd-devices-selection-groups>\n\n                <!-- WAL slots -->\n                <div class=\"form-group row\"\n                     *ngIf=\"walDeviceSelectionGroups.devices.length !== 0\">\n                  <label class=\"cd-col-form-label\"\n                         for=\"walSlots\">\n                    <ng-container i18n>WAL slots</ng-container>\n                    <cd-helper>\n                      <span i18n>How many OSDs per WAL device.</span>\n                      <br>\n                      <span i18n>Specify 0 to let Orchestrator backend decide it.</span>\n                    </cd-helper>\n                  </label>\n                  <div class=\"cd-col-form-input\">\n                    <input class=\"form-control\"\n                           id=\"walSlots\"\n                           name=\"walSlots\"\n                           type=\"number\"\n                           min=\"0\"\n                           formControlName=\"walSlots\">\n                    <span class=\"invalid-feedback\"\n                          *ngIf=\"form.showError('walSlots', formDir, 'min')\"\n                          i18n>Value should be greater than or equal to 0</span>\n                  </div>\n                </div>\n\n                <!-- DB devices button and table -->\n                <cd-osd-devices-selection-groups #dbDeviceSelectionGroups\n                                                 name=\"DB\"\n                                                 type=\"db\"\n                                                 [availDevices]=\"availDevices\"\n                                                 [canSelect]=\"dataDeviceSelectionGroups.devices.length !== 0\"\n                                                 (selected)=\"onDevicesSelected($event)\"\n                                                 (cleared)=\"onDevicesCleared($event)\"\n                                                 [hostname]=\"hostname\">\n                </cd-osd-devices-selection-groups>\n\n                <!-- DB slots -->\n                <div class=\"form-group row\"\n                     *ngIf=\"dbDeviceSelectionGroups.devices.length !== 0\">\n                  <label class=\"cd-col-form-label\"\n                         for=\"dbSlots\">\n                    <ng-container i18n>DB slots</ng-container>\n                    <cd-helper>\n                      <span i18n>How many OSDs per DB device.</span>\n                      <br>\n                      <span i18n>Specify 0 to let Orchestrator backend decide it.</span>\n                    </cd-helper>\n                  </label>\n                  <div class=\"cd-col-form-input\">\n                    <input class=\"form-control\"\n                           id=\"dbSlots\"\n                           name=\"dbSlots\"\n                           type=\"number\"\n                           min=\"0\"\n                           formControlName=\"dbSlots\">\n                    <span class=\"invalid-feedback\"\n                          *ngIf=\"form.showError('dbSlots', formDir, 'min')\"\n                          i18n>Value should be greater than or equal to 0</span>\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n        </div>\n\n        <!-- Features -->\n        <div class=\"accordion-item\">\n          <h2 class=\"accordion-header\">\n            <button class=\"accordion-button\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    aria-label=\"features\"\n                    aria-expanded=\"true\"\n                    i18n>Features</button>\n          </h2>\n        </div>\n        <div class=\"accordion-collapse collapse show\">\n          <div class=\"accordion-body\">\n            <div class=\"pt-3 pb-3\"\n                 formGroupName=\"features\">\n              <div class=\"custom-control custom-checkbox\"\n                   *ngFor=\"let feature of featureList\">\n                <input type=\"checkbox\"\n                       class=\"custom-control-input\"\n                       id=\"{{ feature.key }}\"\n                       name=\"{{ feature.key }}\"\n                       formControlName=\"{{ feature.key }}\"\n                       (change)=\"emitDeploymentSelection()\">\n                <label class=\"custom-control-label\"\n                       for=\"{{ feature.key }}\">{{ feature.desc }}</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div class=\"card-footer\"\n       *ngIf=\"!hideSubmitBtn\">\n    <cd-form-button-panel #previewButtonPanel\n                          (submitActionEvent)=\"submit()\"\n                          [form]=\"form\"\n                          [disabled]=\"dataDeviceSelectionGroups.devices.length === 0 && !simpleDeployment\"\n                          [submitText]=\"simpleDeployment ? 'Create OSDs' : actionLabels.PREVIEW\"\n                          wrappingClass=\"text-right\"></cd-form-button-panel>\n  </div>\n</div>\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { forkJoin as observableForkJoin, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { OrchestratorService } from '~/app/shared/api/orchestrator.service';\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { ConfirmationModalComponent } from '~/app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { FormModalComponent } from '~/app/shared/components/form-modal/form-modal.component';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { OrchestratorFeature } from '~/app/shared/models/orchestrator.enum';\nimport { OrchestratorStatus } from '~/app/shared/models/orchestrator.interface';\nimport { OsdSettings } from '~/app/shared/models/osd-settings';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\nimport { OsdFlagsIndivModalComponent } from '../osd-flags-indiv-modal/osd-flags-indiv-modal.component';\nimport { OsdFlagsModalComponent } from '../osd-flags-modal/osd-flags-modal.component';\nimport { OsdPgScrubModalComponent } from '../osd-pg-scrub-modal/osd-pg-scrub-modal.component';\nimport { OsdRecvSpeedModalComponent } from '../osd-recv-speed-modal/osd-recv-speed-modal.component';\nimport { OsdReweightModalComponent } from '../osd-reweight-modal/osd-reweight-modal.component';\nimport { OsdScrubModalComponent } from '../osd-scrub-modal/osd-scrub-modal.component';\n\nconst BASE_URL = 'osd';\n\n@Component({\n  selector: 'cd-osd-list',\n  templateUrl: './osd-list.component.html',\n  styleUrls: ['./osd-list.component.scss'],\n  providers: [{ provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }]\n})\nexport class OsdListComponent extends ListWithDetails implements OnInit {\n  @ViewChild('osdUsageTpl', { static: true })\n  osdUsageTpl: TemplateRef<any>;\n  @ViewChild('markOsdConfirmationTpl', { static: true })\n  markOsdConfirmationTpl: TemplateRef<any>;\n  @ViewChild('criticalConfirmationTpl', { static: true })\n  criticalConfirmationTpl: TemplateRef<any>;\n  @ViewChild('reweightBodyTpl')\n  reweightBodyTpl: TemplateRef<any>;\n  @ViewChild('safeToDestroyBodyTpl')\n  safeToDestroyBodyTpl: TemplateRef<any>;\n  @ViewChild('deleteOsdExtraTpl')\n  deleteOsdExtraTpl: TemplateRef<any>;\n  @ViewChild('flagsTpl', { static: true })\n  flagsTpl: TemplateRef<any>;\n\n  permissions: Permissions;\n  tableActions: CdTableAction[];\n  bsModalRef: NgbModalRef;\n  columns: CdTableColumn[];\n  clusterWideActions: CdTableAction[];\n  icons = Icons;\n  osdSettings = new OsdSettings();\n\n  selection = new CdTableSelection();\n  osds: any[] = [];\n  disabledFlags: string[] = [\n    'sortbitwise',\n    'purged_snapdirs',\n    'recovery_deletes',\n    'pglog_hardlimit'\n  ];\n  indivFlagNames: string[] = ['noup', 'nodown', 'noin', 'noout'];\n\n  orchStatus: OrchestratorStatus;\n  actionOrchFeatures = {\n    create: [OrchestratorFeature.OSD_CREATE],\n    delete: [OrchestratorFeature.OSD_DELETE]\n  };\n\n  protected static collectStates(osd: any) {\n    const states = [osd['in'] ? 'in' : 'out'];\n    if (osd['up']) {\n      states.push('up');\n    } else if (osd.state.includes('destroyed')) {\n      states.push('destroyed');\n    } else {\n      states.push('down');\n    }\n    return states;\n  }\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private osdService: OsdService,\n    private dimlessBinaryPipe: DimlessBinaryPipe,\n    private modalService: ModalService,\n    private urlBuilder: URLBuilderService,\n    private router: Router,\n    private taskWrapper: TaskWrapperService,\n    public actionLabels: ActionLabelsI18n,\n    public notificationService: NotificationService,\n    private orchService: OrchestratorService\n  ) {\n    super();\n    this.permissions = this.authStorageService.getPermissions();\n    this.tableActions = [\n      {\n        name: this.actionLabels.CREATE,\n        permission: 'create',\n        icon: Icons.add,\n        click: () => this.router.navigate([this.urlBuilder.getCreate()]),\n        disable: (selection: CdTableSelection) => this.getDisable('create', selection),\n        canBePrimary: (selection: CdTableSelection) => !selection.hasSelection\n      },\n      {\n        name: this.actionLabels.EDIT,\n        permission: 'update',\n        icon: Icons.edit,\n        click: () => this.editAction()\n      },\n      {\n        name: this.actionLabels.FLAGS,\n        permission: 'update',\n        icon: Icons.flag,\n        click: () => this.configureFlagsIndivAction(),\n        disable: () => !this.hasOsdSelected\n      },\n      {\n        name: this.actionLabels.SCRUB,\n        permission: 'update',\n        icon: Icons.analyse,\n        click: () => this.scrubAction(false),\n        disable: () => !this.hasOsdSelected,\n        canBePrimary: (selection: CdTableSelection) => selection.hasSelection\n      },\n      {\n        name: this.actionLabels.DEEP_SCRUB,\n        permission: 'update',\n        icon: Icons.deepCheck,\n        click: () => this.scrubAction(true),\n        disable: () => !this.hasOsdSelected\n      },\n      {\n        name: this.actionLabels.REWEIGHT,\n        permission: 'update',\n        click: () => this.reweight(),\n        disable: () => !this.hasOsdSelected || !this.selection.hasSingleSelection,\n        icon: Icons.reweight\n      },\n      {\n        name: this.actionLabels.MARK_OUT,\n        permission: 'update',\n        click: () => this.showConfirmationModal($localize`out`, this.osdService.markOut),\n        disable: () => this.isNotSelectedOrInState('out'),\n        icon: Icons.left\n      },\n      {\n        name: this.actionLabels.MARK_IN,\n        permission: 'update',\n        click: () => this.showConfirmationModal($localize`in`, this.osdService.markIn),\n        disable: () => this.isNotSelectedOrInState('in'),\n        icon: Icons.right\n      },\n      {\n        name: this.actionLabels.MARK_DOWN,\n        permission: 'update',\n        click: () => this.showConfirmationModal($localize`down`, this.osdService.markDown),\n        disable: () => this.isNotSelectedOrInState('down'),\n        icon: Icons.down\n      },\n      {\n        name: this.actionLabels.MARK_LOST,\n        permission: 'delete',\n        click: () =>\n          this.showCriticalConfirmationModal(\n            $localize`Mark`,\n            $localize`OSD lost`,\n            $localize`marked lost`,\n            (ids: number[]) => {\n              return this.osdService.safeToDestroy(JSON.stringify(ids));\n            },\n            'is_safe_to_destroy',\n            this.osdService.markLost\n          ),\n        disable: () => this.isNotSelectedOrInState('up'),\n        icon: Icons.flatten\n      },\n      {\n        name: this.actionLabels.PURGE,\n        permission: 'delete',\n        click: () =>\n          this.showCriticalConfirmationModal(\n            $localize`Purge`,\n            $localize`OSD`,\n            $localize`purged`,\n            (ids: number[]) => {\n              return this.osdService.safeToDestroy(JSON.stringify(ids));\n            },\n            'is_safe_to_destroy',\n            (id: number) => {\n              this.selection = new CdTableSelection();\n              return this.osdService.purge(id);\n            }\n          ),\n        disable: () => this.isNotSelectedOrInState('up'),\n        icon: Icons.erase\n      },\n      {\n        name: this.actionLabels.DESTROY,\n        permission: 'delete',\n        click: () =>\n          this.showCriticalConfirmationModal(\n            $localize`destroy`,\n            $localize`OSD`,\n            $localize`destroyed`,\n            (ids: number[]) => {\n              return this.osdService.safeToDestroy(JSON.stringify(ids));\n            },\n            'is_safe_to_destroy',\n            (id: number) => {\n              this.selection = new CdTableSelection();\n              return this.osdService.destroy(id);\n            }\n          ),\n        disable: () => this.isNotSelectedOrInState('up'),\n        icon: Icons.destroyCircle\n      },\n      {\n        name: this.actionLabels.DELETE,\n        permission: 'delete',\n        click: () => this.delete(),\n        disable: (selection: CdTableSelection) => this.getDisable('delete', selection),\n        icon: Icons.destroy\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.clusterWideActions = [\n      {\n        name: $localize`Flags`,\n        icon: Icons.flag,\n        click: () => this.configureFlagsAction(),\n        permission: 'read',\n        visible: () => this.permissions.osd.read\n      },\n      {\n        name: $localize`Recovery Priority`,\n        icon: Icons.deepCheck,\n        click: () => this.configureQosParamsAction(),\n        permission: 'read',\n        visible: () => this.permissions.configOpt.read\n      },\n      {\n        name: $localize`PG scrub`,\n        icon: Icons.analyse,\n        click: () => this.configurePgScrubAction(),\n        permission: 'read',\n        visible: () => this.permissions.configOpt.read\n      }\n    ];\n    this.columns = [\n      {\n        prop: 'id',\n        name: $localize`ID`,\n        flexGrow: 1,\n        cellTransformation: CellTemplate.executing,\n        customTemplateConfig: {\n          valueClass: 'bold'\n        }\n      },\n      { prop: 'host.name', name: $localize`Host` },\n      {\n        prop: 'collectedStates',\n        name: $localize`Status`,\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            in: { class: 'badge-success' },\n            up: { class: 'badge-success' },\n            down: { class: 'badge-danger' },\n            out: { class: 'badge-danger' },\n            destroyed: { class: 'badge-danger' }\n          }\n        }\n      },\n      {\n        prop: 'tree.device_class',\n        name: $localize`Device class`,\n        flexGrow: 1.2,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            hdd: { class: 'badge-hdd' },\n            ssd: { class: 'badge-ssd' }\n          }\n        }\n      },\n      {\n        prop: 'stats.numpg',\n        name: $localize`PGs`,\n        flexGrow: 1\n      },\n      {\n        prop: 'stats.stat_bytes',\n        name: $localize`Size`,\n        flexGrow: 1,\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        prop: 'state',\n        name: $localize`Flags`,\n        cellTemplate: this.flagsTpl\n      },\n      { prop: 'stats.usage', name: $localize`Usage`, cellTemplate: this.osdUsageTpl },\n      {\n        prop: 'stats_history.out_bytes',\n        name: $localize`Read bytes`,\n        cellTransformation: CellTemplate.sparkline\n      },\n      {\n        prop: 'stats_history.in_bytes',\n        name: $localize`Write bytes`,\n        cellTransformation: CellTemplate.sparkline\n      },\n      {\n        prop: 'stats.op_r',\n        name: $localize`Read ops`,\n        cellTransformation: CellTemplate.perSecond\n      },\n      {\n        prop: 'stats.op_w',\n        name: $localize`Write ops`,\n        cellTransformation: CellTemplate.perSecond\n      }\n    ];\n\n    this.orchService.status().subscribe((status: OrchestratorStatus) => (this.orchStatus = status));\n\n    this.osdService\n      .getOsdSettings()\n      .pipe(take(1))\n      .subscribe((data: any) => {\n        this.osdSettings = data;\n      });\n  }\n\n  getDisable(action: 'create' | 'delete', selection: CdTableSelection): boolean | string {\n    if (action === 'delete') {\n      if (!selection.hasSelection) {\n        return true;\n      } else {\n        // Disable delete action if any selected OSDs are under deleting or unmanaged.\n        const deletingOSDs = _.some(this.getSelectedOsds(), (osd) => {\n          const status = _.get(osd, 'operational_status');\n          return status === 'deleting' || status === 'unmanaged';\n        });\n        if (deletingOSDs) {\n          return true;\n        }\n      }\n    }\n    return this.orchService.getTableActionDisableDesc(\n      this.orchStatus,\n      this.actionOrchFeatures[action]\n    );\n  }\n\n  /**\n   * Only returns valid IDs, e.g. if an OSD is falsely still selected after being deleted, it won't\n   * get returned.\n   */\n  getSelectedOsdIds(): number[] {\n    const osdIds = this.osds.map((osd) => osd.id);\n    return this.selection.selected\n      .map((row) => row.id)\n      .filter((id) => osdIds.includes(id))\n      .sort();\n  }\n\n  getSelectedOsds(): any[] {\n    return this.osds.filter(\n      (osd) => !_.isUndefined(osd) && this.getSelectedOsdIds().includes(osd.id)\n    );\n  }\n\n  get hasOsdSelected(): boolean {\n    return this.getSelectedOsdIds().length > 0;\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  /**\n   * Returns true if no rows are selected or if *any* of the selected rows are in the given\n   * state. Useful for deactivating the corresponding menu entry.\n   */\n  isNotSelectedOrInState(state: 'in' | 'up' | 'down' | 'out'): boolean {\n    const selectedOsds = this.getSelectedOsds();\n    if (selectedOsds.length === 0) {\n      return true;\n    }\n    switch (state) {\n      case 'in':\n        return selectedOsds.some((osd) => osd.in === 1);\n      case 'out':\n        return selectedOsds.some((osd) => osd.in !== 1);\n      case 'down':\n        return selectedOsds.some((osd) => osd.up !== 1);\n      case 'up':\n        return selectedOsds.some((osd) => osd.up === 1);\n    }\n  }\n\n  getOsdList() {\n    const observables = [this.osdService.getList(), this.osdService.getFlags()];\n    observableForkJoin(observables).subscribe((resp: [any[], string[]]) => {\n      this.osds = resp[0].map((osd) => {\n        osd.collectedStates = OsdListComponent.collectStates(osd);\n        osd.stats_history.out_bytes = osd.stats_history.op_out_bytes.map((i: string) => i[1]);\n        osd.stats_history.in_bytes = osd.stats_history.op_in_bytes.map((i: string) => i[1]);\n        osd.stats.usage = osd.stats.stat_bytes_used / osd.stats.stat_bytes;\n        osd.cdIsBinary = true;\n        osd.cdIndivFlags = osd.state.filter((f: string) => this.indivFlagNames.includes(f));\n        osd.cdClusterFlags = resp[1].filter((f: string) => !this.disabledFlags.includes(f));\n        const deploy_state = _.get(osd, 'operational_status', 'unmanaged');\n        if (deploy_state !== 'unmanaged' && deploy_state !== 'working') {\n          osd.cdExecuting = deploy_state;\n        }\n        return osd;\n      });\n    });\n  }\n\n  editAction() {\n    const selectedOsd = _.filter(this.osds, ['id', this.selection.first().id]).pop();\n\n    this.modalService.show(FormModalComponent, {\n      titleText: $localize`Edit OSD: ${selectedOsd.id}`,\n      fields: [\n        {\n          type: 'text',\n          name: 'deviceClass',\n          value: selectedOsd.tree.device_class,\n          label: $localize`Device class`,\n          required: true\n        }\n      ],\n      submitButtonText: $localize`Edit OSD`,\n      onSubmit: (values: any) => {\n        this.osdService.update(selectedOsd.id, values.deviceClass).subscribe(() => {\n          this.notificationService.show(\n            NotificationType.success,\n            $localize`Updated OSD '${selectedOsd.id}'`\n          );\n          this.getOsdList();\n        });\n      }\n    });\n  }\n\n  scrubAction(deep: boolean) {\n    if (!this.hasOsdSelected) {\n      return;\n    }\n\n    const initialState = {\n      selected: this.getSelectedOsdIds(),\n      deep: deep\n    };\n\n    this.bsModalRef = this.modalService.show(OsdScrubModalComponent, initialState);\n  }\n\n  configureFlagsAction() {\n    this.bsModalRef = this.modalService.show(OsdFlagsModalComponent);\n  }\n\n  configureFlagsIndivAction() {\n    const initialState = {\n      selected: this.getSelectedOsds()\n    };\n    this.bsModalRef = this.modalService.show(OsdFlagsIndivModalComponent, initialState);\n  }\n\n  showConfirmationModal(markAction: string, onSubmit: (id: number) => Observable<any>) {\n    const osdIds = this.getSelectedOsdIds();\n    this.bsModalRef = this.modalService.show(ConfirmationModalComponent, {\n      titleText: $localize`Mark OSD ${markAction}`,\n      buttonText: $localize`Mark ${markAction}`,\n      bodyTpl: this.markOsdConfirmationTpl,\n      bodyContext: {\n        markActionDescription: markAction,\n        osdIds\n      },\n      onSubmit: () => {\n        observableForkJoin(\n          this.getSelectedOsdIds().map((osd: any) => onSubmit.call(this.osdService, osd))\n        ).subscribe(() => this.bsModalRef.close());\n      }\n    });\n  }\n\n  reweight() {\n    const selectedOsd = this.osds.filter((o) => o.id === this.selection.first().id).pop();\n    this.bsModalRef = this.modalService.show(OsdReweightModalComponent, {\n      currentWeight: selectedOsd.weight,\n      osdId: selectedOsd.id\n    });\n  }\n\n  delete() {\n    const deleteFormGroup = new CdFormGroup({\n      preserve: new FormControl(false)\n    });\n\n    this.showCriticalConfirmationModal(\n      $localize`delete`,\n      $localize`OSD`,\n      $localize`deleted`,\n      (ids: number[]) => {\n        return this.osdService.safeToDelete(JSON.stringify(ids));\n      },\n      'is_safe_to_delete',\n      (id: number) => {\n        this.selection = new CdTableSelection();\n        return this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask('osd/' + URLVerbs.DELETE, {\n            svc_id: id\n          }),\n          call: this.osdService.delete(id, deleteFormGroup.value.preserve, true)\n        });\n      },\n      true,\n      deleteFormGroup,\n      this.deleteOsdExtraTpl\n    );\n  }\n\n  /**\n   * Perform check first and display a critical confirmation modal.\n   * @param {string} actionDescription name of the action.\n   * @param {string} itemDescription the item's name that the action operates on.\n   * @param {string} templateItemDescription the action name to be displayed in modal template.\n   * @param {Function} check the function is called to check if the action is safe.\n   * @param {string} checkKey the safe indicator's key in the check response.\n   * @param {Function} action the action function.\n   * @param {boolean} taskWrapped if true, hide confirmation modal after action\n   * @param {CdFormGroup} childFormGroup additional child form group to be passed to confirmation modal\n   * @param {TemplateRef<any>} childFormGroupTemplate template for additional child form group\n   */\n  showCriticalConfirmationModal(\n    actionDescription: string,\n    itemDescription: string,\n    templateItemDescription: string,\n    check: (ids: number[]) => Observable<any>,\n    checkKey: string,\n    action: (id: number | number[]) => Observable<any>,\n    taskWrapped: boolean = false,\n    childFormGroup?: CdFormGroup,\n    childFormGroupTemplate?: TemplateRef<any>\n  ): void {\n    check(this.getSelectedOsdIds()).subscribe((result) => {\n      const modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n        actionDescription: actionDescription,\n        itemDescription: itemDescription,\n        bodyTemplate: this.criticalConfirmationTpl,\n        bodyContext: {\n          safeToPerform: result[checkKey],\n          message: result.message,\n          active: result.active,\n          missingStats: result.missing_stats,\n          storedPgs: result.stored_pgs,\n          actionDescription: templateItemDescription,\n          osdIds: this.getSelectedOsdIds()\n        },\n        childFormGroup: childFormGroup,\n        childFormGroupTemplate: childFormGroupTemplate,\n        submitAction: () => {\n          const observable = observableForkJoin(\n            this.getSelectedOsdIds().map((osd: any) => action.call(this.osdService, osd))\n          );\n          if (taskWrapped) {\n            observable.subscribe({\n              error: () => {\n                this.getOsdList();\n                modalRef.close();\n              },\n              complete: () => modalRef.close()\n            });\n          } else {\n            observable.subscribe(\n              () => {\n                this.getOsdList();\n                modalRef.close();\n              },\n              () => modalRef.close()\n            );\n          }\n        }\n      });\n    });\n  }\n\n  configureQosParamsAction() {\n    this.bsModalRef = this.modalService.show(OsdRecvSpeedModalComponent);\n  }\n\n  configurePgScrubAction() {\n    this.bsModalRef = this.modalService.show(OsdPgScrubModalComponent, undefined, { size: 'lg' });\n  }\n}\n","<nav ngbNav\n     #nav=\"ngbNav\"\n     class=\"nav-tabs\">\n  <ng-container ngbNavItem>\n    <a ngbNavLink\n       i18n>OSDs List</a>\n    <ng-template ngbNavContent>\n      <cd-table [data]=\"osds\"\n                (fetchData)=\"getOsdList()\"\n                [columns]=\"columns\"\n                selectionType=\"multiClick\"\n                [hasDetails]=\"true\"\n                (setExpandedRow)=\"setExpandedRow($event)\"\n                (updateSelection)=\"updateSelection($event)\"\n                [updateSelectionOnRefresh]=\"'never'\">\n\n        <div class=\"table-actions btn-toolbar\">\n          <cd-table-actions [permission]=\"permissions.osd\"\n                            [selection]=\"selection\"\n                            class=\"btn-group\"\n                            id=\"osd-actions\"\n                            [tableActions]=\"tableActions\">\n          </cd-table-actions>\n          <cd-table-actions [permission]=\"{read: true}\"\n                            [selection]=\"selection\"\n                            dropDownOnly=\"Cluster-wide configuration\"\n                            btnColor=\"light\"\n                            class=\"btn-group\"\n                            id=\"cluster-wide-actions\"\n                            [tableActions]=\"clusterWideActions\">\n          </cd-table-actions>\n        </div>\n\n        <cd-osd-details cdTableDetail\n                        [selection]=\"expandedRow\">\n        </cd-osd-details>\n      </cd-table>\n    </ng-template>\n  </ng-container>\n\n  <ng-container ngbNavItem\n                *ngIf=\"permissions.grafana.read\">\n    <a ngbNavLink\n       i18n>Overall Performance</a>\n    <ng-template ngbNavContent>\n      <cd-grafana i18n-title\n                  title=\"OSD list\"\n                  [grafanaPath]=\"'osd-overview?'\"\n                  [type]=\"'metrics'\"\n                  uid=\"lo02I1Aiz\"\n                  grafanaStyle=\"four\">\n      </cd-grafana>\n    </ng-template>\n  </ng-container>\n</nav>\n\n<div [ngbNavOutlet]=\"nav\"></div>\n\n<ng-template #markOsdConfirmationTpl\n             let-markActionDescription=\"markActionDescription\"\n             let-osdIds=\"osdIds\">\n  <ng-container i18n><strong>OSD(s) {{ osdIds | join }}</strong> will be marked\n  <strong>{{ markActionDescription }}</strong> if you proceed.</ng-container>\n</ng-template>\n\n<ng-template #criticalConfirmationTpl\n             let-safeToPerform=\"safeToPerform\"\n             let-message=\"message\"\n             let-active=\"active\"\n             let-missingStats=\"missingStats\"\n             let-storedPgs=\"storedPgs\"\n             let-actionDescription=\"actionDescription\"\n             let-osdIds=\"osdIds\">\n  <div *ngIf=\"!safeToPerform\"\n       class=\"danger mb-3\">\n    <cd-alert-panel type=\"warning\">\n      <span i18n>\n        The {selection.hasSingleSelection, select, true {OSD is} other {OSDs are}} not safe to be\n        {{ actionDescription }}!\n      </span>\n      <br>\n      <ul class=\"mb-0 ps-4\">\n        <li *ngIf=\"active.length > 0\"\n             i18n>\n          {selection.hasSingleSelection, select, true {} other {{{ active | join }} : }}\n          Some PGs are currently mapped to\n          {active.length === 1, select, true {it} other {them}}.\n        </li>\n        <li *ngIf=\"missingStats.length > 0\"\n             i18n>\n          {selection.hasSingleSelection, select, true {} other {{{ missingStats | join }} : }}\n          There are no reported stats and not all PGs are active and clean.\n        </li>\n        <li *ngIf=\"storedPgs.length > 0\"\n             i18n>\n          {selection.hasSingleSelection, select, true {OSD} other {{{ storedPgs | join }} : OSDs }}\n          still store some PG data and not all PGs are active and clean.\n        </li>\n        <li *ngIf=\"message\">\n          {{ message }}\n        </li>\n      </ul>\n    </cd-alert-panel>\n  </div>\n  <div *ngIf=\"safeToPerform\"\n       class=\"danger mb-3\">\n    <cd-alert-panel type=\"info\">\n      <span i18n>\n        The {selection.hasSingleSelection, select, true {OSD is} other {OSDs are}}\n        safe to destroy without reducing data durability.\n      </span>\n    </cd-alert-panel>\n  </div>\n  <ng-container i18n><strong>OSD {{ osdIds | join }}</strong> will be\n  <strong>{{ actionDescription }}</strong> if you proceed.</ng-container>\n</ng-template>\n\n<ng-template #flagsTpl\n             let-row=\"row\">\n  <span *ngFor=\"let flag of row.cdClusterFlags;\"\n        class=\"badge badge-hdd me-1\">{{ flag }}</span>\n  <span *ngFor=\"let flag of row.cdIndivFlags;\"\n        class=\"badge badge-info me-1\">{{ flag }}</span>\n</ng-template>\n\n<ng-template #osdUsageTpl\n             let-row=\"row\">\n  <cd-usage-bar [title]=\"'osd ' + row.osd\"\n                [total]=\"row.stats.stat_bytes\"\n                [used]=\"row.stats.stat_bytes_used\"\n                [warningThreshold]=\"osdSettings.nearfull_ratio\"\n                [errorThreshold]=\"osdSettings.full_ratio\">\n  </cd-usage-bar>\n</ng-template>\n\n<ng-template #deleteOsdExtraTpl\n             let-form=\"form\">\n  <ng-container [formGroup]=\"form\">\n    <ng-container formGroupName=\"child\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\"\n                 class=\"custom-control-input\"\n                 name=\"preserve\"\n                 id=\"preserve\"\n                 formControlName=\"preserve\">\n          <label class=\"custom-control-label\"\n                 for=\"preserve\"\n                 i18n>Preserve OSD ID(s) for replacement.</label>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-template>\n","import { Component, ViewChild } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { forkJoin as observableForkJoin } from 'rxjs';\n\nimport { ConfigOptionComponent } from '~/app/shared/components/config-option/config-option.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { OsdPgScrubModalOptions } from './osd-pg-scrub-modal.options';\n\n@Component({\n  selector: 'cd-osd-pg-scrub-modal',\n  templateUrl: './osd-pg-scrub-modal.component.html',\n  styleUrls: ['./osd-pg-scrub-modal.component.scss']\n})\nexport class OsdPgScrubModalComponent {\n  osdPgScrubForm: CdFormGroup;\n  action: string;\n  resource: string;\n  permissions: Permissions;\n\n  @ViewChild('basicOptionsValues', { static: true })\n  basicOptionsValues: ConfigOptionComponent;\n  basicOptions: Array<string> = OsdPgScrubModalOptions.basicOptions;\n\n  @ViewChild('advancedOptionsValues')\n  advancedOptionsValues: ConfigOptionComponent;\n  advancedOptions: Array<string> = OsdPgScrubModalOptions.advancedOptions;\n\n  advancedEnabled = false;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private authStorageService: AuthStorageService,\n    private notificationService: NotificationService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    this.osdPgScrubForm = new CdFormGroup({});\n    this.resource = $localize`PG scrub options`;\n    this.action = this.actionLabels.EDIT;\n    this.permissions = this.authStorageService.getPermissions();\n  }\n\n  submitAction() {\n    const observables = [this.basicOptionsValues.saveValues()];\n\n    if (this.advancedOptionsValues) {\n      observables.push(this.advancedOptionsValues.saveValues());\n    }\n\n    observableForkJoin(observables).subscribe(\n      () => {\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Updated PG scrub options`\n        );\n        this.activeModal.close();\n      },\n      () => {\n        this.activeModal.close();\n      }\n    );\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n=\"form title\"\n                class=\"modal-title\">{{ action | titlecase }} {{ resource | upperFirst }}</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form #formDir=\"ngForm\"\n          [formGroup]=\"osdPgScrubForm\"\n          novalidate\n          cdFormScope=\"osd\">\n      <div class=\"modal-body osd-modal\">\n        <!-- Basic -->\n        <cd-config-option [optionNames]=\"basicOptions\"\n                          [optionsForm]=\"osdPgScrubForm\"\n                          [optionsFormDir]=\"formDir\"\n                          [optionsFormGroupName]=\"'basicFormGroup'\"\n                          #basicOptionsValues></cd-config-option>\n        <!-- Advanced -->\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <a class=\"pull-right margin-right-md\"\n               (click)=\"advancedEnabled = true\"\n               *ngIf=\"!advancedEnabled\"\n               i18n>Advanced...</a>\n          </div>\n        </div>\n        <div *ngIf=\"advancedEnabled\">\n          <h3 class=\"page-header\"\n              i18n>Advanced configuration options</h3>\n          <cd-config-option [optionNames]=\"advancedOptions\"\n                            [optionsForm]=\"osdPgScrubForm\"\n                            [optionsFormDir]=\"formDir\"\n                            [optionsFormGroupName]=\"'advancedFormGroup'\"\n                            #advancedOptionsValues></cd-config-option>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submitAction()\"\n                              [form]=\"osdPgScrubForm\"\n                              [showSubmit]=\"permissions.configOpt.update\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\">\n        </cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","export class OsdPgScrubModalOptions {\n  public static basicOptions: Array<string> = [\n    'osd_scrub_during_recovery',\n    'osd_scrub_begin_hour',\n    'osd_scrub_end_hour',\n    'osd_scrub_begin_week_day',\n    'osd_scrub_end_week_day',\n    'osd_scrub_min_interval',\n    'osd_scrub_max_interval',\n    'osd_deep_scrub_interval',\n    'osd_scrub_auto_repair',\n    'osd_max_scrubs',\n    'osd_scrub_priority',\n    'osd_scrub_sleep'\n  ];\n\n  public static advancedOptions: Array<string> = [\n    'osd_scrub_auto_repair_num_errors',\n    'osd_debug_deep_scrub_sleep',\n    'osd_deep_scrub_keys',\n    'osd_deep_scrub_large_omap_object_key_threshold',\n    'osd_deep_scrub_large_omap_object_value_sum_threshold',\n    'osd_deep_scrub_randomize_ratio',\n    'osd_deep_scrub_stride',\n    'osd_deep_scrub_update_digest_min_age',\n    'osd_requested_scrub_priority',\n    'osd_scrub_backoff_ratio',\n    'osd_scrub_chunk_max',\n    'osd_scrub_chunk_min',\n    'osd_scrub_cost',\n    'osd_scrub_interval_randomize_ratio',\n    'osd_scrub_invalid_stats',\n    'osd_scrub_load_threshold',\n    'osd_scrub_max_preemptions'\n  ];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { ConfigurationService } from '~/app/shared/api/configuration.service';\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { ConfigOptionTypes } from '~/app/shared/components/config-option/config-option.types';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-osd-recv-speed-modal',\n  templateUrl: './osd-recv-speed-modal.component.html',\n  styleUrls: ['./osd-recv-speed-modal.component.scss']\n})\nexport class OsdRecvSpeedModalComponent implements OnInit {\n  osdRecvSpeedForm: CdFormGroup;\n  permissions: Permissions;\n\n  priorities: any[] = [];\n  priorityAttrs = {};\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private authStorageService: AuthStorageService,\n    private configService: ConfigurationService,\n    private notificationService: NotificationService,\n    private osdService: OsdService\n  ) {\n    this.permissions = this.authStorageService.getPermissions();\n    this.priorities = this.osdService.osdRecvSpeedModalPriorities.KNOWN_PRIORITIES;\n    this.osdRecvSpeedForm = new CdFormGroup({\n      priority: new FormControl(null, { validators: [Validators.required] }),\n      customizePriority: new FormControl(false)\n    });\n    this.priorityAttrs = {\n      osd_max_backfills: {\n        text: $localize`Max Backfills`,\n        desc: '',\n        patternHelpText: '',\n        maxValue: undefined,\n        minValue: undefined\n      },\n      osd_recovery_max_active: {\n        text: $localize`Recovery Max Active`,\n        desc: '',\n        patternHelpText: '',\n        maxValue: undefined,\n        minValue: undefined\n      },\n      osd_recovery_max_single_start: {\n        text: $localize`Recovery Max Single Start`,\n        desc: '',\n        patternHelpText: '',\n        maxValue: undefined,\n        minValue: undefined\n      },\n      osd_recovery_sleep: {\n        text: $localize`Recovery Sleep`,\n        desc: '',\n        patternHelpText: '',\n        maxValue: undefined,\n        minValue: undefined\n      }\n    };\n\n    Object.keys(this.priorityAttrs).forEach((configOptionName) => {\n      this.osdRecvSpeedForm.addControl(\n        configOptionName,\n        new FormControl(null, { validators: [Validators.required] })\n      );\n    });\n  }\n\n  ngOnInit() {\n    this.configService.filter(Object.keys(this.priorityAttrs)).subscribe((data: any) => {\n      const config_option_values = this.getCurrentValues(data);\n      this.detectPriority(config_option_values.values, (priority: any) => {\n        this.setPriority(priority);\n      });\n      this.setDescription(config_option_values.configOptions);\n      this.setValidators(config_option_values.configOptions);\n    });\n  }\n\n  detectPriority(configOptionValues: any, callbackFn: Function) {\n    const priority = _.find(this.priorities, (p) => {\n      return _.isEqual(p.values, configOptionValues);\n    });\n\n    this.osdRecvSpeedForm.controls.customizePriority.setValue(false);\n\n    if (priority) {\n      return callbackFn(priority);\n    }\n\n    if (Object.entries(configOptionValues).length === 4) {\n      this.osdRecvSpeedForm.controls.customizePriority.setValue(true);\n      return callbackFn(\n        Object({ name: 'custom', text: $localize`Custom`, values: configOptionValues })\n      );\n    }\n\n    return callbackFn(this.priorities[0]);\n  }\n\n  getCurrentValues(configOptions: any) {\n    const currentValues: Record<string, any> = { values: {}, configOptions: [] };\n    configOptions.forEach((configOption: any) => {\n      currentValues.configOptions.push(configOption);\n\n      if ('value' in configOption) {\n        configOption.value.forEach((value: any) => {\n          if (value.section === 'osd') {\n            currentValues.values[configOption.name] = Number(value.value);\n          }\n        });\n      } else if ('default' in configOption && configOption.default !== null) {\n        currentValues.values[configOption.name] = Number(configOption.default);\n      }\n    });\n    return currentValues;\n  }\n\n  setDescription(configOptions: Array<any>) {\n    configOptions.forEach((configOption) => {\n      if (configOption.desc !== '') {\n        this.priorityAttrs[configOption.name].desc = configOption.desc;\n      }\n    });\n  }\n\n  setPriority(priority: any) {\n    const customPriority = _.find(this.priorities, (p) => {\n      return p.name === 'custom';\n    });\n\n    if (priority.name === 'custom') {\n      if (!customPriority) {\n        this.priorities.push(priority);\n      }\n    } else {\n      if (customPriority) {\n        this.priorities.splice(this.priorities.indexOf(customPriority), 1);\n      }\n    }\n\n    this.osdRecvSpeedForm.controls.priority.setValue(priority.name);\n    Object.entries(priority.values).forEach(([name, value]) => {\n      this.osdRecvSpeedForm.controls[name].setValue(value);\n    });\n  }\n\n  setValidators(configOptions: Array<any>) {\n    configOptions.forEach((configOption) => {\n      const typeValidators = ConfigOptionTypes.getTypeValidators(configOption);\n      if (typeValidators) {\n        typeValidators.validators.push(Validators.required);\n\n        if ('max' in typeValidators && typeValidators.max !== '') {\n          this.priorityAttrs[configOption.name].maxValue = typeValidators.max;\n        }\n\n        if ('min' in typeValidators && typeValidators.min !== '') {\n          this.priorityAttrs[configOption.name].minValue = typeValidators.min;\n        }\n\n        this.priorityAttrs[configOption.name].patternHelpText = typeValidators.patternHelpText;\n        this.osdRecvSpeedForm.controls[configOption.name].setValidators(typeValidators.validators);\n      } else {\n        this.osdRecvSpeedForm.controls[configOption.name].setValidators(Validators.required);\n      }\n    });\n  }\n\n  onCustomizePriorityChange() {\n    const values = {};\n    Object.keys(this.priorityAttrs).forEach((configOptionName) => {\n      values[configOptionName] = this.osdRecvSpeedForm.getValue(configOptionName);\n    });\n\n    if (this.osdRecvSpeedForm.getValue('customizePriority')) {\n      const customPriority = {\n        name: 'custom',\n        text: $localize`Custom`,\n        values: values\n      };\n      this.setPriority(customPriority);\n    } else {\n      this.detectPriority(values, (priority: any) => {\n        this.setPriority(priority);\n      });\n    }\n  }\n\n  onPriorityChange(selectedPriorityName: string) {\n    const selectedPriority =\n      _.find(this.priorities, (p) => {\n        return p.name === selectedPriorityName;\n      }) || this.priorities[0];\n    // Uncheck the 'Customize priority values' checkbox.\n    this.osdRecvSpeedForm.get('customizePriority').setValue(false);\n    // Set the priority profile values.\n    this.setPriority(selectedPriority);\n  }\n\n  submitAction() {\n    const options = {};\n    Object.keys(this.priorityAttrs).forEach((configOptionName) => {\n      options[configOptionName] = {\n        section: 'osd',\n        value: this.osdRecvSpeedForm.getValue(configOptionName)\n      };\n    });\n\n    this.configService.bulkCreate({ options: options }).subscribe(\n      () => {\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Updated OSD recovery speed priority '${this.osdRecvSpeedForm.getValue(\n            'priority'\n          )}'`\n        );\n        this.activeModal.close();\n      },\n      () => {\n        this.activeModal.close();\n      }\n    );\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\"\n                i18n>OSD Recovery Priority</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form #formDir=\"ngForm\"\n          [formGroup]=\"osdRecvSpeedForm\"\n          novalidate\n          cdFormScope=\"osd\">\n      <div class=\"modal-body\">\n        <!-- Priority -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"priority\"\n                 i18n>Priority</label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    formControlName=\"priority\"\n                    id=\"priority\"\n                    (change)=\"onPriorityChange($event.target.value)\">\n              <option *ngFor=\"let priority of priorities\"\n                      [value]=\"priority.name\">\n                {{ priority.text }}\n              </option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"osdRecvSpeedForm.showError('priority', formDir, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Customize priority -->\n        <div class=\"form-group row\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input formControlName=\"customizePriority\"\n                     class=\"custom-control-input\"\n                     id=\"customizePriority\"\n                     name=\"customizePriority\"\n                     type=\"checkbox\"\n                     (change)=\"onCustomizePriorityChange()\">\n              <label class=\"custom-control-label\"\n                     for=\"customizePriority\"\n                     i18n>Customize priority values</label>\n            </div>\n          </div>\n        </div>\n\n        <!-- Priority values -->\n        <div class=\"form-group row\"\n             *ngFor=\"let attr of priorityAttrs | keyvalue\">\n          <label class=\"cd-col-form-label\"\n                 [for]=\"attr.key\">\n            <span [ngClass]=\"{'required': osdRecvSpeedForm.getValue('customizePriority')}\">\n              {{ attr.value.text }}\n            </span>\n            <cd-helper *ngIf=\"attr.value.desc\">{{ attr.value.desc }}</cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"number\"\n                   [id]=\"attr.key\"\n                   [formControlName]=\"attr.key\"\n                   [readonly]=\"!osdRecvSpeedForm.getValue('customizePriority')\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"osdRecvSpeedForm.getValue('customizePriority') &&\n                  osdRecvSpeedForm.showError(attr.key, formDir, 'required')\"\n                  i18n>This field is required!</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"osdRecvSpeedForm.getValue('customizePriority') &&\n                  osdRecvSpeedForm.showError(attr.key, formDir, 'pattern')\"\n                  i18n>{{ attr.value.patternHelpText }}</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"osdRecvSpeedForm.getValue('customizePriority') &&\n                  osdRecvSpeedForm.showError(attr.key, formDir, 'max')\"\n                  i18n>The entered value is too high! It must not be greater than {{ attr.value.maxValue }}.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"osdRecvSpeedForm.getValue('customizePriority') &&\n                  osdRecvSpeedForm.showError(attr.key, formDir, 'min')\"\n                  i18n>The entered value is too low! It must not be lower than {{ attr.value.minValue }}.</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submitAction()\"\n                              [form]=\"osdRecvSpeedForm\"\n                              [submitText]=\"actionLabels.UPDATE\"\n                              [showSubmit]=\"permissions.configOpt.update\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\n\n@Component({\n  selector: 'cd-osd-reweight-modal',\n  templateUrl: './osd-reweight-modal.component.html',\n  styleUrls: ['./osd-reweight-modal.component.scss']\n})\nexport class OsdReweightModalComponent implements OnInit {\n  currentWeight = 1;\n  osdId: number;\n  reweightForm: CdFormGroup;\n\n  constructor(\n    public actionLabels: ActionLabelsI18n,\n    public activeModal: NgbActiveModal,\n    private osdService: OsdService,\n    private fb: CdFormBuilder\n  ) {}\n\n  get weight() {\n    return this.reweightForm.get('weight');\n  }\n\n  ngOnInit() {\n    this.reweightForm = this.fb.group({\n      weight: this.fb.control(this.currentWeight, [Validators.required])\n    });\n  }\n\n  reweight() {\n    this.osdService\n      .reweight(this.osdId, this.reweightForm.value.weight)\n      .subscribe(() => this.activeModal.close());\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\"\n                i18n>Reweight OSD: {{ osdId }}</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form [formGroup]=\"reweightForm\">\n      <div class=\"modal-body\">\n        <div class=\"row\">\n          <label for=\"weight\"\n                 class=\"cd-col-form-label\">Weight</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"weight\"\n                   class=\"form-control\"\n                   type=\"number\"\n                   step=\"0.1\"\n                   formControlName=\"weight\"\n                   min=\"0\"\n                   max=\"1\"\n                   [value]=\"currentWeight\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"weight.errors\">\n              <span *ngIf=\"weight.errors?.required\"\n                    i18n>This field is required.</span>\n              <span *ngIf=\"weight.errors?.max || weight.errors?.min\"\n                    i18n>The value needs to be between 0 and 1.</span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"reweight()\"\n                              [form]=\"reweightForm\"\n                              [submitText]=\"actionLabels.REWEIGHT\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { forkJoin } from 'rxjs';\n\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { JoinPipe } from '~/app/shared/pipes/join.pipe';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-osd-scrub-modal',\n  templateUrl: './osd-scrub-modal.component.html',\n  styleUrls: ['./osd-scrub-modal.component.scss']\n})\nexport class OsdScrubModalComponent implements OnInit {\n  deep: boolean;\n  scrubForm: FormGroup;\n  selected: any[] = [];\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    private osdService: OsdService,\n    private notificationService: NotificationService,\n    private joinPipe: JoinPipe\n  ) {}\n\n  ngOnInit() {\n    this.scrubForm = new FormGroup({});\n  }\n\n  scrub() {\n    forkJoin(this.selected.map((id: any) => this.osdService.scrub(id, this.deep))).subscribe(\n      () => {\n        const operation = this.deep ? 'Deep scrub' : 'Scrub';\n\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`${operation} was initialized in the following OSD(s): ${this.joinPipe.transform(\n            this.selected\n          )}`\n        );\n\n        this.activeModal.close();\n      },\n      () => this.activeModal.close()\n    );\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <span class=\"modal-title\"\n        i18n>OSDs {deep, select, true {Deep } other {}}Scrub</span>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"scrubForm\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"scrubForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p i18n>You are about to apply a {deep, select, true {deep } other {}}scrub to\n          the OSD(s): <strong>{{ selected | join }}</strong>.</p>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"scrub()\"\n                              [form]=\"scrubForm\"\n                              [submitText]=\"actionLabels.UPDATE\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, Inject, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { PrometheusService } from '~/app/shared/api/prometheus.service';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { PrometheusAlertService } from '~/app/shared/services/prometheus-alert.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\nimport { PrometheusListHelper } from '../prometheus-list-helper';\n\nconst BASE_URL = 'silences'; // as only silence actions can be used\n\n@Component({\n  selector: 'cd-active-alert-list',\n  providers: [{ provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }],\n  templateUrl: './active-alert-list.component.html',\n  styleUrls: ['./active-alert-list.component.scss']\n})\nexport class ActiveAlertListComponent extends PrometheusListHelper implements OnInit {\n  @ViewChild('externalLinkTpl', { static: true })\n  externalLinkTpl: TemplateRef<any>;\n  columns: CdTableColumn[];\n  tableActions: CdTableAction[];\n  permission: Permission;\n  selection = new CdTableSelection();\n  icons = Icons;\n\n  constructor(\n    // NotificationsComponent will refresh all alerts every 5s (No need to do it here as well)\n    private authStorageService: AuthStorageService,\n    public prometheusAlertService: PrometheusAlertService,\n    private urlBuilder: URLBuilderService,\n    @Inject(PrometheusService) prometheusService: PrometheusService\n  ) {\n    super(prometheusService);\n    this.permission = this.authStorageService.getPermissions().prometheus;\n    this.tableActions = [\n      {\n        permission: 'create',\n        canBePrimary: (selection: CdTableSelection) => selection.hasSingleSelection,\n        disable: (selection: CdTableSelection) =>\n          !selection.hasSingleSelection || selection.first().cdExecuting,\n        icon: Icons.add,\n        routerLink: () =>\n          '/monitoring' + this.urlBuilder.getCreateFrom(this.selection.first().fingerprint),\n        name: $localize`Create Silence`\n      }\n    ];\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.columns = [\n      {\n        name: $localize`Name`,\n        prop: 'labels.alertname',\n        cellClass: 'fw-bold',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Summary`,\n        prop: 'annotations.summary',\n        flexGrow: 3\n      },\n      {\n        name: $localize`Severity`,\n        prop: 'labels.severity',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            critical: { class: 'badge-danger' },\n            warning: { class: 'badge-warning' }\n          }\n        }\n      },\n      {\n        name: $localize`State`,\n        prop: 'status.state',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            active: { class: 'badge-info' },\n            unprocessed: { class: 'badge-warning' },\n            suppressed: { class: 'badge-dark' }\n          }\n        }\n      },\n      {\n        name: $localize`Started`,\n        prop: 'startsAt',\n        cellTransformation: CellTemplate.timeAgo,\n        flexGrow: 1\n      },\n      {\n        name: $localize`URL`,\n        prop: 'generatorURL',\n        flexGrow: 1,\n        sortable: false,\n        cellTemplate: this.externalLinkTpl\n      }\n    ];\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n}\n","<cd-prometheus-tabs></cd-prometheus-tabs>\n\n<cd-alert-panel *ngIf=\"!isAlertmanagerConfigured\"\n                type=\"info\"\n                i18n>To see all active Prometheus alerts, please provide\n  the URL to the API of Prometheus' Alertmanager as described\n  in the <cd-doc section=\"prometheus\"></cd-doc>.</cd-alert-panel>\n\n<cd-table *ngIf=\"isAlertmanagerConfigured\"\n          [data]=\"prometheusAlertService.alerts\"\n          [columns]=\"columns\"\n          identifier=\"fingerprint\"\n          [forceIdentifier]=\"true\"\n          [customCss]=\"customCss\"\n          selectionType=\"single\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n\n  <cd-table-key-value cdTableDetail\n                      *ngIf=\"expandedRow\"\n                      [renderObjects]=\"true\"\n                      [hideEmpty]=\"true\"\n                      [appendParentKey]=\"false\"\n                      [data]=\"expandedRow\"\n                      [customCss]=\"customCss\"\n                      [autoReload]=\"false\">\n  </cd-table-key-value>\n</cd-table>\n\n<ng-template #externalLinkTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <a [href]=\"value\"\n     target=\"_blank\"><i [ngClass]=\"[icons.lineChart]\"></i> Source</a>\n</ng-template>\n","import { Directive, OnInit } from '@angular/core';\n\nimport { PrometheusService } from '~/app/shared/api/prometheus.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\n\n@Directive()\n// tslint:disable-next-line: directive-class-suffix\nexport class PrometheusListHelper extends ListWithDetails implements OnInit {\n  public isPrometheusConfigured = false;\n  public isAlertmanagerConfigured = false;\n\n  constructor(protected prometheusService: PrometheusService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.prometheusService.ifAlertmanagerConfigured(() => {\n      this.isAlertmanagerConfigured = true;\n    });\n    this.prometheusService.ifPrometheusConfigured(() => {\n      this.isPrometheusConfigured = true;\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { PrometheusAlertService } from '~/app/shared/services/prometheus-alert.service';\n\n@Component({\n  selector: 'cd-prometheus-tabs',\n  templateUrl: './prometheus-tabs.component.html',\n  styleUrls: ['./prometheus-tabs.component.scss']\n})\nexport class PrometheusTabsComponent {\n  constructor(public prometheusAlertService: PrometheusAlertService) {}\n}\n","<ul class=\"nav nav-tabs\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/monitoring/active-alerts\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       [routerLinkActiveOptions]=\"{exact: true}\"\n       i18n>Active Alerts\n    <small *ngIf=\"prometheusAlertService.activeCriticalAlerts > 0\"\n        class=\"badge badge-danger ms-1\">{{ prometheusAlertService.activeCriticalAlerts }}</small>\n    <small *ngIf=\"prometheusAlertService.activeWarningAlerts > 0\"\n        class=\"badge badge-warning ms-1\">{{ prometheusAlertService.activeWarningAlerts }}</small></a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/monitoring/alerts\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       [routerLinkActiveOptions]=\"{exact: true}\"\n       i18n>Alerts</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/monitoring/silences\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       [routerLinkActiveOptions]=\"{exact: true}\"\n       i18n>Silences</a>\n  </li>\n</ul>\n","import { Component, Inject, OnInit } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { PrometheusService } from '~/app/shared/api/prometheus.service';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { PrometheusRule } from '~/app/shared/models/prometheus-alerts';\nimport { DurationPipe } from '~/app/shared/pipes/duration.pipe';\nimport { PrometheusAlertService } from '~/app/shared/services/prometheus-alert.service';\nimport { PrometheusListHelper } from '../prometheus-list-helper';\n\n@Component({\n  selector: 'cd-rules-list',\n  templateUrl: './rules-list.component.html',\n  styleUrls: ['./rules-list.component.scss']\n})\nexport class RulesListComponent extends PrometheusListHelper implements OnInit {\n  columns: CdTableColumn[];\n  expandedRow: PrometheusRule;\n  selection = new CdTableSelection();\n\n  /**\n   * Hide active alerts in details of alerting rules as they are already shown\n   * in the 'active alerts' table. Also hide the 'type' column as the type is\n   * always supposed to be 'alerting'.\n   */\n  hideKeys = ['alerts', 'type'];\n\n  constructor(\n    public prometheusAlertService: PrometheusAlertService,\n    @Inject(PrometheusService) prometheusService: PrometheusService\n  ) {\n    super(prometheusService);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.columns = [\n      { prop: 'name', name: $localize`Name`, cellClass: 'fw-bold', flexGrow: 2 },\n      {\n        prop: 'labels.severity',\n        name: $localize`Severity`,\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            critical: { class: 'badge-danger' },\n            warning: { class: 'badge-warning' }\n          }\n        }\n      },\n      {\n        prop: 'group',\n        name: $localize`Group`,\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge\n      },\n      { prop: 'duration', name: $localize`Duration`, pipe: new DurationPipe(), flexGrow: 1 },\n      { prop: 'query', name: $localize`Query`, isHidden: true, flexGrow: 1 },\n      { prop: 'annotations.summary', name: $localize`Summary`, flexGrow: 3 }\n    ];\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n}\n","<cd-prometheus-tabs></cd-prometheus-tabs>\n\n<cd-alert-panel *ngIf=\"!isPrometheusConfigured\"\n                type=\"info\"\n                i18n>To see all configured Prometheus alerts, please\n  provide the URL to the API of Prometheus as described in\n  the <cd-doc section=\"prometheus\"></cd-doc>.</cd-alert-panel>\n\n<cd-table *ngIf=\"isPrometheusConfigured\"\n          [data]=\"prometheusAlertService.rules\"\n          [columns]=\"columns\"\n          [selectionType]=\"'single'\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\">\n  <cd-table-key-value cdTableDetail\n                      *ngIf=\"expandedRow\"\n                      [data]=\"expandedRow\"\n                      [renderObjects]=\"true\"\n                      [hideKeys]=\"hideKeys\">\n  </cd-table-key-value>\n</cd-table>\n","import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { DashboardNotFoundError } from '~/app/core/error/error';\nimport { PrometheusService } from '~/app/shared/api/prometheus.service';\nimport { ActionLabelsI18n, SucceededActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport {\n  AlertmanagerSilence,\n  AlertmanagerSilenceMatcher,\n  AlertmanagerSilenceMatcherMatch\n} from '~/app/shared/models/alertmanager-silence';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AlertmanagerAlert, PrometheusRule } from '~/app/shared/models/prometheus-alerts';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { PrometheusSilenceMatcherService } from '~/app/shared/services/prometheus-silence-matcher.service';\nimport { TimeDiffService } from '~/app/shared/services/time-diff.service';\nimport { SilenceMatcherModalComponent } from '../silence-matcher-modal/silence-matcher-modal.component';\n\n@Component({\n  selector: 'cd-prometheus-form',\n  templateUrl: './silence-form.component.html',\n  styleUrls: ['./silence-form.component.scss']\n})\nexport class SilenceFormComponent {\n  icons = Icons;\n  permission: Permission;\n  form: CdFormGroup;\n  rules: PrometheusRule[];\n  matchName = '';\n  matchValue = '';\n\n  recreate = false;\n  edit = false;\n  id: string;\n\n  action: string;\n  resource = $localize`silence`;\n\n  matchers: AlertmanagerSilenceMatcher[] = [];\n  matcherMatch: AlertmanagerSilenceMatcherMatch = undefined;\n  matcherConfig = [\n    {\n      tooltip: $localize`Attribute name`,\n      attribute: 'name'\n    },\n    {\n      tooltip: $localize`Regular expression`,\n      attribute: 'isRegex'\n    },\n    {\n      tooltip: $localize`Value`,\n      attribute: 'value'\n    }\n  ];\n\n  datetimeFormat = 'YYYY-MM-DD HH:mm';\n  isNavigate = true;\n\n  constructor(\n    private router: Router,\n    private authStorageService: AuthStorageService,\n    private formBuilder: CdFormBuilder,\n    private prometheusService: PrometheusService,\n    private notificationService: NotificationService,\n    private route: ActivatedRoute,\n    private timeDiff: TimeDiffService,\n    private modalService: ModalService,\n    private silenceMatcher: PrometheusSilenceMatcherService,\n    private actionLabels: ActionLabelsI18n,\n    private succeededLabels: SucceededActionLabelsI18n\n  ) {\n    this.init();\n  }\n\n  private init() {\n    this.chooseMode();\n    this.authenticate();\n    this.createForm();\n    this.setupDates();\n    this.getData();\n  }\n\n  private chooseMode() {\n    this.edit = this.router.url.startsWith('/monitoring/silences/edit');\n    this.recreate = this.router.url.startsWith('/monitoring/silences/recreate');\n    if (this.edit) {\n      this.action = this.actionLabels.EDIT;\n    } else if (this.recreate) {\n      this.action = this.actionLabels.RECREATE;\n    } else {\n      this.action = this.actionLabels.CREATE;\n    }\n  }\n\n  private authenticate() {\n    this.permission = this.authStorageService.getPermissions().prometheus;\n    const allowed =\n      this.permission.read && (this.edit ? this.permission.update : this.permission.create);\n    if (!allowed) {\n      throw new DashboardNotFoundError();\n    }\n  }\n\n  private createForm() {\n    const formatValidator = CdValidators.custom('format', (expiresAt: string) => {\n      const result = expiresAt === '' || moment(expiresAt, this.datetimeFormat).isValid();\n      return !result;\n    });\n    this.form = this.formBuilder.group(\n      {\n        startsAt: ['', [Validators.required, formatValidator]],\n        duration: ['2h', [Validators.min(1)]],\n        endsAt: ['', [Validators.required, formatValidator]],\n        createdBy: [this.authStorageService.getUsername(), [Validators.required]],\n        comment: [null, [Validators.required]]\n      },\n      {\n        validators: CdValidators.custom('matcherRequired', () => this.matchers.length === 0)\n      }\n    );\n  }\n\n  private setupDates() {\n    const now = moment().format(this.datetimeFormat);\n    this.form.silentSet('startsAt', now);\n    this.updateDate();\n    this.subscribeDateChanges();\n  }\n\n  private updateDate(updateStartDate?: boolean) {\n    const date = moment(\n      this.form.getValue(updateStartDate ? 'endsAt' : 'startsAt'),\n      this.datetimeFormat\n    ).toDate();\n    const next = this.timeDiff.calculateDate(date, this.form.getValue('duration'), updateStartDate);\n    if (next) {\n      const nextDate = moment(next).format(this.datetimeFormat);\n      this.form.silentSet(updateStartDate ? 'startsAt' : 'endsAt', nextDate);\n    }\n  }\n\n  private subscribeDateChanges() {\n    this.form.get('startsAt').valueChanges.subscribe(() => {\n      this.onDateChange();\n    });\n    this.form.get('duration').valueChanges.subscribe(() => {\n      this.updateDate();\n    });\n    this.form.get('endsAt').valueChanges.subscribe(() => {\n      this.onDateChange(true);\n    });\n  }\n\n  private onDateChange(updateStartDate?: boolean) {\n    const startsAt = moment(this.form.getValue('startsAt'), this.datetimeFormat);\n    const endsAt = moment(this.form.getValue('endsAt'), this.datetimeFormat);\n    if (startsAt.isBefore(endsAt)) {\n      this.updateDuration();\n    } else {\n      this.updateDate(updateStartDate);\n    }\n  }\n\n  private updateDuration() {\n    const startsAt = moment(this.form.getValue('startsAt'), this.datetimeFormat).toDate();\n    const endsAt = moment(this.form.getValue('endsAt'), this.datetimeFormat).toDate();\n    this.form.silentSet('duration', this.timeDiff.calculateDuration(startsAt, endsAt));\n  }\n\n  private getData() {\n    this.getRules();\n    this.getModeSpecificData();\n  }\n\n  getRules() {\n    this.prometheusService.ifPrometheusConfigured(\n      () =>\n        this.prometheusService.getRules().subscribe(\n          (groups) => {\n            this.rules = groups['groups'].reduce(\n              (acc, group) => _.concat<PrometheusRule>(acc, group.rules),\n              []\n            );\n          },\n          () => {\n            this.prometheusService.disablePrometheusConfig();\n            this.rules = [];\n          }\n        ),\n      () => {\n        this.rules = [];\n        this.notificationService.show(\n          NotificationType.info,\n          $localize`Please add your Prometheus host to the dashboard configuration and refresh the page`,\n          undefined,\n          undefined,\n          'Prometheus'\n        );\n      }\n    );\n    return this.rules;\n  }\n\n  private getModeSpecificData() {\n    this.route.params.subscribe((params: { id: string }) => {\n      if (!params.id) {\n        return;\n      }\n      if (this.edit || this.recreate) {\n        this.prometheusService.getSilences().subscribe((silences) => {\n          const silence = _.find(silences, ['id', params.id]);\n          if (!_.isUndefined(silence)) {\n            this.fillFormWithSilence(silence);\n          }\n        });\n      } else {\n        this.prometheusService.getAlerts().subscribe((alerts) => {\n          const alert = _.find(alerts, ['fingerprint', params.id]);\n          if (!_.isUndefined(alert)) {\n            this.fillFormByAlert(alert);\n          }\n        });\n      }\n    });\n  }\n\n  private fillFormWithSilence(silence: AlertmanagerSilence) {\n    this.id = silence.id;\n    if (this.edit) {\n      ['startsAt', 'endsAt'].forEach((attr) =>\n        this.form.silentSet(attr, moment(silence[attr]).format(this.datetimeFormat))\n      );\n      this.updateDuration();\n    }\n    ['createdBy', 'comment'].forEach((attr) => this.form.silentSet(attr, silence[attr]));\n    this.matchers = silence.matchers;\n    this.validateMatchers();\n  }\n\n  private validateMatchers() {\n    if (!this.rules) {\n      window.setTimeout(() => this.validateMatchers(), 100);\n      return;\n    }\n    this.matcherMatch = this.silenceMatcher.multiMatch(this.matchers, this.rules);\n    this.form.markAsDirty();\n    this.form.updateValueAndValidity();\n  }\n\n  private fillFormByAlert(alert: AlertmanagerAlert) {\n    const labels = alert.labels;\n    this.setMatcher({\n      name: 'alertname',\n      value: labels.alertname,\n      isRegex: false\n    });\n  }\n\n  private setMatcher(matcher: AlertmanagerSilenceMatcher, index?: number) {\n    if (_.isNumber(index)) {\n      this.matchers[index] = matcher;\n    } else {\n      this.matchers.push(matcher);\n    }\n    this.validateMatchers();\n  }\n\n  showMatcherModal(index?: number) {\n    const modalRef = this.modalService.show(SilenceMatcherModalComponent);\n    const modalComponent = modalRef.componentInstance as SilenceMatcherModalComponent;\n    modalComponent.rules = this.rules;\n    if (_.isNumber(index)) {\n      modalComponent.editMode = true;\n      modalComponent.preFillControls(this.matchers[index]);\n    }\n    modalComponent.submitAction.subscribe((matcher: AlertmanagerSilenceMatcher) => {\n      this.setMatcher(matcher, index);\n    });\n  }\n\n  deleteMatcher(index: number) {\n    this.matchers.splice(index, 1);\n    this.validateMatchers();\n  }\n\n  submit(data?: any) {\n    if (this.form.invalid) {\n      return;\n    }\n    this.prometheusService.setSilence(this.getSubmitData()).subscribe(\n      (resp) => {\n        if (data) {\n          data.silenceId = resp.body['silenceId'];\n        }\n        if (this.isNavigate) {\n          this.router.navigate(['/monitoring/silences']);\n        }\n        this.notificationService.show(\n          NotificationType.success,\n          this.getNotificationTile(this.matchers),\n          undefined,\n          undefined,\n          'Prometheus'\n        );\n        this.matchers = [];\n      },\n      () => this.form.setErrors({ cdSubmitButton: true })\n    );\n  }\n\n  private getSubmitData(): AlertmanagerSilence {\n    const payload = this.form.value;\n    delete payload.duration;\n    payload.startsAt = moment(payload.startsAt, this.datetimeFormat).toISOString();\n    payload.endsAt = moment(payload.endsAt, this.datetimeFormat).toISOString();\n    payload.matchers = this.matchers;\n    if (this.edit) {\n      payload.id = this.id;\n    }\n    return payload;\n  }\n\n  private getNotificationTile(matchers: AlertmanagerSilenceMatcher[]) {\n    let action;\n    if (this.edit) {\n      action = this.succeededLabels.EDITED;\n    } else if (this.recreate) {\n      action = this.succeededLabels.RECREATED;\n    } else {\n      action = this.succeededLabels.CREATED;\n    }\n    let msg = '';\n    for (const matcher of matchers) {\n      msg = msg.concat(` ${matcher.name} - ${matcher.value},`);\n    }\n    return `${action} ${this.resource} for ${msg.slice(0, -1)}`;\n  }\n}\n","<ng-template #matcherTpl\n             let-matcher=\"matcher\"\n             let-index=\"index\">\n  <div class=\"input-group my-2\">\n    <ng-container *ngFor=\"let config of matcherConfig\">\n      <span class=\"input-group-text\"\n            *ngIf=\"config.attribute === 'isRegex'\"\n            [ngbTooltip]=\"config.tooltip\">\n        <i *ngIf=\"matcher[config.attribute]\">~</i>\n        <i *ngIf=\"!matcher[config.attribute]\">=</i>\n      </span>\n\n      <ng-container *ngIf=\"config.attribute !== 'isRegex'\">\n        <input type=\"text\"\n               id=\"matcher-{{config.attribute}}-{{index}}\"\n               class=\"form-control\"\n               [value]=\"matcher[config.attribute]\"\n               disabled\n               readonly>\n      </ng-container>\n    </ng-container>\n\n    <!-- Matcher actions -->\n    <button type=\"button\"\n            class=\"btn btn-light\"\n            id=\"matcher-edit-{{index}}\"\n            i18n-ngbTooltip\n            ngbTooltip=\"Edit\"\n            (click)=\"showMatcherModal(index)\">\n      <i [ngClass]=\"[icons.edit]\"></i>\n    </button>\n    <button type=\"button\"\n            class=\"btn btn-light\"\n            id=\"matcher-delete-{{index}}\"\n            i18n-ngbTooltip\n            ngbTooltip=\"Delete\"\n            (click)=\"deleteMatcher(index)\">\n      <i [ngClass]=\"[icons.trash]\"></i>\n    </button>\n  </div>\n  <span class=\"help-block\"></span>\n</ng-template>\n\n<div class=\"cd-col-form\">\n  <form #formDir=\"ngForm\"\n        [formGroup]=\"form\"\n        class=\"form\"\n        name=\"form\"\n        novalidate>\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span i18n>{{ action | titlecase }} {{ resource | upperFirst }}</span>\n        <cd-helper *ngIf=\"edit\"\n                   i18n>Editing a silence will expire the old silence and recreate it as a new silence</cd-helper>\n      </div>\n\n      <!-- Creator -->\n      <div class=\"card-body\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"created-by\"\n                 i18n>Creator</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   formControlName=\"createdBy\"\n                   id=\"created-by\"\n                   name=\"created-by\"\n                   type=\"text\">\n            <span *ngIf=\"form.showError('createdBy', formDir, 'required')\"\n                  class=\"invalid-feedback\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <!-- Comment -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"comment\"\n                 i18n>Comment</label>\n          <div class=\"cd-col-form-input\">\n            <textarea class=\"form-control\"\n                      formControlName=\"comment\"\n                      id=\"comment\"\n                      name=\"comment\"\n                      type=\"text\">\n            </textarea>\n            <span *ngIf=\"form.showError('comment', formDir, 'required')\"\n                  class=\"invalid-feedback\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <!-- Start time -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"starts-at\">\n            <span class=\"required\"\n                  i18n>Start time</span>\n            <cd-helper i18n>If the start time lies in the past the creation time will be used</cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   formControlName=\"startsAt\"\n                   [ngbPopover]=\"popStart\"\n                   triggers=\"manual\"\n                   #ps=\"ngbPopover\"\n                   (click)=\"ps.open()\"\n                   (keypress)=\"ps.close()\">\n            <span *ngIf=\"form.showError('startsAt', formDir, 'required')\"\n                  class=\"invalid-feedback\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <!-- Duration -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"duration\"\n                 i18n>Duration</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   formControlName=\"duration\"\n                   id=\"duration\"\n                   name=\"duration\"\n                   type=\"text\">\n            <span *ngIf=\"form.showError('duration', formDir, 'required')\"\n                  class=\"invalid-feedback\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <!-- End time -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"ends-at\"\n                 i18n>End time</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   formControlName=\"endsAt\"\n                   [ngbPopover]=\"popEnd\"\n                   triggers=\"manual\"\n                   #pe=\"ngbPopover\"\n                   (click)=\"pe.open()\"\n                   (keypress)=\"pe.close()\">\n            <span *ngIf=\"form.showError('endsAt', formDir, 'required')\"\n                  class=\"invalid-feedback\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <!-- Matchers -->\n        <fieldset>\n          <legend class=\"required\"\n                  i18n>Matchers</legend>\n\n          <div class=\"cd-col-form-offset\">\n            <h5 *ngIf=\"matchers.length === 0\"\n                [ngClass]=\"{'text-warning': !formDir.submitted, 'text-danger': formDir.submitted}\">\n              <strong i18n>A silence requires at least one matcher</strong>\n            </h5>\n\n            <span *ngFor=\"let matcher of matchers; let i=index;\">\n              <ng-container *ngTemplateOutlet=\"matcherTpl; context:{index: i, matcher: matcher}\"></ng-container>\n            </span>\n\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <button type=\"button\"\n                        id=\"add-matcher\"\n                        class=\"btn btn-light float-end my-3\"\n                        [ngClass]=\"{'btn-warning': formDir.submitted && matchers.length === 0 }\"\n                        (click)=\"showMatcherModal()\">\n                  <i [ngClass]=\"[icons.add]\"></i>\n                  <ng-container i18n>Add matcher</ng-container>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"matchers.length && matcherMatch\"\n               class=\"cd-col-form-offset {{matcherMatch.cssClass}}\"\n               id=\"match-state\">\n            <span class=\"text-muted {{matcherMatch.cssClass}}\">\n              {{ matcherMatch.status }}\n            </span>\n          </div>\n        </fieldset>\n      </div>\n\n      <div class=\"card-footer\">\n        <div class=\"text-right\">\n          <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                                [form]=\"form\"\n                                [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"></cd-form-button-panel>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<ng-template #popStart>\n  <cd-date-time-picker [control]=\"form.get('startsAt')\"\n                       [hasSeconds]=\"false\"></cd-date-time-picker>\n</ng-template>\n\n\n<ng-template #popEnd>\n  <cd-date-time-picker [control]=\"form.get('endsAt')\"\n                       [hasSeconds]=\"false\"></cd-date-time-picker>\n</ng-template>\n","import { Component, Inject } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { SortDirection, SortPropDir } from '@swimlane/ngx-datatable';\nimport { Observable, Subscriber } from 'rxjs';\n\nimport { PrometheusListHelper } from '~/app/ceph/cluster/prometheus/prometheus-list-helper';\nimport { SilenceFormComponent } from '~/app/ceph/cluster/prometheus/silence-form/silence-form.component';\nimport { PrometheusService } from '~/app/shared/api/prometheus.service';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n, SucceededActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { AlertmanagerSilence } from '~/app/shared/models/alertmanager-silence';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { PrometheusRule } from '~/app/shared/models/prometheus-alerts';\nimport { CdDatePipe } from '~/app/shared/pipes/cd-date.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { PrometheusSilenceMatcherService } from '~/app/shared/services/prometheus-silence-matcher.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\n\nconst BASE_URL = 'monitoring/silences';\n\n@Component({\n  providers: [\n    { provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) },\n    SilenceFormComponent\n  ],\n  selector: 'cd-silences-list',\n  templateUrl: './silence-list.component.html',\n  styleUrls: ['./silence-list.component.scss']\n})\nexport class SilenceListComponent extends PrometheusListHelper {\n  silences: AlertmanagerSilence[] = [];\n  columns: CdTableColumn[];\n  tableActions: CdTableAction[];\n  permission: Permission;\n  selection = new CdTableSelection();\n  modalRef: NgbModalRef;\n  customCss = {\n    'badge badge-danger': 'active',\n    'badge badge-warning': 'pending',\n    'badge badge-default': 'expired'\n  };\n  sorts: SortPropDir[] = [{ prop: 'endsAt', dir: SortDirection.desc }];\n  rules: PrometheusRule[];\n  visited: boolean;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private cdDatePipe: CdDatePipe,\n    private modalService: ModalService,\n    private notificationService: NotificationService,\n    private urlBuilder: URLBuilderService,\n    private actionLabels: ActionLabelsI18n,\n    private succeededLabels: SucceededActionLabelsI18n,\n    private silenceFormComponent: SilenceFormComponent,\n    private silenceMatcher: PrometheusSilenceMatcherService,\n    @Inject(PrometheusService) prometheusService: PrometheusService\n  ) {\n    super(prometheusService);\n    this.permission = this.authStorageService.getPermissions().prometheus;\n    const selectionExpired = (selection: CdTableSelection) =>\n      selection.first() && selection.first().status && selection.first().status.state === 'expired';\n    this.tableActions = [\n      {\n        permission: 'create',\n        icon: Icons.add,\n        routerLink: () => this.urlBuilder.getCreate(),\n        canBePrimary: (selection: CdTableSelection) => !selection.hasSingleSelection,\n        name: this.actionLabels.CREATE\n      },\n      {\n        permission: 'create',\n        canBePrimary: (selection: CdTableSelection) =>\n          selection.hasSingleSelection && selectionExpired(selection),\n        disable: (selection: CdTableSelection) =>\n          !selection.hasSingleSelection ||\n          selection.first().cdExecuting ||\n          (selection.first().cdExecuting && selectionExpired(selection)) ||\n          !selectionExpired(selection),\n        icon: Icons.copy,\n        routerLink: () => this.urlBuilder.getRecreate(this.selection.first().id),\n        name: this.actionLabels.RECREATE\n      },\n      {\n        permission: 'update',\n        icon: Icons.edit,\n        canBePrimary: (selection: CdTableSelection) =>\n          selection.hasSingleSelection && !selectionExpired(selection),\n        disable: (selection: CdTableSelection) =>\n          !selection.hasSingleSelection ||\n          selection.first().cdExecuting ||\n          (selection.first().cdExecuting && !selectionExpired(selection)) ||\n          selectionExpired(selection),\n        routerLink: () => this.urlBuilder.getEdit(this.selection.first().id),\n        name: this.actionLabels.EDIT\n      },\n      {\n        permission: 'delete',\n        icon: Icons.trash,\n        canBePrimary: (selection: CdTableSelection) =>\n          selection.hasSingleSelection && !selectionExpired(selection),\n        disable: (selection: CdTableSelection) =>\n          !selection.hasSingleSelection ||\n          selection.first().cdExecuting ||\n          selectionExpired(selection),\n        click: () => this.expireSilence(),\n        name: this.actionLabels.EXPIRE\n      }\n    ];\n    this.columns = [\n      {\n        name: $localize`ID`,\n        prop: 'id',\n        flexGrow: 3\n      },\n      {\n        name: $localize`Alerts Silenced`,\n        prop: 'silencedAlerts',\n        flexGrow: 3,\n        cellTransformation: CellTemplate.badge\n      },\n      {\n        name: $localize`Created by`,\n        prop: 'createdBy',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Started`,\n        prop: 'startsAt',\n        pipe: this.cdDatePipe\n      },\n      {\n        name: $localize`Updated`,\n        prop: 'updatedAt',\n        pipe: this.cdDatePipe\n      },\n      {\n        name: $localize`Ends`,\n        prop: 'endsAt',\n        pipe: this.cdDatePipe\n      },\n      {\n        name: $localize`Status`,\n        prop: 'status.state',\n        cellTransformation: CellTemplate.classAdding\n      }\n    ];\n  }\n\n  refresh() {\n    this.prometheusService.ifAlertmanagerConfigured(() => {\n      this.prometheusService.getSilences().subscribe(\n        (silences) => {\n          this.silences = silences;\n          const activeSilences = silences.filter(\n            (silence: AlertmanagerSilence) => silence.status.state !== 'expired'\n          );\n          this.getAlerts(activeSilences);\n        },\n        () => {\n          this.prometheusService.disableAlertmanagerConfig();\n        }\n      );\n    });\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  getAlerts(silences: any) {\n    const rules = this.silenceFormComponent.getRules();\n    silences.forEach((silence: any) => {\n      silence.matchers.forEach((matcher: any) => {\n        this.rules = this.silenceMatcher.getMatchedRules(matcher, rules);\n        const alertNames: string[] = [];\n        for (const rule of this.rules) {\n          alertNames.push(rule.name);\n        }\n        silence.silencedAlerts = alertNames;\n      });\n    });\n  }\n\n  expireSilence() {\n    const id = this.selection.first().id;\n    const i18nSilence = $localize`Silence`;\n    const applicationName = 'Prometheus';\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: i18nSilence,\n      itemNames: [id],\n      actionDescription: this.actionLabels.EXPIRE,\n      submitActionObservable: () =>\n        new Observable((observer: Subscriber<any>) => {\n          this.prometheusService.expireSilence(id).subscribe(\n            () => {\n              this.notificationService.show(\n                NotificationType.success,\n                `${this.succeededLabels.EXPIRED} ${i18nSilence} ${id}`,\n                undefined,\n                undefined,\n                applicationName\n              );\n            },\n            (resp) => {\n              resp['application'] = applicationName;\n              observer.error(resp);\n            },\n            () => {\n              observer.complete();\n              this.refresh();\n            }\n          );\n        })\n    });\n  }\n}\n","<cd-prometheus-tabs></cd-prometheus-tabs>\n\n<cd-alert-panel *ngIf=\"!isAlertmanagerConfigured\"\n                type=\"info\"\n                i18n>To enable Silences, please provide the URL to\n  the API of the Prometheus' Alertmanager as described in the\n  <cd-doc section=\"prometheus\"></cd-doc>.</cd-alert-panel>\n\n<cd-table *ngIf=\"isAlertmanagerConfigured\"\n          [data]=\"silences\"\n          [columns]=\"columns\"\n          [forceIdentifier]=\"true\"\n          [customCss]=\"customCss\"\n          [sorts]=\"sorts\"\n          selectionType=\"single\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (fetchData)=\"refresh()\"\n          (updateSelection)=\"updateSelection($event)\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n  <cd-table-key-value cdTableDetail\n                      *ngIf=\"expandedRow\"\n                      [renderObjects]=\"true\"\n                      [hideEmpty]=\"true\"\n                      [appendParentKey]=\"false\"\n                      [data]=\"expandedRow\"\n                      [customCss]=\"customCss\"\n                      [autoReload]=\"false\">\n  </cd-table-key-value>\n</cd-table>\n","import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { NgbActiveModal, NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport {\n  AlertmanagerSilenceMatcher,\n  AlertmanagerSilenceMatcherMatch\n} from '~/app/shared/models/alertmanager-silence';\nimport { PrometheusRule } from '~/app/shared/models/prometheus-alerts';\nimport { PrometheusSilenceMatcherService } from '~/app/shared/services/prometheus-silence-matcher.service';\n\n@Component({\n  selector: 'cd-silence-matcher-modal',\n  templateUrl: './silence-matcher-modal.component.html',\n  styleUrls: ['./silence-matcher-modal.component.scss']\n})\nexport class SilenceMatcherModalComponent {\n  @ViewChild(NgbTypeahead, { static: true })\n  typeahead: NgbTypeahead;\n  @Output()\n  submitAction = new EventEmitter();\n\n  form: CdFormGroup;\n  editMode = false;\n  rules: PrometheusRule[];\n  nameAttributes = ['alertname', 'instance', 'job', 'severity'];\n  possibleValues: string[] = [];\n  matcherMatch: AlertmanagerSilenceMatcherMatch = undefined;\n\n  // For typeahead usage\n  valueClick = new Subject<string>();\n  valueFocus = new Subject<string>();\n  search = (text$: Observable<string>) => {\n    return merge(\n      text$.pipe(debounceTime(200), distinctUntilChanged()),\n      this.valueFocus,\n      this.valueClick.pipe(filter(() => !this.typeahead.isPopupOpen()))\n    ).pipe(\n      map((term) =>\n        (term === ''\n          ? this.possibleValues\n          : this.possibleValues.filter((v) => v.toLowerCase().indexOf(term.toLowerCase()) > -1)\n        ).slice(0, 10)\n      )\n    );\n  };\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    private silenceMatcher: PrometheusSilenceMatcherService,\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    this.createForm();\n    this.subscribeToChanges();\n  }\n\n  private createForm() {\n    this.form = this.formBuilder.group({\n      name: [null, [Validators.required]],\n      value: [{ value: '', disabled: true }, [Validators.required]],\n      isRegex: new FormControl(false)\n    });\n  }\n\n  private subscribeToChanges() {\n    this.form.get('name').valueChanges.subscribe((name) => {\n      if (name === null) {\n        this.form.get('value').disable();\n        return;\n      }\n      this.setPossibleValues(name);\n      this.form.get('value').enable();\n    });\n    this.form.get('value').valueChanges.subscribe((value) => {\n      const values = this.form.value;\n      values.value = value; // Isn't the current value at this stage\n      this.matcherMatch = this.silenceMatcher.singleMatch(values, this.rules);\n    });\n  }\n\n  private setPossibleValues(name: string) {\n    this.possibleValues = _.sortedUniq(\n      this.rules.map((r) => _.get(r, this.silenceMatcher.getAttributePath(name))).filter((x) => x)\n    );\n  }\n\n  getMode() {\n    return this.editMode ? this.actionLabels.EDIT : this.actionLabels.ADD;\n  }\n\n  preFillControls(matcher: AlertmanagerSilenceMatcher) {\n    this.form.setValue(matcher);\n  }\n\n  onSubmit() {\n    this.submitAction.emit(this.form.value);\n    this.activeModal.close();\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <span class=\"modal-title\"\n        i18n>{editMode, select, true {Edit} other {Add}} Matcher</span>\n\n  <ng-container class=\"modal-content\">\n    <form class=\"form\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"form\"\n          novalidate>\n      <div class=\"modal-body\">\n        <!-- Name -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"name\"\n                 i18n>Name</label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"name\"\n                    formControlName=\"name\"\n                    name=\"name\">\n              <option [ngValue]=\"null\"\n                      i18n>-- Select an attribute to match against --</option>\n              <option *ngFor=\"let attribute of nameAttributes\"\n                      [value]=\"attribute\">\n                {{ attribute }}\n              </option>\n            </select>\n            <span class=\"help-block\"\n                  *ngIf=\"form.showError('name', formDir, 'required')\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <!-- Value -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"value\"\n                 i18n>Value</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"value\"\n                   (focus)=\"valueFocus.next($any($event).target.value)\"\n                   (click)=\"valueClick.next($any($event).target.value)\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   [ngbTypeahead]=\"search\"\n                   formControlName=\"value\"\n                   #instance=\"ngbTypeahead\">\n            <span *ngIf=\"form.showError('value', formDir, 'required')\"\n                  class=\"help-block\"\n                  i18n>This field is required!</span>\n          </div>\n          <div *ngIf=\"form.getValue('value') && !form.getValue('isRegex') && matcherMatch\"\n               class=\"cd-col-form-offset {{matcherMatch.cssClass}}\"\n               id=\"match-state\">\n            <span class=\"text-muted {{matcherMatch.cssClass}}\">\n              {{matcherMatch.status}}\n            </span>\n          </div>\n        </div>\n\n        <!-- isRegex -->\n        <div class=\"form-group row\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     formControlName=\"isRegex\"\n                     name=\"is-regex\"\n                     id=\"is-regex\">\n              <label for=\"is-regex\"\n                     class=\"custom-control-label\"\n                     i18n>Use regular expression</label>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"form\"\n                              [submitText]=\"getMode()\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'placement'\n})\nexport class PlacementPipe implements PipeTransform {\n  /**\n   * Convert the placement configuration into human readable form.\n   * The output is equal to the column 'PLACEMENT' in 'ceph orch ls'.\n   * @param serviceSpec The service specification to process.\n   * @return The placement configuration as human readable string.\n   */\n  transform(serviceSpec: object | undefined): string {\n    if (_.isUndefined(serviceSpec)) {\n      return $localize`no spec`;\n    }\n    if (_.get(serviceSpec, 'unmanaged', false)) {\n      return $localize`unmanaged`;\n    }\n    const kv: Array<any> = [];\n    const hosts: Array<string> = _.get(serviceSpec, 'placement.hosts');\n    const count: number = _.get(serviceSpec, 'placement.count');\n    const label: string = _.get(serviceSpec, 'placement.label');\n    const hostPattern: string = _.get(serviceSpec, 'placement.host_pattern');\n    if (_.isArray(hosts)) {\n      kv.push(...hosts);\n    }\n    if (_.isNumber(count)) {\n      kv.push($localize`count:${count}`);\n    }\n    if (_.isString(label)) {\n      kv.push($localize`label:${label}`);\n    }\n    if (_.isString(hostPattern)) {\n      kv.push(hostPattern);\n    }\n    return kv.join(';');\n  }\n}\n","import { HttpParams } from '@angular/common/http';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\n\nimport _ from 'lodash';\nimport { Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { CephServiceService } from '~/app/shared/api/ceph-service.service';\nimport { DaemonService } from '~/app/shared/api/daemon.service';\nimport { HostService } from '~/app/shared/api/host.service';\nimport { OrchestratorService } from '~/app/shared/api/orchestrator.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Daemon } from '~/app/shared/models/daemon.interface';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { CephServiceSpec } from '~/app/shared/models/service.interface';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { RelativeDatePipe } from '~/app/shared/pipes/relative-date.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-service-daemon-list',\n  templateUrl: './service-daemon-list.component.html',\n  styleUrls: ['./service-daemon-list.component.scss']\n})\nexport class ServiceDaemonListComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @ViewChild('statusTpl', { static: true })\n  statusTpl: TemplateRef<any>;\n\n  @ViewChild('listTpl', { static: true })\n  listTpl: TemplateRef<any>;\n\n  @ViewChild('cpuTpl', { static: true })\n  cpuTpl: TemplateRef<any>;\n\n  @ViewChildren('daemonsTable')\n  daemonsTableTpls: QueryList<TemplateRef<TableComponent>>;\n\n  @Input()\n  serviceName?: string;\n\n  @Input()\n  hostname?: string;\n\n  @Input()\n  hiddenColumns: string[] = [];\n\n  @Input()\n  flag?: string;\n\n  total = 100;\n\n  warningThreshold = 0.8;\n\n  errorThreshold = 0.9;\n\n  icons = Icons;\n\n  daemons: Daemon[] = [];\n  services: Array<CephServiceSpec> = [];\n  columns: CdTableColumn[] = [];\n  serviceColumns: CdTableColumn[] = [];\n  tableActions: CdTableAction[];\n  selection = new CdTableSelection();\n  permissions: Permissions;\n\n  hasOrchestrator = false;\n  showDocPanel = false;\n\n  private daemonsTable: TableComponent;\n  private daemonsTableTplsSub: Subscription;\n  private serviceSub: Subscription;\n\n  constructor(\n    private hostService: HostService,\n    private cephServiceService: CephServiceService,\n    private orchService: OrchestratorService,\n    private relativeDatePipe: RelativeDatePipe,\n    private dimlessBinary: DimlessBinaryPipe,\n    public actionLabels: ActionLabelsI18n,\n    private authStorageService: AuthStorageService,\n    private daemonService: DaemonService,\n    private notificationService: NotificationService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.permissions = this.authStorageService.getPermissions();\n    this.tableActions = [\n      {\n        permission: 'update',\n        icon: Icons.start,\n        click: () => this.daemonAction('start'),\n        name: this.actionLabels.START,\n        disable: () => this.actionDisabled('start')\n      },\n      {\n        permission: 'update',\n        icon: Icons.stop,\n        click: () => this.daemonAction('stop'),\n        name: this.actionLabels.STOP,\n        disable: () => this.actionDisabled('stop')\n      },\n      {\n        permission: 'update',\n        icon: Icons.restart,\n        click: () => this.daemonAction('restart'),\n        name: this.actionLabels.RESTART,\n        disable: () => this.actionDisabled('restart')\n      },\n      {\n        permission: 'update',\n        icon: Icons.deploy,\n        click: () => this.daemonAction('redeploy'),\n        name: this.actionLabels.REDEPLOY,\n        disable: () => this.actionDisabled('redeploy')\n      }\n    ];\n    this.columns = [\n      {\n        name: $localize`Hostname`,\n        prop: 'hostname',\n        flexGrow: 2,\n        filterable: true\n      },\n      {\n        name: $localize`Daemon name`,\n        prop: 'daemon_name',\n        flexGrow: 1,\n        filterable: true\n      },\n      {\n        name: $localize`Version`,\n        prop: 'version',\n        flexGrow: 1,\n        filterable: true\n      },\n      {\n        name: $localize`Status`,\n        prop: 'status_desc',\n        flexGrow: 1,\n        filterable: true,\n        cellTemplate: this.statusTpl\n      },\n      {\n        name: $localize`Last Refreshed`,\n        prop: 'last_refresh',\n        pipe: this.relativeDatePipe,\n        flexGrow: 1\n      },\n      {\n        name: $localize`CPU Usage`,\n        prop: 'cpu_percentage',\n        flexGrow: 1,\n        cellTemplate: this.cpuTpl\n      },\n      {\n        name: $localize`Memory Usage`,\n        prop: 'memory_usage',\n        flexGrow: 1,\n        pipe: this.dimlessBinary,\n        cellClass: 'text-right'\n      },\n      {\n        name: $localize`Daemon Events`,\n        prop: 'events',\n        flexGrow: 2,\n        cellTemplate: this.listTpl\n      }\n    ];\n\n    this.serviceColumns = [\n      {\n        name: $localize`Service Name`,\n        prop: 'service_name',\n        flexGrow: 2,\n        filterable: true\n      },\n      {\n        name: $localize`Service Type`,\n        prop: 'service_type',\n        flexGrow: 1,\n        filterable: true\n      },\n      {\n        name: $localize`Service Events`,\n        prop: 'events',\n        flexGrow: 5,\n        cellTemplate: this.listTpl\n      }\n    ];\n\n    this.orchService.status().subscribe((data: { available: boolean }) => {\n      this.hasOrchestrator = data.available;\n      this.showDocPanel = !data.available;\n    });\n\n    this.columns = this.columns.filter((col: any) => {\n      return !this.hiddenColumns.includes(col.prop);\n    });\n\n    setTimeout(() => {\n      this.cdRef.detectChanges();\n    }, 1000);\n  }\n\n  ngOnChanges() {\n    if (!_.isUndefined(this.daemonsTable)) {\n      this.daemonsTable.reloadData();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.daemonsTableTplsSub = this.daemonsTableTpls.changes.subscribe(\n      (tableRefs: QueryList<TableComponent>) => {\n        this.daemonsTable = tableRefs.first;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.daemonsTableTplsSub) {\n      this.daemonsTableTplsSub.unsubscribe();\n    }\n    if (this.serviceSub) {\n      this.serviceSub.unsubscribe();\n    }\n  }\n\n  getStatusClass(row: Daemon): string {\n    return _.get(\n      {\n        '-1': 'badge-danger',\n        '0': 'badge-warning',\n        '1': 'badge-success'\n      },\n      row.status,\n      'badge-dark'\n    );\n  }\n\n  getDaemons(context: CdTableFetchDataContext) {\n    let observable: Observable<Daemon[]>;\n    if (this.hostname) {\n      observable = this.hostService.getDaemons(this.hostname);\n    } else if (this.serviceName) {\n      observable = this.cephServiceService.getDaemons(this.serviceName);\n    } else {\n      this.daemons = [];\n      return;\n    }\n    observable.subscribe(\n      (daemons: Daemon[]) => {\n        this.daemons = daemons;\n        this.sortDaemonEvents();\n      },\n      () => {\n        this.daemons = [];\n        context.error();\n      }\n    );\n  }\n\n  sortDaemonEvents() {\n    this.daemons.forEach((daemon: any) => {\n      daemon.events?.sort((event1: any, event2: any) => {\n        return new Date(event2.created).getTime() - new Date(event1.created).getTime();\n      });\n    });\n  }\n  getServices(context: CdTableFetchDataContext) {\n    this.serviceSub = this.cephServiceService\n      .list(new HttpParams({ fromObject: { limit: -1, offset: 0 } }), this.serviceName)\n      .observable.subscribe(\n        (services: CephServiceSpec[]) => {\n          this.services = services;\n        },\n        () => {\n          this.services = [];\n          context.error();\n        }\n      );\n  }\n\n  trackByFn(_index: any, item: any) {\n    return item.created;\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  daemonAction(actionType: string) {\n    this.daemonService\n      .action(this.selection.first()?.daemon_name, actionType)\n      .pipe(take(1))\n      .subscribe({\n        next: (resp) => {\n          this.notificationService.show(\n            NotificationType.success,\n            `Daemon ${actionType} scheduled`,\n            resp.body.toString()\n          );\n        },\n        error: (resp) => {\n          this.notificationService.show(\n            NotificationType.error,\n            'Daemon action failed',\n            resp.body.toString()\n          );\n        }\n      });\n  }\n\n  actionDisabled(actionType: string) {\n    if (this.selection?.hasSelection) {\n      const daemon = this.selection.selected[0];\n      if (daemon.daemon_type === 'mon' || daemon.daemon_type === 'mgr') {\n        return true; // don't allow actions on mon and mgr, dashboard requires them.\n      }\n      switch (actionType) {\n        case 'start':\n          if (daemon.status_desc === 'running') {\n            return true;\n          }\n          break;\n        case 'stop':\n          if (daemon.status_desc === 'stopped') {\n            return true;\n          }\n          break;\n      }\n      return false;\n    }\n    return true; // if no selection then disable everything\n  }\n}\n","<cd-orchestrator-doc-panel *ngIf=\"showDocPanel\"></cd-orchestrator-doc-panel>\n\n<div *ngIf=\"flag === 'hostDetails'; else serviceDetailsTpl\">\n  <ng-container *ngTemplateOutlet=\"serviceDaemonDetailsTpl\"></ng-container>\n</div>\n\n<ng-template #serviceDetailsTpl>\n  <ng-container>\n    <nav ngbNav\n         #nav=\"ngbNav\"\n         class=\"nav-tabs\"\n         cdStatefulTab=\"service-details\">\n      <ng-container ngbNavItem=\"details\">\n        <a ngbNavLink\n           i18n>Details</a>\n        <ng-template ngbNavContent>\n          <ng-container *ngTemplateOutlet=\"serviceDaemonDetailsTpl\"></ng-container>\n        </ng-template>\n      </ng-container>\n      <ng-container ngbNavItem=\"service_events\">\n        <a ngbNavLink\n           i18n>Service Events</a>\n        <ng-template ngbNavContent>\n          <cd-table *ngIf=\"hasOrchestrator\"\n                    #serviceTable\n                    [data]=\"services\"\n                    [columns]=\"serviceColumns\"\n                    columnMode=\"flex\"\n                    (fetchData)=\"getServices($event)\">\n          </cd-table>\n        </ng-template>\n      </ng-container>\n    </nav>\n    <div [ngbNavOutlet]=\"nav\"></div>\n  </ng-container>\n</ng-template>\n\n<ng-template #statusTpl\n             let-row=\"row\">\n  <span class=\"badge\"\n        [ngClass]=\"row | pipeFunction:getStatusClass\">\n    {{ row.status_desc }}\n  </span>\n</ng-template>\n\n<ng-template #listTpl\n             let-events=\"value\">\n  <ul class=\"list-group list-group-flush\"\n      *ngIf=\"events?.length else noEventsAvailable\">\n    <li class=\"list-group-item\"\n        *ngFor=\"let event of events; trackBy:trackByFn\">\n      <b>{{ event.created | relativeDate }} - </b>\n      <span class=\"badge badge-info\">{{ event.subject }}</span><br>\n      <span *ngIf=\"event.level === 'INFO'\">\n      <i [ngClass]=\"[icons.infoCircle]\"\n         aria-hidden=\"true\"></i>\n      </span>\n      <span *ngIf=\"event.level === 'ERROR'\">\n      <i [ngClass]=\"[icons.warning]\"\n         aria-hidden=\"true\"></i>\n      </span>\n      {{ event.message }}\n    </li>\n  </ul>\n  <ng-template #noEventsAvailable>\n    <div *ngIf=\"events?.length === 0\"\n         class=\"list-group-item\">\n      <span>No data available</span>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #serviceDaemonDetailsTpl>\n  <cd-table *ngIf=\"hasOrchestrator\"\n            #daemonsTable\n            [data]=\"daemons\"\n            selectionType=\"single\"\n            [columns]=\"columns\"\n            columnMode=\"flex\"\n            identifier=\"daemon_name\"\n            (fetchData)=\"getDaemons($event)\"\n            (updateSelection)=\"updateSelection($event)\">\n    <cd-table-actions id=\"service-daemon-list-actions\"\n                      class=\"table-actions\"\n                      [selection]=\"selection\"\n                      [permission]=\"permissions.hosts\"\n                      [tableActions]=\"tableActions\">\n    </cd-table-actions>\n  </cd-table>\n</ng-template>\n\n<ng-template #cpuTpl\n             let-row=\"row\">\n  <cd-usage-bar [total]=\"total\"\n                [calculatePerc]=\"false\"\n                [used]=\"row.cpu_percentage\"\n                [isBinary]=\"false\"\n                [warningThreshold]=\"warningThreshold\"\n                [errorThreshold]=\"errorThreshold\">\n  </cd-usage-bar>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permissions } from '~/app/shared/models/permissions';\n\n@Component({\n  selector: 'cd-service-details',\n  templateUrl: './service-details.component.html',\n  styleUrls: ['./service-details.component.scss']\n})\nexport class ServiceDetailsComponent {\n  @Input()\n  permissions: Permissions;\n\n  @Input()\n  selection: CdTableSelection;\n}\n","<ng-container *ngIf=\"selection\">\n  <cd-service-daemon-list [serviceName]=\"selection['service_name']\">\n  </cd-service-daemon-list>\n</ng-container>\n","import { HttpParams } from '@angular/common/http';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NgbActiveModal, NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { CephServiceService } from '~/app/shared/api/ceph-service.service';\nimport { HostService } from '~/app/shared/api/host.service';\nimport { PoolService } from '~/app/shared/api/pool.service';\nimport { SelectMessages } from '~/app/shared/components/select/select-messages.model';\nimport { SelectOption } from '~/app/shared/components/select/select-option.model';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { CephServiceSpec } from '~/app/shared/models/service.interface';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-service-form',\n  templateUrl: './service-form.component.html',\n  styleUrls: ['./service-form.component.scss']\n})\nexport class ServiceFormComponent extends CdForm implements OnInit {\n  readonly RGW_SVC_ID_PATTERN = /^([^.]+)(\\.([^.]+)\\.([^.]+))?$/;\n  readonly MDS_SVC_ID_PATTERN = /^[a-zA-Z_.-][a-zA-Z0-9_.-]*$/;\n  readonly SNMP_DESTINATION_PATTERN = /^[^\\:]+:[0-9]/;\n  readonly SNMP_ENGINE_ID_PATTERN = /^[0-9A-Fa-f]{10,64}/g;\n  readonly INGRESS_SUPPORTED_SERVICE_TYPES = ['rgw', 'nfs'];\n  @ViewChild(NgbTypeahead, { static: false })\n  typeahead: NgbTypeahead;\n\n  @Input() hiddenServices: string[] = [];\n\n  @Input() editing = false;\n\n  @Input() serviceName: string;\n\n  @Input() serviceType: string;\n\n  serviceForm: CdFormGroup;\n  action: string;\n  resource: string;\n  serviceTypes: string[] = [];\n  serviceIds: string[] = [];\n  hosts: any;\n  labels: string[];\n  labelClick = new Subject<string>();\n  labelFocus = new Subject<string>();\n  pools: Array<object>;\n  services: Array<CephServiceSpec> = [];\n  pageURL: string;\n  serviceList: CephServiceSpec[];\n\n  constructor(\n    public actionLabels: ActionLabelsI18n,\n    private cephServiceService: CephServiceService,\n    private formBuilder: CdFormBuilder,\n    private hostService: HostService,\n    private poolService: PoolService,\n    private router: Router,\n    private taskWrapperService: TaskWrapperService,\n    private route: ActivatedRoute,\n    public activeModal: NgbActiveModal\n  ) {\n    super();\n    this.resource = $localize`service`;\n    this.hosts = {\n      options: [],\n      messages: new SelectMessages({\n        empty: $localize`There are no hosts.`,\n        filter: $localize`Filter hosts`\n      })\n    };\n    this.createForm();\n  }\n\n  createForm() {\n    this.serviceForm = this.formBuilder.group({\n      // Global\n      service_type: [null, [Validators.required]],\n      service_id: [\n        null,\n        [\n          CdValidators.composeIf(\n            {\n              service_type: 'mds'\n            },\n            [\n              Validators.required,\n              CdValidators.custom('mdsPattern', (value: string) => {\n                if (_.isEmpty(value)) {\n                  return false;\n                }\n                return !this.MDS_SVC_ID_PATTERN.test(value);\n              })\n            ]\n          ),\n          CdValidators.requiredIf({\n            service_type: 'nfs'\n          }),\n          CdValidators.requiredIf({\n            service_type: 'iscsi'\n          }),\n          CdValidators.requiredIf({\n            service_type: 'ingress'\n          }),\n          CdValidators.composeIf(\n            {\n              service_type: 'rgw'\n            },\n            [\n              Validators.required,\n              CdValidators.custom('rgwPattern', (value: string) => {\n                if (_.isEmpty(value)) {\n                  return false;\n                }\n                return !this.RGW_SVC_ID_PATTERN.test(value);\n              })\n            ]\n          ),\n          CdValidators.custom('uniqueName', (service_id: string) => {\n            return this.serviceIds && this.serviceIds.includes(service_id);\n          })\n        ]\n      ],\n      placement: ['hosts'],\n      label: [\n        null,\n        [\n          CdValidators.requiredIf({\n            placement: 'label',\n            unmanaged: false\n          })\n        ]\n      ],\n      hosts: [[]],\n      count: [null, [CdValidators.number(false)]],\n      unmanaged: [false],\n      // iSCSI\n      pool: [\n        null,\n        [\n          CdValidators.requiredIf({\n            service_type: 'iscsi'\n          })\n        ]\n      ],\n      // RGW\n      rgw_frontend_port: [null, [CdValidators.number(false)]],\n      // iSCSI\n      trusted_ip_list: [null],\n      api_port: [null, [CdValidators.number(false)]],\n      api_user: [\n        null,\n        [\n          CdValidators.requiredIf({\n            service_type: 'iscsi',\n            unmanaged: false\n          })\n        ]\n      ],\n      api_password: [\n        null,\n        [\n          CdValidators.requiredIf({\n            service_type: 'iscsi',\n            unmanaged: false\n          })\n        ]\n      ],\n      // Ingress\n      backend_service: [\n        null,\n        [\n          CdValidators.requiredIf({\n            service_type: 'ingress'\n          })\n        ]\n      ],\n      virtual_ip: [\n        null,\n        [\n          CdValidators.requiredIf({\n            service_type: 'ingress'\n          })\n        ]\n      ],\n      frontend_port: [\n        null,\n        [\n          CdValidators.number(false),\n          CdValidators.requiredIf({\n            service_type: 'ingress'\n          })\n        ]\n      ],\n      monitor_port: [\n        null,\n        [\n          CdValidators.number(false),\n          CdValidators.requiredIf({\n            service_type: 'ingress'\n          })\n        ]\n      ],\n      virtual_interface_networks: [null],\n      // RGW, Ingress & iSCSI\n      ssl: [false],\n      ssl_cert: [\n        '',\n        [\n          CdValidators.composeIf(\n            {\n              service_type: 'rgw',\n              unmanaged: false,\n              ssl: true\n            },\n            [Validators.required, CdValidators.pemCert()]\n          ),\n          CdValidators.composeIf(\n            {\n              service_type: 'iscsi',\n              unmanaged: false,\n              ssl: true\n            },\n            [Validators.required, CdValidators.sslCert()]\n          ),\n          CdValidators.composeIf(\n            {\n              service_type: 'ingress',\n              unmanaged: false,\n              ssl: true\n            },\n            [Validators.required, CdValidators.pemCert()]\n          )\n        ]\n      ],\n      ssl_key: [\n        '',\n        [\n          CdValidators.composeIf(\n            {\n              service_type: 'iscsi',\n              unmanaged: false,\n              ssl: true\n            },\n            [Validators.required, CdValidators.sslPrivKey()]\n          )\n        ]\n      ],\n      // snmp-gateway\n      snmp_version: [\n        null,\n        [\n          CdValidators.requiredIf({\n            service_type: 'snmp-gateway'\n          })\n        ]\n      ],\n      snmp_destination: [\n        null,\n        {\n          validators: [\n            CdValidators.requiredIf({\n              service_type: 'snmp-gateway'\n            }),\n            CdValidators.custom('snmpDestinationPattern', (value: string) => {\n              if (_.isEmpty(value)) {\n                return false;\n              }\n              return !this.SNMP_DESTINATION_PATTERN.test(value);\n            })\n          ]\n        }\n      ],\n      engine_id: [\n        null,\n        [\n          CdValidators.requiredIf({\n            service_type: 'snmp-gateway'\n          }),\n          CdValidators.custom('snmpEngineIdPattern', (value: string) => {\n            if (_.isEmpty(value)) {\n              return false;\n            }\n            return !this.SNMP_ENGINE_ID_PATTERN.test(value);\n          })\n        ]\n      ],\n      auth_protocol: [\n        'SHA',\n        [\n          CdValidators.requiredIf({\n            service_type: 'snmp-gateway'\n          })\n        ]\n      ],\n      privacy_protocol: [null],\n      snmp_community: [\n        null,\n        [\n          CdValidators.requiredIf({\n            snmp_version: 'V2c'\n          })\n        ]\n      ],\n      snmp_v3_auth_username: [\n        null,\n        [\n          CdValidators.requiredIf({\n            service_type: 'snmp-gateway'\n          })\n        ]\n      ],\n      snmp_v3_auth_password: [\n        null,\n        [\n          CdValidators.requiredIf({\n            service_type: 'snmp-gateway'\n          })\n        ]\n      ],\n      snmp_v3_priv_password: [\n        null,\n        [\n          CdValidators.requiredIf({\n            privacy_protocol: { op: '!empty' }\n          })\n        ]\n      ]\n    });\n  }\n\n  ngOnInit(): void {\n    this.action = this.actionLabels.CREATE;\n    if (this.router.url.includes('services/(modal:create')) {\n      this.pageURL = 'services';\n    } else if (this.router.url.includes('services/(modal:edit')) {\n      this.editing = true;\n      this.pageURL = 'services';\n      this.route.params.subscribe((params: { type: string; name: string }) => {\n        this.serviceName = params.name;\n        this.serviceType = params.type;\n      });\n    }\n\n    this.cephServiceService\n      .list(new HttpParams({ fromObject: { limit: -1, offset: 0 } }))\n      .observable.subscribe((services: CephServiceSpec[]) => {\n        this.serviceList = services;\n        this.services = services.filter((service: any) =>\n          this.INGRESS_SUPPORTED_SERVICE_TYPES.includes(service.service_type)\n        );\n      });\n\n    this.cephServiceService.getKnownTypes().subscribe((resp: Array<string>) => {\n      // Remove service types:\n      // osd       - This is deployed a different way.\n      // container - This should only be used in the CLI.\n      this.hiddenServices.push('osd', 'container');\n\n      this.serviceTypes = _.difference(resp, this.hiddenServices).sort();\n    });\n    this.hostService.list('false').subscribe((resp: object[]) => {\n      const options: SelectOption[] = [];\n      _.forEach(resp, (host: object) => {\n        if (_.get(host, 'sources.orchestrator', false)) {\n          const option = new SelectOption(false, _.get(host, 'hostname'), '');\n          options.push(option);\n        }\n      });\n      this.hosts.options = [...options];\n    });\n    this.hostService.getLabels().subscribe((resp: string[]) => {\n      this.labels = resp;\n    });\n    this.poolService.getList().subscribe((resp: Array<object>) => {\n      this.pools = resp;\n    });\n\n    if (this.editing) {\n      this.action = this.actionLabels.EDIT;\n      this.disableForEditing(this.serviceType);\n      this.cephServiceService\n        .list(new HttpParams({ fromObject: { limit: -1, offset: 0 } }), this.serviceName)\n        .observable.subscribe((response: CephServiceSpec[]) => {\n          const formKeys = ['service_type', 'service_id', 'unmanaged'];\n          formKeys.forEach((keys) => {\n            this.serviceForm.get(keys).setValue(response[0][keys]);\n          });\n          if (!response[0]['unmanaged']) {\n            const placementKey = Object.keys(response[0]['placement'])[0];\n            let placementValue: string;\n            ['hosts', 'label'].indexOf(placementKey) >= 0\n              ? (placementValue = placementKey)\n              : (placementValue = 'hosts');\n            this.serviceForm.get('placement').setValue(placementValue);\n            this.serviceForm.get('count').setValue(response[0]['placement']['count']);\n            if (response[0]?.placement[placementValue]) {\n              this.serviceForm.get(placementValue).setValue(response[0]?.placement[placementValue]);\n            }\n          }\n          switch (this.serviceType) {\n            case 'iscsi':\n              const specKeys = ['pool', 'api_password', 'api_user', 'trusted_ip_list', 'api_port'];\n              specKeys.forEach((key) => {\n                this.serviceForm.get(key).setValue(response[0].spec[key]);\n              });\n              this.serviceForm.get('ssl').setValue(response[0].spec?.api_secure);\n              if (response[0].spec?.api_secure) {\n                this.serviceForm.get('ssl_cert').setValue(response[0].spec?.ssl_cert);\n                this.serviceForm.get('ssl_key').setValue(response[0].spec?.ssl_key);\n              }\n              break;\n            case 'rgw':\n              this.serviceForm\n                .get('rgw_frontend_port')\n                .setValue(response[0].spec?.rgw_frontend_port);\n              this.serviceForm.get('ssl').setValue(response[0].spec?.ssl);\n              if (response[0].spec?.ssl) {\n                this.serviceForm\n                  .get('ssl_cert')\n                  .setValue(response[0].spec?.rgw_frontend_ssl_certificate);\n              }\n              break;\n            case 'ingress':\n              const ingressSpecKeys = [\n                'backend_service',\n                'virtual_ip',\n                'frontend_port',\n                'monitor_port',\n                'virtual_interface_networks',\n                'ssl'\n              ];\n              ingressSpecKeys.forEach((key) => {\n                this.serviceForm.get(key).setValue(response[0].spec[key]);\n              });\n              if (response[0].spec?.ssl) {\n                this.serviceForm.get('ssl_cert').setValue(response[0].spec?.ssl_cert);\n                this.serviceForm.get('ssl_key').setValue(response[0].spec?.ssl_key);\n              }\n              break;\n            case 'snmp-gateway':\n              const snmpCommonSpecKeys = ['snmp_version', 'snmp_destination'];\n              snmpCommonSpecKeys.forEach((key) => {\n                this.serviceForm.get(key).setValue(response[0].spec[key]);\n              });\n              if (this.serviceForm.getValue('snmp_version') === 'V3') {\n                const snmpV3SpecKeys = [\n                  'engine_id',\n                  'auth_protocol',\n                  'privacy_protocol',\n                  'snmp_v3_auth_username',\n                  'snmp_v3_auth_password',\n                  'snmp_v3_priv_password'\n                ];\n                snmpV3SpecKeys.forEach((key) => {\n                  if (key !== null) {\n                    if (\n                      key === 'snmp_v3_auth_username' ||\n                      key === 'snmp_v3_auth_password' ||\n                      key === 'snmp_v3_priv_password'\n                    ) {\n                      this.serviceForm.get(key).setValue(response[0].spec['credentials'][key]);\n                    } else {\n                      this.serviceForm.get(key).setValue(response[0].spec[key]);\n                    }\n                  }\n                });\n              } else {\n                this.serviceForm\n                  .get('snmp_community')\n                  .setValue(response[0].spec['credentials']['snmp_community']);\n              }\n              break;\n          }\n        });\n    }\n  }\n\n  getServiceIds(selectedServiceType: string) {\n    this.serviceIds = this.serviceList\n      ?.filter((service) => service['service_type'] === selectedServiceType)\n      .map((service) => service['service_id']);\n  }\n\n  disableForEditing(serviceType: string) {\n    const disableForEditKeys = ['service_type', 'service_id'];\n    disableForEditKeys.forEach((key) => {\n      this.serviceForm.get(key).disable();\n    });\n    switch (serviceType) {\n      case 'ingress':\n        this.serviceForm.get('backend_service').disable();\n    }\n  }\n\n  searchLabels = (text$: Observable<string>) => {\n    return merge(\n      text$.pipe(debounceTime(200), distinctUntilChanged()),\n      this.labelFocus,\n      this.labelClick.pipe(filter(() => !this.typeahead.isPopupOpen()))\n    ).pipe(\n      map((value) =>\n        this.labels\n          .filter((label: string) => label.toLowerCase().indexOf(value.toLowerCase()) > -1)\n          .slice(0, 10)\n      )\n    );\n  };\n\n  fileUpload(files: FileList, controlName: string) {\n    const file: File = files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', (event: ProgressEvent<FileReader>) => {\n      const control: AbstractControl = this.serviceForm.get(controlName);\n      control.setValue(event.target.result);\n      control.markAsDirty();\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    });\n    reader.readAsText(file, 'utf8');\n  }\n\n  prePopulateId() {\n    const control: AbstractControl = this.serviceForm.get('service_id');\n    const backendService = this.serviceForm.getValue('backend_service');\n    // Set Id as read-only\n    control.reset({ value: backendService, disabled: true });\n  }\n\n  onSubmit() {\n    const self = this;\n    const values: object = this.serviceForm.getRawValue();\n    const serviceType: string = values['service_type'];\n    let taskUrl = `service/${URLVerbs.CREATE}`;\n    if (this.editing) {\n      taskUrl = `service/${URLVerbs.EDIT}`;\n    }\n    const serviceSpec: object = {\n      service_type: serviceType,\n      placement: {},\n      unmanaged: values['unmanaged']\n    };\n    let svcId: string;\n    if (serviceType === 'rgw') {\n      const svcIdMatch = values['service_id'].match(this.RGW_SVC_ID_PATTERN);\n      svcId = svcIdMatch[1];\n      if (svcIdMatch[3]) {\n        serviceSpec['rgw_realm'] = svcIdMatch[3];\n        serviceSpec['rgw_zone'] = svcIdMatch[4];\n      }\n    } else {\n      svcId = values['service_id'];\n    }\n    const serviceId: string = svcId;\n    let serviceName: string = serviceType;\n    if (_.isString(serviceId) && !_.isEmpty(serviceId)) {\n      serviceName = `${serviceType}.${serviceId}`;\n      serviceSpec['service_id'] = serviceId;\n    }\n\n    // These services has some fields to be\n    // filled out even if unmanaged is true\n    switch (serviceType) {\n      case 'ingress':\n        serviceSpec['backend_service'] = values['backend_service'];\n        serviceSpec['service_id'] = values['backend_service'];\n        if (_.isNumber(values['frontend_port']) && values['frontend_port'] > 0) {\n          serviceSpec['frontend_port'] = values['frontend_port'];\n        }\n        if (_.isString(values['virtual_ip']) && !_.isEmpty(values['virtual_ip'])) {\n          serviceSpec['virtual_ip'] = values['virtual_ip'].trim();\n        }\n        if (_.isNumber(values['monitor_port']) && values['monitor_port'] > 0) {\n          serviceSpec['monitor_port'] = values['monitor_port'];\n        }\n        break;\n\n      case 'iscsi':\n        serviceSpec['pool'] = values['pool'];\n        break;\n\n      case 'snmp-gateway':\n        serviceSpec['credentials'] = {};\n        serviceSpec['snmp_version'] = values['snmp_version'];\n        serviceSpec['snmp_destination'] = values['snmp_destination'];\n        if (values['snmp_version'] === 'V3') {\n          serviceSpec['engine_id'] = values['engine_id'];\n          serviceSpec['auth_protocol'] = values['auth_protocol'];\n          serviceSpec['credentials']['snmp_v3_auth_username'] = values['snmp_v3_auth_username'];\n          serviceSpec['credentials']['snmp_v3_auth_password'] = values['snmp_v3_auth_password'];\n          if (values['privacy_protocol'] !== null) {\n            serviceSpec['privacy_protocol'] = values['privacy_protocol'];\n            serviceSpec['credentials']['snmp_v3_priv_password'] = values['snmp_v3_priv_password'];\n          }\n        } else {\n          serviceSpec['credentials']['snmp_community'] = values['snmp_community'];\n        }\n        break;\n    }\n\n    if (!values['unmanaged']) {\n      switch (values['placement']) {\n        case 'hosts':\n          if (values['hosts'].length > 0) {\n            serviceSpec['placement']['hosts'] = values['hosts'];\n          }\n          break;\n        case 'label':\n          serviceSpec['placement']['label'] = values['label'];\n          break;\n      }\n      if (_.isNumber(values['count']) && values['count'] > 0) {\n        serviceSpec['placement']['count'] = values['count'];\n      }\n      switch (serviceType) {\n        case 'rgw':\n          if (_.isNumber(values['rgw_frontend_port']) && values['rgw_frontend_port'] > 0) {\n            serviceSpec['rgw_frontend_port'] = values['rgw_frontend_port'];\n          }\n          serviceSpec['ssl'] = values['ssl'];\n          if (values['ssl']) {\n            serviceSpec['rgw_frontend_ssl_certificate'] = values['ssl_cert']?.trim();\n          }\n          break;\n        case 'iscsi':\n          if (_.isString(values['trusted_ip_list']) && !_.isEmpty(values['trusted_ip_list'])) {\n            serviceSpec['trusted_ip_list'] = values['trusted_ip_list'].trim();\n          }\n          if (_.isNumber(values['api_port']) && values['api_port'] > 0) {\n            serviceSpec['api_port'] = values['api_port'];\n          }\n          serviceSpec['api_user'] = values['api_user'];\n          serviceSpec['api_password'] = values['api_password'];\n          serviceSpec['api_secure'] = values['ssl'];\n          if (values['ssl']) {\n            serviceSpec['ssl_cert'] = values['ssl_cert']?.trim();\n            serviceSpec['ssl_key'] = values['ssl_key']?.trim();\n          }\n          break;\n        case 'ingress':\n          serviceSpec['ssl'] = values['ssl'];\n          if (values['ssl']) {\n            serviceSpec['ssl_cert'] = values['ssl_cert']?.trim();\n            serviceSpec['ssl_key'] = values['ssl_key']?.trim();\n          }\n          serviceSpec['virtual_interface_networks'] = values['virtual_interface_networks'];\n          break;\n      }\n    }\n\n    this.taskWrapperService\n      .wrapTaskAroundCall({\n        task: new FinishedTask(taskUrl, {\n          service_name: serviceName\n        }),\n        call: this.editing\n          ? this.cephServiceService.update(serviceSpec)\n          : this.cephServiceService.create(serviceSpec)\n      })\n      .subscribe({\n        error() {\n          self.serviceForm.setErrors({ cdSubmitButton: true });\n        },\n        complete: () => {\n          this.pageURL === 'services'\n            ? this.router.navigate([this.pageURL, { outlets: { modal: null } }])\n            : this.activeModal.close();\n        }\n      });\n  }\n\n  clearValidations() {\n    const snmpVersion = this.serviceForm.getValue('snmp_version');\n    const privacyProtocol = this.serviceForm.getValue('privacy_protocol');\n    if (snmpVersion === 'V3') {\n      this.serviceForm.get('snmp_community').clearValidators();\n    } else {\n      this.serviceForm.get('engine_id').clearValidators();\n      this.serviceForm.get('auth_protocol').clearValidators();\n      this.serviceForm.get('privacy_protocol').clearValidators();\n      this.serviceForm.get('snmp_v3_auth_username').clearValidators();\n      this.serviceForm.get('snmp_v3_auth_password').clearValidators();\n    }\n    if (privacyProtocol === null) {\n      this.serviceForm.get('snmp_v3_priv_password').clearValidators();\n    }\n  }\n}\n","<cd-modal [pageURL]=\"pageURL\"\n          [modalRef]=\"activeModal\">\n  <span class=\"modal-title\"\n        i18n>{{ action | titlecase }} {{ resource | upperFirst }}</span>\n  <ng-container class=\"modal-content\">\n    <form #frm=\"ngForm\"\n          [formGroup]=\"serviceForm\"\n          novalidate>\n      <div class=\"modal-body\">\n\n        <!-- Service type -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"service_type\"\n                 i18n>Type</label>\n          <div class=\"cd-col-form-input\">\n            <select id=\"service_type\"\n                    name=\"service_type\"\n                    class=\"form-select\"\n                    formControlName=\"service_type\"\n                    (change)=\"getServiceIds($event.target.value)\">\n              <option i18n\n                      [ngValue]=\"null\">-- Select a service type --</option>\n              <option *ngFor=\"let serviceType of serviceTypes\"\n                      [value]=\"serviceType\">\n                {{ serviceType }}\n              </option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"serviceForm.showError('service_type', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- backend_service -->\n          <div *ngIf=\"serviceForm.controls.service_type.value === 'ingress'\"\n               class=\"form-group row\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   [ngClass]=\"{'required': ['ingress'].includes(serviceForm.controls.service_type.value)}\"\n                   for=\"backend_service\">Backend Service</label>\n            <div class=\"cd-col-form-input\">\n              <select id=\"backend_service\"\n                      name=\"backend_service\"\n                      class=\"form-select\"\n                      formControlName=\"backend_service\"\n                      (change)=\"prePopulateId()\">\n                <option *ngIf=\"services === null\"\n                        [ngValue]=\"null\"\n                        i18n>Loading...</option>\n                <option *ngIf=\"services !== null && services.length === 0\"\n                        [ngValue]=\"null\"\n                        i18n>-- No service available --</option>\n                <option *ngIf=\"services !== null && services.length > 0\"\n                        [ngValue]=\"null\"\n                        i18n>-- Select an existing service --</option>\n                <option *ngFor=\"let service of services\"\n                        [value]=\"service.service_name\">{{ service.service_name }}</option>\n              </select>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('backend_service', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n\n        <!-- Service id -->\n        <div class=\"form-group row\"\n             *ngIf=\"serviceForm.controls.service_type.value !== 'snmp-gateway'\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': ['mds', 'rgw', 'nfs', 'iscsi', 'ingress'].includes(serviceForm.controls.service_type.value)}\"\n                 for=\"service_id\">\n            <span i18n>Id</span>\n            <cd-helper i18n>Used in the service name which is &lt;service_type.service_id&gt;</cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"service_id\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"service_id\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"serviceForm.showError('service_id', frm, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"serviceForm.showError('service_id', frm, 'uniqueName')\"\n                  i18n>This service id is already in use.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"serviceForm.showError('service_id', frm, 'rgwPattern')\"\n                  i18n>The value does not match the pattern <strong>&lt;service_id&gt;[.&lt;realm_name&gt;.&lt;zone_name&gt;]</strong>.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"serviceForm.showError('service_id', frm, 'mdsPattern')\"\n                  i18n>MDS service id must start with a letter and contain alphanumeric characters or '.', '-', and '_'</span>\n          </div>\n        </div>\n\n        <!-- unmanaged -->\n        <div class=\"form-group row\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input class=\"custom-control-input\"\n                     id=\"unmanaged\"\n                     type=\"checkbox\"\n                     formControlName=\"unmanaged\">\n              <label class=\"custom-control-label\"\n                     for=\"unmanaged\"\n                     i18n>Unmanaged</label>\n            </div>\n          </div>\n        </div>\n\n        <!-- Placement -->\n        <div *ngIf=\"!serviceForm.controls.unmanaged.value\"\n             class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"placement\"\n                 i18n>Placement</label>\n          <div class=\"cd-col-form-input\">\n            <select id=\"placement\"\n                    class=\"form-select\"\n                    formControlName=\"placement\">\n              <option i18n\n                      value=\"hosts\">Hosts</option>\n              <option i18n\n                      value=\"label\">Label</option>\n            </select>\n          </div>\n        </div>\n\n        <!-- Label -->\n        <div *ngIf=\"!serviceForm.controls.unmanaged.value && serviceForm.controls.placement.value === 'label'\"\n             class=\"form-group row\">\n          <label i18n\n                 class=\"cd-col-form-label\"\n                 for=\"label\">Label</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"label\"\n                   class=\"form-control\"\n                   type=\"text\"\n                   formControlName=\"label\"\n                   [ngbTypeahead]=\"searchLabels\"\n                   (focus)=\"labelFocus.next($any($event).target.value)\"\n                   (click)=\"labelClick.next($any($event).target.value)\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"serviceForm.showError('label', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Hosts -->\n        <div *ngIf=\"!serviceForm.controls.unmanaged.value && serviceForm.controls.placement.value === 'hosts'\"\n             class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"hosts\"\n                 i18n>Hosts</label>\n          <div class=\"cd-col-form-input\">\n            <cd-select-badges id=\"hosts\"\n                              [data]=\"serviceForm.controls.hosts.value\"\n                              [options]=\"hosts.options\"\n                              [messages]=\"hosts.messages\">\n            </cd-select-badges>\n          </div>\n        </div>\n\n        <!-- count -->\n        <div *ngIf=\"!serviceForm.controls.unmanaged.value\"\n             class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"count\">\n            <span i18n>Count</span>\n            <cd-helper i18n>Only that number of daemons will be created.</cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"count\"\n                   class=\"form-control\"\n                   type=\"number\"\n                   formControlName=\"count\"\n                   min=\"1\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"serviceForm.showError('count', frm, 'min')\"\n                  i18n>The value must be at least 1.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"serviceForm.showError('count', frm, 'pattern')\"\n                  i18n>The entered value needs to be a number.</span>\n          </div>\n        </div>\n\n        <!-- RGW -->\n        <ng-container *ngIf=\"!serviceForm.controls.unmanaged.value && serviceForm.controls.service_type.value === 'rgw'\">\n          <!-- rgw_frontend_port -->\n          <div class=\"form-group row\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   for=\"rgw_frontend_port\">Port</label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"rgw_frontend_port\"\n                     class=\"form-control\"\n                     type=\"number\"\n                     formControlName=\"rgw_frontend_port\"\n                     min=\"1\"\n                     max=\"65535\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('rgw_frontend_port', frm, 'pattern')\"\n                    i18n>The entered value needs to be a number.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('rgw_frontend_port', frm, 'min')\"\n                    i18n>The value must be at least 1.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('rgw_frontend_port', frm, 'max')\"\n                    i18n>The value cannot exceed 65535.</span>\n            </div>\n          </div>\n        </ng-container>\n\n        <!-- iSCSI -->\n        <!-- pool -->\n        <div class=\"form-group row\"\n             *ngIf=\"serviceForm.controls.service_type.value === 'iscsi'\">\n          <label i18n\n                 class=\"cd-col-form-label required\"\n                 for=\"pool\">Pool</label>\n          <div class=\"cd-col-form-input\">\n            <select id=\"pool\"\n                    name=\"pool\"\n                    class=\"form-select\"\n                    formControlName=\"pool\">\n              <option *ngIf=\"pools === null\"\n                      [ngValue]=\"null\"\n                      i18n>Loading...</option>\n              <option *ngIf=\"pools && pools.length === 0\"\n                      [ngValue]=\"null\"\n                      i18n>-- No pools available --</option>\n              <option *ngIf=\"pools && pools.length > 0\"\n                      [ngValue]=\"null\"\n                      i18n>-- Select a pool --</option>\n              <option *ngFor=\"let pool of pools\"\n                      [value]=\"pool.pool_name\">{{ pool.pool_name }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"serviceForm.showError('pool', frm, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- fields in iSCSI which are hidden when unmanaged is true -->\n        <ng-container *ngIf=\"!serviceForm.controls.unmanaged.value && serviceForm.controls.service_type.value === 'iscsi'\">\n          <!-- trusted_ip_list -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"trusted_ip_list\">\n              <span i18n>Trusted IPs</span>\n              <cd-helper>\n                <span i18n>Comma separated list of IP addresses.</span>\n                <br>\n                <span i18n>Please add the <b>Ceph Manager</b> IP addresses here, otherwise the iSCSI gateways can't be reached.</span>\n              </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"trusted_ip_list\"\n                     class=\"form-control\"\n                     type=\"text\"\n                     formControlName=\"trusted_ip_list\">\n            </div>\n          </div>\n\n          <!-- api_port -->\n          <div class=\"form-group row\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   for=\"api_port\">Port</label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"api_port\"\n                     class=\"form-control\"\n                     type=\"number\"\n                     formControlName=\"api_port\"\n                     min=\"1\"\n                     max=\"65535\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('api_port', frm, 'pattern')\"\n                    i18n>The entered value needs to be a number.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('api_port', frm, 'min')\"\n                    i18n>The value must be at least 1.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('api_port', frm, 'max')\"\n                    i18n>The value cannot exceed 65535.</span>\n            </div>\n          </div>\n\n          <!-- api_user -->\n          <div class=\"form-group row\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   [ngClass]=\"{'required': ['iscsi'].includes(serviceForm.controls.service_type.value)}\"\n                   for=\"api_user\">User</label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"api_user\"\n                     class=\"form-control\"\n                     type=\"text\"\n                     formControlName=\"api_user\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('api_user', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n\n          <!-- api_password -->\n          <div class=\"form-group row\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   [ngClass]=\"{'required': ['iscsi'].includes(serviceForm.controls.service_type.value)}\"\n                   for=\"api_password\">Password</label>\n            <div class=\"cd-col-form-input\">\n              <div class=\"input-group\">\n                <input id=\"api_password\"\n                       class=\"form-control\"\n                       type=\"password\"\n                       autocomplete=\"new-password\"\n                       formControlName=\"api_password\">\n                <button type=\"button\"\n                        class=\"btn btn-light\"\n                        cdPasswordButton=\"api_password\">\n                </button>\n                <cd-copy-2-clipboard-button source=\"api_password\">\n                </cd-copy-2-clipboard-button>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"serviceForm.showError('api_password', frm, 'required')\"\n                      i18n>This field is required.</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n\n        <!-- Ingress -->\n        <ng-container *ngIf=\"serviceForm.controls.service_type.value === 'ingress'\">\n          <!-- virtual_ip -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   [ngClass]=\"{'required': ['ingress'].includes(serviceForm.controls.service_type.value)}\"\n                   for=\"virtual_ip\">\n              <span i18n>Virtual IP</span>\n              <cd-helper>\n                <span i18n>The virtual IP address and subnet (in CIDR notation) where the ingress service will be available.</span>\n              </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"virtual_ip\"\n                     class=\"form-control\"\n                     type=\"text\"\n                     formControlName=\"virtual_ip\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('virtual_ip', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n\n          <!-- frontend_port -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   [ngClass]=\"{'required': ['ingress'].includes(serviceForm.controls.service_type.value)}\"\n                   for=\"frontend_port\">\n              <span i18n>Frontend Port</span>\n              <cd-helper>\n                <span i18n>The port used to access the ingress service.</span>\n              </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"frontend_port\"\n                     class=\"form-control\"\n                     type=\"number\"\n                     formControlName=\"frontend_port\"\n                     min=\"1\"\n                     max=\"65535\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('frontend_port', frm, 'pattern')\"\n                    i18n>The entered value needs to be a number.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('frontend_port', frm, 'min')\"\n                    i18n>The value must be at least 1.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('frontend_port', frm, 'max')\"\n                    i18n>The value cannot exceed 65535.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('frontend_port', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n\n          <!-- monitor_port -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   [ngClass]=\"{'required': ['ingress'].includes(serviceForm.controls.service_type.value)}\"\n                   for=\"monitor_port\">\n              <span i18n>Monitor Port</span>\n              <cd-helper>\n                <span i18n>The port used by haproxy for load balancer status.</span>\n              </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"monitor_port\"\n                     class=\"form-control\"\n                     type=\"number\"\n                     formControlName=\"monitor_port\"\n                     min=\"1\"\n                     max=\"65535\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('monitor_port', frm, 'pattern')\"\n                    i18n>The entered value needs to be a number.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('monitor_port', frm, 'min')\"\n                    i18n>The value must be at least 1.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('monitor_port', frm, 'max')\"\n                    i18n>The value cannot exceed 65535.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('monitor_port', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n          <!-- virtual_interface_networks -->\n          <div class=\"form-group row\"\n               *ngIf=\"!serviceForm.controls.unmanaged.value\">\n            <label class=\"cd-col-form-label\"\n                   for=\"virtual_interface_networks\">\n              <span i18n>CIDR Networks</span>\n              <cd-helper>\n                <span i18n>A list of networks to identify which network interface to use for the virtual IP address.</span>\n              </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"virtual_interface_networks\"\n                     class=\"form-control\"\n                     type=\"text\"\n                     formControlName=\"virtual_interface_networks\">\n            </div>\n          </div>\n        </ng-container>\n\n        <!-- SNMP-Gateway -->\n        <ng-container *ngIf=\"serviceForm.controls.service_type.value === 'snmp-gateway'\">\n          <!-- snmp-version -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"snmp_version\"\n                   i18n>Version</label>\n            <div class=\"cd-col-form-input\">\n              <select id=\"snmp_version\"\n                      name=\"snmp_version\"\n                      class=\"form-select\"\n                      formControlName=\"snmp_version\"\n                      (change)=\"clearValidations()\">\n                <option i18n\n                        [ngValue]=\"null\">-- Select SNMP version --</option>\n                <option *ngFor=\"let snmpVersion of ['V2c', 'V3']\"\n                        [value]=\"snmpVersion\">{{ snmpVersion }}</option>\n              </select>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('snmp_version', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n          <!-- Destination -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"snmp_destination\">\n              <span i18n>Destination</span>\n              <cd-helper>\n                <span i18n>Must be of the format hostname:port.</span>\n              </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"snmp_destination\"\n                     class=\"form-control\"\n                     type=\"text\"\n                     formControlName=\"snmp_destination\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('snmp_destination', frm, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('snmp_destination', frm, 'snmpDestinationPattern')\"\n                    i18n>The value does not match the pattern: <strong>hostname:port</strong></span>\n            </div>\n          </div>\n          <!-- Engine id for snmp V3 -->\n          <div class=\"form-group row\"\n               *ngIf=\"serviceForm.controls.snmp_version.value === 'V3'\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"engine_id\">\n              <span i18n>Engine Id</span>\n              <cd-helper>\n                <span i18n>Unique identifier for the device (in hex).</span>\n              </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input id=\"engine_id\"\n                     class=\"form-control\"\n                     type=\"text\"\n                     formControlName=\"engine_id\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('engine_id', frm, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('engine_id', frm, 'snmpEngineIdPattern')\"\n                    i18n>The value does not match the pattern: <strong>Must be in hexadecimal and length must be multiple of 2 with min value = 10 amd max value = 64.</strong></span>\n            </div>\n          </div>\n          <!-- Auth protocol for snmp V3 -->\n          <div class=\"form-group row\"\n               *ngIf=\"serviceForm.controls.snmp_version.value === 'V3'\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"auth_protocol\"\n                   i18n>Auth Protocol</label>\n            <div class=\"cd-col-form-input\">\n              <select id=\"auth_protocol\"\n                      name=\"auth_protocol\"\n                      class=\"form-select\"\n                      formControlName=\"auth_protocol\">\n                <option i18n\n                        [ngValue]=\"null\">-- Select auth protocol --</option>\n                <option *ngFor=\"let authProtocol of ['SHA', 'MD5']\"\n                        [value]=\"authProtocol\">\n                  {{ authProtocol }}\n                </option>\n              </select>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('auth_protocol', frm, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n          <!-- Privacy protocol for snmp V3 -->\n          <div class=\"form-group row\"\n               *ngIf=\"serviceForm.controls.snmp_version.value === 'V3'\">\n            <label class=\"cd-col-form-label\"\n                   for=\"privacy_protocol\"\n                   i18n>Privacy Protocol</label>\n            <div class=\"cd-col-form-input\">\n              <select id=\"privacy_protocol\"\n                      name=\"privacy_protocol\"\n                      class=\"form-select\"\n                      formControlName=\"privacy_protocol\">\n                <option i18n\n                        [ngValue]=\"null\">-- Select privacy protocol --</option>\n                <option *ngFor=\"let privacyProtocol of ['DES', 'AES']\"\n                        [value]=\"privacyProtocol\">\n                  {{ privacyProtocol }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <!-- Credentials -->\n          <fieldset>\n            <legend i18n>Credentials</legend>\n            <!-- snmp v2c snmp_community -->\n            <div class=\"form-group row\"\n                 *ngIf=\"serviceForm.controls.snmp_version.value === 'V2c'\">\n              <label class=\"cd-col-form-label required\"\n                     for=\"snmp_community\">\n                <span i18n>SNMP Community</span>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"snmp_community\"\n                       class=\"form-control\"\n                       type=\"text\"\n                       formControlName=\"snmp_community\">\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"serviceForm.showError('snmp_community', frm, 'required')\"\n                      i18n>This field is required.</span>\n              </div>\n            </div>\n            <!-- snmp v3 auth username -->\n            <div class=\"form-group row\"\n                 *ngIf=\"serviceForm.controls.snmp_version.value === 'V3'\">\n              <label class=\"cd-col-form-label required\"\n                     for=\"snmp_v3_auth_username\">\n                <span i18n>Username</span>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"snmp_v3_auth_username\"\n                       class=\"form-control\"\n                       type=\"text\"\n                       formControlName=\"snmp_v3_auth_username\">\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"serviceForm.showError('snmp_v3_auth_username', frm, 'required')\"\n                      i18n>This field is required.</span>\n              </div>\n            </div>\n            <!-- snmp v3 auth password -->\n            <div class=\"form-group row\"\n                 *ngIf=\"serviceForm.controls.snmp_version.value === 'V3'\">\n              <label class=\"cd-col-form-label required\"\n                     for=\"snmp_v3_auth_password\">\n                <span i18n>Password</span>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"snmp_v3_auth_password\"\n                       class=\"form-control\"\n                       type=\"password\"\n                       formControlName=\"snmp_v3_auth_password\">\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"serviceForm.showError('snmp_v3_auth_password', frm, 'required')\"\n                      i18n>This field is required.</span>\n              </div>\n            </div>\n            <!-- snmp v3 priv password -->\n            <div class=\"form-group row\"\n                 *ngIf=\"serviceForm.controls.snmp_version.value === 'V3' && serviceForm.controls.privacy_protocol.value !== null && serviceForm.controls.privacy_protocol.value !== undefined\">\n              <label class=\"cd-col-form-label required\"\n                     for=\"snmp_v3_priv_password\">\n                <span i18n>Encryption</span>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"snmp_v3_priv_password\"\n                       class=\"form-control\"\n                       type=\"password\"\n                       formControlName=\"snmp_v3_priv_password\">\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"serviceForm.showError('snmp_v3_priv_password', frm, 'required')\"\n                      i18n>This field is required.</span>\n              </div>\n            </div>\n          </fieldset>\n        </ng-container>\n        <!-- RGW, Ingress & iSCSI -->\n        <ng-container *ngIf=\"!serviceForm.controls.unmanaged.value && ['rgw', 'iscsi', 'ingress'].includes(serviceForm.controls.service_type.value)\">\n          <!-- ssl -->\n          <div class=\"form-group row\">\n            <div class=\"cd-col-form-offset\">\n              <div class=\"custom-control custom-checkbox\">\n                <input class=\"custom-control-input\"\n                       id=\"ssl\"\n                       type=\"checkbox\"\n                       formControlName=\"ssl\">\n                <label class=\"custom-control-label\"\n                       for=\"ssl\"\n                       i18n>SSL</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- ssl_cert -->\n          <div *ngIf=\"serviceForm.controls.ssl.value\"\n               class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"ssl_cert\">\n              <span i18n>Certificate</span>\n              <cd-helper i18n>The SSL certificate in PEM format.</cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <textarea id=\"ssl_cert\"\n                        class=\"form-control resize-vertical text-monospace text-pre\"\n                        formControlName=\"ssl_cert\"\n                        rows=\"5\">\n              </textarea>\n              <input type=\"file\"\n                     (change)=\"fileUpload($event.target.files, 'ssl_cert')\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('ssl_cert', frm, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('ssl_cert', frm, 'pattern')\"\n                    i18n>Invalid SSL certificate.</span>\n            </div>\n          </div>\n\n          <!-- ssl_key -->\n          <div *ngIf=\"serviceForm.controls.ssl.value && !(['rgw', 'ingress'].includes(serviceForm.controls.service_type.value))\"\n               class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"ssl_key\">\n              <span i18n>Private key</span>\n              <cd-helper i18n>The SSL private key in PEM format.</cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <textarea id=\"ssl_key\"\n                        class=\"form-control resize-vertical text-monospace text-pre\"\n                        formControlName=\"ssl_key\"\n                        rows=\"5\">\n              </textarea>\n              <input type=\"file\"\n                     (change)=\"fileUpload($event.target.files,'ssl_key')\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('ssl_key', frm, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"serviceForm.showError('ssl_key', frm, 'pattern')\"\n                    i18n>Invalid SSL private key.</span>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n\n      <div class=\"modal-footer\">\n        <div class=\"text-right\">\n          <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                                [form]=\"serviceForm\"\n                                [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"></cd-form-button-panel>\n        </div>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { delay } from 'rxjs/operators';\n\nimport { CephServiceService } from '~/app/shared/api/ceph-service.service';\nimport { OrchestratorService } from '~/app/shared/api/orchestrator.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { OrchestratorFeature } from '~/app/shared/models/orchestrator.enum';\nimport { OrchestratorStatus } from '~/app/shared/models/orchestrator.interface';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { CephServiceSpec } from '~/app/shared/models/service.interface';\nimport { RelativeDatePipe } from '~/app/shared/pipes/relative-date.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\nimport { PlacementPipe } from './placement.pipe';\nimport { ServiceFormComponent } from './service-form/service-form.component';\n\nconst BASE_URL = 'services';\n\n@Component({\n  selector: 'cd-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.scss'],\n  providers: [{ provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }]\n})\nexport class ServicesComponent extends ListWithDetails implements OnChanges, OnInit {\n  @ViewChild(TableComponent, { static: true })\n  table: TableComponent;\n\n  @Input() hostname: string;\n\n  // Do not display these columns\n  @Input() hiddenColumns: string[] = [];\n\n  @Input() hiddenServices: string[] = [];\n\n  @Input() hasDetails = true;\n\n  @Input() routedModal = true;\n\n  permissions: Permissions;\n  tableActions: CdTableAction[];\n  showDocPanel = false;\n  count = 0;\n  bsModalRef: NgbModalRef;\n\n  orchStatus: OrchestratorStatus;\n  actionOrchFeatures = {\n    create: [OrchestratorFeature.SERVICE_CREATE],\n    update: [OrchestratorFeature.SERVICE_EDIT],\n    delete: [OrchestratorFeature.SERVICE_DELETE]\n  };\n\n  columns: Array<CdTableColumn> = [];\n  services: Array<CephServiceSpec> = [];\n  isLoadingServices = false;\n  selection: CdTableSelection = new CdTableSelection();\n\n  constructor(\n    private actionLabels: ActionLabelsI18n,\n    private authStorageService: AuthStorageService,\n    private modalService: ModalService,\n    private orchService: OrchestratorService,\n    private cephServiceService: CephServiceService,\n    private relativeDatePipe: RelativeDatePipe,\n    private taskWrapperService: TaskWrapperService,\n    private router: Router\n  ) {\n    super();\n    this.permissions = this.authStorageService.getPermissions();\n    this.tableActions = [\n      {\n        permission: 'create',\n        icon: Icons.add,\n        click: () => this.openModal(),\n        name: this.actionLabels.CREATE,\n        canBePrimary: (selection: CdTableSelection) => !selection.hasSelection,\n        disable: (selection: CdTableSelection) => this.getDisable('create', selection)\n      },\n      {\n        permission: 'update',\n        icon: Icons.edit,\n        click: () => this.openModal(true),\n        name: this.actionLabels.EDIT,\n        disable: (selection: CdTableSelection) => this.getDisable('update', selection)\n      },\n      {\n        permission: 'delete',\n        icon: Icons.destroy,\n        click: () => this.deleteAction(),\n        name: this.actionLabels.DELETE,\n        disable: (selection: CdTableSelection) => this.getDisable('delete', selection)\n      }\n    ];\n  }\n\n  openModal(edit = false) {\n    if (this.routedModal) {\n      edit\n        ? this.router.navigate([\n            BASE_URL,\n            {\n              outlets: {\n                modal: [\n                  URLVerbs.EDIT,\n                  this.selection.first().service_type,\n                  this.selection.first().service_name\n                ]\n              }\n            }\n          ])\n        : this.router.navigate([BASE_URL, { outlets: { modal: [URLVerbs.CREATE] } }]);\n    } else {\n      let initialState = {};\n      edit\n        ? (initialState = {\n            serviceName: this.selection.first()?.service_name,\n            serviceType: this.selection?.first()?.service_type,\n            hiddenServices: this.hiddenServices,\n            editing: edit\n          })\n        : (initialState = {\n            hiddenServices: this.hiddenServices,\n            editing: edit\n          });\n      this.bsModalRef = this.modalService.show(ServiceFormComponent, initialState, { size: 'lg' });\n    }\n  }\n\n  ngOnInit() {\n    const columns = [\n      {\n        name: $localize`Service`,\n        prop: 'service_name',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Placement`,\n        prop: '',\n        pipe: new PlacementPipe(),\n        flexGrow: 2\n      },\n      {\n        name: $localize`Running`,\n        prop: 'status.running',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Size`,\n        prop: 'status.size',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Last Refreshed`,\n        prop: 'status.last_refresh',\n        pipe: this.relativeDatePipe,\n        flexGrow: 1\n      }\n    ];\n\n    this.columns = columns.filter((col: any) => {\n      return !this.hiddenColumns.includes(col.prop);\n    });\n\n    this.orchService.status().subscribe((status: OrchestratorStatus) => {\n      this.orchStatus = status;\n      this.showDocPanel = !status.available;\n    });\n  }\n\n  ngOnChanges() {\n    if (this.orchStatus?.available) {\n      this.services = [];\n      this.table.reloadData();\n    }\n  }\n\n  getDisable(\n    action: 'create' | 'update' | 'delete',\n    selection: CdTableSelection\n  ): boolean | string {\n    if (action === 'delete') {\n      if (!selection?.hasSingleSelection) {\n        return true;\n      }\n    }\n    if (action === 'update') {\n      const disableEditServices = ['osd', 'container'];\n      if (disableEditServices.indexOf(this.selection.first()?.service_type) >= 0) {\n        return true;\n      }\n    }\n    return this.orchService.getTableActionDisableDesc(\n      this.orchStatus,\n      this.actionOrchFeatures[action]\n    );\n  }\n\n  getServices(context: CdTableFetchDataContext) {\n    if (this.isLoadingServices) {\n      return;\n    }\n    this.isLoadingServices = true;\n    const pagination_obs = this.cephServiceService.list(context.toParams());\n    pagination_obs.observable.subscribe(\n      (services: CephServiceSpec[]) => {\n        this.services = services;\n        this.count = pagination_obs.count;\n        this.services = this.services.filter((col: any) => {\n          return !this.hiddenServices.includes(col.service_name);\n        });\n        this.isLoadingServices = false;\n      },\n      () => {\n        this.isLoadingServices = false;\n        this.services = [];\n        context.error();\n      }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteAction() {\n    const service = this.selection.first();\n    this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: $localize`Service`,\n      itemNames: [service.service_name],\n      actionDescription: 'delete',\n      submitActionObservable: () =>\n        this.taskWrapperService\n          .wrapTaskAroundCall({\n            task: new FinishedTask(`service/${URLVerbs.DELETE}`, {\n              service_name: service.service_name\n            }),\n            call: this.cephServiceService.delete(service.service_name)\n          })\n          .pipe(\n            // Delay closing the dialog, otherwise the datatable still\n            // shows the deleted service after an auto-reload.\n            // Showing the dialog while delaying is done to increase\n            // the user experience.\n            delay(5000)\n          )\n    });\n  }\n}\n","<cd-orchestrator-doc-panel *ngIf=\"showDocPanel\"></cd-orchestrator-doc-panel>\n<ng-container *ngIf=\"orchStatus?.available\">\n  <cd-table [data]=\"services\"\n            [columns]=\"columns\"\n            identifier=\"service_name\"\n            forceIdentifier=\"true\"\n            columnMode=\"flex\"\n            selectionType=\"single\"\n            [autoReload]=\"5000\"\n            (fetchData)=\"getServices($event)\"\n            [hasDetails]=\"hasDetails\"\n            [serverSide]=\"true\"\n            [count]=\"count\"\n            (setExpandedRow)=\"setExpandedRow($event)\"\n            (updateSelection)=\"updateSelection($event)\">\n    <cd-table-actions class=\"table-actions\"\n                      [permission]=\"permissions.hosts\"\n                      [selection]=\"selection\"\n                      [tableActions]=\"tableActions\">\n    </cd-table-actions>\n    <cd-service-details cdTableDetail\n                        [permissions]=\"permissions\"\n                        [selection]=\"expandedRow\">\n    </cd-service-details>\n  </cd-table>\n</ng-container>\n<router-outlet name=\"modal\"></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport _ from 'lodash';\nimport { forkJoin as observableForkJoin } from 'rxjs';\n\nimport { MgrModuleService } from '~/app/shared/api/mgr-module.service';\nimport { TelemetryService } from '~/app/shared/api/telemetry.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { TelemetryNotificationService } from '~/app/shared/services/telemetry-notification.service';\n\n@Component({\n  selector: 'cd-telemetry',\n  templateUrl: './telemetry.component.html',\n  styleUrls: ['./telemetry.component.scss']\n})\nexport class TelemetryComponent extends CdForm implements OnInit {\n  configForm: CdFormGroup;\n  licenseAgrmt = false;\n  moduleEnabled: boolean;\n  options: Object = {};\n  newConfig: Object = {};\n  configResp: object = {};\n  previewForm: CdFormGroup;\n  requiredFields = [\n    'channel_basic',\n    'channel_crash',\n    'channel_device',\n    'channel_ident',\n    'channel_perf',\n    'interval',\n    'proxy',\n    'contact',\n    'description',\n    'organization'\n  ];\n  contactInfofields = ['contact', 'description', 'organization'];\n  report: object = undefined;\n  reportId: number = undefined;\n  sendToUrl = '';\n  sendToDeviceUrl = '';\n  step = 1;\n  showContactInfo: boolean;\n\n  constructor(\n    public actionLabels: ActionLabelsI18n,\n    private formBuilder: CdFormBuilder,\n    private mgrModuleService: MgrModuleService,\n    private notificationService: NotificationService,\n    private router: Router,\n    private telemetryService: TelemetryService,\n    private telemetryNotificationService: TelemetryNotificationService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    const observables = [\n      this.mgrModuleService.getOptions('telemetry'),\n      this.mgrModuleService.getConfig('telemetry')\n    ];\n    observableForkJoin(observables).subscribe(\n      (resp: object) => {\n        const configResp = resp[1];\n        this.moduleEnabled = configResp['enabled'];\n        this.sendToUrl = configResp['url'];\n        this.sendToDeviceUrl = configResp['device_url'];\n        this.showContactInfo = configResp['channel_ident'];\n        this.options = _.pick(resp[0], this.requiredFields);\n        this.configResp = _.pick(configResp, this.requiredFields);\n        this.createConfigForm();\n        this.configForm.setValue(this.configResp);\n        this.loadingReady();\n      },\n      (_error) => {\n        this.loadingError();\n      }\n    );\n  }\n\n  private createConfigForm() {\n    const controlsConfig = {};\n    _.forEach(Object.values(this.options), (option) => {\n      controlsConfig[option.name] = [option.default_value, this.getValidators(option)];\n    });\n    this.configForm = this.formBuilder.group(controlsConfig);\n  }\n\n  private replacer(key: string, value: any) {\n    // Display the arrays of keys 'ranges' and 'values' horizontally as they take up too much space\n    // and Stringify displays it in vertical by default.\n    if ((key === 'ranges' || key === 'values') && Array.isArray(value)) {\n      const elements = [];\n      for (let i = 0; i < value.length; i++) {\n        elements.push(JSON.stringify(value[i]));\n      }\n      return elements;\n    }\n    // Else, just return the value as is, without any formatting.\n    return value;\n  }\n\n  replacerTest(report: object) {\n    return JSON.stringify(report, this.replacer, 2);\n  }\n\n  private formatReport() {\n    let copy = {};\n    copy = JSON.parse(JSON.stringify(this.report));\n    const perf_keys = [\n      'perf_counters',\n      'stats_per_pool',\n      'stats_per_pg',\n      'io_rate',\n      'osd_perf_histograms',\n      'mempool',\n      'heap_stats',\n      'rocksdb_stats'\n    ];\n    for (let i = 0; i < perf_keys.length; i++) {\n      const key = perf_keys[i];\n      if (key in copy['report']) {\n        delete copy['report'][key];\n      }\n    }\n    return JSON.stringify(copy, null, 2);\n  }\n\n  formatReportTest(report: object) {\n    let copy = {};\n    copy = JSON.parse(JSON.stringify(report));\n    const perf_keys = [\n      'perf_counters',\n      'stats_per_pool',\n      'stats_per_pg',\n      'io_rate',\n      'osd_perf_histograms',\n      'mempool',\n      'heap_stats',\n      'rocksdb_stats'\n    ];\n    for (let i = 0; i < perf_keys.length; i++) {\n      const key = perf_keys[i];\n      if (key in copy) {\n        delete copy[key];\n      }\n    }\n    return JSON.stringify(copy, null, 2);\n  }\n\n  private createPreviewForm() {\n    const controls = {\n      report: this.formatReport(),\n      reportId: this.reportId,\n      licenseAgrmt: [this.licenseAgrmt, Validators.requiredTrue]\n    };\n    this.previewForm = this.formBuilder.group(controls);\n  }\n\n  private getValidators(option: any): ValidatorFn[] {\n    const result = [];\n    switch (option.type) {\n      case 'int':\n        result.push(Validators.required);\n        break;\n      case 'str':\n        if (_.isNumber(option.min)) {\n          result.push(Validators.minLength(option.min));\n        }\n        if (_.isNumber(option.max)) {\n          result.push(Validators.maxLength(option.max));\n        }\n        break;\n    }\n    return result;\n  }\n\n  private updateReportFromConfig(updatedConfig: Object = {}) {\n    // update channels\n    const availableChannels: string[] = this.report['report']['channels_available'];\n    const updatedChannels = [];\n    for (const channel of availableChannels) {\n      const key = `channel_${channel}`;\n      if (updatedConfig[key]) {\n        updatedChannels.push(channel);\n      }\n    }\n    this.report['report']['channels'] = updatedChannels;\n    // update contactInfo\n    for (const contactInfofield of this.contactInfofields) {\n      this.report['report'][contactInfofield] = updatedConfig[contactInfofield];\n    }\n  }\n\n  private getReport() {\n    this.loadingStart();\n\n    this.telemetryService.getReport().subscribe(\n      (resp: object) => {\n        this.report = resp;\n        this.reportId = resp['report']['report_id'];\n        this.updateReportFromConfig(this.newConfig);\n        this.createPreviewForm();\n        this.loadingReady();\n        this.step++;\n      },\n      (_error) => {\n        this.loadingError();\n      }\n    );\n  }\n\n  toggleIdent() {\n    this.showContactInfo = !this.showContactInfo;\n  }\n\n  buildReport() {\n    this.newConfig = {};\n    for (const option of Object.values(this.options)) {\n      const control = this.configForm.get(option.name);\n      // Append the option only if they are valid\n      if (control.valid) {\n        this.newConfig[option.name] = control.value;\n      } else {\n        this.configForm.setErrors({ cdSubmitButton: true });\n        return;\n      }\n    }\n    // reset contact info field  if ident channel is off\n    if (!this.newConfig['channel_ident']) {\n      for (const contactInfofield of this.contactInfofields) {\n        this.newConfig[contactInfofield] = '';\n      }\n    }\n    this.getReport();\n  }\n\n  disableModule(message: string = null, followUpFunc: Function = null) {\n    this.telemetryService.enable(false).subscribe(() => {\n      this.telemetryNotificationService.setVisibility(true);\n      if (message) {\n        this.notificationService.show(NotificationType.success, message);\n      }\n      if (followUpFunc) {\n        followUpFunc();\n      } else {\n        this.router.navigate(['']);\n      }\n    });\n  }\n\n  next() {\n    this.buildReport();\n  }\n\n  back() {\n    this.step--;\n  }\n\n  getChangedConfig() {\n    const updatedConfig = {};\n    _.forEach(this.requiredFields, (configField) => {\n      if (!_.isEqual(this.configResp[configField], this.newConfig[configField])) {\n        updatedConfig[configField] = this.newConfig[configField];\n      }\n    });\n    return updatedConfig;\n  }\n\n  onSubmit() {\n    const updatedConfig = this.getChangedConfig();\n    const observables = [\n      this.telemetryService.enable(),\n      this.mgrModuleService.updateConfig('telemetry', updatedConfig)\n    ];\n\n    observableForkJoin(observables).subscribe(\n      () => {\n        this.telemetryNotificationService.setVisibility(false);\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`The Telemetry module has been configured and activated successfully.`\n        );\n      },\n      () => {\n        this.telemetryNotificationService.setVisibility(false);\n        this.notificationService.show(\n          NotificationType.error,\n          $localize`An Error occurred while updating the Telemetry module configuration.\\\n             Please Try again`\n        );\n        // Reset the 'Update' button.\n        this.previewForm.setErrors({ cdSubmitButton: true });\n      },\n      () => {\n        this.newConfig = {};\n        this.router.navigate(['']);\n      }\n    );\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <ng-container [ngSwitch]=\"step\">\n    <!-- Configuration step -->\n    <div *ngSwitchCase=\"1\">\n      <form name=\"form\"\n            #formDir=\"ngForm\"\n            [formGroup]=\"configForm\"\n            novalidate>\n        <div class=\"card\">\n          <div class=\"card-header\"\n               i18n>Step {{ step }} of 2: Telemetry report configuration</div>\n          <div class=\"card-body\">\n            <p i18n>The telemetry module sends anonymous data about this Ceph cluster back to the Ceph developers\n              to help understand how Ceph is used and what problems users may be experiencing.<br/>\n              This data is visualized on <a href=\"https://telemetry-public.ceph.com/\">public dashboards</a>\n              that allow the community to quickly see summary statistics on how many clusters are reporting,\n              their total capacity and OSD count, and version distribution trends.<br/><br/>\n              The data being reported does <b>not</b> contain any sensitive data like pool names, object names, object contents,\n              hostnames, or device serial numbers. It contains counters and statistics on how the cluster has been\n              deployed, the version of Ceph, the distribution of the hosts and other parameters which help the project\n              to gain a better understanding of the way Ceph is used. The data is sent secured to {{ sendToUrl }} and\n              {{ sendToDeviceUrl }} (device report).</p>\n            <div *ngIf=\"moduleEnabled\">\n              The plugin is already <b>enabled</b>. Click <b>Deactivate</b> to disable it.&nbsp;\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      (click)=\"disableModule('The Telemetry module has been disabled successfully.')\"\n                      i18n>Deactivate</button>\n            </div>\n            <legend i18n>Channels</legend>\n            <p i18n>The telemetry report is broken down into several \"channels\", each with a different type of information that can\n              be configured below.</p>\n\n            <!-- Channel basic -->\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"channel_basic\">\n                <ng-container i18n>Basic</ng-container>\n                <cd-helper>\n                  <ng-container i18n>Includes basic information about the cluster:</ng-container>\n                  <ul>\n                    <li i18n>Capacity of the cluster</li>\n                    <li i18n>Number of monitors, managers, OSDs, MDSs, object gateways, or other daemons</li>\n                    <li i18n>Software version currently being used</li>\n                    <li i18n>Number and types of RADOS pools and CephFS file systems</li>\n                    <li i18n>Names of configuration options that have been changed from their default (but not their values)</li>\n                  </ul>\n                </cd-helper>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\"\n                         class=\"custom-control-input\"\n                         id=\"channel_basic\"\n                         formControlName=\"channel_basic\">\n                  <label class=\"custom-control-label\"\n                         for=\"channel_basic\"></label>\n                </div>\n              </div>\n            </div>\n\n            <!-- Channel crash -->\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"channel_crash\">\n                <ng-container i18n>Crash</ng-container>\n                <cd-helper>\n                  <ng-container i18n>Includes information about daemon crashes:</ng-container>\n                  <ul>\n                    <li i18n>Type of daemon</li>\n                    <li i18n>Version of the daemon</li>\n                    <li i18n>Operating system (OS distribution, kernel version)</li>\n                    <li i18n>Stack trace identifying where in the Ceph code the crash occurred</li>\n                  </ul>\n                </cd-helper>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\"\n                         class=\"custom-control-input\"\n                         id=\"channel_crash\"\n                         formControlName=\"channel_crash\">\n                  <label class=\"custom-control-label\"\n                         for=\"channel_crash\"></label>\n                </div>\n              </div>\n            </div>\n\n            <!-- Channel device -->\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"channel_device\">\n                <ng-container i18n>Device</ng-container>\n                <cd-helper i18n-html\n                           html=\"Includes information about device metrics like anonymized SMART metrics.\">\n                </cd-helper>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\"\n                         class=\"custom-control-input\"\n                         id=\"channel_device\"\n                         formControlName=\"channel_device\">\n                  <label class=\"custom-control-label\"\n                         for=\"channel_device\"></label>\n                </div>\n              </div>\n            </div>\n\n            <!-- Channel ident -->\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"channel_ident\">\n                <ng-container i18n>Ident</ng-container>\n                <cd-helper>\n                  <ng-container i18n>Includes user-provided identifying information about the cluster:</ng-container>\n                  <ul>\n                    <li>Cluster description</li>\n                    <li>Contact email address</li>\n                  </ul>\n                </cd-helper>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\"\n                         class=\"custom-control-input\"\n                         id=\"channel_ident\"\n                         formControlName=\"channel_ident\"\n                         (click)=\"toggleIdent()\">\n                  <label class=\"custom-control-label\"\n                         for=\"channel_ident\"></label>\n                </div>\n              </div>\n            </div>\n\n            <!-- Channel perf -->\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"channel_perf\">\n                <ng-container i18n>Perf</ng-container>\n                <cd-helper>\n                  <ng-container i18n>Includes various performance metrics of a cluster.</ng-container>\n                </cd-helper>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\"\n                         class=\"custom-control-input\"\n                         id=\"channel_perf\"\n                         formControlName=\"channel_perf\">\n                  <label class=\"custom-control-label\"\n                         for=\"channel_perf\"></label>\n                </div>\n              </div>\n            </div>\n\n            <ng-container *ngIf=\"showContactInfo\">\n            <legend>\n              <ng-container i18n>Contact Information</ng-container>\n              <cd-helper i18n>Submitting any contact information is completely optional and disabled by default.</cd-helper>\n            </legend>\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"contact\"\n                     i18n>Contact</label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"contact\"\n                       class=\"form-control\"\n                       type=\"text\"\n                       formControlName=\"contact\"\n                       placeholder=\"Example User <user@example.com>\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"description\"\n                     i18n>Description</label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"description\"\n                       class=\"form-control\"\n                       type=\"text\"\n                       formControlName=\"description\"\n                       placeholder=\"My first Ceph cluster\"\n                       i18n-placeholder>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"organization\"\n                     i18n>Organization</label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"organization\"\n                       class=\"form-control\"\n                       type=\"text\"\n                       formControlName=\"organization\"\n                       placeholder=\"Organization name\"\n                       i18n-placeholder>\n              </div>\n            </div>\n          </ng-container>\n            <legend i18n>Advanced Settings</legend>\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"interval\">\n                <ng-container i18n>Interval</ng-container>\n                <cd-helper i18n>The module compiles and sends a new report every 24 hours by default. You can\n                  adjust this interval by setting a different number of hours.</cd-helper>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"interval\"\n                       class=\"form-control\"\n                       type=\"number\"\n                       formControlName=\"interval\"\n                       min=\"8\">\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"configForm.showError('interval', formDir, 'min')\"\n                      i18n>The entered value is too low! It must be greater or equal to 8.</span>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"proxy\">\n                <ng-container i18n>Proxy</ng-container>\n                <cd-helper>\n                  <p i18n>If the cluster cannot directly connect to the configured telemetry endpoint\n                    (default telemetry.ceph.com), you can configure a HTTP/HTTPS proxy server by e.g. adding\n                    https://10.0.0.1:8080</p>\n                  <p i18n>You can also include a user:pass if needed e.g. https://ceph:telemetry@10.0.0.1:8080</p>\n                </cd-helper>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"proxy\"\n                       class=\"form-control\"\n                       type=\"text\"\n                       formControlName=\"proxy\"\n                       placeholder=\"https://10.0.0.1:8080\">\n              </div>\n            </div>\n            <br />\n            <p i18n><b>Note:</b> By clicking 'Next' you will first see a preview of the report content before you\n              can activate the automatic submission of your data.</p>\n          </div>\n          <div class=\"card-footer\">\n            <div class=\"button-group text-right\">\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      (click)=\"next()\">\n                <ng-container>{{ actionLabels.NEXT }}</ng-container>\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <!-- Preview step -->\n    <div *ngSwitchCase=\"2\">\n      <form name=\"previewForm\"\n            #frm=\"ngForm\"\n            [formGroup]=\"previewForm\"\n            novalidate>\n        <div class=\"card\">\n          <div class=\"card-header\"\n               i18n>Step {{ step }} of 2: Telemetry report preview</div>\n          <div class=\"card-body\">\n            <!-- Telemetry report ID -->\n            <div class=\"form-group row\">\n              <label i18n\n                     for=\"reportId\"\n                     class=\"cd-col-form-label\">Report ID\n              <cd-helper i18n-html\n                         html=\"A randomized UUID to identify a particular cluster over the course of several telemetry reports.\">\n              </cd-helper>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <input class=\"form-control\"\n                       type=\"text\"\n                       id=\"reportId\"\n                       formControlName=\"reportId\"\n                       readonly>\n              </div>\n            </div>\n\n            <!-- Telemetry report -->\n            <div class=\"form-group row\">\n              <label i18n\n                     for=\"report\"\n                     class=\"cd-col-form-label\">Report preview\n                <cd-helper i18n-html\n                           html=\"The actual telemetry data that will be submitted.\"><em>Note: Please select 'Download' to\n                                   view the full report, including metrics from the perf channel.</em>\n                </cd-helper>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <textarea class=\"form-control\"\n                          id=\"report\"\n                          formControlName=\"report\"\n                          rows=\"15\"\n                          readonly></textarea>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <div class=\"cd-col-form-offset\">\n                <div class=\"btn-group\"\n                     role=\"group\">\n                  <cd-download-button [objectItem]=\"report\"\n                                      fileName=\"telemetry_report\">\n                  </cd-download-button>\n                  <cd-copy-2-clipboard-button source=\"report\">\n                  </cd-copy-2-clipboard-button>\n                </div>\n              </div>\n            </div>\n\n            <!-- License agreement -->\n            <div class=\"form-group row\">\n              <div class=\"cd-col-form-offset\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\"\n                         class=\"custom-control-input\"\n                         id=\"licenseAgrmt\"\n                         name=\"licenseAgrmt\"\n                         formControlName=\"licenseAgrmt\">\n                  <label class=\"custom-control-label\"\n                         for=\"licenseAgrmt\"\n                         i18n>I agree to my telemetry data being submitted under the <a href=\"https://cdla.io/sharing-1-0/\">Community Data License Agreement - Sharing - Version 1.0</a></label>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-footer\">\n            <div class=\"button-group text-right\">\n              <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                                    (backActionEvent)=\"back()\"\n                                    [form]=\"previewForm\"\n                                    [submitText]=\"actionLabels.UPDATE\"\n                                    [cancelText]=\"actionLabels.BACK\"></cd-form-button-panel>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </ng-container>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { NgbNavModule, NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartsModule } from 'ng2-charts';\n\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { CephSharedModule } from '../shared/ceph-shared.module';\nimport { FeedbackComponent } from '../shared/feedback/feedback.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HealthPieComponent } from './health-pie/health-pie.component';\nimport { HealthComponent } from './health/health.component';\nimport { InfoCardComponent } from './info-card/info-card.component';\nimport { InfoGroupComponent } from './info-group/info-group.component';\nimport { MdsSummaryPipe } from './mds-summary.pipe';\nimport { MgrSummaryPipe } from './mgr-summary.pipe';\nimport { MonSummaryPipe } from './mon-summary.pipe';\nimport { OsdSummaryPipe } from './osd-summary.pipe';\n\n@NgModule({\n  imports: [\n    CephSharedModule,\n    CommonModule,\n    NgbNavModule,\n    SharedModule,\n    ChartsModule,\n    RouterModule,\n    NgbPopoverModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n\n  declarations: [\n    HealthComponent,\n    DashboardComponent,\n    MonSummaryPipe,\n    OsdSummaryPipe,\n    MgrSummaryPipe,\n    MdsSummaryPipe,\n    HealthPieComponent,\n    InfoCardComponent,\n    InfoGroupComponent,\n    FeedbackComponent\n  ]\n})\nexport class DashboardModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cd-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n  hasGrafana = false; // TODO: Temporary var, remove when grafana is implemented\n}\n","<main aria-label=\"Dashboard\" >\n  <a href=\"#main\"\n     class=\"sr-only\">skip to content</a>\n\n  <cd-refresh-selector></cd-refresh-selector>\n\n  <ng-container *ngIf=\"hasGrafana\">\n    <nav ngbNav\n         #nav=\"ngbNav\"\n         class=\"nav-tabs\">\n      <ng-container ngbNavItem>\n        <a ngbNavLink\n           i18n>Health</a>\n        <ng-template ngbNavContent>\n          <cd-health></cd-health>\n        </ng-template>\n      </ng-container>\n      <ng-container ngbNavItem>\n        <a ngbNavLink\n           i18n>Statistics</a>\n        <ng-template ngbNavContent>\n        </ng-template>\n      </ng-container>\n\n    </nav>\n\n    <div [ngbNavOutlet]=\"nav\"></div>\n  </ng-container>\n\n  <cd-health id=\"main\"\n             *ngIf=\"!hasGrafana\"></cd-health>\n</main>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\n\nimport * as Chart from 'chart.js';\nimport _ from 'lodash';\nimport { PluginServiceGlobalRegistrationAndOptions } from 'ng2-charts';\n\nimport { CssHelper } from '~/app/shared/classes/css-helper';\nimport { ChartTooltip } from '~/app/shared/models/chart-tooltip';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { DimlessPipe } from '~/app/shared/pipes/dimless.pipe';\n\n@Component({\n  selector: 'cd-health-pie',\n  templateUrl: './health-pie.component.html',\n  styleUrls: ['./health-pie.component.scss']\n})\nexport class HealthPieComponent implements OnChanges, OnInit {\n  @ViewChild('chartCanvas', { static: true })\n  chartCanvasRef: ElementRef;\n  @ViewChild('chartTooltip', { static: true })\n  chartTooltipRef: ElementRef;\n\n  @Input()\n  data: any;\n  @Input()\n  config = {};\n  @Input()\n  isBytesData = false;\n  @Input()\n  tooltipFn: any;\n  @Input()\n  showLabelAsTooltip = false;\n  @Output()\n  prepareFn = new EventEmitter();\n\n  chartConfig: any = {\n    chartType: 'doughnut',\n    dataset: [\n      {\n        label: null,\n        borderWidth: 0\n      }\n    ],\n    colors: [\n      {\n        backgroundColor: [\n          this.cssHelper.propertyValue('chart-color-green'),\n          this.cssHelper.propertyValue('chart-color-yellow'),\n          this.cssHelper.propertyValue('chart-color-orange'),\n          this.cssHelper.propertyValue('chart-color-red'),\n          this.cssHelper.propertyValue('chart-color-blue')\n        ]\n      }\n    ],\n    options: {\n      cutoutPercentage: 90,\n      events: ['click', 'mouseout', 'touchstart'],\n      legend: {\n        display: true,\n        position: 'right',\n        labels: {\n          boxWidth: 10,\n          usePointStyle: false\n        }\n      },\n      plugins: {\n        center_text: true\n      },\n      tooltips: {\n        enabled: true,\n        displayColors: false,\n        backgroundColor: this.cssHelper.propertyValue('chart-color-tooltip-background'),\n        cornerRadius: 0,\n        bodyFontSize: 14,\n        bodyFontStyle: '600',\n        position: 'nearest',\n        xPadding: 12,\n        yPadding: 12,\n        callbacks: {\n          label: (item: Record<string, any>, data: Record<string, any>) => {\n            let text = data.labels[item.index];\n            if (!text.includes('%')) {\n              text = `${text} (${data.datasets[item.datasetIndex].data[item.index]}%)`;\n            }\n            return text;\n          }\n        }\n      },\n      title: {\n        display: false\n      }\n    }\n  };\n\n  public doughnutChartPlugins: PluginServiceGlobalRegistrationAndOptions[] = [\n    {\n      id: 'center_text',\n      beforeDraw(chart: Chart) {\n        const cssHelper = new CssHelper();\n        const defaultFontFamily = 'Helvetica Neue, Helvetica, Arial, sans-serif';\n        Chart.defaults.global.defaultFontFamily = defaultFontFamily;\n        const ctx = chart.ctx;\n        if (!chart.options.plugins.center_text || !chart.data.datasets[0].label) {\n          return;\n        }\n\n        ctx.save();\n        const label = chart.data.datasets[0].label.split('\\n');\n\n        const centerX = (chart.chartArea.left + chart.chartArea.right) / 2;\n        const centerY = (chart.chartArea.top + chart.chartArea.bottom) / 2;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n\n        ctx.font = `24px ${defaultFontFamily}`;\n        ctx.fillStyle = cssHelper.propertyValue('chart-color-center-text');\n        ctx.fillText(label[0], centerX, centerY - 10);\n\n        if (label.length > 1) {\n          ctx.font = `14px ${defaultFontFamily}`;\n          ctx.fillStyle = cssHelper.propertyValue('chart-color-center-text-description');\n          ctx.fillText(label[1], centerX, centerY + 10);\n        }\n        ctx.restore();\n      }\n    }\n  ];\n\n  constructor(\n    private dimlessBinary: DimlessBinaryPipe,\n    private dimless: DimlessPipe,\n    private cssHelper: CssHelper\n  ) {}\n\n  ngOnInit() {\n    const getStyleTop = (tooltip: any, positionY: number) => {\n      return positionY + tooltip.caretY - tooltip.height - 10 + 'px';\n    };\n\n    const getStyleLeft = (tooltip: any, positionX: number) => {\n      return positionX + tooltip.caretX + 'px';\n    };\n\n    const chartTooltip = new ChartTooltip(\n      this.chartCanvasRef,\n      this.chartTooltipRef,\n      getStyleLeft,\n      getStyleTop\n    );\n\n    chartTooltip.getBody = (body: any) => {\n      return this.getChartTooltipBody(body);\n    };\n\n    _.merge(this.chartConfig, this.config);\n\n    this.prepareFn.emit([this.chartConfig, this.data]);\n  }\n\n  ngOnChanges() {\n    this.prepareFn.emit([this.chartConfig, this.data]);\n    this.setChartSliceBorderWidth();\n  }\n\n  private getChartTooltipBody(body: string[]) {\n    const bodySplit = body[0].split(': ');\n\n    if (this.showLabelAsTooltip) {\n      return bodySplit[0];\n    }\n\n    bodySplit[1] = this.isBytesData\n      ? this.dimlessBinary.transform(bodySplit[1])\n      : this.dimless.transform(bodySplit[1]);\n\n    return bodySplit.join(': ');\n  }\n\n  private setChartSliceBorderWidth() {\n    let nonZeroValueSlices = 0;\n    _.forEach(this.chartConfig.dataset[0].data, function (slice) {\n      if (slice > 0) {\n        nonZeroValueSlices += 1;\n      }\n    });\n\n    this.chartConfig.dataset[0].borderWidth = nonZeroValueSlices > 1 ? 1 : 0;\n  }\n}\n","<div class=\"chart-container\">\n  <canvas baseChart\n          #chartCanvas\n          [datasets]=\"chartConfig.dataset\"\n          [chartType]=\"chartConfig.chartType\"\n          [options]=\"chartConfig.options\"\n          [labels]=\"chartConfig.labels\"\n          [colors]=\"chartConfig.colors\"\n          [plugins]=\"doughnutChartPlugins\"\n          class=\"chart-canvas\">\n  </canvas>\n  <div class=\"chartjs-tooltip\"\n       #chartTooltip>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport _ from 'lodash';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PgCategoryService } from '~/app/ceph/shared/pg-category.service';\nimport { HealthService } from '~/app/shared/api/health.service';\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { CssHelper } from '~/app/shared/classes/css-helper';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { OsdSettings } from '~/app/shared/models/osd-settings';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { DimlessPipe } from '~/app/shared/pipes/dimless.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport {\n  FeatureTogglesMap$,\n  FeatureTogglesService\n} from '~/app/shared/services/feature-toggles.service';\nimport { RefreshIntervalService } from '~/app/shared/services/refresh-interval.service';\n\n@Component({\n  selector: 'cd-health',\n  templateUrl: './health.component.html',\n  styleUrls: ['./health.component.scss']\n})\nexport class HealthComponent implements OnInit, OnDestroy {\n  healthData: any;\n  osdSettings = new OsdSettings();\n  interval = new Subscription();\n  permissions: Permissions;\n  enabledFeature$: FeatureTogglesMap$;\n  icons = Icons;\n  color: string;\n\n  clientStatsConfig = {\n    colors: [\n      {\n        backgroundColor: [\n          this.cssHelper.propertyValue('chart-color-cyan'),\n          this.cssHelper.propertyValue('chart-color-purple')\n        ]\n      }\n    ]\n  };\n\n  rawCapacityChartConfig = {\n    colors: [\n      {\n        backgroundColor: [\n          this.cssHelper.propertyValue('chart-color-blue'),\n          this.cssHelper.propertyValue('chart-color-gray')\n        ]\n      }\n    ]\n  };\n\n  pgStatusChartConfig = {\n    options: {\n      events: ['']\n    }\n  };\n\n  constructor(\n    private healthService: HealthService,\n    private osdService: OsdService,\n    private authStorageService: AuthStorageService,\n    private pgCategoryService: PgCategoryService,\n    private featureToggles: FeatureTogglesService,\n    private refreshIntervalService: RefreshIntervalService,\n    private dimlessBinary: DimlessBinaryPipe,\n    private dimless: DimlessPipe,\n    private cssHelper: CssHelper\n  ) {\n    this.permissions = this.authStorageService.getPermissions();\n    this.enabledFeature$ = this.featureToggles.get();\n  }\n\n  ngOnInit() {\n    this.interval = this.refreshIntervalService.intervalData$.subscribe(() => {\n      this.getHealth();\n    });\n\n    this.osdService\n      .getOsdSettings()\n      .pipe(take(1))\n      .subscribe((data: any) => {\n        this.osdSettings = data;\n      });\n  }\n\n  ngOnDestroy() {\n    this.interval.unsubscribe();\n  }\n\n  getHealth() {\n    this.healthService.getMinimalHealth().subscribe((data: any) => {\n      this.healthData = data;\n    });\n  }\n\n  prepareReadWriteRatio(chart: Record<string, any>) {\n    const ratioLabels = [];\n    const ratioData = [];\n\n    const total =\n      this.healthData.client_perf.write_op_per_sec + this.healthData.client_perf.read_op_per_sec;\n\n    ratioLabels.push(\n      `${$localize`Reads`}: ${this.dimless.transform(\n        this.healthData.client_perf.read_op_per_sec\n      )} ${$localize`/s`}`\n    );\n    ratioData.push(this.calcPercentage(this.healthData.client_perf.read_op_per_sec, total));\n    ratioLabels.push(\n      `${$localize`Writes`}: ${this.dimless.transform(\n        this.healthData.client_perf.write_op_per_sec\n      )} ${$localize`/s`}`\n    );\n    ratioData.push(this.calcPercentage(this.healthData.client_perf.write_op_per_sec, total));\n\n    chart.labels = ratioLabels;\n    chart.dataset[0].data = ratioData;\n    chart.dataset[0].label = `${this.dimless.transform(total)}\\n${$localize`IOPS`}`;\n  }\n\n  prepareClientThroughput(chart: Record<string, any>) {\n    const ratioLabels = [];\n    const ratioData = [];\n\n    const total =\n      this.healthData.client_perf.read_bytes_sec + this.healthData.client_perf.write_bytes_sec;\n\n    ratioLabels.push(\n      `${$localize`Reads`}: ${this.dimlessBinary.transform(\n        this.healthData.client_perf.read_bytes_sec\n      )}${$localize`/s`}`\n    );\n    ratioData.push(this.calcPercentage(this.healthData.client_perf.read_bytes_sec, total));\n    ratioLabels.push(\n      `${$localize`Writes`}: ${this.dimlessBinary.transform(\n        this.healthData.client_perf.write_bytes_sec\n      )}${$localize`/s`}`\n    );\n    ratioData.push(this.calcPercentage(this.healthData.client_perf.write_bytes_sec, total));\n\n    chart.labels = ratioLabels;\n    chart.dataset[0].data = ratioData;\n    chart.dataset[0].label = `${this.dimlessBinary\n      .transform(total)\n      .replace(' ', '\\n')}${$localize`/s`}`;\n  }\n\n  prepareRawUsage(chart: Record<string, any>, data: Record<string, any>) {\n    const percentAvailable = this.calcPercentage(\n      data.df.stats.total_bytes - data.df.stats.total_used_raw_bytes,\n      data.df.stats.total_bytes\n    );\n    const percentUsed = this.calcPercentage(\n      data.df.stats.total_used_raw_bytes,\n      data.df.stats.total_bytes\n    );\n\n    if (percentUsed / 100 >= this.osdSettings.nearfull_ratio) {\n      this.color = 'chart-color-red';\n    } else if (percentUsed / 100 >= this.osdSettings.full_ratio) {\n      this.color = 'chart-color-yellow';\n    } else {\n      this.color = 'chart-color-blue';\n    }\n    this.rawCapacityChartConfig.colors[0].backgroundColor[0] = this.cssHelper.propertyValue(\n      this.color\n    );\n\n    chart.dataset[0].data = [percentUsed, percentAvailable];\n\n    chart.labels = [\n      `${$localize`Used`}: ${this.dimlessBinary.transform(data.df.stats.total_used_raw_bytes)}`,\n      `${$localize`Avail.`}: ${this.dimlessBinary.transform(\n        data.df.stats.total_bytes - data.df.stats.total_used_raw_bytes\n      )}`\n    ];\n\n    chart.dataset[0].label = `${percentUsed}%\\nof ${this.dimlessBinary.transform(\n      data.df.stats.total_bytes\n    )}`;\n  }\n\n  preparePgStatus(chart: Record<string, any>, data: Record<string, any>) {\n    const categoryPgAmount: Record<string, number> = {};\n    let totalPgs = 0;\n\n    _.forEach(data.pg_info.statuses, (pgAmount, pgStatesText) => {\n      const categoryType = this.pgCategoryService.getTypeByStates(pgStatesText);\n\n      if (_.isUndefined(categoryPgAmount[categoryType])) {\n        categoryPgAmount[categoryType] = 0;\n      }\n      categoryPgAmount[categoryType] += pgAmount;\n      totalPgs += pgAmount;\n    });\n\n    for (const categoryType of this.pgCategoryService.getAllTypes()) {\n      if (_.isUndefined(categoryPgAmount[categoryType])) {\n        categoryPgAmount[categoryType] = 0;\n      }\n    }\n\n    chart.dataset[0].data = this.pgCategoryService\n      .getAllTypes()\n      .map((categoryType) => this.calcPercentage(categoryPgAmount[categoryType], totalPgs));\n\n    chart.labels = [\n      `${$localize`Clean`}: ${this.dimless.transform(categoryPgAmount['clean'])}`,\n      `${$localize`Working`}: ${this.dimless.transform(categoryPgAmount['working'])}`,\n      `${$localize`Warning`}: ${this.dimless.transform(categoryPgAmount['warning'])}`,\n      `${$localize`Unknown`}: ${this.dimless.transform(categoryPgAmount['unknown'])}`\n    ];\n\n    chart.dataset[0].label = `${totalPgs}\\n${$localize`PGs`}`;\n  }\n\n  prepareObjects(chart: Record<string, any>, data: Record<string, any>) {\n    const objectCopies = data.pg_info.object_stats.num_object_copies;\n    const healthy =\n      objectCopies -\n      data.pg_info.object_stats.num_objects_misplaced -\n      data.pg_info.object_stats.num_objects_degraded -\n      data.pg_info.object_stats.num_objects_unfound;\n    const healthyPercentage = this.calcPercentage(healthy, objectCopies);\n    const misplacedPercentage = this.calcPercentage(\n      data.pg_info.object_stats.num_objects_misplaced,\n      objectCopies\n    );\n    const degradedPercentage = this.calcPercentage(\n      data.pg_info.object_stats.num_objects_degraded,\n      objectCopies\n    );\n    const unfoundPercentage = this.calcPercentage(\n      data.pg_info.object_stats.num_objects_unfound,\n      objectCopies\n    );\n\n    chart.labels = [\n      `${$localize`Healthy`}: ${healthyPercentage}%`,\n      `${$localize`Misplaced`}: ${misplacedPercentage}%`,\n      `${$localize`Degraded`}: ${degradedPercentage}%`,\n      `${$localize`Unfound`}: ${unfoundPercentage}%`\n    ];\n\n    chart.dataset[0].data = [\n      healthyPercentage,\n      misplacedPercentage,\n      degradedPercentage,\n      unfoundPercentage\n    ];\n\n    chart.dataset[0].label = `${this.dimless.transform(\n      data.pg_info.object_stats.num_objects\n    )}\\n${$localize`objects`}`;\n  }\n\n  isClientReadWriteChartShowable() {\n    const readOps = this.healthData.client_perf.read_op_per_sec || 0;\n    const writeOps = this.healthData.client_perf.write_op_per_sec || 0;\n\n    return readOps + writeOps > 0;\n  }\n\n  private calcPercentage(dividend: number, divisor: number) {\n    if (!_.isNumber(dividend) || !_.isNumber(divisor) || divisor === 0) {\n      return 0;\n    }\n\n    return Math.ceil((dividend / divisor) * 100 * 100) / 100;\n  }\n}\n","<div *ngIf=\"healthData && enabledFeature$ | async as enabledFeature\"\n     class=\"container-fluid\">\n  <cd-info-group groupTitle=\"Status\"\n                 i18n-groupTitle\n                 *ngIf=\"healthData.health?.status\n                 || healthData.mon_status\n                 || healthData.osd_map\n                 || healthData.mgr_map\n                 || healthData.hosts != null\n                 || healthData.rgw != null\n                 || healthData.fs_map\n                 || healthData.iscsi_daemons != null\">\n\n    <cd-info-card cardTitle=\"Cluster Status\"\n                  i18n-cardTitle\n                  class=\"cd-status-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"healthData.health?.status\">\n      <ng-container *ngIf=\"healthData.health?.checks?.length > 0\">\n        <ng-template #healthChecks>\n          <ng-container *ngTemplateOutlet=\"logsLink\"></ng-container>\n          <ul>\n            <li *ngFor=\"let check of healthData.health.checks\">\n              <span [ngStyle]=\"check.severity | healthColor\"\n                    [class.health-warn-description]=\"check.severity === 'HEALTH_WARN'\">\n              {{ check.type }}</span>: {{ check.summary.message }}\n            </li>\n          </ul>\n        </ng-template>\n        <div class=\"info-card-content-clickable\"\n             [ngStyle]=\"healthData.health.status | healthColor\"\n             [ngbPopover]=\"healthChecks\"\n             popoverClass=\"info-card-popover-cluster-status\">\n          {{ healthData.health.status | healthLabel | uppercase }}\n          <i *ngIf=\"healthData.health?.status !== 'HEALTH_OK'\"\n             class=\"fa fa-exclamation-triangle\"></i>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"!healthData.health?.checks?.length\">\n        <div [ngStyle]=\"healthData.health.status | healthColor\">\n          {{ healthData.health.status | healthLabel | uppercase }}\n        </div>\n      </ng-container>\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Hosts\"\n                  i18n-cardTitle\n                  link=\"/hosts\"\n                  class=\"cd-status-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"healthData.hosts != null\">\n      {{ healthData.hosts }} total\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Monitors\"\n                  i18n-cardTitle\n                  link=\"/monitor\"\n                  class=\"cd-status-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"healthData.mon_status\">\n      {{ healthData.mon_status | monSummary }}\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"OSDs\"\n                  i18n-cardTitle\n                  link=\"/osd\"\n                  class=\"cd-status-card\"\n                  *ngIf=\"(healthData.osd_map | osdSummary) as transformedResult\"\n                  contentClass=\"content-highlight\">\n      <span *ngFor=\"let result of transformedResult\"\n            [ngClass]=\"result.class\">\n        {{ result.content }}\n      </span>\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Managers\"\n                  i18n-cardTitle\n                  class=\"cd-status-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"healthData.mgr_map\">\n      <span *ngFor=\"let result of (healthData.mgr_map | mgrSummary)\"\n            [ngClass]=\"result.class\"\n            [title]=\"result.titleText != null ? result.titleText : ''\">\n        {{ result.content }}\n      </span>\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Object Gateways\"\n                  i18n-cardTitle\n                  link=\"/rgw/daemon\"\n                  class=\"cd-status-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"enabledFeature.rgw && healthData?.rgw != null\">\n      {{ healthData.rgw }} total\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Metadata Servers\"\n                  i18n-cardTitle\n                  class=\"cd-status-card\"\n                  *ngIf=\"(enabledFeature.cephfs && healthData.fs_map | mdsSummary) as transformedResult\"\n                  [contentClass]=\"(transformedResult.length > 1 ? 'text-area-size-2' : '') + ' content-highlight'\">\n      <!-- TODO: check text-area-size-2 -->\n      <span *ngFor=\"let result of transformedResult\"\n            [ngClass]=\"result.class\"\n            [title]=\"result.titleText !== null ? result.titleText : ''\">\n        {{ result.content }}\n      </span>\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"iSCSI Gateways\"\n                  i18n-cardTitle\n                  link=\"/block/iscsi\"\n                  class=\"cd-status-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"enabledFeature.iscsi && healthData?.iscsi_daemons != null\">\n      {{ healthData.iscsi_daemons.up + healthData.iscsi_daemons.down }} total\n      <span class=\"card-text-line-break\"></span>\n      {{ healthData.iscsi_daemons.up }} up,\n      <span [ngClass]=\"{'card-text-error': healthData.iscsi_daemons.down > 0}\">{{ healthData.iscsi_daemons.down }}\n        down</span>\n    </cd-info-card>\n  </cd-info-group>\n\n  <cd-info-group groupTitle=\"Capacity\"\n                 i18n-groupTitle\n                 *ngIf=\"healthData.pools\n                 || healthData.df\n                 || healthData.pg_info\">\n    <cd-info-card cardTitle=\"Raw Capacity\"\n                  i18n-cardTitle\n                  class=\"cd-capacity-card cd-chart-card\"\n                  contentClass=\"content-chart\"\n                  *ngIf=\"healthData.df\">\n      <cd-health-pie [data]=\"healthData\"\n                     [config]=\"rawCapacityChartConfig\"\n                     [isBytesData]=\"true\"\n                     (prepareFn)=\"prepareRawUsage($event[0], $event[1])\">\n      </cd-health-pie>\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Objects\"\n                  i18n-cardTitle\n                  class=\"cd-capacity-card cd-chart-card\"\n                  contentClass=\"content-chart\"\n                  *ngIf=\"healthData.pg_info?.object_stats?.num_objects != null\">\n      <cd-health-pie [data]=\"healthData\"\n                     (prepareFn)=\"prepareObjects($event[0], $event[1])\">\n      </cd-health-pie>\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"PG Status\"\n                  i18n-cardTitle\n                  class=\"cd-capacity-card cd-chart-card\"\n                  contentClass=\"content-chart\"\n                  *ngIf=\"healthData.pg_info\">\n      <ng-template #pgStatus>\n        <ng-container *ngTemplateOutlet=\"logsLink\"></ng-container>\n        <ul>\n          <li *ngFor=\"let pgStatesText of healthData.pg_info.statuses | keyvalue\">\n            {{ pgStatesText.key }}: {{ pgStatesText.value }}\n          </li>\n        </ul>\n      </ng-template>\n      <div class=\"pg-status-popover-wrapper\">\n        <div [ngbPopover]=\"pgStatus\">\n          <cd-health-pie [data]=\"healthData\"\n                         [config]=\"pgStatusChartConfig\"\n                         (prepareFn)=\"preparePgStatus($event[0], $event[1])\">\n          </cd-health-pie>\n        </div>\n      </div>\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Pools\"\n                  i18n-cardTitle\n                  link=\"/pool\"\n                  class=\"cd-capacity-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"healthData.pools\">\n      {{ healthData.pools.length }}\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"PGs per OSD\"\n                  i18n-cardTitle\n                  class=\"cd-capacity-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"healthData.pg_info\">\n      {{ healthData.pg_info.pgs_per_osd | dimless }}\n    </cd-info-card>\n  </cd-info-group>\n\n  <cd-info-group groupTitle=\"Performance\"\n                 i18n-groupTitle\n                 *ngIf=\"healthData.client_perf || healthData.scrub_status\">\n    <cd-info-card cardTitle=\"Client Read/Write\"\n                  i18n-cardTitle\n                  class=\"cd-performance-card cd-chart-card\"\n                  contentClass=\"content-chart\"\n                  *ngIf=\"healthData.client_perf\">\n      <cd-health-pie [data]=\"healthData\"\n                     [config]=\"clientStatsConfig\"\n                     (prepareFn)=\"prepareReadWriteRatio($event[0], $event[1])\">\n      </cd-health-pie>\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Client Throughput\"\n                  i18n-cardTitle\n                  class=\"cd-performance-card cd-chart-card\"\n                  contentClass=\"content-chart\"\n                  *ngIf=\"healthData.client_perf\">\n      <cd-health-pie [data]=\"healthData\"\n                     [config]=\"clientStatsConfig\"\n                     (prepareFn)=\"prepareClientThroughput($event[0], $event[1])\">\n      </cd-health-pie>\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Recovery Throughput\"\n                  i18n-cardTitle\n                  class=\"cd-performance-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"healthData.client_perf\">\n      {{ (healthData.client_perf.recovering_bytes_per_sec | dimlessBinary) + '/s' }}\n    </cd-info-card>\n\n    <cd-info-card cardTitle=\"Scrubbing\"\n                  i18n-cardTitle\n                  class=\"cd-performance-card\"\n                  contentClass=\"content-highlight\"\n                  *ngIf=\"healthData.scrub_status\">\n      {{ healthData.scrub_status }}\n    </cd-info-card>\n  </cd-info-group>\n\n  <ng-template #logsLink>\n    <ng-container *ngIf=\"permissions.log.read\">\n      <p class=\"logs-link\"\n         i18n><i [ngClass]=\"[icons.infoCircle]\"></i> See <a routerLink=\"/logs\">Logs</a> for more details.</p>\n    </ng-container>\n  </ng-template>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cd-info-card',\n  templateUrl: './info-card.component.html',\n  styleUrls: ['./info-card.component.scss']\n})\nexport class InfoCardComponent {\n  @Input()\n  cardTitle: string;\n  @Input()\n  link: string;\n  @Input()\n  cardClass = '';\n  @Input()\n  contentClass: string;\n}\n","<div class=\"card shadow-sm\"\n     [ngClass]=\"cardClass\">\n  <div class=\"card-body d-flex align-items-center justify-content-center\">\n    <h4 class=\"card-title m-4\">\n      <a *ngIf=\"link; else noLinkTitle\"\n         [routerLink]=\"link\">{{ cardTitle }}</a>\n\n      <ng-template #noLinkTitle>\n        {{ cardTitle }}\n      </ng-template>\n    </h4>\n\n    <div class=\"card-text text-center\"\n         [ngClass]=\"contentClass\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\n\n@Component({\n  selector: 'cd-info-group',\n  templateUrl: './info-group.component.html',\n  styleUrls: ['./info-group.component.scss']\n})\nexport class InfoGroupComponent {\n  icons = Icons;\n  @Input()\n  groupTitle: string;\n}\n","<div class=\"row\">\n  <div class=\"info-group-title\">\n    <span>{{ groupTitle }}</span>\n    <cd-helper iconClass=\"fa fa-info-circle fa-2xs\">\n      <div class=\"text-center\"\n           i18n>For an overview of {{ groupTitle|lowercase }} widgets click\n        <cd-doc section=\"dashboard-landing-page-{{ groupTitle|lowercase }}\"\n                docText=\"here\"\n                i18n-docText></cd-doc>\n      </div>\n    </cd-helper>\n  </div>\n</div>\n\n<div class=\"row\">\n  <ng-content></ng-content>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'mdsSummary'\n})\nexport class MdsSummaryPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return '';\n    }\n\n    let contentLine1 = '';\n    let contentLine2 = '';\n    let standbys = 0;\n    let active = 0;\n    let standbyReplay = 0;\n    _.each(value.standbys, () => {\n      standbys += 1;\n    });\n\n    if (value.standbys && !value.filesystems) {\n      contentLine1 = `${standbys} ${$localize`up`}`;\n      contentLine2 = $localize`no filesystems`;\n    } else if (value.filesystems.length === 0) {\n      contentLine1 = $localize`no filesystems`;\n    } else {\n      _.each(value.filesystems, (fs) => {\n        _.each(fs.mdsmap.info, (mds) => {\n          if (mds.state === 'up:standby-replay') {\n            standbyReplay += 1;\n          } else {\n            active += 1;\n          }\n        });\n      });\n\n      contentLine1 = `${active} ${$localize`active`}`;\n      contentLine2 = `${standbys + standbyReplay} ${$localize`standby`}`;\n    }\n    const standbyHoverText = value.standbys.map((s: any): string => s.name).join(', ');\n    const standbyTitleText = !standbyHoverText\n      ? ''\n      : `${$localize`standby daemons`}: ${standbyHoverText}`;\n    const fsLength = value.filesystems ? value.filesystems.length : 0;\n    const infoObject = fsLength > 0 ? value.filesystems[0].mdsmap.info : {};\n    const activeHoverText = Object.values(infoObject)\n      .map((info: any): string => info.name)\n      .join(', ');\n    let activeTitleText = !activeHoverText ? '' : `${$localize`active daemon`}: ${activeHoverText}`;\n    // There is always one standbyreplay to replace active daemon, if active one is down\n    if (!active && fsLength > 0) {\n      activeTitleText = `${standbyReplay} ${$localize`standbyReplay`}`;\n    }\n    const mgrSummary = [\n      {\n        content: contentLine1,\n        class: 'popover-info',\n        titleText: activeTitleText\n      }\n    ];\n    if (contentLine2) {\n      mgrSummary.push({\n        content: '',\n        class: 'card-text-line-break',\n        titleText: ''\n      });\n      mgrSummary.push({\n        content: contentLine2,\n        class: 'popover-info',\n        titleText: standbyTitleText\n      });\n    }\n\n    return mgrSummary;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'mgrSummary'\n})\nexport class MgrSummaryPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return '';\n    }\n\n    let activeCount = $localize`n/a`;\n    const activeTitleText = _.isUndefined(value.active_name)\n      ? ''\n      : `${$localize`active daemon`}: ${value.active_name}`;\n    // There is always one standbyreplay to replace active daemon, if active one is down\n    if (activeTitleText.length > 0) {\n      activeCount = '1';\n    }\n    const standbyHoverText = value.standbys.map((s: any): string => s.name).join(', ');\n    const standbyTitleText = !standbyHoverText\n      ? ''\n      : `${$localize`standby daemons`}: ${standbyHoverText}`;\n    const standbyCount = value.standbys.length;\n    const mgrSummary = [\n      {\n        content: `${activeCount} ${$localize`active`}`,\n        class: 'popover-info',\n        titleText: activeTitleText\n      }\n    ];\n\n    mgrSummary.push({\n      content: '',\n      class: 'card-text-line-break',\n      titleText: ''\n    });\n    mgrSummary.push({\n      content: `${standbyCount} ${$localize`standby`}`,\n      class: 'popover-info',\n      titleText: standbyTitleText\n    });\n\n    return mgrSummary;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'monSummary'\n})\nexport class MonSummaryPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return '';\n    }\n\n    const result = $localize`${value.monmap.mons.length.toString()} (quorum \\\n${value.quorum.join(', ')})`;\n\n    return result;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'osdSummary'\n})\nexport class OsdSummaryPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return '';\n    }\n\n    let inCount = 0;\n    let upCount = 0;\n    let nearFullCount = 0;\n    let fullCount = 0;\n    _.each(value.osds, (osd) => {\n      if (osd.in) {\n        inCount++;\n      }\n      if (osd.up) {\n        upCount++;\n      }\n      if (osd.state.includes('nearfull')) {\n        nearFullCount++;\n      }\n      if (osd.state.includes('full')) {\n        fullCount++;\n      }\n    });\n\n    const osdSummary = [\n      {\n        content: `${value.osds.length} ${$localize`total`}`,\n        class: ''\n      }\n    ];\n    osdSummary.push({\n      content: '',\n      class: 'card-text-line-break'\n    });\n    osdSummary.push({\n      content: `${upCount} ${$localize`up`}, ${inCount} ${$localize`in`}`,\n      class: ''\n    });\n\n    const downCount = value.osds.length - upCount;\n    const outCount = value.osds.length - inCount;\n    if (downCount > 0 || outCount > 0) {\n      osdSummary.push({\n        content: '',\n        class: 'card-text-line-break'\n      });\n\n      const downText = downCount > 0 ? `${downCount} ${$localize`down`}` : '';\n      const separator = downCount > 0 && outCount > 0 ? ', ' : '';\n      const outText = outCount > 0 ? `${outCount} ${$localize`out`}` : '';\n      osdSummary.push({\n        content: `${downText}${separator}${outText}`,\n        class: 'card-text-error'\n      });\n    }\n\n    if (nearFullCount > 0) {\n      osdSummary.push(\n        {\n          content: '',\n          class: 'card-text-line-break'\n        },\n        {\n          content: `${nearFullCount} ${$localize`near full`}`,\n          class: 'card-text-error'\n        },\n        {\n          content: '',\n          class: 'card-text-line-break'\n        }\n      );\n    }\n\n    if (fullCount > 0) {\n      osdSummary.push({\n        content: `${fullCount} ${$localize`full`}`,\n        class: 'card-text-error'\n      });\n    }\n\n    return osdSummary;\n  }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\n\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\n\n@Component({\n  selector: 'cd-nfs-details',\n  templateUrl: './nfs-details.component.html',\n  styleUrls: ['./nfs-details.component.scss']\n})\nexport class NfsDetailsComponent implements OnChanges {\n  @Input()\n  selection: any;\n\n  selectedItem: any;\n  data: any;\n\n  clientsColumns: CdTableColumn[];\n  clients: any[] = [];\n\n  constructor() {\n    this.clientsColumns = [\n      {\n        name: $localize`Addresses`,\n        prop: 'addresses',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Access Type`,\n        prop: 'access_type',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Squash`,\n        prop: 'squash',\n        flexGrow: 1\n      }\n    ];\n  }\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.selectedItem = this.selection;\n\n      this.clients = this.selectedItem.clients;\n\n      this.data = {};\n      this.data[$localize`Cluster`] = this.selectedItem.cluster_id;\n      this.data[$localize`NFS Protocol`] = this.selectedItem.protocols.map(\n        (protocol: string) => 'NFSv' + protocol\n      );\n      this.data[$localize`Pseudo`] = this.selectedItem.pseudo;\n      this.data[$localize`Access Type`] = this.selectedItem.access_type;\n      this.data[$localize`Squash`] = this.selectedItem.squash;\n      this.data[$localize`Transport`] = this.selectedItem.transports;\n      this.data[$localize`Path`] = this.selectedItem.path;\n\n      if (this.selectedItem.fsal.name === 'CEPH') {\n        this.data[$localize`Storage Backend`] = $localize`CephFS`;\n        this.data[$localize`CephFS User`] = this.selectedItem.fsal.user_id;\n        this.data[$localize`CephFS Filesystem`] = this.selectedItem.fsal.fs_name;\n        this.data[$localize`Security Label`] = this.selectedItem.fsal.sec_label_xattr;\n      } else {\n        this.data[$localize`Storage Backend`] = $localize`Object Gateway`;\n        this.data[$localize`Object Gateway User`] = this.selectedItem.fsal.user_id;\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <nav ngbNav\n       #nav=\"ngbNav\"\n       class=\"nav-tabs\"\n       cdStatefulTab=\"nfs-details\">\n    <ng-container ngbNavItem=\"details\">\n      <a ngbNavLink\n         i18n>Details</a>\n      <ng-template ngbNavContent>\n        <cd-table-key-value [data]=\"data\">\n        </cd-table-key-value>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"clients\">\n      <a ngbNavLink\n         i18n>Clients ({{ clients.length }})</a>\n      <ng-template ngbNavContent>\n\n        <cd-table #table\n                  [data]=\"clients\"\n                  columnMode=\"flex\"\n                  [columns]=\"clientsColumns\"\n                  identifier=\"addresses\"\n                  forceIdentifier=\"true\"\n                  selectionType=\"\">\n        </cd-table>\n      </ng-template>\n    </ng-container>\n  </nav>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n</ng-container>\n","import { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\nimport { FormArray, FormControl, NgForm, Validators } from '@angular/forms';\n\nimport _ from 'lodash';\n\nimport { NfsService } from '~/app/shared/api/nfs.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\n\n@Component({\n  selector: 'cd-nfs-form-client',\n  templateUrl: './nfs-form-client.component.html',\n  styleUrls: ['./nfs-form-client.component.scss']\n})\nexport class NfsFormClientComponent implements OnInit {\n  @Input()\n  form: CdFormGroup;\n\n  @Input()\n  clients: any[];\n\n  @ContentChild('squashHelper', { static: true }) squashHelperTpl: TemplateRef<any>;\n\n  nfsSquash: any[] = Object.keys(this.nfsService.nfsSquash);\n  nfsAccessType: any[] = this.nfsService.nfsAccessType;\n  icons = Icons;\n  clientsFormArray: FormArray;\n\n  constructor(private nfsService: NfsService) {}\n\n  ngOnInit() {\n    _.forEach(this.clients, (client) => {\n      const fg = this.addClient();\n      fg.patchValue(client);\n    });\n    this.clientsFormArray = this.form.get('clients') as FormArray;\n  }\n\n  getNoAccessTypeDescr() {\n    if (this.form.getValue('access_type')) {\n      return `${this.form.getValue('access_type')} ${$localize`(inherited from global config)`}`;\n    }\n    return $localize`-- Select the access type --`;\n  }\n\n  getAccessTypeHelp(index: number) {\n    const accessTypeItem = this.nfsAccessType.find((currentAccessTypeItem) => {\n      return this.getValue(index, 'access_type') === currentAccessTypeItem.value;\n    });\n    return _.isObjectLike(accessTypeItem) ? accessTypeItem.help : '';\n  }\n\n  getNoSquashDescr() {\n    if (this.form.getValue('squash')) {\n      return `${this.form.getValue('squash')} (${$localize`inherited from global config`})`;\n    }\n    return $localize`-- Select what kind of user id squashing is performed --`;\n  }\n\n  addClient() {\n    this.clientsFormArray = this.form.get('clients') as FormArray;\n\n    const REGEX_IP = `(([0-9]{1,3})\\\\.([0-9]{1,3})\\\\.([0-9]{1,3})\\.([0-9]{1,3})([/](\\\\d|[1-2]\\\\d|3[0-2]))?)`;\n    const REGEX_LIST_IP = `${REGEX_IP}([ ,]{1,2}${REGEX_IP})*`;\n    const fg = new CdFormGroup({\n      addresses: new FormControl('', {\n        validators: [Validators.required, Validators.pattern(REGEX_LIST_IP)]\n      }),\n      access_type: new FormControl(''),\n      squash: new FormControl('')\n    });\n\n    this.clientsFormArray.push(fg);\n    return fg;\n  }\n\n  removeClient(index: number) {\n    this.clientsFormArray = this.form.get('clients') as FormArray;\n    this.clientsFormArray.removeAt(index);\n  }\n\n  showError(index: number, control: string, formDir: NgForm, x: string) {\n    return (<any>this.form.controls.clients).controls[index].showError(control, formDir, x);\n  }\n\n  getValue(index: number, control: string) {\n    this.clientsFormArray = this.form.get('clients') as FormArray;\n    const client = this.clientsFormArray.at(index) as CdFormGroup;\n    return client.getValue(control);\n  }\n\n  trackByFn(index: number) {\n    return index;\n  }\n}\n","<div class=\"form-group row\">\n  <label class=\"cd-col-form-label\"\n         i18n>Clients</label>\n\n  <div class=\"cd-col-form-input\"\n       [formGroup]=\"form\"\n       #formDir=\"ngForm\">\n    <span *ngIf=\"form.get('clients').value.length === 0\"\n          class=\"no-border text-muted\">\n      <span class=\"form-text text-muted\"\n            i18n>Any client can access</span>\n    </span>\n\n    <ng-container formArrayName=\"clients\">\n      <div *ngFor=\"let item of clientsFormArray.controls; let index = index; trackBy: trackByFn\">\n        <div class=\"card\"\n             [formGroup]=\"item\">\n          <div class=\"card-header\">\n            {{ (index + 1) | ordinal }}\n            <span class=\"float-end clickable\"\n                  name=\"remove_client\"\n                  (click)=\"removeClient(index)\"\n                  ngbTooltip=\"Remove\">&times;</span>\n          </div>\n\n          <div class=\"card-body\">\n            <!-- Addresses -->\n            <div class=\"form-group row\">\n              <label i18n\n                     class=\"cd-col-form-label required\"\n                     for=\"addresses\">Addresses</label>\n              <div class=\"cd-col-form-input\">\n                <input type=\"text\"\n                       class=\"form-control\"\n                       name=\"addresses\"\n                       id=\"addresses\"\n                       formControlName=\"addresses\"\n                       placeholder=\"192.168.0.10, 192.168.1.0/8\">\n                <span class=\"invalid-feedback\">\n                  <span *ngIf=\"showError(index, 'addresses', formDir, 'required')\"\n                        i18n>This field is required.</span>\n\n                  <span *ngIf=\"showError(index, 'addresses', formDir, 'pattern')\">\n                    <ng-container i18n>Must contain one or more comma-separated values</ng-container>\n                    <br>\n                    <ng-container i18n>For example:</ng-container> 192.168.0.10, 192.168.1.0/8\n                  </span>\n                </span>\n              </div>\n            </div>\n\n            <!-- Access Type-->\n            <div class=\"form-group row\">\n              <label i18n\n                     class=\"cd-col-form-label\"\n                     for=\"access_type\">Access Type</label>\n              <div class=\"cd-col-form-input\">\n                <select class=\"form-select\"\n                        name=\"access_type\"\n                        id=\"access_type\"\n                        formControlName=\"access_type\">\n                  <option value=\"\">{{ getNoAccessTypeDescr() }}</option>\n                  <option *ngFor=\"let item of nfsAccessType\"\n                          [value]=\"item.value\">{{ item.value }}</option>\n                </select>\n                <span class=\"form-text text-muted\"\n                      *ngIf=\"getValue(index, 'access_type')\">\n                  {{ getAccessTypeHelp(index) }}\n                </span>\n              </div>\n            </div>\n\n            <!-- Squash -->\n            <div class=\"form-group row\">\n              <label class=\"cd-col-form-label\"\n                     for=\"squash\">\n                <span i18n>Squash</span>\n                <ng-container *ngTemplateOutlet=\"squashHelperTpl\"></ng-container>\n              </label>\n              <div class=\"cd-col-form-input\">\n                <select class=\"form-select\"\n                        name=\"squash\"\n                        id=\"squash\"\n                        formControlName=\"squash\">\n                  <option value=\"\">{{ getNoSquashDescr() }}</option>\n                  <option *ngFor=\"let squash of nfsSquash\"\n                          [value]=\"squash\">{{ squash }}</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"row my-2\">\n      <div class=\"col-12\">\n        <div class=\"float-end\">\n          <button class=\"btn btn-light \"\n                  (click)=\"addClient()\"\n                  name=\"add_client\">\n            <i [ngClass]=\"[icons.add]\"></i>\n            <ng-container i18n>Add clients</ng-container>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  AbstractControl,\n  AsyncValidatorFn,\n  FormControl,\n  ValidationErrors,\n  Validators\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport _ from 'lodash';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, map, mergeMap } from 'rxjs/operators';\n\nimport { NfsFSAbstractionLayer } from '~/app/ceph/nfs/models/nfs.fsal';\nimport { Directory, NfsService } from '~/app/shared/api/nfs.service';\nimport { RgwBucketService } from '~/app/shared/api/rgw-bucket.service';\nimport { RgwSiteService } from '~/app/shared/api/rgw-site.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { CdHttpErrorResponse } from '~/app/shared/services/api-interceptor.service';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { NfsFormClientComponent } from '../nfs-form-client/nfs-form-client.component';\n\n@Component({\n  selector: 'cd-nfs-form',\n  templateUrl: './nfs-form.component.html',\n  styleUrls: ['./nfs-form.component.scss']\n})\nexport class NfsFormComponent extends CdForm implements OnInit {\n  @ViewChild('nfsClients', { static: true })\n  nfsClients: NfsFormClientComponent;\n\n  clients: any[] = [];\n\n  permission: Permission;\n  nfsForm: CdFormGroup;\n  isEdit = false;\n\n  cluster_id: string = null;\n  export_id: string = null;\n\n  allClusters: { cluster_id: string }[] = null;\n  icons = Icons;\n\n  allFsals: any[] = [];\n  allFsNames: any[] = null;\n  fsalAvailabilityError: string = null;\n\n  defaultAccessType = { RGW: 'RO' };\n  nfsAccessType: any[] = this.nfsService.nfsAccessType;\n  nfsSquash: any[] = Object.keys(this.nfsService.nfsSquash);\n\n  action: string;\n  resource: string;\n\n  pathDataSource = (text$: Observable<string>) => {\n    return text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      mergeMap((token: string) => this.getPathTypeahead(token)),\n      map((val: string[]) => val)\n    );\n  };\n\n  bucketDataSource = (text$: Observable<string>) => {\n    return text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      mergeMap((token: string) => this.getBucketTypeahead(token))\n    );\n  };\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private nfsService: NfsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private rgwBucketService: RgwBucketService,\n    private rgwSiteService: RgwSiteService,\n    private formBuilder: CdFormBuilder,\n    private taskWrapper: TaskWrapperService,\n    private cdRef: ChangeDetectorRef,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.permission = this.authStorageService.getPermissions().pool;\n    this.resource = $localize`NFS export`;\n    this.createForm();\n  }\n\n  ngOnInit() {\n    const promises: Observable<any>[] = [\n      this.nfsService.listClusters(),\n      this.nfsService.fsals(),\n      this.nfsService.filesystems()\n    ];\n\n    if (this.router.url.startsWith('/nfs/edit')) {\n      this.isEdit = true;\n    }\n\n    if (this.isEdit) {\n      this.action = this.actionLabels.EDIT;\n      this.route.params.subscribe((params: { cluster_id: string; export_id: string }) => {\n        this.cluster_id = decodeURIComponent(params.cluster_id);\n        this.export_id = decodeURIComponent(params.export_id);\n        promises.push(this.nfsService.get(this.cluster_id, this.export_id));\n\n        this.getData(promises);\n      });\n      this.nfsForm.get('cluster_id').disable();\n    } else {\n      this.action = this.actionLabels.CREATE;\n      this.getData(promises);\n    }\n  }\n\n  getData(promises: Observable<any>[]) {\n    forkJoin(promises).subscribe((data: any[]) => {\n      this.resolveClusters(data[0]);\n      this.resolveFsals(data[1]);\n      this.resolveFilesystems(data[2]);\n      if (data[3]) {\n        this.resolveModel(data[3]);\n      }\n\n      this.loadingReady();\n    });\n  }\n\n  createForm() {\n    this.nfsForm = new CdFormGroup({\n      cluster_id: new FormControl('', {\n        validators: [Validators.required]\n      }),\n      fsal: new CdFormGroup({\n        name: new FormControl('', {\n          validators: [Validators.required]\n        }),\n        fs_name: new FormControl('', {\n          validators: [\n            CdValidators.requiredIf({\n              name: 'CEPH'\n            })\n          ]\n        })\n      }),\n      path: new FormControl('/'),\n      protocolNfsv4: new FormControl(true),\n      pseudo: new FormControl('', {\n        validators: [\n          CdValidators.requiredIf({ protocolNfsv4: true }),\n          Validators.pattern('^/[^><|&()]*$')\n        ]\n      }),\n      access_type: new FormControl('RW'),\n      squash: new FormControl(this.nfsSquash[0]),\n      transportUDP: new FormControl(true, {\n        validators: [\n          CdValidators.requiredIf({ transportTCP: false }, (value: boolean) => {\n            return !value;\n          })\n        ]\n      }),\n      transportTCP: new FormControl(true, {\n        validators: [\n          CdValidators.requiredIf({ transportUDP: false }, (value: boolean) => {\n            return !value;\n          })\n        ]\n      }),\n      clients: this.formBuilder.array([]),\n      security_label: new FormControl(false),\n      sec_label_xattr: new FormControl(\n        'security.selinux',\n        CdValidators.requiredIf({ security_label: true, 'fsal.name': 'CEPH' })\n      )\n    });\n  }\n\n  resolveModel(res: any) {\n    if (res.fsal.name === 'CEPH') {\n      res.sec_label_xattr = res.fsal.sec_label_xattr;\n    }\n\n    res.protocolNfsv4 = res.protocols.indexOf(4) !== -1;\n    delete res.protocols;\n\n    res.transportTCP = res.transports.indexOf('TCP') !== -1;\n    res.transportUDP = res.transports.indexOf('UDP') !== -1;\n    delete res.transports;\n\n    Object.entries(this.nfsService.nfsSquash).forEach(([key, value]) => {\n      if (value.includes(res.squash)) {\n        res.squash = key;\n      }\n    });\n\n    res.clients.forEach((client: any) => {\n      let addressStr = '';\n      client.addresses.forEach((address: string) => {\n        addressStr += address + ', ';\n      });\n      if (addressStr.length >= 2) {\n        addressStr = addressStr.substring(0, addressStr.length - 2);\n      }\n      client.addresses = addressStr;\n    });\n\n    this.nfsForm.patchValue(res);\n    this.setPathValidation();\n    this.clients = res.clients;\n  }\n\n  resolveClusters(clusters: string[]) {\n    this.allClusters = [];\n    for (const cluster of clusters) {\n      this.allClusters.push({ cluster_id: cluster });\n    }\n    if (!this.isEdit && this.allClusters.length > 0) {\n      this.nfsForm.get('cluster_id').setValue(this.allClusters[0].cluster_id);\n    }\n  }\n\n  resolveFsals(res: string[]) {\n    res.forEach((fsal) => {\n      const fsalItem = this.nfsService.nfsFsal.find((currentFsalItem) => {\n        return fsal === currentFsalItem.value;\n      });\n\n      if (_.isObjectLike(fsalItem)) {\n        this.allFsals.push(fsalItem);\n      }\n    });\n    if (!this.isEdit && this.allFsals.length > 0) {\n      this.nfsForm.patchValue({\n        fsal: {\n          name: this.allFsals[0].value\n        }\n      });\n    }\n  }\n\n  resolveFilesystems(filesystems: any[]) {\n    this.allFsNames = filesystems;\n    if (!this.isEdit && filesystems.length > 0) {\n      this.nfsForm.patchValue({\n        fsal: {\n          fs_name: filesystems[0].name\n        }\n      });\n    }\n  }\n\n  fsalChangeHandler() {\n    this.setPathValidation();\n    const fsalValue = this.nfsForm.getValue('name');\n    const checkAvailability =\n      fsalValue === 'RGW'\n        ? this.rgwSiteService.get('realms').pipe(\n            mergeMap((realms: string[]) =>\n              realms.length === 0\n                ? of(true)\n                : this.rgwSiteService.isDefaultRealm().pipe(\n                    mergeMap((isDefaultRealm) => {\n                      if (!isDefaultRealm) {\n                        throw new Error('Selected realm is not the default.');\n                      }\n                      return of(true);\n                    })\n                  )\n            )\n          )\n        : this.nfsService.filesystems();\n\n    checkAvailability.subscribe({\n      next: () => {\n        this.setFsalAvailability(fsalValue, true);\n        if (!this.isEdit) {\n          this.nfsForm.patchValue({\n            path: fsalValue === 'RGW' ? '' : '/',\n            pseudo: this.generatePseudo(),\n            access_type: this.updateAccessType()\n          });\n        }\n\n        this.cdRef.detectChanges();\n      },\n      error: (error) => {\n        this.setFsalAvailability(fsalValue, false, error);\n        this.nfsForm.get('name').setValue('');\n      }\n    });\n  }\n\n  private setFsalAvailability(fsalValue: string, available: boolean, errorMessage: string = '') {\n    this.allFsals = this.allFsals.map((fsalItem: NfsFSAbstractionLayer) => {\n      if (fsalItem.value === fsalValue) {\n        fsalItem.disabled = !available;\n\n        this.fsalAvailabilityError = fsalItem.disabled\n          ? $localize`${fsalItem.descr} backend is not available. ${errorMessage}`\n          : null;\n      }\n      return fsalItem;\n    });\n  }\n\n  accessTypeChangeHandler() {\n    const name = this.nfsForm.getValue('name');\n    const accessType = this.nfsForm.getValue('access_type');\n    this.defaultAccessType[name] = accessType;\n  }\n\n  setPathValidation() {\n    const path = this.nfsForm.get('path');\n    path.setValidators([Validators.required]);\n    if (this.nfsForm.getValue('name') === 'RGW') {\n      path.setAsyncValidators([CdValidators.bucketExistence(true, this.rgwBucketService)]);\n    } else {\n      path.setAsyncValidators([this.pathExistence(true)]);\n    }\n\n    if (this.isEdit) {\n      path.markAsDirty();\n    }\n  }\n\n  getAccessTypeHelp(accessType: string) {\n    const accessTypeItem = this.nfsAccessType.find((currentAccessTypeItem) => {\n      if (accessType === currentAccessTypeItem.value) {\n        return currentAccessTypeItem;\n      }\n    });\n    return _.isObjectLike(accessTypeItem) ? accessTypeItem.help : '';\n  }\n\n  getId() {\n    if (\n      _.isString(this.nfsForm.getValue('cluster_id')) &&\n      _.isString(this.nfsForm.getValue('path'))\n    ) {\n      return this.nfsForm.getValue('cluster_id') + ':' + this.nfsForm.getValue('path');\n    }\n    return '';\n  }\n\n  private getPathTypeahead(path: any) {\n    if (!_.isString(path) || path === '/') {\n      return of([]);\n    }\n\n    const fsName = this.nfsForm.getValue('fsal').fs_name;\n    return this.nfsService.lsDir(fsName, path).pipe(\n      map((result: Directory) =>\n        result.paths.filter((dirName: string) => dirName.toLowerCase().includes(path)).slice(0, 15)\n      ),\n      catchError(() => of([$localize`Error while retrieving paths.`]))\n    );\n  }\n\n  pathChangeHandler() {\n    if (!this.isEdit) {\n      this.nfsForm.patchValue({\n        pseudo: this.generatePseudo()\n      });\n    }\n  }\n\n  private getBucketTypeahead(path: string): Observable<any> {\n    if (_.isString(path) && path !== '/' && path !== '') {\n      return this.rgwBucketService.list().pipe(\n        map((bucketList) =>\n          bucketList\n            .filter((bucketName: string) => bucketName.toLowerCase().includes(path))\n            .slice(0, 15)\n        ),\n        catchError(() => of([$localize`Error while retrieving bucket names.`]))\n      );\n    } else {\n      return of([]);\n    }\n  }\n\n  private generatePseudo() {\n    let newPseudo = this.nfsForm.getValue('pseudo');\n    if (this.nfsForm.get('pseudo') && !this.nfsForm.get('pseudo').dirty) {\n      newPseudo = undefined;\n      if (this.nfsForm.getValue('fsal') === 'CEPH') {\n        newPseudo = '/cephfs';\n        if (_.isString(this.nfsForm.getValue('path'))) {\n          newPseudo += this.nfsForm.getValue('path');\n        }\n      }\n    }\n    return newPseudo;\n  }\n\n  private updateAccessType() {\n    const name = this.nfsForm.getValue('name');\n    let accessType = this.defaultAccessType[name];\n\n    if (!accessType) {\n      accessType = 'RW';\n    }\n\n    return accessType;\n  }\n\n  submitAction() {\n    let action: Observable<any>;\n    const requestModel = this.buildRequest();\n\n    if (this.isEdit) {\n      action = this.taskWrapper.wrapTaskAroundCall({\n        task: new FinishedTask('nfs/edit', {\n          cluster_id: this.cluster_id,\n          export_id: _.parseInt(this.export_id)\n        }),\n        call: this.nfsService.update(this.cluster_id, _.parseInt(this.export_id), requestModel)\n      });\n    } else {\n      // Create\n      action = this.taskWrapper.wrapTaskAroundCall({\n        task: new FinishedTask('nfs/create', {\n          path: requestModel.path,\n          fsal: requestModel.fsal,\n          cluster_id: requestModel.cluster_id\n        }),\n        call: this.nfsService.create(requestModel)\n      });\n    }\n\n    action.subscribe({\n      error: (errorResponse: CdHttpErrorResponse) => this.setFormErrors(errorResponse),\n      complete: () => this.router.navigate(['/nfs'])\n    });\n  }\n\n  private setFormErrors(errorResponse: CdHttpErrorResponse) {\n    if (\n      errorResponse.error.detail &&\n      errorResponse.error.detail\n        .toString()\n        .includes(`Pseudo ${this.nfsForm.getValue('pseudo')} is already in use`)\n    ) {\n      this.nfsForm.get('pseudo').setErrors({ pseudoAlreadyExists: true });\n    }\n    this.nfsForm.setErrors({ cdSubmitButton: true });\n  }\n\n  private buildRequest() {\n    const requestModel: any = _.cloneDeep(this.nfsForm.value);\n\n    if (this.isEdit) {\n      requestModel.export_id = _.parseInt(this.export_id);\n    }\n\n    if (requestModel.fsal.name === 'RGW') {\n      delete requestModel.fsal.fs_name;\n    }\n\n    requestModel.protocols = [];\n    if (requestModel.protocolNfsv4) {\n      requestModel.protocols.push(4);\n    } else {\n      requestModel.pseudo = null;\n    }\n    delete requestModel.protocolNfsv4;\n\n    requestModel.transports = [];\n    if (requestModel.transportTCP) {\n      requestModel.transports.push('TCP');\n    }\n    delete requestModel.transportTCP;\n    if (requestModel.transportUDP) {\n      requestModel.transports.push('UDP');\n    }\n    delete requestModel.transportUDP;\n\n    requestModel.clients.forEach((client: any) => {\n      if (_.isString(client.addresses)) {\n        client.addresses = _(client.addresses)\n          .split(/[ ,]+/)\n          .uniq()\n          .filter((address) => address !== '')\n          .value();\n      } else {\n        client.addresses = [];\n      }\n\n      if (!client.squash) {\n        client.squash = requestModel.squash;\n      }\n\n      if (!client.access_type) {\n        client.access_type = requestModel.access_type;\n      }\n    });\n\n    if (requestModel.security_label === false || requestModel.fsal.name === 'RGW') {\n      requestModel.fsal.sec_label_xattr = null;\n    } else {\n      requestModel.fsal.sec_label_xattr = requestModel.sec_label_xattr;\n    }\n    delete requestModel.sec_label_xattr;\n\n    return requestModel;\n  }\n\n  private pathExistence(requiredExistenceResult: boolean): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      if (control.pristine || !control.value) {\n        return of({ required: true });\n      }\n      const fsName = this.nfsForm.getValue('fsal').fs_name;\n      return this.nfsService.lsDir(fsName, control.value).pipe(\n        map((directory: Directory) =>\n          directory.paths.includes(control.value) === requiredExistenceResult\n            ? null\n            : { pathNameNotAllowed: true }\n        ),\n        catchError(() => of({ pathNameNotAllowed: true }))\n      );\n    };\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form name=\"nfsForm\"\n        #formDir=\"ngForm\"\n        [formGroup]=\"nfsForm\"\n        novalidate>\n    <div class=\"card\">\n      <div i18n=\"form title\"\n           class=\"card-header\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n\n      <div class=\"card-body\">\n        <!-- cluster_id -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"cluster_id\">\n            <span class=\"required\"\n                  i18n>Cluster</span>\n            <cd-helper>\n              <p i18n>This is the ID of an NFS Service.</p>\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    formControlName=\"cluster_id\"\n                    name=\"cluster_id\"\n                    id=\"cluster_id\">\n              <option *ngIf=\"allClusters === null\"\n                      value=\"\"\n                      i18n>Loading...</option>\n              <option *ngIf=\"allClusters !== null && allClusters.length === 0\"\n                      value=\"\"\n                      i18n>-- No cluster available --</option>\n              <option *ngIf=\"allClusters !== null && allClusters.length > 0\"\n                      value=\"\"\n                      i18n>-- Select the cluster --</option>\n              <option *ngFor=\"let cluster of allClusters\"\n                      [value]=\"cluster.cluster_id\">{{ cluster.cluster_id }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('cluster_id', formDir, 'required') || allClusters?.length === 0\"\n                  i18n>This field is required.\n                       To create a new NFS cluster, <a [routerLink]=\"['/services', {outlets: {modal: ['create']}}]\"\n                                                       class=\"btn-link\">add a new NFS Service</a>.</span>\n          </div>\n        </div>\n\n        <!-- FSAL -->\n        <div formGroupName=\"fsal\">\n          <!-- Name -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"name\"\n                   i18n>Storage Backend</label>\n            <div class=\"cd-col-form-input\">\n              <select class=\"form-select\"\n                      formControlName=\"name\"\n                      name=\"name\"\n                      id=\"name\"\n                      (change)=\"fsalChangeHandler()\">\n                <option *ngIf=\"allFsals === null\"\n                        value=\"\"\n                        i18n>Loading...</option>\n                <option *ngIf=\"allFsals !== null && allFsals.length === 0\"\n                        value=\"\"\n                        i18n>-- No data pools available --</option>\n                <option *ngIf=\"allFsals !== null && allFsals.length > 0\"\n                        value=\"\"\n                        i18n>-- Select the storage backend --</option>\n                <option *ngFor=\"let fsal of allFsals\"\n                        [value]=\"fsal.value\"\n                        [disabled]=\"fsal.disabled\">{{ fsal.descr }}</option>\n              </select>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"nfsForm.showError('name', formDir, 'required')\"\n                    i18n>This field is required.</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"fsalAvailabilityError\"\n                    i18n>{{ fsalAvailabilityError }}</span>\n            </div>\n          </div>\n\n          <!-- CephFS Volume -->\n          <div class=\"form-group row\"\n               *ngIf=\"nfsForm.getValue('name') === 'CEPH'\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"fs_name\"\n                   i18n>Volume</label>\n            <div class=\"cd-col-form-input\">\n              <select class=\"form-select\"\n                      formControlName=\"fs_name\"\n                      name=\"fs_name\"\n                      id=\"fs_name\"\n                      (change)=\"pathChangeHandler()\">\n                <option *ngIf=\"allFsNames === null\"\n                        value=\"\"\n                        i18n>Loading...</option>\n                <option *ngIf=\"allFsNames !== null && allFsNames.length === 0\"\n                        value=\"\"\n                        i18n>-- No CephFS filesystem available --</option>\n                <option *ngIf=\"allFsNames !== null && allFsNames.length > 0\"\n                        value=\"\"\n                        i18n>-- Select the CephFS filesystem --</option>\n                <option *ngFor=\"let filesystem of allFsNames\"\n                        [value]=\"filesystem.name\">{{ filesystem.name }}</option>\n              </select>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"nfsForm.showError('fs_name', formDir, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Security Label -->\n        <div class=\"form-group row\"\n             *ngIf=\"nfsForm.getValue('name') === 'CEPH'\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': nfsForm.getValue('security_label')}\"\n                 for=\"security_label\"\n                 i18n>Security Label</label>\n\n          <div class=\"cd-col-form-input\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     formControlName=\"security_label\"\n                     name=\"security_label\"\n                     id=\"security_label\">\n              <label for=\"security_label\"\n                     class=\"custom-control-label\"\n                     i18n>Enable security label</label>\n            </div>\n\n            <br>\n\n            <input type=\"text\"\n                   *ngIf=\"nfsForm.getValue('security_label')\"\n                   class=\"form-control\"\n                   name=\"sec_label_xattr\"\n                   id=\"sec_label_xattr\"\n                   formControlName=\"sec_label_xattr\">\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('sec_label_xattr', formDir, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Path -->\n        <div class=\"form-group row\"\n             *ngIf=\"nfsForm.getValue('name') === 'CEPH'\">\n          <label class=\"cd-col-form-label\"\n                 for=\"path\">\n            <span class=\"required\"\n                  i18n>CephFS Path</span>\n            <cd-helper>\n              <p i18n>A path in a CephFS file system.</p>\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"text\"\n                   class=\"form-control\"\n                   name=\"path\"\n                   id=\"path\"\n                   data-testid=\"fs_path\"\n                   formControlName=\"path\"\n                   [ngbTypeahead]=\"pathDataSource\"\n                   (selectItem)=\"pathChangeHandler()\"\n                   (blur)=\"pathChangeHandler()\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('path', formDir, 'required')\"\n                  i18n>This field is required.</span>\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('path', formDir, 'pattern')\"\n                  i18n>Path need to start with a '/' and can be followed by a word</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('path', formDir, 'pathNameNotAllowed')\"\n                  i18n>The path does not exist in the selected volume.</span>\n          </div>\n        </div>\n\n        <!-- Bucket -->\n        <div class=\"form-group row\"\n             *ngIf=\"nfsForm.getValue('name') === 'RGW'\">\n          <label class=\"cd-col-form-label\"\n                 for=\"path\">\n            <span class=\"required\"\n                  i18n>Bucket</span>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"text\"\n                   class=\"form-control\"\n                   name=\"path\"\n                   id=\"path\"\n                   data-testid=\"rgw_path\"\n                   formControlName=\"path\"\n                   [ngbTypeahead]=\"bucketDataSource\">\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('path', formDir, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('path', formDir, 'bucketNameNotAllowed')\"\n                  i18n>The bucket does not exist or is not in the default realm (if multiple realms are configured).\n                       To continue, <a routerLink=\"/rgw/bucket/create\"\n                                       class=\"btn-link\">create a new bucket</a>.</span>\n          </div>\n        </div>\n\n        <!-- NFS Protocol -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"protocols\"\n                 i18n>NFS Protocol</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     formControlName=\"protocolNfsv4\"\n                     name=\"protocolNfsv4\"\n                     id=\"protocolNfsv4\"\n                     disabled>\n              <label i18n\n                     class=\"custom-control-label\"\n                     for=\"protocolNfsv4\">NFSv4</label>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('protocolNfsv4', formDir, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Pseudo -->\n        <div class=\"form-group row\"\n             *ngIf=\"nfsForm.getValue('protocolNfsv4')\">\n          <label class=\"cd-col-form-label\"\n                 for=\"pseudo\">\n            <span class=\"required\"\n                  i18n>Pseudo</span>\n            <cd-helper>\n              <p i18n>The position that this <strong>NFS v4</strong> export occupies\n                in the <strong>Pseudo FS</strong> (it must be unique).</p>\n              <p i18n>By using different Pseudo options, the same Path may be exported multiple times.</p>\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"text\"\n                   class=\"form-control\"\n                   name=\"pseudo\"\n                   id=\"pseudo\"\n                   formControlName=\"pseudo\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('pseudo', formDir, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('pseudo', formDir, 'pseudoAlreadyExists')\"\n                  i18n>The pseudo is already in use by another export.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('pseudo', formDir, 'pattern')\"\n                  i18n>Pseudo needs to start with a '/' and can't contain any of the following: &gt;, &lt;, |, &, ( or ).</span>\n          </div>\n        </div>\n\n        <!-- Access Type -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"access_type\"\n                 i18n>Access Type</label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    formControlName=\"access_type\"\n                    name=\"access_type\"\n                    id=\"access_type\"\n                    (change)=\"accessTypeChangeHandler()\">\n              <option *ngIf=\"nfsAccessType === null\"\n                      value=\"\"\n                      i18n>Loading...</option>\n              <option *ngIf=\"nfsAccessType !== null && nfsAccessType.length === 0\"\n                      value=\"\"\n                      i18n>-- No access type available --</option>\n              <option *ngFor=\"let accessType of nfsAccessType\"\n                      [value]=\"accessType.value\">{{ accessType.value }}</option>\n            </select>\n            <span class=\"form-text text-muted\"\n                  *ngIf=\"nfsForm.getValue('access_type')\">\n              {{ getAccessTypeHelp(nfsForm.getValue('access_type')) }}\n            </span>\n            <span class=\"form-text text-warning\"\n                  *ngIf=\"nfsForm.getValue('access_type') === 'RW' && nfsForm.getValue('name') === 'RGW'\"\n                  i18n>The Object Gateway NFS backend has a number of\n              limitations which will seriously affect applications writing to\n              the share. Please consult the <cd-doc section=\"rgw-nfs\"></cd-doc>\n              for details before enabling write access.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('access_type', formDir, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Squash -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"squash\">\n            <span i18n>Squash</span>\n            <ng-container *ngTemplateOutlet=\"squashHelper\"></ng-container>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    name=\"squash\"\n                    formControlName=\"squash\"\n                    id=\"squash\">\n              <option *ngIf=\"nfsSquash === null\"\n                      value=\"\"\n                      i18n>Loading...</option>\n              <option *ngIf=\"nfsSquash !== null && nfsSquash.length === 0\"\n                      value=\"\"\n                      i18n>-- No squash available --</option>\n              <option *ngFor=\"let squash of nfsSquash\"\n                      [value]=\"squash\">{{ squash }}</option>\n\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('squash', formDir,'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Transport Protocol -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"transports\"\n                 i18n>Transport Protocol</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     formControlName=\"transportUDP\"\n                     name=\"transportUDP\"\n                     id=\"transportUDP\">\n              <label for=\"transportUDP\"\n                     class=\"custom-control-label\"\n                     i18n>UDP</label>\n            </div>\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     formControlName=\"transportTCP\"\n                     name=\"transportTCP\"\n                     id=\"transportTCP\">\n              <label for=\"transportTCP\"\n                     class=\"custom-control-label\"\n                     i18n>TCP</label>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"nfsForm.showError('transportUDP', formDir, 'required') ||\n                  nfsForm.showError('transportTCP', formDir, 'required')\"\n                  i18n>This field is required.</span>\n            <hr>\n          </div>\n        </div>\n\n        <!-- Clients -->\n        <cd-nfs-form-client [form]=\"nfsForm\"\n                            [clients]=\"clients\"\n                            #nfsClients>\n          <ng-template #squashHelper>\n            <cd-helper>\n              <ul class=\"squash-helper\">\n                <li>\n                  <span class=\"squash-helper-item-value\">no_root_squash: </span>\n                  <span i18n>No user id squashing is performed.</span>\n                </li>\n                <li>\n                  <span class=\"squash-helper-item-value\">root_id_squash: </span>\n                  <span i18n>uid 0 and gid 0 are squashed to the Anonymous_Uid and Anonymous_Gid gid 0 in alt_groups lists is also squashed.</span>\n                </li>\n                <li>\n                  <span class=\"squash-helper-item-value\">root_squash: </span>\n                  <span i18n>uid 0 and gid of any value are squashed to the Anonymous_Uid and Anonymous_Gid alt_groups lists is discarded.</span>\n                </li>\n                <li>\n                  <span class=\"squash-helper-item-value\">all_squash: </span>\n                  <span i18n>All users are squashed.</span>\n                </li>\n              </ul>\n            </cd-helper>\n          </ng-template>\n        </cd-nfs-form-client>\n\n      </div>\n\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submitAction()\"\n                              [form]=\"nfsForm\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { Subscription } from 'rxjs';\n\nimport { NfsService } from '~/app/shared/api/nfs.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { ViewCacheStatus } from '~/app/shared/enum/view-cache-status.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { Task } from '~/app/shared/models/task';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskListService } from '~/app/shared/services/task-list.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-nfs-list',\n  templateUrl: './nfs-list.component.html',\n  styleUrls: ['./nfs-list.component.scss'],\n  providers: [TaskListService]\n})\nexport class NfsListComponent extends ListWithDetails implements OnInit, OnDestroy {\n  @ViewChild('nfsState')\n  nfsState: TemplateRef<any>;\n  @ViewChild('nfsFsal', { static: true })\n  nfsFsal: TemplateRef<any>;\n\n  @ViewChild('table', { static: true })\n  table: TableComponent;\n\n  columns: CdTableColumn[];\n  permission: Permission;\n  selection = new CdTableSelection();\n  summaryDataSubscription: Subscription;\n  viewCacheStatus: any;\n  exports: any[];\n  tableActions: CdTableAction[];\n  isDefaultCluster = false;\n\n  modalRef: NgbModalRef;\n\n  builders = {\n    'nfs/create': (metadata: any) => {\n      return {\n        path: metadata['path'],\n        cluster_id: metadata['cluster_id'],\n        fsal: metadata['fsal']\n      };\n    }\n  };\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private modalService: ModalService,\n    private nfsService: NfsService,\n    private taskListService: TaskListService,\n    private taskWrapper: TaskWrapperService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.permission = this.authStorageService.getPermissions().nfs;\n    const getNfsUri = () =>\n      this.selection.first() &&\n      `${encodeURI(this.selection.first().cluster_id)}/${encodeURI(\n        this.selection.first().export_id\n      )}`;\n\n    const createAction: CdTableAction = {\n      permission: 'create',\n      icon: Icons.add,\n      routerLink: () => '/nfs/create',\n      canBePrimary: (selection: CdTableSelection) => !selection.hasSingleSelection,\n      name: this.actionLabels.CREATE\n    };\n\n    const editAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      routerLink: () => `/nfs/edit/${getNfsUri()}`,\n      name: this.actionLabels.EDIT\n    };\n\n    const deleteAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      click: () => this.deleteNfsModal(),\n      name: this.actionLabels.DELETE\n    };\n\n    this.tableActions = [createAction, editAction, deleteAction];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Path`,\n        prop: 'path',\n        flexGrow: 2,\n        cellTransformation: CellTemplate.executing\n      },\n      {\n        name: $localize`Pseudo`,\n        prop: 'pseudo',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Cluster`,\n        prop: 'cluster_id',\n        flexGrow: 2\n      },\n      {\n        name: $localize`Storage Backend`,\n        prop: 'fsal',\n        flexGrow: 2,\n        cellTemplate: this.nfsFsal\n      },\n      {\n        name: $localize`Access Type`,\n        prop: 'access_type',\n        flexGrow: 2\n      }\n    ];\n\n    this.taskListService.init(\n      () => this.nfsService.list(),\n      (resp) => this.prepareResponse(resp),\n      (exports) => (this.exports = exports),\n      () => this.onFetchError(),\n      this.taskFilter,\n      this.itemFilter,\n      this.builders\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.summaryDataSubscription) {\n      this.summaryDataSubscription.unsubscribe();\n    }\n  }\n\n  prepareResponse(resp: any): any[] {\n    let result: any[] = [];\n    resp.forEach((nfs: any) => {\n      nfs.id = `${nfs.cluster_id}:${nfs.export_id}`;\n      nfs.state = 'LOADING';\n      result = result.concat(nfs);\n    });\n\n    return result;\n  }\n\n  onFetchError() {\n    this.table.reset(); // Disable loading indicator.\n    this.viewCacheStatus = { status: ViewCacheStatus.ValueException };\n  }\n\n  itemFilter(entry: any, task: Task) {\n    return (\n      entry.cluster_id === task.metadata['cluster_id'] &&\n      entry.export_id === task.metadata['export_id']\n    );\n  }\n\n  taskFilter(task: Task) {\n    return ['nfs/create', 'nfs/delete', 'nfs/edit'].includes(task.name);\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteNfsModal() {\n    const cluster_id = this.selection.first().cluster_id;\n    const export_id = this.selection.first().export_id;\n\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: $localize`NFS export`,\n      itemNames: [`${cluster_id}:${export_id}`],\n      submitActionObservable: () =>\n        this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask('nfs/delete', {\n            cluster_id: cluster_id,\n            export_id: export_id\n          }),\n          call: this.nfsService.delete(cluster_id, export_id)\n        })\n    });\n  }\n}\n","<cd-table #table\n          [data]=\"exports\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          identifier=\"id\"\n          forceIdentifier=\"true\"\n          selectionType=\"single\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (updateSelection)=\"updateSelection($event)\">\n  <div class=\"table-actions btn-toolbar\">\n    <cd-table-actions class=\"btn-group\"\n                      [permission]=\"permission\"\n                      [selection]=\"selection\"\n                      [tableActions]=\"tableActions\">\n    </cd-table-actions>\n  </div>\n\n  <cd-nfs-details cdTableDetail\n                  [selection]=\"expandedRow\">\n  </cd-nfs-details>\n</cd-table>\n\n<ng-template #nfsFsal\n             let-value=\"value\">\n  <ng-container *ngIf=\"value.name==='CEPH'\"\n                i18n>CephFS</ng-container>\n  <ng-container *ngIf=\"value.name==='RGW'\"\n                i18n>Object Gateway</ng-container>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { NgbNavModule, NgbTooltipModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { NfsDetailsComponent } from './nfs-details/nfs-details.component';\nimport { NfsFormClientComponent } from './nfs-form-client/nfs-form-client.component';\nimport { NfsFormComponent } from './nfs-form/nfs-form.component';\nimport { NfsListComponent } from './nfs-list/nfs-list.component';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    RouterModule,\n    SharedModule,\n    NgbNavModule,\n    CommonModule,\n    NgbTypeaheadModule,\n    NgbTooltipModule\n  ],\n  declarations: [NfsListComponent, NfsDetailsComponent, NfsFormComponent, NfsFormClientComponent]\n})\nexport class NfsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { PerformanceCounterComponent } from './performance-counter/performance-counter.component';\nimport { TablePerformanceCounterComponent } from './table-performance-counter/table-performance-counter.component';\n\n@NgModule({\n  imports: [CommonModule, SharedModule, RouterModule],\n  declarations: [TablePerformanceCounterComponent, PerformanceCounterComponent],\n  exports: [TablePerformanceCounterComponent]\n})\nexport class PerformanceCounterModule {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'cd-performance-counter',\n  templateUrl: './performance-counter.component.html',\n  styleUrls: ['./performance-counter.component.scss']\n})\nexport class PerformanceCounterComponent {\n  static defaultFromLink = '/hosts';\n\n  serviceId: string;\n  serviceType: string;\n  fromLink: string;\n\n  constructor(private route: ActivatedRoute) {\n    this.route.queryParams.subscribe((params: { fromLink: string }) => {\n      this.fromLink = params.fromLink || PerformanceCounterComponent.defaultFromLink;\n    });\n    this.route.params.subscribe((params: { type: string; id: string }) => {\n      this.serviceId = decodeURIComponent(params.id);\n      this.serviceType = params.type;\n    });\n  }\n}\n","<legend>{{ serviceType }}.{{ serviceId }}</legend>\n<cd-table-performance-counter [serviceType]=\"serviceType\"\n                              [serviceId]=\"serviceId\">\n</cd-table-performance-counter>\n","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { PerformanceCounterService } from '~/app/shared/api/performance-counter.service';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\n\n/**\n * Display the specified performance counters in a datatable.\n */\n@Component({\n  selector: 'cd-table-performance-counter',\n  templateUrl: './table-performance-counter.component.html',\n  styleUrls: ['./table-performance-counter.component.scss']\n})\nexport class TablePerformanceCounterComponent implements OnInit {\n  columns: Array<CdTableColumn> = [];\n  counters: Array<object> = [];\n\n  @ViewChild('valueTpl')\n  public valueTpl: TemplateRef<any>;\n\n  /**\n   * The service type, e.g. 'rgw', 'mds', 'mon', 'osd', ...\n   */\n  @Input()\n  serviceType: string;\n\n  /**\n   * The service identifier.\n   */\n  @Input()\n  serviceId: string;\n\n  constructor(private performanceCounterService: PerformanceCounterService) {}\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Name`,\n        prop: 'name',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Description`,\n        prop: 'description',\n        flexGrow: 1\n      },\n      {\n        name: $localize`Value`,\n        prop: 'value',\n        cellTemplate: this.valueTpl,\n        flexGrow: 1\n      }\n    ];\n  }\n\n  getCounters(context: CdTableFetchDataContext) {\n    this.performanceCounterService.get(this.serviceType, this.serviceId).subscribe(\n      (resp: object[]) => {\n        this.counters = resp;\n      },\n      (error) => {\n        if (error.status === 404) {\n          error.preventDefault();\n          this.counters = null;\n        } else {\n          context.error();\n        }\n      }\n    );\n  }\n}\n","<cd-table *ngIf=\"counters; else warning\"\n          [data]=\"counters\"\n          [columns]=\"columns\"\n          columnMode=\"flex\"\n          [autoSave]=\"false\"\n          (fetchData)=\"getCounters($event)\">\n  <ng-template #valueTpl\n               let-row=\"row\">\n    {{ row.value | dimless }} {{ row.unit }}\n  </ng-template>\n</cd-table>\n<ng-template #warning>\n  <cd-alert-panel type=\"warning\"\n                  i18n>Performance counters not available</cd-alert-panel>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPipeFunctionModule } from 'ngx-pipe-function';\n\nimport { DataTableModule } from '~/app/shared/datatable/datatable.module';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { DeviceListComponent } from './device-list/device-list.component';\nimport { SmartListComponent } from './smart-list/smart-list.component';\n\n@NgModule({\n  imports: [CommonModule, DataTableModule, SharedModule, NgbNavModule, NgxPipeFunctionModule],\n  exports: [DeviceListComponent, SmartListComponent],\n  declarations: [DeviceListComponent, SmartListComponent]\n})\nexport class CephSharedModule {}\n","import { DatePipe } from '@angular/common';\nimport { Component, Input, OnChanges, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { HostService } from '~/app/shared/api/host.service';\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdDevice } from '~/app/shared/models/devices';\n\n@Component({\n  selector: 'cd-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})\nexport class DeviceListComponent implements OnChanges, OnInit {\n  @Input()\n  hostname = '';\n  @Input()\n  osdId: number = null;\n\n  @Input()\n  osdList = false;\n\n  @ViewChild('deviceLocation', { static: true })\n  locationTemplate: TemplateRef<any>;\n  @ViewChild('daemonName', { static: true })\n  daemonNameTemplate: TemplateRef<any>;\n  @ViewChild('lifeExpectancy', { static: true })\n  lifeExpectancyTemplate: TemplateRef<any>;\n  @ViewChild('lifeExpectancyTimestamp', { static: true })\n  lifeExpectancyTimestampTemplate: TemplateRef<any>;\n\n  devices: CdDevice[] = null;\n  columns: CdTableColumn[] = [];\n  translationMapping = {\n    '=1': '# week',\n    other: '# weeks'\n  };\n\n  constructor(\n    private hostService: HostService,\n    private datePipe: DatePipe,\n    private osdService: OsdService\n  ) {}\n\n  ngOnInit() {\n    this.columns = [\n      { prop: 'devid', name: $localize`Device ID`, minWidth: 200 },\n      {\n        prop: 'state',\n        name: $localize`State of Health`,\n        flexGrow: 1,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          map: {\n            good: { value: $localize`Good`, class: 'badge-success' },\n            warning: { value: $localize`Warning`, class: 'badge-warning' },\n            bad: { value: $localize`Bad`, class: 'badge-danger' },\n            stale: { value: $localize`Stale`, class: 'badge-info' },\n            unknown: { value: $localize`Unknown`, class: 'badge-dark' }\n          }\n        }\n      },\n      {\n        prop: 'life_expectancy_weeks',\n        name: $localize`Life Expectancy`,\n        cellTemplate: this.lifeExpectancyTemplate\n      },\n      {\n        prop: 'life_expectancy_stamp',\n        name: $localize`Prediction Creation Date`,\n        cellTemplate: this.lifeExpectancyTimestampTemplate,\n        pipe: this.datePipe,\n        isHidden: true\n      },\n      { prop: 'location', name: $localize`Device Name`, cellTemplate: this.locationTemplate },\n      { prop: 'daemons', name: $localize`Daemons`, cellTemplate: this.daemonNameTemplate }\n    ];\n  }\n\n  ngOnChanges() {\n    const updateDevicesFn = (devices: CdDevice[]) => (this.devices = devices);\n    if (this.osdList && this.osdId !== null) {\n      this.osdService.getDevices(this.osdId).subscribe(updateDevicesFn);\n    } else if (this.hostname) {\n      this.hostService.getDevices(this.hostname).subscribe(updateDevicesFn);\n    }\n  }\n}\n","<cd-table *ngIf=\"hostname || osdId !== null\"\n          [data]=\"devices\"\n          [columns]=\"columns\"></cd-table>\n\n<cd-alert-panel type=\"warning\"\n                *ngIf=\"hostname === '' && osdId === null\"\n                i18n>Neither hostname nor OSD ID given</cd-alert-panel>\n\n<ng-template #deviceLocation\n             let-value=\"value\">\n  <ng-container *ngFor=\"let location of value\">\n    <cd-label *ngIf=\"location.host === hostname\"\n              [value]=\"location.dev\"></cd-label>\n  </ng-container>\n</ng-template>\n\n<ng-template #daemonName\n             let-value=\"value\">\n  <ng-container [ngTemplateOutlet]=\"osdId !== null ? osdIdDaemon : readableDaemons\"\n                [ngTemplateOutletContext]=\"{daemons: value}\">\n  </ng-container>\n</ng-template>\n\n<ng-template #osdIdDaemon\n             let-daemons=\"daemons\">\n  <ng-container *ngFor=\"let daemon of daemons\">\n    <cd-label *ngIf=\"daemon.includes(osdId)\"\n              [value]=\"daemon\"></cd-label>\n  </ng-container>\n</ng-template>\n\n<ng-template #readableDaemons\n             let-daemons=\"daemons\">\n  <ng-container *ngFor=\"let daemon of daemons\">\n    <cd-label class=\"me-1\"\n              [value]=\"daemon\"></cd-label>\n  </ng-container>\n</ng-template>\n\n\n<ng-template #lifeExpectancy\n             let-value=\"value\">\n  <span *ngIf=\"!value.life_expectancy_enabled\"\n        i18n>{{ \"\" | notAvailable }}</span>\n  <span *ngIf=\"value.min && !value.max\">&gt; {{value.min | i18nPlural: translationMapping}}</span>\n  <span *ngIf=\"value.max && !value.min\">&lt; {{value.max | i18nPlural: translationMapping}}</span>\n  <span *ngIf=\"value.max && value.min\">{{value.min}} to {{value.max | i18nPlural: translationMapping}}</span>\n</ng-template>\n\n<ng-template #lifeExpectancyTimestamp\n             let-value=\"value\">\n  {{value}}\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\n\nimport { FeedbackService } from '~/app/shared/api/feedback.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.scss']\n})\nexport class FeedbackComponent implements OnInit, OnDestroy {\n  title = 'Feedback';\n  project: any = [\n    'dashboard',\n    'block',\n    'objects',\n    'file_system',\n    'ceph_manager',\n    'orchestrator',\n    'ceph_volume',\n    'core_ceph'\n  ];\n  tracker: string[] = ['bug', 'feature'];\n  api_key: string;\n  keySub: Subscription;\n\n  feedbackForm: CdFormGroup;\n  isAPIKeySet = false;\n  isFeedbackEnabled = true;\n\n  constructor(\n    private feedbackService: FeedbackService,\n    public activeModal: NgbActiveModal,\n    public actionLabels: ActionLabelsI18n,\n    public secondaryModal: NgbModal,\n    private notificationService: NotificationService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.createForm();\n    this.keySub = this.feedbackService.isKeyExist().subscribe({\n      next: (data: boolean) => {\n        this.isAPIKeySet = data;\n        if (this.isAPIKeySet) {\n          this.feedbackForm.get('api_key').clearValidators();\n        }\n      },\n      error: () => {\n        this.isFeedbackEnabled = false;\n        this.feedbackForm.disable();\n      }\n    });\n  }\n\n  private createForm() {\n    this.feedbackForm = new CdFormGroup({\n      project: new FormControl('', Validators.required),\n      tracker: new FormControl('', Validators.required),\n      subject: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.required),\n      api_key: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnDestroy() {\n    this.keySub.unsubscribe();\n  }\n\n  onSubmit() {\n    this.feedbackService\n      .createIssue(\n        this.feedbackForm.controls['project'].value,\n        this.feedbackForm.controls['tracker'].value,\n        this.feedbackForm.controls['subject'].value,\n        this.feedbackForm.controls['description'].value,\n        this.feedbackForm.controls['api_key'].value\n      )\n      .subscribe({\n        next: (result) => {\n          this.notificationService.show(\n            NotificationType.success,\n            $localize`Issue successfully created on Ceph Issue tracker`,\n            `Go to the tracker: <a href=\"https://tracker.ceph.com/issues/${result['message']['issue']['id']}\" target=\"_blank\"> ${result['message']['issue']['id']} </a>`\n          );\n        },\n        error: () => {\n          this.feedbackForm.get('api_key').setErrors({ invalidApiKey: true });\n          this.feedbackForm.setErrors({ cdSubmitButton: true });\n        },\n        complete: () => {\n          this.activeModal.close();\n        }\n      });\n  }\n\n  redirect() {\n    this.activeModal.close();\n    this.router.navigate(['/mgr-modules']);\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <div class=\"modal-title\"\n       i18n>Report an issue</div>\n\n  <div class=\"modal-content\">\n    <form name=\"feedbackForm\"\n          [formGroup]=\"feedbackForm\"\n          #formDir=\"ngForm\">\n      <div class=\"modal-body\">\n        <cd-alert-panel *ngIf=\"!isFeedbackEnabled\"\n                        type=\"error\"\n                        i18n>Feedback module is not enabled. Please enable it from <a (click)=\"redirect()\">Cluster-> Manager Modules.</a>\n        </cd-alert-panel>\n        <!-- api_key -->\n        <div class=\"form-group row mt-3\"\n             *ngIf=\"!isAPIKeySet\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"api_key\"\n                 i18n>Ceph Tracker API Key</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"api_key\"\n                   type=\"password\"\n                   formControlName=\"api_key\"\n                   class=\"form-control\"\n                   placeholder=\"Add Ceph tracker API key\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"feedbackForm.showError('api_key', formDir, 'required')\"\n                  i18n>Ceph Tracker API key is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"feedbackForm.showError('api_key', formDir, 'invalidApiKey')\"\n                  i18n>Ceph Tracker API key is invalid.</span>\n          </div>\n        </div>\n\n        <!-- project -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"project\"\n                 i18n>Project name</label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-control\"\n                    id=\"project\"\n                    formControlName=\"project\">\n              <option ngValue=\"\"\n                      i18n>-- Select a project --</option>\n              <option *ngFor=\"let projectName of project\"\n                      [value]=\"projectName\">{{ projectName }}</option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"feedbackForm.showError('project', formDir, 'required')\"\n                  i18n>Project name is required.</span>\n          </div>\n        </div>\n\n        <!-- tracker -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"tracker\"\n                 i18n>Tracker</label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-control\"\n                    id=\"tracker\"\n                    formControlName=\"tracker\">\n              <option ngValue=\"\"\n                      i18n>-- Select a tracker --</option>\n              <option *ngFor=\"let trackerName of tracker\"\n                      [value]=\"trackerName\">{{ trackerName }}</option>\n            </select>\n            <span  class=\"invalid-feedback\"\n                   *ngIf=\"feedbackForm.showError('tracker', formDir, 'required')\"\n                   i18n>Tracker name is required.</span>\n          </div>\n        </div>\n\n        <!-- subject -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"subject\"\n                 i18n>Subject</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"subject\"\n                   type=\"text\"\n                   formControlName=\"subject\"\n                   class=\"form-control\"\n                   placeholder=\"Add issue title\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"feedbackForm.showError('subject', formDir, 'required')\"\n                  i18n>Subject is required.</span>\n          </div>\n        </div>\n\n        <!-- description -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"description\"\n                 i18n>Description</label>\n          <div class=\"cd-col-form-input\">\n            <textarea id=\"description\"\n                      type=\"text\"\n                      formControlName=\"description\"\n                      class=\"form-control\"\n                      placeholder=\"Add issue description\">\n            </textarea>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"feedbackForm.showError('description', formDir, 'required')\"\n                  i18n>Description is required.</span>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"feedbackForm\"\n                              [submitText]=\"actionLabels.SUBMIT\"\n                              wrappingClass=\"text-right\">\n        </cd-form-button-panel>\n      </div>\n    </form>\n  </div>\n</cd-modal>\n","export class PgCategory {\n  static readonly CATEGORY_CLEAN = 'clean';\n  static readonly CATEGORY_WORKING = 'working';\n  static readonly CATEGORY_WARNING = 'warning';\n  static readonly CATEGORY_UNKNOWN = 'unknown';\n  static readonly VALID_CATEGORIES = [\n    PgCategory.CATEGORY_CLEAN,\n    PgCategory.CATEGORY_WORKING,\n    PgCategory.CATEGORY_WARNING,\n    PgCategory.CATEGORY_UNKNOWN\n  ];\n\n  states: string[];\n\n  constructor(public type: string) {\n    if (!this.isValidType()) {\n      throw new Error('Wrong placement group category type');\n    }\n\n    this.setTypeStates();\n  }\n\n  private isValidType() {\n    return PgCategory.VALID_CATEGORIES.includes(this.type);\n  }\n\n  private setTypeStates() {\n    switch (this.type) {\n      case PgCategory.CATEGORY_CLEAN:\n        this.states = ['active', 'clean'];\n        break;\n      case PgCategory.CATEGORY_WORKING:\n        this.states = [\n          'activating',\n          'backfill_wait',\n          'backfilling',\n          'creating',\n          'deep',\n          'degraded',\n          'forced_backfill',\n          'forced_recovery',\n          'peering',\n          'peered',\n          'recovering',\n          'recovery_wait',\n          'repair',\n          'scrubbing',\n          'snaptrim',\n          'snaptrim_wait'\n        ];\n        break;\n      case PgCategory.CATEGORY_WARNING:\n        this.states = [\n          'backfill_toofull',\n          'backfill_unfound',\n          'down',\n          'incomplete',\n          'inconsistent',\n          'recovery_toofull',\n          'recovery_unfound',\n          'remapped',\n          'snaptrim_error',\n          'stale',\n          'undersized'\n        ];\n        break;\n      default:\n        this.states = [];\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { CephSharedModule } from './ceph-shared.module';\nimport { PgCategory } from './pg-category.model';\n\n@Injectable({\n  providedIn: CephSharedModule\n})\nexport class PgCategoryService {\n  private categories: object;\n\n  constructor() {\n    this.categories = this.createCategories();\n  }\n\n  getAllTypes() {\n    return PgCategory.VALID_CATEGORIES;\n  }\n\n  getTypeByStates(pgStatesText: string): string {\n    const pgStates = this.getPgStatesFromText(pgStatesText);\n\n    if (pgStates.length === 0) {\n      return PgCategory.CATEGORY_UNKNOWN;\n    }\n\n    const intersections = _.zipObject(\n      PgCategory.VALID_CATEGORIES,\n      PgCategory.VALID_CATEGORIES.map(\n        (category) => _.intersection(this.categories[category].states, pgStates).length\n      )\n    );\n\n    if (intersections[PgCategory.CATEGORY_WARNING] > 0) {\n      return PgCategory.CATEGORY_WARNING;\n    }\n\n    const pgWorkingStates = intersections[PgCategory.CATEGORY_WORKING];\n    if (pgStates.length > intersections[PgCategory.CATEGORY_CLEAN] + pgWorkingStates) {\n      return PgCategory.CATEGORY_UNKNOWN;\n    }\n\n    return pgWorkingStates ? PgCategory.CATEGORY_WORKING : PgCategory.CATEGORY_CLEAN;\n  }\n\n  private createCategories() {\n    return _.zipObject(\n      PgCategory.VALID_CATEGORIES,\n      PgCategory.VALID_CATEGORIES.map((category) => new PgCategory(category))\n    );\n  }\n\n  private getPgStatesFromText(pgStatesText: string) {\n    const pgStates = pgStatesText\n      .replace(/[^a-z_]+/g, ' ')\n      .trim()\n      .split(' ');\n\n    return _.uniq(pgStates);\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { HostService } from '~/app/shared/api/host.service';\nimport { OsdService } from '~/app/shared/api/osd.service';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport {\n  AtaSmartDataV1,\n  IscsiSmartDataV1,\n  NvmeSmartDataV1,\n  SmartDataResult,\n  SmartError,\n  SmartErrorResult\n} from '~/app/shared/models/smart';\n\n@Component({\n  selector: 'cd-smart-list',\n  templateUrl: './smart-list.component.html',\n  styleUrls: ['./smart-list.component.scss']\n})\nexport class SmartListComponent implements OnInit, OnChanges {\n  @ViewChild('innerNav')\n  nav: NgbNav;\n\n  @Input()\n  osdId: number = null;\n  @Input()\n  hostname: string = null;\n\n  loading = false;\n  incompatible = false;\n  error = false;\n\n  data: { [deviceId: string]: SmartDataResult | SmartErrorResult } = {};\n\n  smartDataColumns: CdTableColumn[];\n  scsiSmartDataColumns: CdTableColumn[];\n\n  isEmpty = _.isEmpty;\n\n  constructor(private osdService: OsdService, private hostService: HostService) {}\n\n  isSmartError(data: any): data is SmartError {\n    return _.get(data, 'error') !== undefined;\n  }\n\n  isNvmeSmartData(data: any): data is NvmeSmartDataV1 {\n    return _.get(data, 'device.protocol', '').toLowerCase() === 'nvme';\n  }\n\n  isAtaSmartData(data: any): data is AtaSmartDataV1 {\n    return _.get(data, 'device.protocol', '').toLowerCase() === 'ata';\n  }\n\n  isIscsiSmartData(data: any): data is IscsiSmartDataV1 {\n    return _.get(data, 'device.protocol', '').toLowerCase() === 'scsi';\n  }\n\n  private fetchData(data: any) {\n    const result: { [deviceId: string]: SmartDataResult | SmartErrorResult } = {};\n    _.each(data, (smartData, deviceId) => {\n      if (this.isSmartError(smartData)) {\n        let userMessage = '';\n        if (smartData.smartctl_error_code === -22) {\n          userMessage = $localize`Smartctl has received an unknown argument \\\n(error code ${smartData.smartctl_error_code}). \\\nYou may be using an incompatible version of smartmontools. Version >= 7.0 of \\\nsmartmontools is required to successfully retrieve data.`;\n        } else {\n          userMessage = $localize`An error with error code ${smartData.smartctl_error_code} occurred.`;\n        }\n        const _result: SmartErrorResult = {\n          error: smartData.error,\n          smartctl_error_code: smartData.smartctl_error_code,\n          smartctl_output: smartData.smartctl_output,\n          userMessage: userMessage,\n          device: smartData.dev,\n          identifier: smartData.nvme_vendor\n        };\n        result[deviceId] = _result;\n        return;\n      }\n      // Prepare S.M.A.R.T data\n      if (smartData.json_format_version[0] === 1) {\n        // Version 1.x\n        if (this.isAtaSmartData(smartData)) {\n          result[deviceId] = this.extractAtaData(smartData);\n        } else if (this.isIscsiSmartData(smartData)) {\n          result[deviceId] = this.extractIscsiData(smartData);\n        } else if (this.isNvmeSmartData(smartData)) {\n          result[deviceId] = this.extractNvmeData(smartData);\n        }\n        return;\n      } else {\n        this.incompatible = true;\n      }\n    });\n    this.data = result;\n    this.loading = false;\n  }\n\n  private extractNvmeData(smartData: NvmeSmartDataV1): SmartDataResult {\n    const info = _.omitBy(smartData, (_value: string, key: string) =>\n      ['nvme_smart_health_information_log'].includes(key)\n    );\n    return {\n      info: info,\n      smart: {\n        nvmeData: smartData.nvme_smart_health_information_log\n      },\n      device: smartData.device.name,\n      identifier: smartData.serial_number\n    };\n  }\n\n  private extractIscsiData(smartData: IscsiSmartDataV1): SmartDataResult {\n    const info = _.omitBy(smartData, (_value: string, key: string) =>\n      ['scsi_error_counter_log', 'scsi_grown_defect_list'].includes(key)\n    );\n    return {\n      info: info,\n      smart: {\n        scsi_error_counter_log: smartData.scsi_error_counter_log,\n        scsi_grown_defect_list: smartData.scsi_grown_defect_list\n      },\n      device: info.device.name,\n      identifier: info.serial_number\n    };\n  }\n\n  private extractAtaData(smartData: AtaSmartDataV1): SmartDataResult {\n    const info = _.omitBy(smartData, (_value: string, key: string) =>\n      ['ata_smart_attributes', 'ata_smart_selective_self_test_log', 'ata_smart_data'].includes(key)\n    );\n    return {\n      info: info,\n      smart: {\n        attributes: smartData.ata_smart_attributes,\n        data: smartData.ata_smart_data\n      },\n      device: info.device.name,\n      identifier: info.serial_number\n    };\n  }\n\n  private updateData() {\n    this.loading = true;\n\n    if (this.osdId !== null) {\n      this.osdService.getSmartData(this.osdId).subscribe({\n        next: this.fetchData.bind(this),\n        error: (error) => {\n          error.preventDefault();\n          this.error = error;\n          this.loading = false;\n        }\n      });\n    } else if (this.hostname !== null) {\n      this.hostService.getSmartData(this.hostname).subscribe({\n        next: this.fetchData.bind(this),\n        error: (error) => {\n          error.preventDefault();\n          this.error = error;\n          this.loading = false;\n        }\n      });\n    }\n  }\n\n  ngOnInit() {\n    this.smartDataColumns = [\n      { prop: 'id', name: $localize`ID` },\n      { prop: 'name', name: $localize`Name` },\n      { prop: 'raw.value', name: $localize`Raw` },\n      { prop: 'thresh', name: $localize`Threshold` },\n      { prop: 'value', name: $localize`Value` },\n      { prop: 'when_failed', name: $localize`When Failed` },\n      { prop: 'worst', name: $localize`Worst` }\n    ];\n\n    this.scsiSmartDataColumns = [\n      {\n        prop: 'correction_algorithm_invocations',\n        name: $localize`Correction Algorithm Invocations`\n      },\n      {\n        prop: 'errors_corrected_by_eccdelayed',\n        name: $localize`Errors Corrected by ECC (Delayed)`\n      },\n      { prop: 'errors_corrected_by_eccfast', name: $localize`Errors Corrected by ECC (Fast)` },\n      {\n        prop: 'errors_corrected_by_rereads_rewrites',\n        name: $localize`Errors Corrected by Rereads/Rewrites`\n      },\n      { prop: 'gigabytes_processed', name: $localize`Gigabyes Processed` },\n      { prop: 'total_errors_corrected', name: $localize`Total Errors Corrected` },\n      { prop: 'total_uncorrected_errors', name: $localize`Total Errors Uncorrected` }\n    ];\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.data = {}; // Clear previous data\n    if (changes.osdId) {\n      this.osdId = changes.osdId.currentValue;\n    } else if (changes.hostname) {\n      this.hostname = changes.hostname.currentValue;\n    }\n    this.updateData();\n  }\n}\n","<ng-container *ngIf=\"!loading; else isLoading\">\n  <cd-alert-panel *ngIf=\"error\"\n                  type=\"error\"\n                  i18n>Failed to retrieve SMART data.</cd-alert-panel>\n  <cd-alert-panel *ngIf=\"incompatible\"\n                  type=\"warning\"\n                  i18n>The data received has the JSON format version 2.x and is currently incompatible with the\n    dashboard.</cd-alert-panel>\n\n  <ng-container *ngIf=\"!error && !incompatible\">\n    <cd-alert-panel *ngIf=\"data | pipeFunction:isEmpty\"\n                    type=\"info\"\n                    i18n>No SMART data available.</cd-alert-panel>\n\n    <ng-container *ngIf=\"!(data | pipeFunction:isEmpty)\">\n      <nav ngbNav\n           #nav=\"ngbNav\"\n           class=\"nav-tabs\">\n        <ng-container ngbNavItem\n                      *ngFor=\"let device of data | keyvalue\">\n          <a ngbNavLink>{{ device.value.device }} ({{ device.value.identifier }})</a>\n          <ng-template ngbNavContent>\n            <ng-container *ngIf=\"device.value.error; else noError\">\n              <cd-alert-panel id=\"alert-error\"\n                              type=\"warning\">{{ device.value.userMessage }}</cd-alert-panel>\n            </ng-container>\n\n            <ng-template #noError>\n              <cd-alert-panel *ngIf=\"device.value.info?.smart_status | pipeFunction:isEmpty; else hasSmartStatus\"\n                              id=\"alert-self-test-unknown\"\n                              size=\"slim\"\n                              type=\"warning\"\n                              i18n-title\n                              title=\"SMART overall-health self-assessment test result\"\n                              i18n>unknown</cd-alert-panel>\n              <ng-template #hasSmartStatus>\n                <!-- HDD/NVMe self test -->\n                <ng-container *ngIf=\"device.value.info.smart_status.passed; else selfTestFailed\">\n                  <cd-alert-panel id=\"alert-self-test-passed\"\n                                  size=\"slim\"\n                                  type=\"info\"\n                                  i18n-title\n                                  title=\"SMART overall-health self-assessment test result\"\n                                  i18n>passed</cd-alert-panel>\n                </ng-container>\n                <ng-template #selfTestFailed>\n                  <cd-alert-panel id=\"alert-self-test-failed\"\n                                  size=\"slim\"\n                                  type=\"warning\"\n                                  i18n-title\n                                  title=\"SMART overall-health self-assessment test result\"\n                                  i18n>failed</cd-alert-panel>\n                </ng-template>\n              </ng-template>\n            </ng-template>\n\n            <ng-container *ngIf=\"!(device.value.info | pipeFunction:isEmpty) || !(device.value.smart | pipeFunction:isEmpty)\">\n              <nav ngbNav\n                   #innerNav=\"ngbNav\"\n                   class=\"nav-tabs\">\n                <li [ngbNavItem]=\"1\">\n                  <a ngbNavLink\n                     i18n>Device Information</a>\n                  <ng-template ngbNavContent>\n                    <cd-table-key-value *ngIf=\"!(device.value.info | pipeFunction:isEmpty)\"\n                                        [renderObjects]=\"true\"\n                                        [data]=\"device.value.info\"></cd-table-key-value>\n                    <cd-alert-panel *ngIf=\"device.value.info | pipeFunction:isEmpty\"\n                                    id=\"alert-device-info-unavailable\"\n                                    type=\"info\"\n                                    i18n>No device information available for this device.</cd-alert-panel>\n                  </ng-template>\n                </li>\n                <li [ngbNavItem]=\"2\">\n                  <a ngbNavLink\n                     i18n>SMART</a>\n                  <ng-template ngbNavContent>\n                    <cd-table *ngIf=\"device.value.smart?.attributes\"\n                              [data]=\"device.value.smart.attributes.table\"\n                              updateSelectionOnRefresh=\"never\"\n                              [columns]=\"smartDataColumns\"></cd-table>\n                    <cd-table-key-value *ngIf=\"device.value.smart?.scsi_error_counter_log\"\n                                        [renderObjects]=\"true\"\n                                        [data]=\"device.value.smart\"\n                                        updateSelectionOnRefresh=\"never\"></cd-table-key-value>\n                    <cd-table-key-value *ngIf=\"device.value.smart?.nvmeData\"\n                                        [renderObjects]=\"true\"\n                                        [data]=\"device.value.smart.nvmeData\"\n                                        updateSelectionOnRefresh=\"never\"></cd-table-key-value>\n                    <cd-alert-panel *ngIf=\"!device.value.smart?.attributes && !device.value.smart?.nvmeData && !device.value.smart?.scsi_error_counter_log\"\n                                    id=\"alert-device-smart-data-unavailable\"\n                                    type=\"info\"\n                                    i18n>No SMART data available for this device.</cd-alert-panel>\n                  </ng-template>\n                </li>\n              </nav>\n\n              <div [ngbNavOutlet]=\"innerNav\"></div>\n            </ng-container>\n          </ng-template>\n        </ng-container>\n      </nav>\n\n      <div [ngbNavOutlet]=\"nav\"></div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n<ng-template #isLoading>\n  <cd-loading-panel i18n>SMART data is loading.</cd-loading-panel>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbNavModule, NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPipeFunctionModule } from 'ngx-pipe-function';\n\nimport { ActionLabels, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { LoginPasswordFormComponent } from './login-password-form/login-password-form.component';\nimport { LoginComponent } from './login/login.component';\nimport { RoleDetailsComponent } from './role-details/role-details.component';\nimport { RoleFormComponent } from './role-form/role-form.component';\nimport { RoleListComponent } from './role-list/role-list.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserPasswordFormComponent } from './user-password-form/user-password-form.component';\nimport { UserTabsComponent } from './user-tabs/user-tabs.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgbNavModule,\n    NgbPopoverModule,\n    NgxPipeFunctionModule,\n    RouterModule\n  ],\n  declarations: [\n    LoginComponent,\n    LoginPasswordFormComponent,\n    RoleDetailsComponent,\n    RoleFormComponent,\n    RoleListComponent,\n    UserTabsComponent,\n    UserListComponent,\n    UserFormComponent,\n    UserPasswordFormComponent\n  ]\n})\nexport class AuthModule {}\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'users', pathMatch: 'full' },\n  {\n    path: 'users',\n    data: { breadcrumbs: 'Users' },\n    children: [\n      { path: '', component: UserListComponent },\n      {\n        path: URLVerbs.CREATE,\n        component: UserFormComponent,\n        data: { breadcrumbs: ActionLabels.CREATE }\n      },\n      {\n        path: `${URLVerbs.EDIT}/:username`,\n        component: UserFormComponent,\n        data: { breadcrumbs: ActionLabels.EDIT }\n      }\n    ]\n  },\n  {\n    path: 'roles',\n    data: { breadcrumbs: 'Roles' },\n    children: [\n      { path: '', component: RoleListComponent },\n      {\n        path: URLVerbs.CREATE,\n        component: RoleFormComponent,\n        data: { breadcrumbs: ActionLabels.CREATE }\n      },\n      {\n        path: `${URLVerbs.EDIT}/:name`,\n        component: RoleFormComponent,\n        data: { breadcrumbs: ActionLabels.EDIT }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [AuthModule, RouterModule.forChild(routes)]\n})\nexport class RoutedAuthModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '~/app/shared/api/auth.service';\nimport { UserService } from '~/app/shared/api/user.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { PasswordPolicyService } from '~/app/shared/services/password-policy.service';\nimport { UserPasswordFormComponent } from '../user-password-form/user-password-form.component';\n\n@Component({\n  selector: 'cd-login-password-form',\n  templateUrl: './login-password-form.component.html',\n  styleUrls: ['./login-password-form.component.scss']\n})\nexport class LoginPasswordFormComponent extends UserPasswordFormComponent {\n  constructor(\n    public actionLabels: ActionLabelsI18n,\n    public notificationService: NotificationService,\n    public userService: UserService,\n    public authStorageService: AuthStorageService,\n    public formBuilder: CdFormBuilder,\n    public router: Router,\n    public passwordPolicyService: PasswordPolicyService,\n    public authService: AuthService\n  ) {\n    super(\n      actionLabels,\n      notificationService,\n      userService,\n      authStorageService,\n      formBuilder,\n      router,\n      passwordPolicyService\n    );\n  }\n\n  onPasswordChange() {\n    // Logout here because changing the password will change the\n    // session token which will finally lead to a 401 when calling\n    // the REST API the next time. The API HTTP interceptor will\n    // then also redirect to the login page immediately.\n    this.authService.logout();\n  }\n\n  onCancel() {\n    this.authService.logout();\n  }\n}\n","<div>\n  <h2 i18n>Please set a new password.</h2>\n  <h4 i18n>You will be redirected to the login page afterwards.</h4>\n  <form #frm=\"ngForm\"\n        [formGroup]=\"userForm\"\n        novalidate>\n\n    <!-- Old password -->\n    <div class=\"form-group has-feedback\">\n      <div class=\"input-group\">\n        <input class=\"form-control\"\n               type=\"password\"\n               placeholder=\"Old password...\"\n               id=\"oldpassword\"\n               formControlName=\"oldpassword\"\n               autocomplete=\"new-password\"\n               autofocus>\n        <button class=\"btn btn-outline-light btn-password\"\n                cdPasswordButton=\"oldpassword\">\n        </button>\n      </div>\n      <span class=\"invalid-feedback\"\n            *ngIf=\"userForm.showError('oldpassword', frm, 'required')\"\n            i18n>This field is required.</span>\n      <span class=\"invalid-feedback\"\n            *ngIf=\"userForm.showError('oldpassword', frm, 'notmatch')\"\n            i18n>The old and new passwords must be different.</span>\n    </div>\n\n    <!-- New password -->\n    <div class=\"form-group has-feedback\">\n      <div class=\"input-group\">\n        <input class=\"form-control\"\n               type=\"password\"\n               placeholder=\"New password...\"\n               id=\"newpassword\"\n               autocomplete=\"new-password\"\n               formControlName=\"newpassword\">\n        <button type=\"button\"\n                class=\"btn btn-outline-light btn-password\"\n                cdPasswordButton=\"newpassword\">\n        </button>\n      </div>\n      <div class=\"password-strength-level\">\n        <div class=\"{{ passwordStrengthLevelClass }}\"\n             data-toggle=\"tooltip\"\n             title=\"{{ passwordValuation }}\">\n        </div>\n      </div>\n      <span class=\"invalid-feedback\"\n            *ngIf=\"userForm.showError('newpassword', frm, 'required')\"\n            i18n>This field is required.</span>\n      <span class=\"invalid-feedback\"\n            *ngIf=\"userForm.showError('newpassword', frm, 'notmatch')\"\n            i18n>The old and new passwords must be different.</span>\n      <span class=\"invalid-feedback\"\n            *ngIf=\"userForm.showError('newpassword', frm, 'passwordPolicy')\">\n        {{ passwordValuation }}\n      </span>\n    </div>\n\n    <!-- Confirm new password -->\n    <div class=\"form-group has-feedback\">\n      <div class=\"input-group\">\n        <input class=\"form-control\"\n               type=\"password\"\n               autocomplete=\"new-password\"\n               placeholder=\"Confirm new password...\"\n               id=\"confirmnewpassword\"\n               formControlName=\"confirmnewpassword\">\n        <button class=\"btn btn-outline-light btn-password\"\n                cdPasswordButton=\"confirmnewpassword\">\n        </button>\n      </div>\n      <span class=\"invalid-feedback\"\n            *ngIf=\"userForm.showError('confirmnewpassword', frm, 'required')\"\n            i18n>This field is required.</span>\n      <span class=\"invalid-feedback\"\n            *ngIf=\"userForm.showError('confirmnewpassword', frm, 'match')\"\n            i18n>Password confirmation doesn't match the new password.</span>\n    </div>\n    <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                          (backActionEvent)=\"onCancel()\"\n                          [form]=\"userForm\"\n                          [disabled]=\"userForm.invalid\"\n                          [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                          wrappingClass=\"text-right\"></cd-form-button-panel>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport _ from 'lodash';\n\nimport { AuthService } from '~/app/shared/api/auth.service';\nimport { Credentials } from '~/app/shared/models/credentials';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\n\n@Component({\n  selector: 'cd-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  model = new Credentials();\n  isLoginActive = false;\n  returnUrl: string;\n  postInstalled = false;\n\n  constructor(\n    private authService: AuthService,\n    private authStorageService: AuthStorageService,\n    private modalService: ModalService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    if (this.authStorageService.isLoggedIn()) {\n      this.router.navigate(['']);\n    } else {\n      // Make sure all open modal dialogs are closed. This might be\n      // necessary when the logged in user is redirected to the login\n      // page after a 401.\n      this.modalService.dismissAll();\n\n      let token: string = null;\n      if (window.location.hash.indexOf('access_token=') !== -1) {\n        token = window.location.hash.split('access_token=')[1];\n        const uri = window.location.toString();\n        window.history.replaceState({}, document.title, uri.split('?')[0]);\n      }\n      this.authService.check(token).subscribe((login: any) => {\n        if (login.login_url) {\n          this.postInstalled = login.cluster_status === 'POST_INSTALLED';\n          if (login.login_url === '#/login') {\n            this.isLoginActive = true;\n          } else {\n            window.location.replace(login.login_url);\n          }\n        } else {\n          this.authStorageService.set(\n            login.username,\n            login.permissions,\n            login.sso,\n            login.pwdExpirationDate\n          );\n          this.router.navigate(['']);\n        }\n      });\n    }\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(() => {\n      const urlPath = this.postInstalled ? '/' : '/expand-cluster';\n      let url = _.get(this.route.snapshot.queryParams, 'returnUrl', urlPath);\n      if (!this.postInstalled && this.route.snapshot.queryParams['returnUrl'] === '/dashboard') {\n        url = '/expand-cluster';\n      }\n      this.router.navigate([url]);\n    });\n  }\n}\n","<div class=\"container\"\n     *ngIf=\"isLoginActive\">\n  <h1 class=\"sr-only\">Ceph login</h1>\n  <form name=\"loginForm\"\n        (ngSubmit)=\"login()\"\n        #loginForm=\"ngForm\"\n        novalidate>\n\n    <!-- Username -->\n    <div class=\"form-group has-feedback d-flex flex-column py-3\">\n      <label class=\"placeholder ps-3\"\n             for=\"username\"\n             i18n>Username</label>\n      <input id=\"username\"\n             name=\"username\"\n             [(ngModel)]=\"model.username\"\n             #username=\"ngModel\"\n             type=\"text\"\n             [attr.aria-invalid]=\"username.invalid\"\n             aria-labelledby=\"username\"\n             class=\"form-control ps-3\"\n             required\n             autofocus>\n      <div class=\"invalid-feedback ps-3\"\n           *ngIf=\"(loginForm.submitted || username.dirty) && username.invalid\"\n           i18n>Username is required</div>\n    </div>\n\n    <!-- Password -->\n    <div class=\"form-group has-feedback\"\n         id=\"password-div\">\n      <div class=\"input-group d-flex flex-nowrap\">\n        <div class=\"d-flex flex-column flex-grow-1 py-3\">\n          <label class=\"placeholder ps-3\"\n                 for=\"password\"\n                 i18n>Password</label>\n          <input id=\"password\"\n                 name=\"password\"\n                 [(ngModel)]=\"model.password\"\n                 #password=\"ngModel\"\n                 type=\"password\"\n                 [attr.aria-invalid]=\"password.invalid\"\n                 aria-labelledby=\"password\"\n                 class=\"form-control ps-3\"\n                 required>\n          <div class=\"invalid-feedback ps-3\"\n               *ngIf=\"(loginForm.submitted || password.dirty) && password.invalid\"\n               i18n>Password is required</div>\n        </div>\n        <span class=\"form-group-append\">\n          <button type=\"button\"\n                  class=\"btn btn-outline-light btn-password h-100 px-4\"\n                  cdPasswordButton=\"password\"\n                  aria-label=\"toggle-password\">\n          </button>\n        </span>\n      </div>\n    </div>\n\n    <input type=\"submit\"\n           class=\"btn btn-accent px-5 py-2\"\n           [disabled]=\"loginForm.invalid\"\n           value=\"Log in\"\n           i18n-value>\n  </form>\n</div>\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\n\n@Component({\n  selector: 'cd-role-details',\n  templateUrl: './role-details.component.html',\n  styleUrls: ['./role-details.component.scss']\n})\nexport class RoleDetailsComponent implements OnChanges, OnInit {\n  @Input()\n  selection: any;\n  @Input()\n  scopes: Array<string>;\n  selectedItem: any;\n\n  columns: CdTableColumn[];\n  scopes_permissions: Array<any> = [];\n\n  ngOnInit() {\n    this.columns = [\n      {\n        prop: 'scope',\n        name: $localize`Scope`,\n        flexGrow: 2\n      },\n      {\n        prop: 'read',\n        name: $localize`Read`,\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTransformation: CellTemplate.checkIcon\n      },\n      {\n        prop: 'create',\n        name: $localize`Create`,\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTransformation: CellTemplate.checkIcon\n      },\n      {\n        prop: 'update',\n        name: $localize`Update`,\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTransformation: CellTemplate.checkIcon\n      },\n      {\n        prop: 'delete',\n        name: $localize`Delete`,\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTransformation: CellTemplate.checkIcon\n      }\n    ];\n  }\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.selectedItem = this.selection;\n      // Build the scopes/permissions data used by the data table.\n      const scopes_permissions: any[] = [];\n      _.each(this.scopes, (scope) => {\n        const scope_permission: any = { read: false, create: false, update: false, delete: false };\n        scope_permission['scope'] = scope;\n        if (scope in this.selectedItem['scopes_permissions']) {\n          _.each(this.selectedItem['scopes_permissions'][scope], (permission) => {\n            scope_permission[permission] = true;\n          });\n        }\n        scopes_permissions.push(scope_permission);\n      });\n      this.scopes_permissions = scopes_permissions;\n    }\n  }\n}\n","<ng-container *ngIf=\"selection\">\n  <cd-table [data]=\"scopes_permissions\"\n            [columns]=\"columns\"\n            columnMode=\"flex\"\n            [toolHeader]=\"false\"\n            [autoReload]=\"false\"\n            [autoSave]=\"false\"\n            [footer]=\"false\"\n            [limit]=\"0\">\n  </cd-table>\n</ng-container>\n","export enum RoleFormMode {\n  editing = 'editing'\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport _ from 'lodash';\nimport { forkJoin as observableForkJoin } from 'rxjs';\n\nimport { RoleService } from '~/app/shared/api/role.service';\nimport { ScopeService } from '~/app/shared/api/scope.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RoleFormMode } from './role-form-mode.enum';\nimport { RoleFormModel } from './role-form.model';\n\n@Component({\n  selector: 'cd-role-form',\n  templateUrl: './role-form.component.html',\n  styleUrls: ['./role-form.component.scss']\n})\nexport class RoleFormComponent extends CdForm implements OnInit {\n  @ViewChild('headerPermissionCheckboxTpl', { static: true })\n  headerPermissionCheckboxTpl: TemplateRef<any>;\n  @ViewChild('cellScopeCheckboxTpl', { static: true })\n  cellScopeCheckboxTpl: TemplateRef<any>;\n  @ViewChild('cellPermissionCheckboxTpl', { static: true })\n  cellPermissionCheckboxTpl: TemplateRef<any>;\n\n  roleForm: CdFormGroup;\n  response: RoleFormModel;\n\n  columns: CdTableColumn[];\n  scopes: Array<string> = [];\n  scopes_permissions: Array<any> = [];\n\n  roleFormMode = RoleFormMode;\n  mode: RoleFormMode;\n\n  action: string;\n  resource: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private roleService: RoleService,\n    private scopeService: ScopeService,\n    private notificationService: NotificationService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.resource = $localize`role`;\n    this.createForm();\n    this.listenToChanges();\n  }\n\n  createForm() {\n    this.roleForm = new CdFormGroup({\n      name: new FormControl('', {\n        validators: [Validators.required],\n        asyncValidators: [CdValidators.unique(this.roleService.exists, this.roleService)]\n      }),\n      description: new FormControl(''),\n      scopes_permissions: new FormControl({})\n    });\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        prop: 'scope',\n        name: $localize`All`,\n        flexGrow: 2,\n        cellTemplate: this.cellScopeCheckboxTpl,\n        headerTemplate: this.headerPermissionCheckboxTpl\n      },\n      {\n        prop: 'read',\n        name: $localize`Read`,\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTemplate: this.cellPermissionCheckboxTpl,\n        headerTemplate: this.headerPermissionCheckboxTpl\n      },\n      {\n        prop: 'create',\n        name: $localize`Create`,\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTemplate: this.cellPermissionCheckboxTpl,\n        headerTemplate: this.headerPermissionCheckboxTpl\n      },\n      {\n        prop: 'update',\n        name: $localize`Update`,\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTemplate: this.cellPermissionCheckboxTpl,\n        headerTemplate: this.headerPermissionCheckboxTpl\n      },\n      {\n        prop: 'delete',\n        name: $localize`Delete`,\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTemplate: this.cellPermissionCheckboxTpl,\n        headerTemplate: this.headerPermissionCheckboxTpl\n      }\n    ];\n    if (this.router.url.startsWith('/user-management/roles/edit')) {\n      this.mode = this.roleFormMode.editing;\n      this.action = this.actionLabels.EDIT;\n    } else {\n      this.action = this.actionLabels.CREATE;\n    }\n    if (this.mode === this.roleFormMode.editing) {\n      this.initEdit();\n    } else {\n      this.initCreate();\n    }\n  }\n\n  initCreate() {\n    // Load the scopes and initialize the default scopes/permissions data.\n    this.scopeService.list().subscribe((scopes: Array<string>) => {\n      this.scopes = scopes;\n      this.roleForm.get('scopes_permissions').setValue({});\n\n      this.loadingReady();\n    });\n  }\n\n  initEdit() {\n    // Disable the 'Name' input field.\n    this.roleForm.get('name').disable();\n    // Load the scopes and the role data.\n    this.route.params.subscribe((params: { name: string }) => {\n      const observables = [];\n      observables.push(this.scopeService.list());\n      observables.push(this.roleService.get(params.name));\n      observableForkJoin(observables).subscribe((resp: any[]) => {\n        this.scopes = resp[0];\n        ['name', 'description', 'scopes_permissions'].forEach((key) =>\n          this.roleForm.get(key).setValue(resp[1][key])\n        );\n\n        this.loadingReady();\n      });\n    });\n  }\n\n  listenToChanges() {\n    // Create/Update the data which is used by the data table to display the\n    // scopes/permissions every time the form field value has been changed.\n    this.roleForm.get('scopes_permissions').valueChanges.subscribe((value) => {\n      const scopes_permissions: any[] = [];\n      _.each(this.scopes, (scope) => {\n        // Set the defaults values.\n        const scope_permission: any = { read: false, create: false, update: false, delete: false };\n        scope_permission['scope'] = scope;\n        // Apply settings from the given value if they exist.\n        if (scope in value) {\n          _.each(value[scope], (permission) => {\n            scope_permission[permission] = true;\n          });\n        }\n        scopes_permissions.push(scope_permission);\n      });\n      this.scopes_permissions = scopes_permissions;\n    });\n  }\n\n  /**\n   * Checks if the specified row checkbox needs to be rendered as checked.\n   * @param {string} scope The scope to be checked, e.g. 'cephfs', 'grafana',\n   *   'osd', 'pool' ...\n   * @return Returns true if all permissions (read, create, update, delete)\n   *   are checked for the specified scope, otherwise false.\n   */\n  isRowChecked(scope: string) {\n    const scope_permission = _.find(this.scopes_permissions, (o) => {\n      return o['scope'] === scope;\n    });\n    if (_.isUndefined(scope_permission)) {\n      return false;\n    }\n    return (\n      scope_permission['read'] &&\n      scope_permission['create'] &&\n      scope_permission['update'] &&\n      scope_permission['delete']\n    );\n  }\n\n  /**\n   * Checks if the specified header checkbox needs to be rendered as checked.\n   * @param {string} property The property/permission (read, create,\n   *   update, delete) to be checked. If 'scope' is given, all permissions\n   *   are checked.\n   * @return Returns true if specified property/permission is selected\n   *   for all scopes, otherwise false.\n   */\n  isHeaderChecked(property: string) {\n    let permissions = [property];\n    if ('scope' === property) {\n      permissions = ['read', 'create', 'update', 'delete'];\n    }\n    return permissions.every((permission) => {\n      return this.scopes_permissions.every((scope_permission) => {\n        return scope_permission[permission];\n      });\n    });\n  }\n\n  onClickCellCheckbox(scope: string, property: string, event: any = null) {\n    // Use a copy of the form field data to do not trigger the redrawing of the\n    // data table with every change.\n    const scopes_permissions = _.cloneDeep(this.roleForm.getValue('scopes_permissions'));\n    let permissions = [property];\n    if ('scope' === property) {\n      permissions = ['read', 'create', 'update', 'delete'];\n    }\n    if (!(scope in scopes_permissions)) {\n      scopes_permissions[scope] = [];\n    }\n    // Add or remove the given permission(s) depending on the click event or if no\n    // click event is given then add/remove them if they are absent/exist.\n    if (\n      (event && event.target['checked']) ||\n      !_.isEqual(permissions.sort(), _.intersection(scopes_permissions[scope], permissions).sort())\n    ) {\n      scopes_permissions[scope] = _.union(scopes_permissions[scope], permissions);\n    } else {\n      scopes_permissions[scope] = _.difference(scopes_permissions[scope], permissions);\n      if (_.isEmpty(scopes_permissions[scope])) {\n        _.unset(scopes_permissions, scope);\n      }\n    }\n    this.roleForm.get('scopes_permissions').setValue(scopes_permissions);\n  }\n\n  onClickHeaderCheckbox(property: 'scope' | 'read' | 'create' | 'update' | 'delete', event: any) {\n    // Use a copy of the form field data to do not trigger the redrawing of the\n    // data table with every change.\n    const scopes_permissions = _.cloneDeep(this.roleForm.getValue('scopes_permissions'));\n    let permissions = [property];\n    if ('scope' === property) {\n      permissions = ['read', 'create', 'update', 'delete'];\n    }\n    _.each(permissions, (permission) => {\n      _.each(this.scopes, (scope) => {\n        if (event.target['checked']) {\n          scopes_permissions[scope] = _.union(scopes_permissions[scope], [permission]);\n        } else {\n          scopes_permissions[scope] = _.difference(scopes_permissions[scope], [permission]);\n          if (_.isEmpty(scopes_permissions[scope])) {\n            _.unset(scopes_permissions, scope);\n          }\n        }\n      });\n    });\n    this.roleForm.get('scopes_permissions').setValue(scopes_permissions);\n  }\n\n  getRequest(): RoleFormModel {\n    const roleFormModel = new RoleFormModel();\n    ['name', 'description', 'scopes_permissions'].forEach(\n      (key) => (roleFormModel[key] = this.roleForm.get(key).value)\n    );\n    return roleFormModel;\n  }\n\n  createAction() {\n    const roleFormModel = this.getRequest();\n    this.roleService.create(roleFormModel).subscribe(\n      () => {\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Created role '${roleFormModel.name}'`\n        );\n        this.router.navigate(['/user-management/roles']);\n      },\n      () => {\n        this.roleForm.setErrors({ cdSubmitButton: true });\n      }\n    );\n  }\n\n  editAction() {\n    const roleFormModel = this.getRequest();\n    this.roleService.update(roleFormModel).subscribe(\n      () => {\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Updated role '${roleFormModel.name}'`\n        );\n        this.router.navigate(['/user-management/roles']);\n      },\n      () => {\n        this.roleForm.setErrors({ cdSubmitButton: true });\n      }\n    );\n  }\n\n  submit() {\n    if (this.mode === this.roleFormMode.editing) {\n      this.editAction();\n    } else {\n      this.createAction();\n    }\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form name=\"roleForm\"\n        #formDir=\"ngForm\"\n        [formGroup]=\"roleForm\"\n        novalidate>\n    <div class=\"card\">\n      <div i18n=\"form title\"\n           class=\"card-header\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n      <div class=\"card-body\">\n\n        <!-- Name -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': mode !== roleFormMode.editing}\"\n                 for=\"name\"\n                 i18n>Name</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   i18n-placeholder\n                   placeholder=\"Name...\"\n                   id=\"name\"\n                   name=\"name\"\n                   formControlName=\"name\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"roleForm.showError('name', formDir, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"roleForm.showError('name', formDir, 'notUnique')\"\n                  i18n>The chosen name is already in use.</span>\n          </div>\n        </div>\n\n        <!-- Description -->\n        <div class=\"form-group row\">\n          <label i18n\n                 class=\"cd-col-form-label\"\n                 for=\"description\">Description</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   i18n-placeholder\n                   placeholder=\"Description...\"\n                   id=\"description\"\n                   name=\"description\"\n                   formControlName=\"description\">\n          </div>\n        </div>\n\n        <!-- Permissions -->\n        <div class=\"form-group row\">\n          <label i18n\n                 class=\"cd-col-form-label\">Permissions</label>\n          <div class=\"cd-col-form-input\">\n            <cd-table [data]=\"scopes_permissions\"\n                      [columns]=\"columns\"\n                      columnMode=\"flex\"\n                      [toolHeader]=\"false\"\n                      [autoReload]=\"false\"\n                      [autoSave]=\"false\"\n                      [footer]=\"false\"\n                      [limit]=\"0\">\n            </cd-table>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                              [form]=\"roleForm\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n\n<ng-template #cellScopeCheckboxTpl\n             let-column=\"column\"\n             let-row=\"row\"\n             let-value=\"value\">\n  <div class=\"custom-control custom-checkbox\">\n    <input class=\"custom-control-input\"\n           id=\"scope_{{ row.scope }}\"\n           type=\"checkbox\"\n           [checked]=\"isRowChecked(row.scope)\"\n           (change)=\"onClickCellCheckbox(row.scope, column.prop, $event)\">\n    <label class=\"datatable-permissions-scope-cell-label custom-control-label\"\n           for=\"scope_{{ row.scope }}\">{{ value }}</label>\n  </div>\n</ng-template>\n\n<ng-template #cellPermissionCheckboxTpl\n             let-column=\"column\"\n             let-row=\"row\"\n             let-value=\"value\">\n  <div class=\"custom-control custom-checkbox\">\n    <input class=\"custom-control-input\"\n           type=\"checkbox\"\n           [checked]=\"value\"\n           [id]=\"row.scope + '-' + column.prop\"\n           (change)=\"onClickCellCheckbox(row.scope, column.prop, $event)\">\n    <label class=\"custom-control-label\"\n           [for]=\"row.scope + '-' + column.prop\"></label>\n  </div>\n</ng-template>\n\n<ng-template #headerPermissionCheckboxTpl\n             let-column=\"column\">\n  <div class=\"custom-control custom-checkbox\">\n    <input class=\"custom-control-input\"\n           id=\"header_{{ column.prop }}\"\n           type=\"checkbox\"\n           [checked]=\"isHeaderChecked(column.prop)\"\n           (change)=\"onClickHeaderCheckbox(column.prop, $event)\">\n    <label class=\"datatable-permissions-header-cell-label custom-control-label\"\n           for=\"header_{{ column.prop }}\">{{ column.name }}</label>\n  </div>\n</ng-template>\n","export class RoleFormModel {\n  name: string;\n  description: string;\n  scopes_permissions: any;\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { forkJoin } from 'rxjs';\n\nimport { RoleService } from '~/app/shared/api/role.service';\nimport { ScopeService } from '~/app/shared/api/scope.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { FormModalComponent } from '~/app/shared/components/form-modal/form-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { EmptyPipe } from '~/app/shared/pipes/empty.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\n\nconst BASE_URL = 'user-management/roles';\n\n@Component({\n  selector: 'cd-role-list',\n  templateUrl: './role-list.component.html',\n  styleUrls: ['./role-list.component.scss'],\n  providers: [{ provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }]\n})\nexport class RoleListComponent extends ListWithDetails implements OnInit {\n  permission: Permission;\n  tableActions: CdTableAction[];\n  columns: CdTableColumn[];\n  roles: Array<any>;\n  scopes: Array<string>;\n  selection = new CdTableSelection();\n\n  modalRef: NgbModalRef;\n\n  constructor(\n    private roleService: RoleService,\n    private scopeService: ScopeService,\n    private emptyPipe: EmptyPipe,\n    private authStorageService: AuthStorageService,\n    private modalService: ModalService,\n    private notificationService: NotificationService,\n    private urlBuilder: URLBuilderService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.permission = this.authStorageService.getPermissions().user;\n    const addAction: CdTableAction = {\n      permission: 'create',\n      icon: Icons.add,\n      routerLink: () => this.urlBuilder.getCreate(),\n      name: this.actionLabels.CREATE\n    };\n    const cloneAction: CdTableAction = {\n      permission: 'create',\n      icon: Icons.clone,\n      name: this.actionLabels.CLONE,\n      disable: () => !this.selection.hasSingleSelection,\n      click: () => this.cloneRole()\n    };\n    const editAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      disable: () => !this.selection.hasSingleSelection || this.selection.first().system,\n      routerLink: () =>\n        this.selection.first() && this.urlBuilder.getEdit(this.selection.first().name),\n      name: this.actionLabels.EDIT\n    };\n    const deleteAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      disable: () => !this.selection.hasSingleSelection || this.selection.first().system,\n      click: () => this.deleteRoleModal(),\n      name: this.actionLabels.DELETE\n    };\n    this.tableActions = [addAction, cloneAction, editAction, deleteAction];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Name`,\n        prop: 'name',\n        flexGrow: 3\n      },\n      {\n        name: $localize`Description`,\n        prop: 'description',\n        flexGrow: 5,\n        pipe: this.emptyPipe\n      },\n      {\n        name: $localize`System Role`,\n        prop: 'system',\n        cellClass: 'text-center',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.checkIcon\n      }\n    ];\n  }\n\n  getRoles() {\n    forkJoin([this.roleService.list(), this.scopeService.list()]).subscribe(\n      (data: [Array<any>, Array<string>]) => {\n        this.roles = data[0];\n        this.scopes = data[1];\n      }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteRole(role: string) {\n    this.roleService.delete(role).subscribe(\n      () => {\n        this.getRoles();\n        this.modalRef.close();\n        this.notificationService.show(NotificationType.success, $localize`Deleted role '${role}'`);\n      },\n      () => {\n        this.modalRef.componentInstance.stopLoadingSpinner();\n      }\n    );\n  }\n\n  deleteRoleModal() {\n    const name = this.selection.first().name;\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: 'Role',\n      itemNames: [name],\n      submitAction: () => this.deleteRole(name)\n    });\n  }\n\n  cloneRole() {\n    const name = this.selection.first().name;\n    this.modalRef = this.modalService.show(FormModalComponent, {\n      fields: [\n        {\n          type: 'text',\n          name: 'newName',\n          value: `${name}_clone`,\n          label: $localize`New name`,\n          required: true\n        }\n      ],\n      titleText: $localize`Clone Role`,\n      submitButtonText: $localize`Clone Role`,\n      onSubmit: (values: object) => {\n        this.roleService.clone(name, values['newName']).subscribe(() => {\n          this.getRoles();\n          this.notificationService.show(\n            NotificationType.success,\n            $localize`Cloned role '${values['newName']}' from '${name}'`\n          );\n        });\n      }\n    });\n  }\n}\n","<cd-user-tabs></cd-user-tabs>\n\n<cd-table [data]=\"roles\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          identifier=\"name\"\n          selectionType=\"single\"\n          [hasDetails]=\"true\"\n          (setExpandedRow)=\"setExpandedRow($event)\"\n          (fetchData)=\"getRoles()\"\n          (updateSelection)=\"updateSelection($event)\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n  <cd-role-details cdTableDetail\n                   [selection]=\"expandedRow\"\n                   [scopes]=\"scopes\">\n  </cd-role-details>\n</cd-table>\n","export enum UserFormMode {\n  editing = 'editing'\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { forkJoin as observableForkJoin } from 'rxjs';\n\nimport { AuthService } from '~/app/shared/api/auth.service';\nimport { RoleService } from '~/app/shared/api/role.service';\nimport { SettingsService } from '~/app/shared/api/settings.service';\nimport { UserService } from '~/app/shared/api/user.service';\nimport { ConfirmationModalComponent } from '~/app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { SelectMessages } from '~/app/shared/components/select/select-messages.model';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { CdPwdExpirationSettings } from '~/app/shared/models/cd-pwd-expiration-settings';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { PasswordPolicyService } from '~/app/shared/services/password-policy.service';\nimport { UserFormMode } from './user-form-mode.enum';\nimport { UserFormRoleModel } from './user-form-role.model';\nimport { UserFormModel } from './user-form.model';\n\n@Component({\n  selector: 'cd-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent extends CdForm implements OnInit {\n  @ViewChild('removeSelfUserReadUpdatePermissionTpl', { static: true })\n  removeSelfUserReadUpdatePermissionTpl: TemplateRef<any>;\n\n  modalRef: NgbModalRef;\n\n  userForm: CdFormGroup;\n  response: UserFormModel;\n\n  userFormMode = UserFormMode;\n  mode: UserFormMode;\n  allRoles: Array<UserFormRoleModel>;\n  messages = new SelectMessages({ empty: $localize`There are no roles.` });\n  action: string;\n  resource: string;\n  passwordPolicyHelpText = '';\n  passwordStrengthLevelClass: string;\n  passwordValuation: string;\n  icons = Icons;\n  pwdExpirationSettings: CdPwdExpirationSettings;\n  pwdExpirationFormat = 'YYYY-MM-DD';\n\n  constructor(\n    private authService: AuthService,\n    private authStorageService: AuthStorageService,\n    private route: ActivatedRoute,\n    public router: Router,\n    private modalService: ModalService,\n    private roleService: RoleService,\n    private userService: UserService,\n    private notificationService: NotificationService,\n    public actionLabels: ActionLabelsI18n,\n    private passwordPolicyService: PasswordPolicyService,\n    private formBuilder: CdFormBuilder,\n    private settingsService: SettingsService\n  ) {\n    super();\n    this.resource = $localize`user`;\n    this.createForm();\n    this.messages = new SelectMessages({ empty: $localize`There are no roles.` });\n  }\n\n  createForm() {\n    this.passwordPolicyService.getHelpText().subscribe((helpText: string) => {\n      this.passwordPolicyHelpText = helpText;\n    });\n    this.userForm = this.formBuilder.group(\n      {\n        username: [\n          '',\n          [Validators.required],\n          [CdValidators.unique(this.userService.validateUserName, this.userService)]\n        ],\n        name: [''],\n        password: [\n          '',\n          [],\n          [\n            CdValidators.passwordPolicy(\n              this.userService,\n              () => this.userForm.getValue('username'),\n              (_valid: boolean, credits: number, valuation: string) => {\n                this.passwordStrengthLevelClass = this.passwordPolicyService.mapCreditsToCssClass(\n                  credits\n                );\n                this.passwordValuation = _.defaultTo(valuation, '');\n              }\n            )\n          ]\n        ],\n        confirmpassword: [''],\n        pwdExpirationDate: [undefined],\n        email: ['', [CdValidators.email]],\n        roles: [[]],\n        enabled: [true, [Validators.required]],\n        pwdUpdateRequired: [true]\n      },\n      {\n        validators: [CdValidators.match('password', 'confirmpassword')]\n      }\n    );\n  }\n\n  ngOnInit() {\n    if (this.router.url.startsWith('/user-management/users/edit')) {\n      this.mode = this.userFormMode.editing;\n      this.action = this.actionLabels.EDIT;\n    } else {\n      this.action = this.actionLabels.CREATE;\n    }\n\n    const observables = [this.roleService.list(), this.settingsService.getStandardSettings()];\n    observableForkJoin(observables).subscribe(\n      (result: [UserFormRoleModel[], CdPwdExpirationSettings]) => {\n        this.allRoles = _.map(result[0], (role) => {\n          role.enabled = true;\n          return role;\n        });\n        this.pwdExpirationSettings = new CdPwdExpirationSettings(result[1]);\n\n        if (this.mode === this.userFormMode.editing) {\n          this.initEdit();\n        } else {\n          if (this.pwdExpirationSettings.pwdExpirationSpan > 0) {\n            const pwdExpirationDateField = this.userForm.get('pwdExpirationDate');\n            const expirationDate = moment();\n            expirationDate.add(this.pwdExpirationSettings.pwdExpirationSpan, 'day');\n            pwdExpirationDateField.setValue(expirationDate.format(this.pwdExpirationFormat));\n            pwdExpirationDateField.setValidators([Validators.required]);\n          }\n\n          this.loadingReady();\n        }\n      }\n    );\n  }\n\n  initEdit() {\n    this.disableForEdit();\n    this.route.params.subscribe((params: { username: string }) => {\n      const username = params.username;\n      this.userService.get(username).subscribe((userFormModel: UserFormModel) => {\n        this.response = _.cloneDeep(userFormModel);\n        this.setResponse(userFormModel);\n\n        this.loadingReady();\n      });\n    });\n  }\n\n  disableForEdit() {\n    this.userForm.get('username').disable();\n  }\n\n  setResponse(response: UserFormModel) {\n    ['username', 'name', 'email', 'roles', 'enabled', 'pwdUpdateRequired'].forEach((key) =>\n      this.userForm.get(key).setValue(response[key])\n    );\n    const expirationDate = response['pwdExpirationDate'];\n    if (expirationDate) {\n      this.userForm\n        .get('pwdExpirationDate')\n        .setValue(moment(expirationDate * 1000).format(this.pwdExpirationFormat));\n    }\n  }\n\n  getRequest(): UserFormModel {\n    const userFormModel = new UserFormModel();\n    ['username', 'password', 'name', 'email', 'roles', 'enabled', 'pwdUpdateRequired'].forEach(\n      (key) => (userFormModel[key] = this.userForm.get(key).value)\n    );\n    const expirationDate = this.userForm.get('pwdExpirationDate').value;\n    if (expirationDate) {\n      const mom = moment(expirationDate, this.pwdExpirationFormat);\n      if (\n        this.mode !== this.userFormMode.editing ||\n        this.response.pwdExpirationDate !== mom.unix()\n      ) {\n        mom.set({ hour: 23, minute: 59, second: 59 });\n      }\n      userFormModel['pwdExpirationDate'] = mom.unix();\n    }\n    return userFormModel;\n  }\n\n  createAction() {\n    const userFormModel = this.getRequest();\n    this.userService.create(userFormModel).subscribe(\n      () => {\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Created user '${userFormModel.username}'`\n        );\n        this.router.navigate(['/user-management/users']);\n      },\n      () => {\n        this.userForm.setErrors({ cdSubmitButton: true });\n      }\n    );\n  }\n\n  editAction() {\n    if (this.isUserRemovingNeededRolePermissions()) {\n      const initialState = {\n        titleText: $localize`Update user`,\n        buttonText: $localize`Continue`,\n        bodyTpl: this.removeSelfUserReadUpdatePermissionTpl,\n        onSubmit: () => {\n          this.modalRef.close();\n          this.doEditAction();\n        },\n        onCancel: () => {\n          this.userForm.setErrors({ cdSubmitButton: true });\n          this.userForm.get('roles').reset(this.userForm.get('roles').value);\n        }\n      };\n      this.modalRef = this.modalService.show(ConfirmationModalComponent, initialState);\n    } else {\n      this.doEditAction();\n    }\n  }\n\n  public isCurrentUser(): boolean {\n    return this.authStorageService.getUsername() === this.userForm.getValue('username');\n  }\n\n  private isUserChangingRoles(): boolean {\n    const isCurrentUser = this.isCurrentUser();\n    return (\n      isCurrentUser &&\n      this.response &&\n      !_.isEqual(this.response.roles, this.userForm.getValue('roles'))\n    );\n  }\n\n  private isUserRemovingNeededRolePermissions(): boolean {\n    const isCurrentUser = this.isCurrentUser();\n    return isCurrentUser && !this.hasUserReadUpdatePermissions(this.userForm.getValue('roles'));\n  }\n\n  private hasUserReadUpdatePermissions(roles: Array<string> = []) {\n    for (const role of this.allRoles) {\n      if (roles.indexOf(role.name) !== -1 && role.scopes_permissions['user']) {\n        const userPermissions = role.scopes_permissions['user'];\n        return ['read', 'update'].every((permission) => {\n          return userPermissions.indexOf(permission) !== -1;\n        });\n      }\n    }\n    return false;\n  }\n\n  private doEditAction() {\n    const userFormModel = this.getRequest();\n    this.userService.update(userFormModel).subscribe(\n      () => {\n        if (this.isUserChangingRoles()) {\n          this.authService.logout(() => {\n            this.notificationService.show(\n              NotificationType.info,\n              $localize`You were automatically logged out because your roles have been changed.`\n            );\n          });\n        } else {\n          this.notificationService.show(\n            NotificationType.success,\n            $localize`Updated user '${userFormModel.username}'`\n          );\n          this.router.navigate(['/user-management/users']);\n        }\n      },\n      () => {\n        this.userForm.setErrors({ cdSubmitButton: true });\n      }\n    );\n  }\n\n  clearExpirationDate() {\n    this.userForm.get('pwdExpirationDate').setValue(undefined);\n  }\n\n  submit() {\n    if (this.mode === this.userFormMode.editing) {\n      this.editAction();\n    } else {\n      this.createAction();\n    }\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form name=\"userForm\"\n        #formDir=\"ngForm\"\n        [formGroup]=\"userForm\"\n        novalidate>\n    <div class=\"card\">\n      <div i18n=\"form title\"\n           class=\"card-header\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n      <div class=\"card-body\">\n\n        <!-- Username -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': mode !== userFormMode.editing}\"\n                 for=\"username\"\n                 i18n>Username</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Username...\"\n                   id=\"username\"\n                   name=\"username\"\n                   formControlName=\"username\"\n                   autocomplete=\"off\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('username', formDir, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('username', formDir, 'notUnique')\"\n                  i18n>The username already exists.</span>\n          </div>\n        </div>\n\n        <!-- Password -->\n        <div class=\"form-group row\"\n             *ngIf=\"!authStorageService.isSSO()\">\n          <label class=\"cd-col-form-label\"\n                 for=\"password\">\n            <ng-container i18n>Password</ng-container>\n            <cd-helper *ngIf=\"passwordPolicyHelpText.length > 0\"\n                       class=\"text-pre-wrap\"\n                       html=\"{{ passwordPolicyHelpText }}\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input class=\"form-control\"\n                     type=\"password\"\n                     placeholder=\"Password...\"\n                     id=\"password\"\n                     name=\"password\"\n                     autocomplete=\"new-password\"\n                     formControlName=\"password\">\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      cdPasswordButton=\"password\">\n              </button>\n            </div>\n            <div class=\"password-strength-level\">\n              <div class=\"{{ passwordStrengthLevelClass }}\"\n                   data-toggle=\"tooltip\"\n                   title=\"{{ passwordValuation }}\">\n              </div>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('password', formDir, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('password', formDir, 'passwordPolicy')\">\n              {{ passwordValuation }}\n            </span>\n          </div>\n        </div>\n\n        <!-- Confirm password -->\n        <div class=\"form-group row\"\n             *ngIf=\"!authStorageService.isSSO()\">\n          <label i18n\n                 class=\"cd-col-form-label\"\n                 for=\"confirmpassword\">Confirm password</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input class=\"form-control\"\n                     type=\"password\"\n                     placeholder=\"Confirm password...\"\n                     id=\"confirmpassword\"\n                     name=\"confirmpassword\"\n                     autocomplete=\"new-password\"\n                     formControlName=\"confirmpassword\">\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      cdPasswordButton=\"confirmpassword\">\n              </button>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('confirmpassword', formDir, 'match')\"\n                    i18n>Password confirmation doesn't match the password.</span>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('confirmpassword', formDir, 'required')\"\n                  i18n>This field is required.</span>\n          </div>\n        </div>\n\n        <!-- Password expiration date -->\n        <div class=\"form-group row\"\n             *ngIf=\"!authStorageService.isSSO()\">\n          <label class=\"cd-col-form-label\"\n                 [ngClass]=\"{'required': pwdExpirationSettings.pwdExpirationSpan > 0}\"\n                 for=\"pwdExpirationDate\">\n            <ng-container i18n>Password expiration date</ng-container>\n            <cd-helper class=\"text-pre-wrap\"\n                       *ngIf=\"pwdExpirationSettings.pwdExpirationSpan == 0\">\n              <p>\n                The Dashboard setting defining the expiration interval of\n                passwords is currently set to <strong>0</strong>. This means\n                if a date is set, the user password will only expire once.\n              </p>\n              <p>\n                Consider configuring the Dashboard setting\n                <a routerLink=\"/mgr-modules/edit/dashboard\"\n                   class=\"alert-link\">USER_PWD_EXPIRATION_SPAN</a>\n                in order to let passwords expire periodically.\n              </p>\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input class=\"form-control\"\n                     i18n-placeholder\n                     placeholder=\"Password expiration date...\"\n                     id=\"pwdExpirationDate\"\n                     name=\"pwdExpirationDate\"\n                     formControlName=\"pwdExpirationDate\"\n                     [ngbPopover]=\"popContent\"\n                     triggers=\"manual\"\n                     #p=\"ngbPopover\"\n                     (click)=\"p.open()\"\n                     (keypress)=\"p.close()\">\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      (click)=\"clearExpirationDate()\">\n                <i class=\"icon-prepend {{ icons.destroy }}\"></i>\n              </button>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"userForm.showError('pwdExpirationDate', formDir, 'required')\"\n                    i18n>This field is required.</span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Name -->\n        <div class=\"form-group row\">\n          <label i18n\n                 class=\"cd-col-form-label\"\n                 for=\"name\">Full name</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Full name...\"\n                   id=\"name\"\n                   name=\"name\"\n                   formControlName=\"name\">\n          </div>\n        </div>\n\n        <!-- Email -->\n        <div class=\"form-group row\">\n          <label i18n\n                 class=\"cd-col-form-label\"\n                 for=\"email\">Email</label>\n          <div class=\"cd-col-form-input\">\n            <input class=\"form-control\"\n                   type=\"email\"\n                   placeholder=\"Email...\"\n                   id=\"email\"\n                   name=\"email\"\n                   formControlName=\"email\">\n\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('email', formDir, 'email')\"\n                  i18n>Invalid email.</span>\n          </div>\n        </div>\n\n        <!-- Roles -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 i18n>Roles</label>\n          <div class=\"cd-col-form-input\">\n            <span class=\"no-border full-height\"\n                  *ngIf=\"allRoles\">\n              <cd-select-badges [data]=\"userForm.controls.roles.value\"\n                                [options]=\"allRoles\"\n                                [messages]=\"messages\"></cd-select-badges>\n            </span>\n          </div>\n        </div>\n\n        <!-- Enabled -->\n        <div class=\"form-group row\"\n             *ngIf=\"!isCurrentUser()\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     id=\"enabled\"\n                     name=\"enabled\"\n                     formControlName=\"enabled\">\n              <label class=\"custom-control-label\"\n                     for=\"enabled\"\n                     i18n>Enabled</label>\n            </div>\n          </div>\n        </div>\n\n        <!-- Force change password -->\n        <div class=\"form-group row\"\n             *ngIf=\"!isCurrentUser() && !authStorageService.isSSO()\">\n          <div class=\"cd-col-form-offset\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     id=\"pwdUpdateRequired\"\n                     name=\"pwdUpdateRequired\"\n                     formControlName=\"pwdUpdateRequired\">\n              <label class=\"custom-control-label\"\n                     for=\"pwdUpdateRequired\"\n                     i18n>User must change password at next logon</label>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                              [form]=\"userForm\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n\n<ng-template #removeSelfUserReadUpdatePermissionTpl>\n  <p><strong i18n>You are about to remove \"user read / update\" permissions from your own user.</strong></p>\n  <br>\n  <p i18n>If you continue, you will no longer be able to add or remove roles from any user.</p>\n\n  <ng-container i18n>Are you sure you want to continue?</ng-container>\n</ng-template>\n\n<ng-template #popContent>\n  <cd-date-time-picker [control]=\"userForm.get('pwdExpirationDate')\"\n                       [hasTime]=\"false\"></cd-date-time-picker>\n</ng-template>\n","export class UserFormModel {\n  username: string;\n  password: string;\n  pwdExpirationDate: number;\n  name: string;\n  email: string;\n  roles: Array<string>;\n  enabled: boolean;\n  pwdUpdateRequired: boolean;\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SettingsService } from '~/app/shared/api/settings.service';\nimport { UserService } from '~/app/shared/api/user.service';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { EmptyPipe } from '~/app/shared/pipes/empty.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\n\nconst BASE_URL = 'user-management/users';\n\n@Component({\n  selector: 'cd-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss'],\n  providers: [{ provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }]\n})\nexport class UserListComponent implements OnInit {\n  @ViewChild('userRolesTpl', { static: true })\n  userRolesTpl: TemplateRef<any>;\n  @ViewChild('warningTpl', { static: true })\n  warningTpl: TemplateRef<any>;\n  @ViewChild('durationTpl', { static: true })\n  durationTpl: TemplateRef<any>;\n\n  permission: Permission;\n  tableActions: CdTableAction[];\n  columns: CdTableColumn[];\n  users: Array<any>;\n  expirationWarningAlert: number;\n  expirationDangerAlert: number;\n  selection = new CdTableSelection();\n  icons = Icons;\n\n  modalRef: NgbModalRef;\n\n  constructor(\n    private userService: UserService,\n    private emptyPipe: EmptyPipe,\n    private modalService: ModalService,\n    private notificationService: NotificationService,\n    private authStorageService: AuthStorageService,\n    private urlBuilder: URLBuilderService,\n    private settingsService: SettingsService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    this.permission = this.authStorageService.getPermissions().user;\n    const addAction: CdTableAction = {\n      permission: 'create',\n      icon: Icons.add,\n      routerLink: () => this.urlBuilder.getCreate(),\n      name: this.actionLabels.CREATE\n    };\n    const editAction: CdTableAction = {\n      permission: 'update',\n      icon: Icons.edit,\n      routerLink: () =>\n        this.selection.first() && this.urlBuilder.getEdit(this.selection.first().username),\n      name: this.actionLabels.EDIT\n    };\n    const deleteAction: CdTableAction = {\n      permission: 'delete',\n      icon: Icons.destroy,\n      click: () => this.deleteUserModal(),\n      name: this.actionLabels.DELETE\n    };\n    this.tableActions = [addAction, editAction, deleteAction];\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: $localize`Username`,\n        prop: 'username',\n        flexGrow: 1,\n        cellTemplate: this.warningTpl\n      },\n      {\n        name: $localize`Name`,\n        prop: 'name',\n        flexGrow: 1,\n        pipe: this.emptyPipe\n      },\n      {\n        name: $localize`Email`,\n        prop: 'email',\n        flexGrow: 1,\n        pipe: this.emptyPipe\n      },\n      {\n        name: $localize`Roles`,\n        prop: 'roles',\n        flexGrow: 1,\n        cellTemplate: this.userRolesTpl\n      },\n      {\n        name: $localize`Enabled`,\n        prop: 'enabled',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.checkIcon\n      },\n      {\n        name: $localize`Password expires`,\n        prop: 'pwdExpirationDate',\n        flexGrow: 1,\n        cellTemplate: this.durationTpl\n      }\n    ];\n    const settings: string[] = ['USER_PWD_EXPIRATION_WARNING_1', 'USER_PWD_EXPIRATION_WARNING_2'];\n    this.settingsService.getValues(settings).subscribe((data) => {\n      this.expirationWarningAlert = data['USER_PWD_EXPIRATION_WARNING_1'];\n      this.expirationDangerAlert = data['USER_PWD_EXPIRATION_WARNING_2'];\n    });\n  }\n\n  getUsers() {\n    this.userService.list().subscribe((users: Array<any>) => {\n      users.forEach((user) => {\n        user['remainingTimeWithoutSeconds'] = 0;\n        if (user['pwdExpirationDate'] && user['pwdExpirationDate'] > 0) {\n          user['pwdExpirationDate'] = user['pwdExpirationDate'] * 1000;\n          user['remainingTimeWithoutSeconds'] = this.getRemainingTimeWithoutSeconds(\n            user.pwdExpirationDate\n          );\n          user['remainingDays'] = this.getRemainingDays(user.pwdExpirationDate);\n        }\n      });\n      this.users = users;\n    });\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteUser(username: string) {\n    this.userService.delete(username).subscribe(\n      () => {\n        this.getUsers();\n        this.modalRef.close();\n        this.notificationService.show(\n          NotificationType.success,\n          $localize`Deleted user '${username}'`\n        );\n      },\n      () => {\n        this.modalRef.componentInstance.stopLoadingSpinner();\n      }\n    );\n  }\n\n  deleteUserModal() {\n    const sessionUsername = this.authStorageService.getUsername();\n    const username = this.selection.first().username;\n    if (sessionUsername === username) {\n      this.notificationService.show(\n        NotificationType.error,\n        $localize`Failed to delete user '${username}'`,\n        $localize`You are currently logged in as '${username}'.`\n      );\n      return;\n    }\n\n    this.modalRef = this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: 'User',\n      itemNames: [username],\n      submitAction: () => this.deleteUser(username)\n    });\n  }\n\n  getWarningIconClass(expirationDays: number): any {\n    if (expirationDays === null || this.expirationWarningAlert > 10) {\n      return '';\n    }\n    const remainingDays = this.getRemainingDays(expirationDays);\n    if (remainingDays <= this.expirationDangerAlert) {\n      return 'icon-danger-color';\n    } else {\n      return 'icon-warning-color';\n    }\n  }\n\n  getWarningClass(expirationDays: number): any {\n    if (expirationDays === null || this.expirationWarningAlert > 10) {\n      return '';\n    }\n    const remainingDays = this.getRemainingDays(expirationDays);\n    if (remainingDays <= this.expirationDangerAlert) {\n      return 'border-danger';\n    } else {\n      return 'border-warning';\n    }\n  }\n\n  getRemainingDays(time: number): number {\n    if (time === undefined || time == null) {\n      return undefined;\n    }\n    if (time < 0) {\n      return 0;\n    }\n    const toDays = 1000 * 60 * 60 * 24;\n    return Math.max(0, Math.floor(this.getRemainingTime(time) / toDays));\n  }\n\n  getRemainingTimeWithoutSeconds(time: number): number {\n    const withSeconds = this.getRemainingTime(time);\n    return Math.floor(withSeconds / (1000 * 60)) * 60 * 1000;\n  }\n\n  getRemainingTime(time: number): number {\n    return time - Date.now();\n  }\n}\n","<cd-user-tabs></cd-user-tabs>\n\n<cd-table [data]=\"users\"\n          columnMode=\"flex\"\n          [columns]=\"columns\"\n          identifier=\"username\"\n          selectionType=\"single\"\n          (fetchData)=\"getUsers()\"\n          (updateSelection)=\"updateSelection($event)\">\n  <cd-table-actions class=\"table-actions\"\n                    [permission]=\"permission\"\n                    [selection]=\"selection\"\n                    [tableActions]=\"tableActions\">\n  </cd-table-actions>\n</cd-table>\n\n<ng-template #userRolesTpl\n             let-value=\"value\">\n  <span *ngFor=\"let role of value; last as isLast\">\n    {{ role }}{{ !isLast ? \", \" : \"\" }}\n  </span>\n</ng-template>\n\n<ng-template #warningTpl\n             let-column=\"column\"\n             let-value=\"value\"\n             let-row=\"row\">\n  <div [class.border-danger]=\"row.remainingDays < this.expirationDangerAlert\"\n       [class.border-warning]=\"row.remainingDays < this.expirationWarningAlert && row.remainingDays >= this.expirationDangerAlert\"\n       class=\"border-margin\">\n    <div class=\"warning-content\"> {{ value }} </div>\n  </div>\n</ng-template>\n\n<ng-template #durationTpl\n             let-column=\"column\"\n             let-value=\"value\"\n             let-row=\"row\">\n  <i *ngIf=\"row.remainingDays < this.expirationWarningAlert\"\n     i18n-title\n     title=\"User's password is about to expire\"\n     [class.icon-danger-color]=\"row.remainingDays < this.expirationDangerAlert\"\n     [class.icon-warning-color]=\"row.remainingDays < this.expirationWarningAlert && row.remainingDays >= this.expirationDangerAlert\"\n     class=\"{{ icons.warning }}\"></i>\n  <span title=\"{{ value | cdDate }}\">{{ row.remainingTimeWithoutSeconds / 1000 | duration }}</span>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport _ from 'lodash';\n\nimport { UserService } from '~/app/shared/api/user.service';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { PasswordPolicyService } from '~/app/shared/services/password-policy.service';\n\n@Component({\n  selector: 'cd-user-password-form',\n  templateUrl: './user-password-form.component.html',\n  styleUrls: ['./user-password-form.component.scss']\n})\nexport class UserPasswordFormComponent {\n  userForm: CdFormGroup;\n  action: string;\n  resource: string;\n  passwordPolicyHelpText = '';\n  passwordStrengthLevelClass: string;\n  passwordValuation: string;\n  icons = Icons;\n\n  constructor(\n    public actionLabels: ActionLabelsI18n,\n    public notificationService: NotificationService,\n    public userService: UserService,\n    public authStorageService: AuthStorageService,\n    public formBuilder: CdFormBuilder,\n    public router: Router,\n    public passwordPolicyService: PasswordPolicyService\n  ) {\n    this.action = this.actionLabels.CHANGE;\n    this.resource = $localize`password`;\n    this.createForm();\n  }\n\n  createForm() {\n    this.passwordPolicyService.getHelpText().subscribe((helpText: string) => {\n      this.passwordPolicyHelpText = helpText;\n    });\n    this.userForm = this.formBuilder.group(\n      {\n        oldpassword: [\n          null,\n          [\n            Validators.required,\n            CdValidators.custom('notmatch', () => {\n              return (\n                this.userForm &&\n                this.userForm.getValue('newpassword') === this.userForm.getValue('oldpassword')\n              );\n            })\n          ]\n        ],\n        newpassword: [\n          null,\n          [\n            Validators.required,\n            CdValidators.custom('notmatch', () => {\n              return (\n                this.userForm &&\n                this.userForm.getValue('oldpassword') === this.userForm.getValue('newpassword')\n              );\n            })\n          ],\n          [\n            CdValidators.passwordPolicy(\n              this.userService,\n              () => this.authStorageService.getUsername(),\n              (_valid: boolean, credits: number, valuation: string) => {\n                this.passwordStrengthLevelClass = this.passwordPolicyService.mapCreditsToCssClass(\n                  credits\n                );\n                this.passwordValuation = _.defaultTo(valuation, '');\n              }\n            )\n          ]\n        ],\n        confirmnewpassword: [null, [Validators.required]]\n      },\n      {\n        validators: [CdValidators.match('newpassword', 'confirmnewpassword')]\n      }\n    );\n  }\n\n  onSubmit() {\n    if (this.userForm.pristine) {\n      return;\n    }\n    const username = this.authStorageService.getUsername();\n    const oldPassword = this.userForm.getValue('oldpassword');\n    const newPassword = this.userForm.getValue('newpassword');\n    this.userService.changePassword(username, oldPassword, newPassword).subscribe(\n      () => this.onPasswordChange(),\n      () => {\n        this.userForm.setErrors({ cdSubmitButton: true });\n      }\n    );\n  }\n\n  /**\n   * The function that is called after the password has been changed.\n   * Override this in derived classes to change the behaviour.\n   */\n  onPasswordChange() {\n    this.notificationService.show(NotificationType.success, $localize`Updated user password\"`);\n    this.router.navigate(['/login']);\n  }\n}\n","<div class=\"cd-col-form\">\n  <form #frm=\"ngForm\"\n        [formGroup]=\"userForm\"\n        novalidate>\n    <div class=\"card\">\n      <div i18n=\"form title\"\n           class=\"card-header\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n\n      <div class=\"card-body\">\n        <!-- Old password -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"oldpassword\"\n                 i18n>Old password</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input class=\"form-control\"\n                     type=\"password\"\n                     placeholder=\"Old password...\"\n                     id=\"oldpassword\"\n                     formControlName=\"oldpassword\"\n                     autocomplete=\"new-password\"\n                     autofocus>\n              <button class=\"btn btn-light\"\n                      cdPasswordButton=\"oldpassword\">\n              </button>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('oldpassword', frm, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('oldpassword', frm, 'notmatch')\"\n                  i18n>The old and new passwords must be different.</span>\n          </div>\n        </div>\n\n        <!-- New password -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"newpassword\">\n            <span class=\"required\"\n                  i18n>New password</span>\n            <cd-helper *ngIf=\"passwordPolicyHelpText.length > 0\"\n                       class=\"text-pre-wrap\"\n                       html=\"{{ passwordPolicyHelpText }}\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input class=\"form-control\"\n                     type=\"password\"\n                     placeholder=\"Password...\"\n                     id=\"newpassword\"\n                     autocomplete=\"new-password\"\n                     formControlName=\"newpassword\">\n              <button type=\"button\"\n                      class=\"btn btn-light\"\n                      cdPasswordButton=\"newpassword\">\n              </button>\n            </div>\n            <div class=\"password-strength-level\">\n              <div class=\"{{ passwordStrengthLevelClass }}\"\n                   data-toggle=\"tooltip\"\n                   title=\"{{ passwordValuation }}\">\n              </div>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('newpassword', frm, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('newpassword', frm, 'notmatch')\"\n                  i18n>The old and new passwords must be different.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('newpassword', frm, 'passwordPolicy')\">\n              {{ passwordValuation }}\n            </span>\n          </div>\n        </div>\n\n        <!-- Confirm new password -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"confirmnewpassword\"\n                 i18n>Confirm new password</label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input class=\"form-control\"\n                     type=\"password\"\n                     autocomplete=\"new-password\"\n                     placeholder=\"Confirm new password...\"\n                     id=\"confirmnewpassword\"\n                     formControlName=\"confirmnewpassword\">\n              <button class=\"btn btn-light\"\n                      cdPasswordButton=\"confirmnewpassword\">\n              </button>\n            </div>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('confirmnewpassword', frm, 'required')\"\n                  i18n>This field is required.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"userForm.showError('confirmnewpassword', frm, 'match')\"\n                  i18n>Password confirmation doesn't match the new password.</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"userForm\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'cd-user-tabs',\n  templateUrl: './user-tabs.component.html',\n  styleUrls: ['./user-tabs.component.scss']\n})\nexport class UserTabsComponent {\n  url: string;\n\n  constructor(public router: Router) {}\n}\n","<ul class=\"nav nav-tabs\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/user-management/users\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       [routerLinkActiveOptions]=\"{exact: true}\"\n       i18n>Users</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n       routerLink=\"/user-management/roles\"\n       routerLinkActive=\"active\"\n       ariaCurrentWhenActive=\"page\"\n       [routerLinkActiveOptions]=\"{exact: true}\"\n       i18n>Roles</a>\n  </li>\n</ul>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\n\nimport { NEVER, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { RgwDaemon } from '~/app/ceph/rgw/models/rgw-daemon';\nimport { RgwDaemonService } from '~/app/shared/api/rgw-daemon.service';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport {\n  FeatureTogglesMap$,\n  FeatureTogglesService\n} from '~/app/shared/services/feature-toggles.service';\nimport { TimerService } from '~/app/shared/services/timer.service';\n\n@Component({\n  selector: 'cd-context',\n  templateUrl: './context.component.html',\n  styleUrls: ['./context.component.scss']\n})\nexport class ContextComponent implements OnInit, OnDestroy {\n  readonly REFRESH_INTERVAL = 5000;\n  private subs = new Subscription();\n  private rgwUrlPrefix = '/rgw';\n  permissions: Permissions;\n  featureToggleMap$: FeatureTogglesMap$;\n  isRgwRoute = document.location.href.includes(this.rgwUrlPrefix);\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private featureToggles: FeatureTogglesService,\n    private router: Router,\n    private timerService: TimerService,\n    public rgwDaemonService: RgwDaemonService\n  ) {}\n\n  ngOnInit() {\n    this.permissions = this.authStorageService.getPermissions();\n    this.featureToggleMap$ = this.featureToggles.get();\n    // Check if route belongs to RGW:\n    this.subs.add(\n      this.router.events\n        .pipe(filter((event: Event) => event instanceof NavigationEnd))\n        .subscribe(() => (this.isRgwRoute = this.router.url.startsWith(this.rgwUrlPrefix)))\n    );\n    // Set daemon list polling only when in RGW route:\n    this.subs.add(\n      this.timerService\n        .get(() => (this.isRgwRoute ? this.rgwDaemonService.list() : NEVER), this.REFRESH_INTERVAL)\n        .subscribe()\n    );\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  onDaemonSelection(daemon: RgwDaemon) {\n    this.rgwDaemonService.selectDaemon(daemon);\n    this.reloadData();\n  }\n\n  private reloadData() {\n    const currentUrl = this.router.url;\n    this.router.navigateByUrl(this.rgwUrlPrefix, { skipLocationChange: true }).finally(() => {\n      this.router.navigate([currentUrl]);\n    });\n  }\n}\n","<ng-container *ngIf=\"{ ftMap: featureToggleMap$ | async, daemons: rgwDaemonService.daemons$ | async, selectedDaemon: rgwDaemonService.selectedDaemon$ | async } as data\">\n  <ng-container *ngIf=\"data.ftMap && data.ftMap.rgw && permissions.rgw.read && isRgwRoute && data.daemons.length > 1\">\n    <div class=\"cd-context-bar pt-3 pb-3\">\n      <span class=\"me-1\"\n            i18n>Selected Object Gateway:</span>\n      <div ngbDropdown\n           placement=\"bottom-left\"\n           class=\"d-inline-block ms-2\">\n        <button ngbDropdownToggle\n                class=\"btn btn-outline-info ctx-bar-selected-rgw-daemon\"\n                i18n-title\n                title=\"Select Object Gateway\">\n          {{ data.selectedDaemon.id }} ( {{ data.selectedDaemon.zonegroup_name }} )\n        </button>\n        <div ngbDropdownMenu>\n          <ng-container *ngFor=\"let daemon of data.daemons\">\n            <button ngbDropdownItem\n                    class=\"ctx-bar-available-rgw-daemon\"\n                    (click)=\"onDaemonSelection(daemon)\">\n              {{ daemon.id }} ( {{ daemon.zonegroup_name }} )\n            </button>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BlockUIModule } from 'ng-block-ui';\n\nimport { ContextComponent } from '~/app/core/context/context.component';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { ErrorComponent } from './error/error.component';\nimport { BlankLayoutComponent } from './layouts/blank-layout/blank-layout.component';\nimport { LoginLayoutComponent } from './layouts/login-layout/login-layout.component';\nimport { WorkbenchLayoutComponent } from './layouts/workbench-layout/workbench-layout.component';\nimport { NavigationModule } from './navigation/navigation.module';\n\n@NgModule({\n  imports: [\n    BlockUIModule.forRoot(),\n    CommonModule,\n    NavigationModule,\n    NgbDropdownModule,\n    RouterModule,\n    SharedModule\n  ],\n  exports: [NavigationModule],\n  declarations: [\n    ContextComponent,\n    WorkbenchLayoutComponent,\n    BlankLayoutComponent,\n    LoginLayoutComponent,\n    ErrorComponent\n  ]\n})\nexport class CoreModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router, RouterEvent } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { DocService } from '~/app/shared/services/doc.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'cd-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnDestroy, OnInit {\n  header: string;\n  message: string;\n  section: string;\n  section_info: string;\n  button_name: string;\n  button_route: string;\n  icon: string;\n  docUrl: string;\n  source: string;\n  routerSubscription: Subscription;\n  uiConfig: string;\n  uiApiPath: string;\n  buttonRoute: string;\n  buttonName: string;\n  buttonTitle: string;\n  component: string;\n\n  constructor(\n    private router: Router,\n    private docService: DocService,\n    private http: HttpClient,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit() {\n    this.fetchData();\n    this.routerSubscription = this.router.events\n      .pipe(filter((event: RouterEvent) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.fetchData();\n      });\n  }\n\n  doConfigure() {\n    this.http.post(`ui-api/${this.uiApiPath}/configure`, {}).subscribe({\n      next: () => {\n        this.notificationService.show(NotificationType.info, `Configuring ${this.component}`);\n      },\n      error: (error: any) => {\n        this.notificationService.show(NotificationType.error, error);\n      },\n      complete: () => {\n        setTimeout(() => {\n          this.router.navigate([this.uiApiPath]);\n          this.notificationService.show(NotificationType.success, `Configured ${this.component}`);\n        }, 3000);\n      }\n    });\n  }\n\n  @HostListener('window:beforeunload', ['$event']) unloadHandler(event: Event) {\n    event.returnValue = false;\n  }\n\n  fetchData() {\n    try {\n      this.router.onSameUrlNavigation = 'reload';\n      this.message = history.state.message;\n      this.header = history.state.header;\n      this.section = history.state.section;\n      this.section_info = history.state.section_info;\n      this.button_name = history.state.button_name;\n      this.button_route = history.state.button_route;\n      this.icon = history.state.icon;\n      this.source = history.state.source;\n      this.uiConfig = history.state.uiConfig;\n      this.uiApiPath = history.state.uiApiPath;\n      this.buttonRoute = history.state.button_route;\n      this.buttonName = history.state.button_name;\n      this.buttonTitle = history.state.button_title;\n      this.component = history.state.component;\n      this.docUrl = this.docService.urlGenerator(this.section);\n    } catch (error) {\n      this.router.navigate(['/error']);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.routerSubscription) {\n      this.routerSubscription.unsubscribe();\n    }\n  }\n}\n","<head>\n  <title>Error Page</title>\n  <base target=\"_blank\">\n</head>\n<div class=\"container h-75\">\n  <div class=\"row h-100 justify-content-center align-items-center\">\n    <div class=\"blank-page\">\n      <div *ngIf=\"header && message; else elseBlock\">\n        <i [ngClass]=\"icon\"\n           class=\"mx-auto d-block\"></i>\n\n        <div class=\"mt-4 text-center\">\n          <h3><b>{{ header }}</b></h3>\n          <h4 class=\"mt-3\"\n              *ngIf=\"header !== message\">{{ message }}</h4>\n          <h4 *ngIf=\"section\"\n              i18n>Please consult the <a href=\"{{ docUrl }}\">documentation</a> on how to configure and enable\n                   the {{ sectionInfo }} management functionality.\n          </h4>\n        </div>\n      </div>\n\n      <div class=\"mt-4\">\n        <div class=\"text-center\"\n             *ngIf=\"(buttonName && buttonRoute) || uiConfig; else dashboardButton\">\n          <button class=\"btn btn-primary\"\n                  [routerLink]=\"buttonRoute\"\n                  *ngIf=\"!uiConfig; else configureButtonTpl\"\n                  i18n>{{ buttonName }}</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #configureButtonTpl>\n  <button class=\"btn btn-primary\"\n          (click)=\"doConfigure()\"\n          [attr.title]=\"buttonTitle\"\n          *ngIf=\"uiConfig\"\n          i18n>{{ buttonName }}</button>\n</ng-template>\n\n\n<ng-template #elseBlock>\n  <i class=\"fa fa-exclamation-triangle mx-auto d-block text-danger\"></i>\n\n  <div class=\"mt-4 text-center\">\n    <h3 i18n><b>Page not Found</b></h3>\n\n    <h4 class=\"mt-4\"\n        i18n>Sorry, we couldn’t find what you were looking for.\n             The page you requested may have been changed or moved.</h4>\n  </div>\n</ng-template>\n\n<ng-template #dashboardButton>\n  <div class=\"mt-4 text-center\">\n    <button class=\"btn btn-primary\"\n            [routerLink]=\"'/dashboard'\"\n            i18n>Go To Dashboard</button>\n  </div>\n</ng-template>\n","import { Icons } from '~/app/shared/enum/icons.enum';\n\nexport class DashboardError extends Error {\n  header: string;\n  message: string;\n  icon: string;\n}\n\nexport class DashboardNotFoundError extends DashboardError {\n  header = $localize`Page Not Found`;\n  message = $localize`Sorry, we couldn’t find what you were looking for.\n  The page you requested may have been changed or moved.`;\n  icon = Icons.warning;\n}\n\nexport class DashboardForbiddenError extends DashboardError {\n  header = $localize`Access Denied`;\n  message = $localize`Sorry, you don’t have permission to view this page or resource.`;\n  icon = Icons.lock;\n}\n\nexport class DashboardUserDeniedError extends DashboardError {\n  header = $localize`User Denied`;\n  message = $localize`Sorry, the user does not exist in Ceph.\n  You'll be logged out from the Identity Provider when you retry logging in.`;\n  icon = Icons.warning;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cd-blank-layout',\n  templateUrl: './blank-layout.component.html',\n  styleUrls: ['./blank-layout.component.scss']\n})\nexport class BlankLayoutComponent {}\n","<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cd-login-layout',\n  templateUrl: './login-layout.component.html',\n  styleUrls: ['./login-layout.component.scss']\n})\nexport class LoginLayoutComponent {\n  docItems: any[] = [\n    { section: 'help', text: $localize`Help` },\n    { section: 'security', text: $localize`Security` },\n    { section: 'trademarks', text: $localize`Trademarks` }\n  ];\n}\n","<main class=\"login full-height\">\n  <header>\n    <nav class=\"navbar p-4\">\n      <a class=\"navbar-brand\"></a>\n      <div class=\"form-inline\">\n        <cd-language-selector></cd-language-selector>\n      </div>\n    </nav>\n  </header>\n  <section>\n    <div class=\"container\">\n      <div class=\"row full-height\">\n        <div class=\"col-sm-12 col-md-6 d-sm-block login-form\">\n          <router-outlet></router-outlet>\n        </div>\n        <div class=\"col-sm-12 col-md-6 d-sm-block branding-info\">\n          <img src=\"assets/Ceph_Ceph_Logo_with_text_white.svg\"\n               alt=\"Ceph\"\n               class=\"img-fluid pb-3\">\n          <ul class=\"list-inline\">\n            <li class=\"list-inline-item p-3\"\n                *ngFor=\"let docItem of docItems\">\n              <cd-doc section=\"{{ docItem.section }}\"\n                      docText=\"{{ docItem.text }}\"\n                      noSubscribe=\"true\"\n                      i18n-docText></cd-doc>\n            </li>\n          </ul>\n          <cd-custom-login-banner></cd-custom-login-banner>\n        </div>\n      </div>\n    </div>\n  </section>\n</main>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { FaviconService } from '~/app/shared/services/favicon.service';\nimport { SummaryService } from '~/app/shared/services/summary.service';\nimport { TaskManagerService } from '~/app/shared/services/task-manager.service';\n\n@Component({\n  selector: 'cd-workbench-layout',\n  templateUrl: './workbench-layout.component.html',\n  styleUrls: ['./workbench-layout.component.scss'],\n  providers: [FaviconService]\n})\nexport class WorkbenchLayoutComponent implements OnInit, OnDestroy {\n  private subs = new Subscription();\n\n  constructor(\n    private router: Router,\n    private summaryService: SummaryService,\n    private taskManagerService: TaskManagerService,\n    private faviconService: FaviconService\n  ) {}\n\n  ngOnInit() {\n    this.subs.add(this.summaryService.startPolling());\n    this.subs.add(this.taskManagerService.init(this.summaryService));\n    this.faviconService.init();\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  isDashboardPage() {\n    return this.router.url === '/dashboard';\n  }\n}\n","<block-ui>\n  <cd-navigation>\n    <div class=\"container-fluid h-100\"\n         [ngClass]=\"{'dashboard':isDashboardPage()} \">\n      <cd-context></cd-context>\n      <cd-breadcrumbs></cd-breadcrumbs>\n      <router-outlet></router-outlet>\n    </div>\n  </cd-navigation>\n</block-ui>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { detect } from 'detect-browser';\nimport { Subscription } from 'rxjs';\n\nimport { UserService } from '~/app/shared/api/user.service';\nimport { AppConstants } from '~/app/shared/constants/app.constants';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { SummaryService } from '~/app/shared/services/summary.service';\n\n@Component({\n  selector: 'cd-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit, OnDestroy {\n  modalVariables: any;\n  versionNumber: string;\n  versionHash: string;\n  versionName: string;\n  subs: Subscription;\n  userPermission: Permission;\n  projectConstants: typeof AppConstants;\n  hostAddr: string;\n  copyright: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private summaryService: SummaryService,\n    private userService: UserService,\n    private authStorageService: AuthStorageService\n  ) {\n    this.userPermission = this.authStorageService.getPermissions().user;\n  }\n\n  ngOnInit() {\n    this.projectConstants = AppConstants;\n    this.hostAddr = window.location.hostname;\n    this.modalVariables = this.setVariables();\n    this.subs = this.summaryService.subscribe((summary) => {\n      const version = summary.version.replace('ceph version ', '').split(' ');\n      this.hostAddr = summary.mgr_host.replace(/(^\\w+:|^)\\/\\//, '').replace(/\\/$/, '');\n      this.versionNumber = version[0];\n      this.versionHash = version[1];\n      this.versionName = version.slice(2, version.length).join(' ');\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  setVariables() {\n    const project = {} as any;\n    project.user = localStorage.getItem('dashboard_username');\n    project.role = 'user';\n    if (this.userPermission.read) {\n      this.userService.get(project.user).subscribe((data: any) => {\n        project.role = data.roles;\n      });\n    }\n    const browser = detect();\n    project.browserName = browser && browser.name ? browser.name : 'Not detected';\n    project.browserVersion = browser && browser.version ? browser.version : 'Not detected';\n    project.browserOS = browser && browser.os ? browser.os : 'Not detected';\n    return project;\n  }\n}\n","<div class=\"about-container\">\n  <div class=\"modal-header\">\n    <button type=\"button\"\n            class=\"btn-close float-end\"\n            aria-label=\"Close\"\n            (click)=\"activeModal.close()\">\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <img src=\"assets/Ceph_Ceph_Logo_with_text_red_white.svg\"\n         class=\"ceph-logo\"\n         alt=\"{{ projectConstants.organization }}\">\n    <h3>\n      <strong>{{ projectConstants.projectName }}</strong>\n    </h3>\n    <div class=\"product-versions\">\n      <strong>Version</strong>\n      <br>\n      {{ versionNumber }}\n      {{ versionHash }}\n      <br>\n      {{ versionName }}\n    </div>\n    <br>\n    <dl>\n      <dt>Ceph Manager</dt>\n      <dd>{{ hostAddr }}</dd>\n      <dt>User</dt>\n      <dd>{{ modalVariables.user }}</dd>\n      <dt>User Role</dt>\n      <dd>{{ modalVariables.role }}</dd>\n      <dt>Browser</dt>\n      <dd>{{ modalVariables.browserName }}</dd>\n      <dt>Browser Version</dt>\n      <dd>{{ modalVariables.browserVersion }}</dd>\n      <dt>Browser OS</dt>\n      <dd>{{ modalVariables.browserOS }}</dd>\n    </dl>\n  </div>\n  <div class=\"modal-footer\">\n    <div class=\"text-left\">\n      {{ projectConstants.copyright }}\n      {{ projectConstants.license }}\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.scss']\n})\nexport class AdministrationComponent {\n  userPermission: Permission;\n  configOptPermission: Permission;\n  icons = Icons;\n\n  constructor(private authStorageService: AuthStorageService) {\n    const permissions = this.authStorageService.getPermissions();\n    this.userPermission = permissions.user;\n    this.configOptPermission = permissions.configOpt;\n  }\n}\n","<div ngbDropdown\n     placement=\"bottom-right\"\n     *ngIf=\"userPermission.read\">\n  <a ngbDropdownToggle\n     class=\"dropdown-toggle\"\n     i18n-title\n     title=\"Dashboard Settings\"\n     role=\"button\">\n    <i [ngClass]=\"[icons.deepCheck]\"></i>\n    <span i18n\n          class=\"d-md-none\">Dashboard Settings</span>\n  </a>\n  <div ngbDropdownMenu>\n    <button ngbDropdownItem\n            *ngIf=\"userPermission.read\"\n            routerLink=\"/user-management\"\n            i18n>User management</button>\n    <button ngbDropdownItem\n            *ngIf=\"configOptPermission.read\"\n            routerLink=\"/telemetry\"\n            i18n>Telemetry configuration</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport SwaggerUI from 'swagger-ui';\n\n@Component({\n  selector: 'cd-api-docs',\n  templateUrl: './api-docs.component.html',\n  styleUrls: ['./api-docs.component.scss']\n})\nexport class ApiDocsComponent implements OnInit {\n  ngOnInit(): void {\n    SwaggerUI({\n      url: window.location.origin + '/docs/openapi.json',\n      dom_id: '#swagger-ui',\n      layout: 'BaseLayout'\n    });\n  }\n}\n","\n<div id=\"swagger-ui\"\n     class=\"apiDocs\"></div>\n","/*\nThe MIT License\n\nCopyright (c) 2017 (null) McNull https://github.com/McNull\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n */\n\nimport { Component, Injector, OnDestroy } from '@angular/core';\nimport { ActivatedRouteSnapshot, NavigationEnd, NavigationStart, Router } from '@angular/router';\n\nimport { concat, from, Observable, of, Subscription } from 'rxjs';\nimport { distinct, filter, first, mergeMap, toArray } from 'rxjs/operators';\n\nimport { BreadcrumbsResolver, IBreadcrumb } from '~/app/shared/models/breadcrumbs';\n\n@Component({\n  selector: 'cd-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss']\n})\nexport class BreadcrumbsComponent implements OnDestroy {\n  crumbs: IBreadcrumb[] = [];\n  /**\n   * Useful for e2e tests.\n   * This allow us to mark the breadcrumb as pending during the navigation from\n   * one page to another.\n   * This resolves the problem of validating the breadcrumb of a new page and\n   * still get the value from the previous\n   */\n  finished = false;\n  subscription: Subscription;\n  private defaultResolver = new BreadcrumbsResolver();\n\n  constructor(private router: Router, private injector: Injector) {\n    this.subscription = this.router.events\n      .pipe(filter((x) => x instanceof NavigationStart))\n      .subscribe(() => {\n        this.finished = false;\n      });\n\n    this.subscription = this.router.events\n      .pipe(filter((x) => x instanceof NavigationEnd))\n      .subscribe(() => {\n        const currentRoot = router.routerState.snapshot.root;\n\n        this._resolveCrumbs(currentRoot)\n          .pipe(\n            mergeMap((x) => x),\n            distinct((x) => x.text),\n            toArray(),\n            mergeMap((x) => {\n              const y = this.postProcess(x);\n              return this.wrapIntoObservable<IBreadcrumb[]>(y).pipe(first());\n            })\n          )\n          .subscribe((x) => {\n            this.finished = true;\n            this.crumbs = x;\n          });\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private _resolveCrumbs(route: ActivatedRouteSnapshot): Observable<IBreadcrumb[]> {\n    let crumbs$: Observable<IBreadcrumb[]>;\n\n    const data = route.routeConfig && route.routeConfig.data;\n\n    if (data && data.breadcrumbs) {\n      let resolver: BreadcrumbsResolver;\n\n      if (data.breadcrumbs.prototype instanceof BreadcrumbsResolver) {\n        resolver = this.injector.get<BreadcrumbsResolver>(data.breadcrumbs);\n      } else {\n        resolver = this.defaultResolver;\n      }\n\n      const result = resolver.resolve(route);\n      crumbs$ = this.wrapIntoObservable<IBreadcrumb[]>(result).pipe(first());\n    } else {\n      crumbs$ = of([]);\n    }\n\n    if (route.firstChild) {\n      crumbs$ = concat<IBreadcrumb[]>(crumbs$, this._resolveCrumbs(route.firstChild));\n    }\n\n    return crumbs$;\n  }\n\n  postProcess(breadcrumbs: IBreadcrumb[]) {\n    const result: IBreadcrumb[] = [];\n    breadcrumbs.forEach((element) => {\n      const split = element.text.split('/');\n      if (split.length > 1) {\n        element.text = split[split.length - 1];\n        for (let i = 0; i < split.length - 1; i++) {\n          result.push({ text: split[i], path: null });\n        }\n      }\n      result.push(element);\n    });\n    return result;\n  }\n\n  isPromise(value: any): boolean {\n    return value && typeof value.then === 'function';\n  }\n\n  wrapIntoObservable<T>(value: T | Promise<T> | Observable<T>): Observable<T> {\n    if (value instanceof Observable) {\n      return value;\n    }\n\n    if (this.isPromise(value)) {\n      return from(Promise.resolve(value));\n    }\n\n    return of(value as T);\n  }\n}\n","<ol *ngIf=\"crumbs.length\"\n    class=\"breadcrumb\">\n  <li *ngFor=\"let crumb of crumbs; let last = last\"\n      [ngClass]=\"{ 'active': last && finished }\"\n      class=\"breadcrumb-item\">\n    <a *ngIf=\"!last && crumb.path !== null\"\n       [routerLink]=\"crumb.path\"\n       preserveFragment>{{ crumb.text }}</a>\n    <span *ngIf=\"last || crumb.path === null\">{{ crumb.text }}</span>\n  </li>\n</ol>\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\nimport { FeedbackComponent } from '~/app/ceph/shared/feedback/feedback.component';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { DocService } from '~/app/shared/services/doc.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { AboutComponent } from '../about/about.component';\n\n@Component({\n  selector: 'cd-dashboard-help',\n  templateUrl: './dashboard-help.component.html',\n  styleUrls: ['./dashboard-help.component.scss']\n})\nexport class DashboardHelpComponent implements OnInit {\n  docsUrl: string;\n  modalRef: NgbModalRef;\n  icons = Icons;\n  bsModalRef: NgbModalRef;\n\n  constructor(private modalService: ModalService, private docService: DocService) {}\n\n  ngOnInit() {\n    this.docService.subscribeOnce('dashboard', (url: string) => {\n      this.docsUrl = url;\n    });\n  }\n\n  openAboutModal() {\n    this.modalRef = this.modalService.show(AboutComponent, null, { size: 'lg' });\n  }\n\n  openFeedbackModal() {\n    this.bsModalRef = this.modalService.show(FeedbackComponent, null, { size: 'lg' });\n  }\n}\n","<div ngbDropdown\n     placement=\"bottom-right\">\n  <a ngbDropdownToggle\n     i18n-title\n     title=\"Help\"\n     role=\"button\">\n    <i [ngClass]=\"[icons.questionCircle]\"></i>\n    <span i18n\n          class=\"d-md-none\">Help</span>\n  </a>\n  <div ngbDropdownMenu>\n    <a ngbDropdownItem\n       class=\"text-capitalize\"\n       [ngClass]=\"{'disabled': !docsUrl}\"\n       href=\"{{ docsUrl }}\"\n       target=\"_blank\"\n       i18n>documentation</a>\n    <button ngbDropdownItem\n            routerLink=\"/api-docs\"\n            target=\"_blank\"\n            i18n>API</button>\n    <button ngbDropdownItem\n            (click)=\"openAboutModal()\"\n            i18n>About</button>\n    <button ngbDropdownItem\n            (click)=\"openFeedbackModal()\"\n            i18n>Report an issue...</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '~/app/shared/api/auth.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-identity',\n  templateUrl: './identity.component.html',\n  styleUrls: ['./identity.component.scss']\n})\nexport class IdentityComponent implements OnInit {\n  sso: boolean;\n  username: string;\n  icons = Icons;\n\n  constructor(private authStorageService: AuthStorageService, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.username = this.authStorageService.getUsername();\n    this.sso = this.authStorageService.isSSO();\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","<div ngbDropdown\n     placement=\"bottom-right\">\n  <a ngbDropdownToggle\n     i18n-title\n     title=\"Logged in user\"\n     role=\"button\">\n    <i [ngClass]=\"[icons.user]\"></i>\n    <span i18n\n          class=\"d-md-none\">Logged in user</span>\n  </a>\n  <div ngbDropdownMenu>\n    <button ngbDropdownItem\n            disabled\n            i18n>Signed in as <strong>{{ username }}</strong></button>\n    <hr class=\"dropdown-divider\" />\n    <button ngbDropdownItem\n            *ngIf=\"!sso\"\n            routerLink=\"/user-profile/edit\">\n      <i [ngClass]=\"[icons.lock]\"></i>\n      <span i18n>Change password</span>\n    </button>\n    <button ngbDropdownItem\n            (click)=\"logout()\">\n      <i [ngClass]=\"[icons.signOut]\"></i>\n      <span i18n>Sign out</span>\n    </button>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { NgbCollapseModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SimplebarAngularModule } from 'simplebar-angular';\n\nimport { AppRoutingModule } from '~/app/app-routing.module';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { AboutComponent } from './about/about.component';\nimport { AdministrationComponent } from './administration/administration.component';\nimport { ApiDocsComponent } from './api-docs/api-docs.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { DashboardHelpComponent } from './dashboard-help/dashboard-help.component';\nimport { IdentityComponent } from './identity/identity.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthModule,\n    NgbCollapseModule,\n    NgbDropdownModule,\n    AppRoutingModule,\n    SharedModule,\n    SimplebarAngularModule,\n    RouterModule\n  ],\n  declarations: [\n    AboutComponent,\n    ApiDocsComponent,\n    BreadcrumbsComponent,\n    NavigationComponent,\n    NotificationsComponent,\n    DashboardHelpComponent,\n    AdministrationComponent,\n    IdentityComponent\n  ],\n  exports: [NavigationComponent, BreadcrumbsComponent]\n})\nexport class NavigationModule {}\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { Subscription } from 'rxjs';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport {\n  FeatureTogglesMap$,\n  FeatureTogglesService\n} from '~/app/shared/services/feature-toggles.service';\nimport { MotdNotificationService } from '~/app/shared/services/motd-notification.service';\nimport { PrometheusAlertService } from '~/app/shared/services/prometheus-alert.service';\nimport { SummaryService } from '~/app/shared/services/summary.service';\nimport { TelemetryNotificationService } from '~/app/shared/services/telemetry-notification.service';\n\n@Component({\n  selector: 'cd-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n  notifications: string[] = [];\n  @HostBinding('class') get class(): string {\n    return 'top-notification-' + this.notifications.length;\n  }\n\n  permissions: Permissions;\n  enabledFeature$: FeatureTogglesMap$;\n  summaryData: any;\n  icons = Icons;\n\n  rightSidebarOpen = false; // rightSidebar only opens when width is less than 768px\n  showMenuSidebar = true;\n  displayedSubMenu = '';\n\n  simplebar = {\n    autoHide: false\n  };\n  private subs = new Subscription();\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private summaryService: SummaryService,\n    private featureToggles: FeatureTogglesService,\n    private telemetryNotificationService: TelemetryNotificationService,\n    public prometheusAlertService: PrometheusAlertService,\n    private motdNotificationService: MotdNotificationService\n  ) {\n    this.permissions = this.authStorageService.getPermissions();\n    this.enabledFeature$ = this.featureToggles.get();\n  }\n\n  ngOnInit() {\n    this.subs.add(\n      this.summaryService.subscribe((summary) => {\n        this.summaryData = summary;\n      })\n    );\n    /*\n     Note: If you're going to add more top notifications please do not forget to increase\n     the number of generated css-classes in section topNotification settings in the scss\n     file.\n     */\n    this.subs.add(\n      this.authStorageService.isPwdDisplayed$.subscribe((isDisplayed) => {\n        this.showTopNotification('isPwdDisplayed', isDisplayed);\n      })\n    );\n    this.subs.add(\n      this.telemetryNotificationService.update.subscribe((visible: boolean) => {\n        this.showTopNotification('telemetryNotificationEnabled', visible);\n      })\n    );\n    this.subs.add(\n      this.motdNotificationService.motd$.subscribe((motd: any) => {\n        this.showTopNotification('motdNotificationEnabled', _.isPlainObject(motd));\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  blockHealthColor() {\n    if (this.summaryData && this.summaryData.rbd_mirroring) {\n      if (this.summaryData.rbd_mirroring.errors > 0) {\n        return { color: '#f4926c' };\n      } else if (this.summaryData.rbd_mirroring.warnings > 0) {\n        return { color: '#f0ad4e' };\n      }\n    }\n\n    return undefined;\n  }\n\n  toggleSubMenu(menu: string) {\n    if (this.displayedSubMenu === menu) {\n      this.displayedSubMenu = '';\n    } else {\n      this.displayedSubMenu = menu;\n    }\n  }\n\n  toggleRightSidebar() {\n    this.rightSidebarOpen = !this.rightSidebarOpen;\n  }\n\n  showTopNotification(name: string, isDisplayed: boolean) {\n    if (isDisplayed) {\n      if (!this.notifications.includes(name)) {\n        this.notifications.push(name);\n      }\n    } else {\n      const index = this.notifications.indexOf(name);\n      if (index >= 0) {\n        this.notifications.splice(index, 1);\n      }\n    }\n  }\n}\n","<div class=\"cd-navbar-main\">\n  <cd-pwd-expiration-notification></cd-pwd-expiration-notification>\n  <cd-telemetry-notification></cd-telemetry-notification>\n  <cd-motd></cd-motd>\n  <cd-notifications-sidebar></cd-notifications-sidebar>\n  <div class=\"cd-navbar-top\">\n    <nav class=\"navbar navbar-expand-md navbar-dark cd-navbar-brand\">\n      <button class=\"btn btn-link py-0 ms-3\"\n              (click)=\"showMenuSidebar = !showMenuSidebar\"\n              aria-label=\"toggle sidebar visibility\">\n        <i class=\"fa fa-bars fa-2x\"\n           aria-hidden=\"true\"></i>\n      </button>\n\n      <a class=\"navbar-brand ms-2\"\n         href=\"#\">\n        <img src=\"assets/Ceph_Ceph_Logo_with_text_white.svg\"\n             alt=\"Ceph\" />\n      </a>\n\n      <button type=\"button\"\n              class=\"navbar-toggler\"\n              (click)=\"toggleRightSidebar()\">\n        <span i18n\n              class=\"sr-only\">Toggle navigation</span>\n        <span class=\"\">\n          <i class=\"fa fa-navicon fa-lg\"></i>\n        </span>\n      </button>\n\n      <div class=\"collapse navbar-collapse\"\n           [ngClass]=\"{'show': rightSidebarOpen}\">\n        <ul class=\"nav navbar-nav cd-navbar-utility my-2 my-md-0\">\n          <ng-container *ngTemplateOutlet=\"cd_utilities\"> </ng-container>\n        </ul>\n      </div>\n    </nav>\n  </div>\n\n  <div class=\"wrapper\">\n    <!-- Content -->\n    <nav id=\"sidebar\"\n         [ngClass]=\"{'active': !showMenuSidebar}\">\n      <ngx-simplebar [options]=\"simplebar\">\n        <ul class=\"list-unstyled components cd-navbar-primary\">\n          <ng-container *ngTemplateOutlet=\"cd_menu\"> </ng-container>\n        </ul>\n      </ngx-simplebar>\n    </nav>\n\n    <!-- Page Content -->\n    <div id=\"content\"\n         [ngClass]=\"{'active': !showMenuSidebar}\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n\n  <ng-template #cd_utilities>\n    <li class=\"nav-item\">\n      <cd-language-selector class=\"cd-navbar\"></cd-language-selector>\n    </li>\n    <li class=\"nav-item\">\n      <cd-notifications class=\"cd-navbar\"\n                        (click)=\"toggleRightSidebar()\"></cd-notifications>\n    </li>\n    <li class=\"nav-item\">\n      <cd-dashboard-help class=\"cd-navbar\"></cd-dashboard-help>\n    </li>\n    <li class=\"nav-item\">\n      <cd-administration class=\"cd-navbar\"></cd-administration>\n    </li>\n    <li class=\"nav-item\">\n      <cd-identity class=\"cd-navbar\"></cd-identity>\n    </li>\n  </ng-template>\n\n  <ng-template #cd_menu>\n    <ng-container *ngIf=\"enabledFeature$ | async as enabledFeature\">\n      <!-- Dashboard -->\n      <li routerLinkActive=\"active\"\n          class=\"nav-item tc_menuitem_dashboard\">\n        <a routerLink=\"/dashboard\"\n           class=\"nav-link\">\n          <span i18n>Dashboard</span>&nbsp;\n          <i [ngClass]=\"[icons.health]\"\n             [ngStyle]=\"summaryData?.health_status | healthColor\"></i>\n        </a>\n      </li>\n\n      <!-- Cluster -->\n      <li routerLinkActive=\"active\"\n          class=\"nav-item tc_menuitem_cluster\"\n          *ngIf=\"permissions.hosts.read || permissions.monitor.read ||\n          permissions.osd.read || permissions.configOpt.read ||\n          permissions.log.read || permissions.prometheus.read\">\n        <a (click)=\"toggleSubMenu('cluster')\"\n           class=\"nav-link dropdown-toggle\"\n           [attr.aria-expanded]=\"displayedSubMenu === 'cluster'\"\n           aria-controls=\"cluster-nav\"\n           role=\"button\">\n          <ng-container i18n>Cluster</ng-container>\n        </a>\n        <ul class=\"list-unstyled\"\n            id=\"cluster-nav\"\n            [ngbCollapse]=\"displayedSubMenu !== 'cluster'\">\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_hosts\"\n              *ngIf=\"permissions.hosts.read\">\n            <a i18n\n               routerLink=\"/hosts\">Hosts</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_cluster_inventory\"\n              *ngIf=\"permissions.hosts.read\">\n            <a i18n\n               routerLink=\"/inventory\">Physical Disks</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_cluster_monitor\"\n              *ngIf=\"permissions.monitor.read\">\n            <a i18n\n               routerLink=\"/monitor/\">Monitors</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_cluster_services\"\n              *ngIf=\"permissions.hosts.read\">\n            <a i18n\n               routerLink=\"/services/\">Services</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_osds\"\n              *ngIf=\"permissions.osd.read\">\n            <a i18n\n               routerLink=\"/osd\">OSDs</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_configuration\"\n              *ngIf=\"permissions.configOpt.read\">\n            <a i18n\n               routerLink=\"/configuration\">Configuration</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_crush\"\n              *ngIf=\"permissions.osd.read\">\n            <a i18n\n               routerLink=\"/crush-map\">CRUSH map</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_modules\"\n              *ngIf=\"permissions.configOpt.read\">\n            <a i18n\n               routerLink=\"/mgr-modules\">Manager Modules</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_log\"\n              *ngIf=\"permissions.log.read\">\n            <a i18n\n               routerLink=\"/logs\">Logs</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_monitoring\"\n              *ngIf=\"permissions.prometheus.read\">\n            <a routerLink=\"/monitoring\">\n              <ng-container i18n>Monitoring</ng-container>\n              <small *ngIf=\"prometheusAlertService.activeCriticalAlerts > 0\"\n                     class=\"badge badge-danger ms-1\">{{ prometheusAlertService.activeCriticalAlerts }}</small>\n              <small *ngIf=\"prometheusAlertService.activeWarningAlerts > 0\"\n                     class=\"badge badge-warning ms-1\">{{ prometheusAlertService.activeWarningAlerts }}</small>\n            </a>\n          </li>\n        </ul>\n      </li>\n\n      <!-- Pools -->\n      <li routerLinkActive=\"active\"\n          class=\"nav-item tc_menuitem_pool\"\n          *ngIf=\"permissions.pool.read\">\n        <a class=\"nav-link\"\n           i18n\n           routerLink=\"/pool\">Pools</a>\n      </li>\n\n      <!-- Block -->\n      <li routerLinkActive=\"active\"\n          class=\"nav-item tc_menuitem_block\"\n          *ngIf=\"(permissions.rbdImage.read || permissions.rbdMirroring.read || permissions.iscsi.read) &&\n          (enabledFeature.rbd || enabledFeature.mirroring || enabledFeature.iscsi)\">\n        <a class=\"nav-link dropdown-toggle\"\n           (click)=\"toggleSubMenu('block')\"\n           [attr.aria-expanded]=\"displayedSubMenu === 'block'\"\n           aria-controls=\"block-nav\"\n           role=\"button\"\n           [ngStyle]=\"blockHealthColor()\">\n          <ng-container i18n>Block</ng-container>\n        </a>\n\n        <ul class=\"list-unstyled\"\n            id=\"block-nav\"\n            [ngbCollapse]=\"displayedSubMenu !== 'block'\">\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_block_images\"\n              *ngIf=\"permissions.rbdImage.read && enabledFeature.rbd\">\n            <a i18n\n               routerLink=\"/block/rbd\">Images</a>\n          </li>\n\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_block_mirroring\"\n              *ngIf=\"permissions.rbdMirroring.read && enabledFeature.mirroring\">\n            <a routerLink=\"/block/mirroring\">\n              <ng-container i18n>Mirroring</ng-container>\n              <small *ngIf=\"summaryData?.rbd_mirroring?.warnings !== 0\"\n                     class=\"badge badge-warning\">{{ summaryData?.rbd_mirroring?.warnings }}</small>\n              <small *ngIf=\"summaryData?.rbd_mirroring?.errors !== 0\"\n                     class=\"badge badge-danger\">{{ summaryData?.rbd_mirroring?.errors }}</small>\n            </a>\n          </li>\n\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_block_iscsi\"\n              *ngIf=\"permissions.iscsi.read && enabledFeature.iscsi\">\n            <a i18n\n               routerLink=\"/block/iscsi\">iSCSI</a>\n          </li>\n        </ul>\n      </li>\n\n      <!-- NFS -->\n      <li routerLinkActive=\"active\"\n          class=\"nav-item tc_menuitem_nfs\"\n          *ngIf=\"permissions.nfs.read && enabledFeature.nfs\">\n        <a i18n\n           class=\"nav-link\"\n           routerLink=\"/nfs\">NFS</a>\n      </li>\n\n      <!-- Filesystem -->\n      <li routerLinkActive=\"active\"\n          class=\"nav-item tc_menuitem_cephfs\"\n          *ngIf=\"permissions.cephfs.read && enabledFeature.cephfs\">\n        <a i18n\n           class=\"nav-link\"\n           routerLink=\"/cephfs\">File Systems</a>\n      </li>\n\n      <!-- Object Gateway -->\n      <li routerLinkActive=\"active\"\n          class=\"nav-item tc_menuitem_rgw\"\n          *ngIf=\"permissions.rgw.read && enabledFeature.rgw\">\n        <a class=\"nav-link dropdown-toggle\"\n           (click)=\"toggleSubMenu('rgw')\"\n           [attr.aria-expanded]=\"displayedSubMenu === 'rgw'\"\n           aria-controls=\"gateway-nav\"\n           role=\"button\">\n          <ng-container i18n>Object Gateway</ng-container>\n        </a>\n        <ul class=\"list-unstyled\"\n            id=\"gateway-nav\"\n            [ngbCollapse]=\"displayedSubMenu !== 'rgw'\">\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_rgw_daemons\">\n            <a i18n\n               routerLink=\"/rgw/daemon\">Daemons</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_rgw_users\">\n            <a i18n\n               routerLink=\"/rgw/user\">Users</a>\n          </li>\n          <li routerLinkActive=\"active\"\n              class=\"tc_submenuitem tc_submenuitem_rgw_buckets\">\n            <a i18n\n               routerLink=\"/rgw/bucket\">Buckets</a>\n          </li>\n        </ul>\n      </li>\n    </ng-container>\n  </ng-template>\n\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdNotification } from '~/app/shared/models/cd-notification';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { SummaryService } from '~/app/shared/services/summary.service';\n\n@Component({\n  selector: 'cd-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit, OnDestroy {\n  icons = Icons;\n  hasRunningTasks = false;\n  hasNotifications = false;\n  private subs = new Subscription();\n\n  constructor(\n    public notificationService: NotificationService,\n    private summaryService: SummaryService\n  ) {}\n\n  ngOnInit() {\n    this.subs.add(\n      this.summaryService.subscribe((summary) => {\n        this.hasRunningTasks = summary.executing_tasks.length > 0;\n      })\n    );\n\n    this.subs.add(\n      this.notificationService.data$.subscribe((notifications: CdNotification[]) => {\n        this.hasNotifications = notifications.length > 0;\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  toggleSidebar() {\n    this.notificationService.toggleSidebar();\n  }\n}\n","<a i18n-title\n   title=\"Tasks and Notifications\"\n   [ngClass]=\"{ 'running': hasRunningTasks }\"\n   (click)=\"toggleSidebar()\">\n  <i [ngClass]=\"[icons.bell]\"></i>\n  <span class=\"dot\"\n        *ngIf=\"hasNotifications\">\n  </span>\n  <span class=\"d-md-none\"\n        i18n>Tasks and Notifications</span>\n</a>\n","export abstract class ApiClient {\n  getVersionHeaderValue(major: number, minor: number) {\n    return `application/vnd.ceph.api.v${major}.${minor}+json`;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Credentials } from '../models/credentials';\nimport { LoginResponse } from '../models/login-response';\nimport { AuthStorageService } from '../services/auth-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(\n    private authStorageService: AuthStorageService,\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  check(token: string) {\n    return this.http.post('api/auth/check', { token: token });\n  }\n\n  login(credentials: Credentials): Observable<LoginResponse> {\n    return this.http.post('api/auth', credentials).pipe(\n      tap((resp: LoginResponse) => {\n        this.authStorageService.set(\n          resp.username,\n          resp.permissions,\n          resp.sso,\n          resp.pwdExpirationDate,\n          resp.pwdUpdateRequired\n        );\n      })\n    );\n  }\n\n  logout(callback: Function = null) {\n    return this.http.post('api/auth/logout', null).subscribe((resp: any) => {\n      this.authStorageService.remove();\n      const url = _.get(this.route.snapshot.queryParams, 'returnUrl', '/login');\n      this.router.navigate([url], { skipLocationChange: true });\n      if (callback) {\n        callback();\n      }\n      window.location.replace(resp.redirect_url);\n    });\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { ApiClient } from '~/app/shared/api/api-client';\nimport { Daemon } from '../models/daemon.interface';\nimport { CephServiceSpec } from '../models/service.interface';\nimport { PaginateObservable } from './paginate.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CephServiceService extends ApiClient {\n  private url = 'api/service';\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  list(httpParams: HttpParams, serviceName?: string): PaginateObservable<CephServiceSpec[]> {\n    const options = {\n      headers: { Accept: this.getVersionHeaderValue(2, 0) },\n      params: httpParams\n    };\n    options['observe'] = 'response';\n    if (serviceName) {\n      options.params = options.params.append('service_name', serviceName);\n    }\n    return new PaginateObservable<CephServiceSpec[]>(\n      this.http.get<CephServiceSpec[]>(this.url, options)\n    );\n  }\n\n  getDaemons(serviceName?: string): Observable<Daemon[]> {\n    return this.http.get<Daemon[]>(`${this.url}/${serviceName}/daemons`);\n  }\n\n  create(serviceSpec: { [key: string]: any }) {\n    const serviceName = serviceSpec['service_id']\n      ? `${serviceSpec['service_type']}.${serviceSpec['service_id']}`\n      : serviceSpec['service_type'];\n    return this.http.post(\n      this.url,\n      {\n        service_name: serviceName,\n        service_spec: serviceSpec\n      },\n      { observe: 'response' }\n    );\n  }\n\n  update(serviceSpec: { [key: string]: any }) {\n    const serviceName = serviceSpec['service_id']\n      ? `${serviceSpec['service_type']}.${serviceSpec['service_id']}`\n      : serviceSpec['service_type'];\n    return this.http.put(\n      `${this.url}/${serviceName}`,\n      {\n        service_name: serviceName,\n        service_spec: serviceSpec\n      },\n      { observe: 'response' }\n    );\n  }\n\n  delete(serviceName: string) {\n    return this.http.delete(`${this.url}/${serviceName}`, { observe: 'response' });\n  }\n\n  getKnownTypes(): Observable<string[]> {\n    return this.http.get<string[]>(`${this.url}/known_types`);\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { cdEncode } from '../decorators/cd-encode';\nimport { CephfsDir, CephfsQuotas } from '../models/cephfs-directory-models';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class CephfsService {\n  baseURL = 'api/cephfs';\n  baseUiURL = 'ui-api/cephfs';\n\n  constructor(private http: HttpClient) {}\n\n  list() {\n    return this.http.get(`${this.baseURL}`);\n  }\n\n  lsDir(id: number, path?: string): Observable<CephfsDir[]> {\n    let apiPath = `${this.baseUiURL}/${id}/ls_dir?depth=2`;\n    if (path) {\n      apiPath += `&path=${encodeURIComponent(path)}`;\n    }\n    return this.http.get<CephfsDir[]>(apiPath);\n  }\n\n  getCephfs(id: number) {\n    return this.http.get(`${this.baseURL}/${id}`);\n  }\n\n  getTabs(id: number) {\n    return this.http.get(`ui-api/cephfs/${id}/tabs`);\n  }\n\n  getClients(id: number) {\n    return this.http.get(`${this.baseURL}/${id}/clients`);\n  }\n\n  evictClient(fsId: number, clientId: number) {\n    return this.http.delete(`${this.baseURL}/${fsId}/client/${clientId}`);\n  }\n\n  getMdsCounters(id: string) {\n    return this.http.get(`${this.baseURL}/${id}/mds_counters`);\n  }\n\n  mkSnapshot(id: number, path: string, name?: string) {\n    let params = new HttpParams();\n    params = params.append('path', path);\n    if (!_.isUndefined(name)) {\n      params = params.append('name', name);\n    }\n    return this.http.post(`${this.baseURL}/${id}/snapshot`, null, { params });\n  }\n\n  rmSnapshot(id: number, path: string, name: string) {\n    let params = new HttpParams();\n    params = params.append('path', path);\n    params = params.append('name', name);\n    return this.http.delete(`${this.baseURL}/${id}/snapshot`, { params });\n  }\n\n  quota(id: number, path: string, quotas: CephfsQuotas) {\n    let params = new HttpParams();\n    params = params.append('path', path);\n    return this.http.put(`${this.baseURL}/${id}/quota`, quotas, {\n      observe: 'response',\n      params\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClusterService {\n  baseURL = 'api/cluster';\n\n  constructor(private http: HttpClient) {}\n\n  getStatus(): Observable<string> {\n    return this.http.get<string>(`${this.baseURL}`, {\n      headers: { Accept: 'application/vnd.ceph.api.v0.1+json' }\n    });\n  }\n\n  updateStatus(status: string) {\n    return this.http.put(\n      `${this.baseURL}`,\n      { status: status },\n      { headers: { Accept: 'application/vnd.ceph.api.v0.1+json' } }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ConfigFormCreateRequestModel } from '~/app/ceph/cluster/configuration/configuration-form/configuration-form-create-request.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n  constructor(private http: HttpClient) {}\n\n  private findValue(config: any, section: string) {\n    if (!config.value) {\n      return undefined;\n    }\n    return config.value.find((v: any) => v.section === section);\n  }\n\n  getValue(config: any, section: string) {\n    let val = this.findValue(config, section);\n    if (!val) {\n      const indexOfDot = section.indexOf('.');\n      if (indexOfDot !== -1) {\n        val = this.findValue(config, section.substring(0, indexOfDot));\n      }\n    }\n    if (!val) {\n      val = this.findValue(config, 'global');\n    }\n    if (val) {\n      return val.value;\n    }\n    return config.default;\n  }\n\n  getConfigData() {\n    return this.http.get('api/cluster_conf/');\n  }\n\n  get(configOption: string) {\n    return this.http.get(`api/cluster_conf/${configOption}`);\n  }\n\n  filter(configOptionNames: Array<string>) {\n    return this.http.get(`api/cluster_conf/filter?names=${configOptionNames.join(',')}`);\n  }\n\n  create(configOption: ConfigFormCreateRequestModel) {\n    return this.http.post('api/cluster_conf/', configOption);\n  }\n\n  delete(configOption: string, section: string) {\n    return this.http.delete(`api/cluster_conf/${configOption}?section=${section}`);\n  }\n\n  bulkCreate(configOptions: object) {\n    return this.http.put('api/cluster_conf/', configOptions);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { CrushRuleConfig } from '../models/crush-rule';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrushRuleService {\n  apiPath = 'api/crush_rule';\n\n  formTooltips = {\n    // Copied from /doc/rados/operations/crush-map.rst\n    root: $localize`The name of the node under which data should be placed.`,\n    failure_domain: $localize`The type of CRUSH nodes across which we should separate replicas.`,\n    device_class: $localize`The device class data should be placed on.`\n  };\n\n  constructor(private http: HttpClient) {}\n\n  create(rule: CrushRuleConfig) {\n    return this.http.post(this.apiPath, rule, { observe: 'response' });\n  }\n\n  delete(name: string) {\n    return this.http.delete(`${this.apiPath}/${name}`, { observe: 'response' });\n  }\n\n  getInfo() {\n    return this.http.get(`ui-${this.apiPath}/info`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomLoginBannerService {\n  baseUiURL = 'ui-api/login/custom_banner';\n\n  constructor(private http: HttpClient) {}\n\n  getBannerText() {\n    return this.http.get<string>(this.baseUiURL);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { cdEncode } from '~/app/shared/decorators/cd-encode';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaemonService {\n  private url = 'api/daemon';\n\n  constructor(private http: HttpClient) {}\n\n  action(daemonName: string, actionType: string) {\n    return this.http.put(\n      `${this.url}/${daemonName}`,\n      {\n        action: actionType,\n        container_image: null\n      },\n      {\n        headers: { Accept: 'application/vnd.ceph.api.v0.1+json' },\n        observe: 'response'\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport * as _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n  constructor(private http: HttpClient) {}\n  baseUIURL = 'api/feedback';\n\n  isKeyExist() {\n    return this.http.get('ui-api/feedback/api_key/exist');\n  }\n\n  createIssue(\n    project: string,\n    tracker: string,\n    subject: string,\n    description: string,\n    apiKey: string\n  ) {\n    return this.http.post(\n      'api/feedback',\n      {\n        project: project,\n        tracker: tracker,\n        subject: subject,\n        description: description,\n        api_key: apiKey\n      },\n      {\n        headers: { Accept: 'application/vnd.ceph.api.v0.1+json' }\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HealthService {\n  constructor(private http: HttpClient) {}\n\n  getFullHealth() {\n    return this.http.get('api/health/full');\n  }\n\n  getMinimalHealth() {\n    return this.http.get('api/health/minimal');\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { map, mergeMap, toArray } from 'rxjs/operators';\n\nimport { InventoryDevice } from '~/app/ceph/cluster/inventory/inventory-devices/inventory-device.model';\nimport { InventoryHost } from '~/app/ceph/cluster/inventory/inventory-host.model';\nimport { ApiClient } from '~/app/shared/api/api-client';\nimport { CdHelperClass } from '~/app/shared/classes/cd-helper.class';\nimport { Daemon } from '../models/daemon.interface';\nimport { CdDevice } from '../models/devices';\nimport { SmartDataResponseV1 } from '../models/smart';\nimport { DeviceService } from '../services/device.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HostService extends ApiClient {\n  baseURL = 'api/host';\n  baseUIURL = 'ui-api/host';\n\n  predefinedLabels = ['mon', 'mgr', 'osd', 'mds', 'rgw', 'nfs', 'iscsi', 'rbd', 'grafana'];\n\n  constructor(private http: HttpClient, private deviceService: DeviceService) {\n    super();\n  }\n\n  list(facts: string): Observable<object[]> {\n    return this.http.get<object[]>(this.baseURL, {\n      headers: { Accept: this.getVersionHeaderValue(1, 2) },\n      params: { facts: facts }\n    });\n  }\n\n  create(hostname: string, addr: string, labels: string[], status: string) {\n    return this.http.post(\n      this.baseURL,\n      { hostname: hostname, addr: addr, labels: labels, status: status },\n      { observe: 'response', headers: { Accept: CdHelperClass.cdVersionHeader('0', '1') } }\n    );\n  }\n\n  delete(hostname: string) {\n    return this.http.delete(`${this.baseURL}/${hostname}`, { observe: 'response' });\n  }\n\n  getDevices(hostname: string): Observable<CdDevice[]> {\n    return this.http\n      .get<CdDevice[]>(`${this.baseURL}/${hostname}/devices`)\n      .pipe(map((devices) => devices.map((device) => this.deviceService.prepareDevice(device))));\n  }\n\n  getSmartData(hostname: string) {\n    return this.http.get<SmartDataResponseV1>(`${this.baseURL}/${hostname}/smart`);\n  }\n\n  getDaemons(hostname: string): Observable<Daemon[]> {\n    return this.http.get<Daemon[]>(`${this.baseURL}/${hostname}/daemons`);\n  }\n\n  getLabels(): Observable<string[]> {\n    return this.http.get<string[]>(`${this.baseUIURL}/labels`);\n  }\n\n  update(\n    hostname: string,\n    updateLabels = false,\n    labels: string[] = [],\n    maintenance = false,\n    force = false,\n    drain = false\n  ) {\n    return this.http.put(\n      `${this.baseURL}/${hostname}`,\n      {\n        update_labels: updateLabels,\n        labels: labels,\n        maintenance: maintenance,\n        force: force,\n        drain: drain\n      },\n      { headers: { Accept: this.getVersionHeaderValue(0, 1) } }\n    );\n  }\n\n  identifyDevice(hostname: string, device: string, duration: number) {\n    return this.http.post(`${this.baseURL}/${hostname}/identify_device`, {\n      device,\n      duration\n    });\n  }\n\n  private getInventoryParams(refresh?: boolean): HttpParams {\n    let params = new HttpParams();\n    if (refresh) {\n      params = params.append('refresh', _.toString(refresh));\n    }\n    return params;\n  }\n\n  /**\n   * Get inventory of a host.\n   *\n   * @param hostname the host query.\n   * @param refresh true to ask the Orchestrator to refresh inventory.\n   */\n  getInventory(hostname: string, refresh?: boolean): Observable<InventoryHost> {\n    const params = this.getInventoryParams(refresh);\n    return this.http.get<InventoryHost>(`${this.baseURL}/${hostname}/inventory`, {\n      params: params\n    });\n  }\n\n  /**\n   * Get inventories of all hosts.\n   *\n   * @param refresh true to ask the Orchestrator to refresh inventory.\n   */\n  inventoryList(refresh?: boolean): Observable<InventoryHost[]> {\n    const params = this.getInventoryParams(refresh);\n    return this.http.get<InventoryHost[]>(`${this.baseUIURL}/inventory`, { params: params });\n  }\n\n  /**\n   * Get device list via host inventories.\n   *\n   * @param hostname the host to query. undefined for all hosts.\n   * @param refresh true to ask the Orchestrator to refresh inventory.\n   */\n  inventoryDeviceList(hostname?: string, refresh?: boolean): Observable<InventoryDevice[]> {\n    let observable;\n    if (hostname) {\n      observable = this.getInventory(hostname, refresh).pipe(toArray());\n    } else {\n      observable = this.inventoryList(refresh);\n    }\n    return observable.pipe(\n      mergeMap((hosts: InventoryHost[]) => {\n        const devices = _.flatMap(hosts, (host) => {\n          return host.devices.map((device) => {\n            device.hostname = host.name;\n            device.uid = device.device_id\n              ? `${device.device_id}-${device.hostname}-${device.path}`\n              : `${device.hostname}-${device.path}`;\n            return device;\n          });\n        });\n        return observableOf(devices);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggingService {\n  constructor(private http: HttpClient) {}\n\n  jsError(url: string, message: string, stack: any) {\n    const request = {\n      url: url,\n      message: message,\n      stack: stack\n    };\n    return this.http.post('ui-api/logging/js-error', request);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogsService {\n  constructor(private http: HttpClient) {}\n\n  getLogs() {\n    return this.http.get('api/logs/all');\n  }\n\n  validateDashboardUrl(uid: string) {\n    return this.http.get(`api/grafana/validation/${uid}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MgrModuleService {\n  private url = 'api/mgr/module';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Get the list of Ceph Mgr modules and their state (enabled/disabled).\n   * @return {Observable<Object[]>}\n   */\n  list(): Observable<Object[]> {\n    return this.http.get<Object[]>(`${this.url}`);\n  }\n\n  /**\n   * Get the Ceph Mgr module configuration.\n   * @param {string} module The name of the mgr module.\n   * @return {Observable<Object>}\n   */\n  getConfig(module: string): Observable<Object> {\n    return this.http.get(`${this.url}/${module}`);\n  }\n\n  /**\n   * Update the Ceph Mgr module configuration.\n   * @param {string} module The name of the mgr module.\n   * @param {object} config The configuration.\n   * @return {Observable<Object>}\n   */\n  updateConfig(module: string, config: object): Observable<Object> {\n    return this.http.put(`${this.url}/${module}`, { config: config });\n  }\n\n  /**\n   * Enable the Ceph Mgr module.\n   * @param {string} module The name of the mgr module.\n   */\n  enable(module: string) {\n    return this.http.post(`${this.url}/${module}/enable`, null);\n  }\n\n  /**\n   * Disable the Ceph Mgr module.\n   * @param {string} module The name of the mgr module.\n   */\n  disable(module: string) {\n    return this.http.post(`${this.url}/${module}/disable`, null);\n  }\n\n  /**\n   * Get the Ceph Mgr module options.\n   * @param {string} module The name of the mgr module.\n   * @return {Observable<Object>}\n   */\n  getOptions(module: string): Observable<Object> {\n    return this.http.get(`${this.url}/${module}/options`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MonitorService {\n  constructor(private http: HttpClient) {}\n\n  getMonitor() {\n    return this.http.get('api/monitor');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nexport interface Motd {\n  message: string;\n  md5: string;\n  severity: 'info' | 'warning' | 'danger';\n  // The expiration date in ISO 8601. Does not expire if empty.\n  expires: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MotdService {\n  private url = 'ui-api/motd';\n\n  constructor(private http: HttpClient) {}\n\n  get(): Observable<Motd | null> {\n    return this.http.get<Motd | null>(this.url);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, throwError } from 'rxjs';\n\nimport { NfsFSAbstractionLayer } from '~/app/ceph/nfs/models/nfs.fsal';\nimport { ApiClient } from '~/app/shared/api/api-client';\n\nexport interface Directory {\n  paths: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NfsService extends ApiClient {\n  apiPath = 'api/nfs-ganesha';\n  uiApiPath = 'ui-api/nfs-ganesha';\n\n  nfsAccessType = [\n    {\n      value: 'RW',\n      help: $localize`Allows all operations`\n    },\n    {\n      value: 'RO',\n      help: $localize`Allows only operations that do not modify the server`\n    },\n    {\n      value: 'NONE',\n      help: $localize`Allows no access at all`\n    }\n  ];\n\n  nfsFsal: NfsFSAbstractionLayer[] = [\n    {\n      value: 'CEPH',\n      descr: $localize`CephFS`,\n      disabled: false\n    },\n    {\n      value: 'RGW',\n      descr: $localize`Object Gateway`,\n      disabled: false\n    }\n  ];\n\n  nfsSquash = {\n    no_root_squash: ['no_root_squash', 'noidsquash', 'none'],\n    root_id_squash: ['root_id_squash', 'rootidsquash', 'rootid'],\n    root_squash: ['root_squash', 'rootsquash', 'root'],\n    all_squash: ['all_squash', 'allsquash', 'all', 'allanonymous', 'all_anonymous']\n  };\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  list() {\n    return this.http.get(`${this.apiPath}/export`);\n  }\n\n  get(clusterId: string, exportId: string) {\n    return this.http.get(`${this.apiPath}/export/${clusterId}/${exportId}`);\n  }\n\n  create(nfs: any) {\n    return this.http.post(`${this.apiPath}/export`, nfs, {\n      headers: { Accept: this.getVersionHeaderValue(2, 0) },\n      observe: 'response'\n    });\n  }\n\n  update(clusterId: string, id: number, nfs: any) {\n    return this.http.put(`${this.apiPath}/export/${clusterId}/${id}`, nfs, {\n      headers: { Accept: this.getVersionHeaderValue(2, 0) },\n      observe: 'response'\n    });\n  }\n\n  delete(clusterId: string, exportId: string) {\n    return this.http.delete(`${this.apiPath}/export/${clusterId}/${exportId}`, {\n      headers: { Accept: this.getVersionHeaderValue(2, 0) },\n      observe: 'response'\n    });\n  }\n\n  listClusters() {\n    return this.http.get(`${this.apiPath}/cluster`, {\n      headers: { Accept: this.getVersionHeaderValue(0, 1) }\n    });\n  }\n\n  lsDir(fs_name: string, root_dir: string): Observable<Directory> {\n    if (!fs_name) {\n      return throwError($localize`Please specify a filesystem volume.`);\n    }\n    return this.http.get<Directory>(`${this.uiApiPath}/lsdir/${fs_name}?root_dir=${root_dir}`);\n  }\n\n  fsals() {\n    return this.http.get(`${this.uiApiPath}/fsals`);\n  }\n\n  filesystems() {\n    return this.http.get(`${this.uiApiPath}/cephfs/filesystems`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { OrchestratorFeature } from '../models/orchestrator.enum';\nimport { OrchestratorStatus } from '../models/orchestrator.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrchestratorService {\n  private url = 'ui-api/orchestrator';\n\n  disableMessages = {\n    noOrchestrator: $localize`The feature is disabled because Orchestrator is not available.`,\n    missingFeature: $localize`The Orchestrator backend doesn't support this feature.`\n  };\n\n  constructor(private http: HttpClient) {}\n\n  status(): Observable<OrchestratorStatus> {\n    return this.http.get<OrchestratorStatus>(`${this.url}/status`);\n  }\n\n  hasFeature(status: OrchestratorStatus, features: OrchestratorFeature[]): boolean {\n    return _.every(features, (feature) => _.get(status.features, `${feature}.available`));\n  }\n\n  getTableActionDisableDesc(\n    status: OrchestratorStatus,\n    features: OrchestratorFeature[]\n  ): boolean | string {\n    if (!status) {\n      return false;\n    }\n    if (!status.available) {\n      return this.disableMessages.noOrchestrator;\n    }\n    if (!this.hasFeature(status, features)) {\n      return this.disableMessages.missingFeature;\n    }\n    return false;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CdDevice } from '../models/devices';\nimport { InventoryDeviceType } from '../models/inventory-device-type.model';\nimport { DeploymentOptions } from '../models/osd-deployment-options';\nimport { OsdSettings } from '../models/osd-settings';\nimport { SmartDataResponseV1 } from '../models/smart';\nimport { DeviceService } from '../services/device.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OsdService {\n  private path = 'api/osd';\n  private uiPath = 'ui-api/osd';\n\n  osdDevices: InventoryDeviceType[] = [];\n\n  osdRecvSpeedModalPriorities = {\n    KNOWN_PRIORITIES: [\n      {\n        name: null,\n        text: $localize`-- Select the priority --`,\n        values: {\n          osd_max_backfills: null,\n          osd_recovery_max_active: null,\n          osd_recovery_max_single_start: null,\n          osd_recovery_sleep: null\n        }\n      },\n      {\n        name: 'low',\n        text: $localize`Low`,\n        values: {\n          osd_max_backfills: 1,\n          osd_recovery_max_active: 1,\n          osd_recovery_max_single_start: 1,\n          osd_recovery_sleep: 0.5\n        }\n      },\n      {\n        name: 'default',\n        text: $localize`Default`,\n        values: {\n          osd_max_backfills: 1,\n          osd_recovery_max_active: 3,\n          osd_recovery_max_single_start: 1,\n          osd_recovery_sleep: 0\n        }\n      },\n      {\n        name: 'high',\n        text: $localize`High`,\n        values: {\n          osd_max_backfills: 4,\n          osd_recovery_max_active: 4,\n          osd_recovery_max_single_start: 4,\n          osd_recovery_sleep: 0\n        }\n      }\n    ]\n  };\n\n  constructor(private http: HttpClient, private deviceService: DeviceService) {}\n\n  create(driveGroups: Object[], trackingId: string, method = 'drive_groups') {\n    const request = {\n      method: method,\n      data: driveGroups,\n      tracking_id: trackingId\n    };\n    return this.http.post(this.path, request, { observe: 'response' });\n  }\n\n  getList() {\n    return this.http.get(`${this.path}`);\n  }\n\n  getOsdSettings(): Observable<OsdSettings> {\n    return this.http.get<OsdSettings>(`${this.path}/settings`, {\n      headers: { Accept: 'application/vnd.ceph.api.v0.1+json' }\n    });\n  }\n\n  getDetails(id: number) {\n    interface OsdData {\n      osd_map: { [key: string]: any };\n      osd_metadata: { [key: string]: any };\n      smart: { [device_identifier: string]: any };\n    }\n    return this.http.get<OsdData>(`${this.path}/${id}`);\n  }\n\n  /**\n   * @param id OSD ID\n   */\n  getSmartData(id: number) {\n    return this.http.get<SmartDataResponseV1>(`${this.path}/${id}/smart`);\n  }\n\n  scrub(id: string, deep: boolean) {\n    return this.http.post(`${this.path}/${id}/scrub?deep=${deep}`, null);\n  }\n\n  getDeploymentOptions() {\n    return this.http.get<DeploymentOptions>(`${this.uiPath}/deployment_options`);\n  }\n\n  getFlags() {\n    return this.http.get(`${this.path}/flags`);\n  }\n\n  updateFlags(flags: string[]) {\n    return this.http.put(`${this.path}/flags`, { flags: flags });\n  }\n\n  updateIndividualFlags(flags: { [flag: string]: boolean }, ids: number[]) {\n    return this.http.put(`${this.path}/flags/individual`, { flags: flags, ids: ids });\n  }\n\n  markOut(id: number) {\n    return this.http.put(`${this.path}/${id}/mark`, { action: 'out' });\n  }\n\n  markIn(id: number) {\n    return this.http.put(`${this.path}/${id}/mark`, { action: 'in' });\n  }\n\n  markDown(id: number) {\n    return this.http.put(`${this.path}/${id}/mark`, { action: 'down' });\n  }\n\n  reweight(id: number, weight: number) {\n    return this.http.post(`${this.path}/${id}/reweight`, { weight: weight });\n  }\n\n  update(id: number, deviceClass: string) {\n    return this.http.put(`${this.path}/${id}`, { device_class: deviceClass });\n  }\n\n  markLost(id: number) {\n    return this.http.put(`${this.path}/${id}/mark`, { action: 'lost' });\n  }\n\n  purge(id: number) {\n    return this.http.post(`${this.path}/${id}/purge`, null);\n  }\n\n  destroy(id: number) {\n    return this.http.post(`${this.path}/${id}/destroy`, null);\n  }\n\n  delete(id: number, preserveId?: boolean, force?: boolean) {\n    const params = {\n      preserve_id: preserveId ? 'true' : 'false',\n      force: force ? 'true' : 'false'\n    };\n    return this.http.delete(`${this.path}/${id}`, { observe: 'response', params: params });\n  }\n\n  safeToDestroy(ids: string) {\n    interface SafeToDestroyResponse {\n      active: number[];\n      missing_stats: number[];\n      stored_pgs: number[];\n      is_safe_to_destroy: boolean;\n      message?: string;\n    }\n    return this.http.get<SafeToDestroyResponse>(`${this.path}/safe_to_destroy?ids=${ids}`);\n  }\n\n  safeToDelete(ids: string) {\n    interface SafeToDeleteResponse {\n      is_safe_to_delete: boolean;\n      message?: string;\n    }\n    return this.http.get<SafeToDeleteResponse>(`${this.path}/safe_to_delete?svc_ids=${ids}`);\n  }\n\n  getDevices(osdId: number) {\n    return this.http\n      .get<CdDevice[]>(`${this.path}/${osdId}/devices`)\n      .pipe(map((devices) => devices.map((device) => this.deviceService.prepareDevice(device))));\n  }\n}\n","import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport class PaginateObservable<Type> {\n  observable: Observable<Type>;\n  count: number;\n\n  constructor(obs: Observable<Type>) {\n    this.observable = obs.pipe(\n      map((response: any) => {\n        this.count = Number(response.headers?.get('X-Total-Count'));\n        return response['body'];\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { of as observableOf } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { cdEncode } from '../decorators/cd-encode';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class PerformanceCounterService {\n  private url = 'api/perf_counters';\n\n  constructor(private http: HttpClient) {}\n\n  list() {\n    return this.http.get(this.url);\n  }\n\n  get(service_type: string, service_id: string) {\n    return this.http.get(`${this.url}/${service_type}/${service_id}`).pipe(\n      mergeMap((resp: any) => {\n        return observableOf(resp['counters']);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { cdEncode } from '../decorators/cd-encode';\nimport { RbdConfigurationEntry } from '../models/configuration';\nimport { RbdConfigurationService } from '../services/rbd-configuration.service';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoolService {\n  apiPath = 'api/pool';\n\n  constructor(private http: HttpClient, private rbdConfigurationService: RbdConfigurationService) {}\n\n  create(pool: any) {\n    return this.http.post(this.apiPath, pool, { observe: 'response' });\n  }\n\n  update(pool: any) {\n    let name: string;\n    if (pool.hasOwnProperty('srcpool')) {\n      name = pool.srcpool;\n      delete pool.srcpool;\n    } else {\n      name = pool.pool;\n      delete pool.pool;\n    }\n    return this.http.put(`${this.apiPath}/${encodeURIComponent(name)}`, pool, {\n      observe: 'response'\n    });\n  }\n\n  delete(name: string) {\n    return this.http.delete(`${this.apiPath}/${name}`, { observe: 'response' });\n  }\n\n  get(poolName: string) {\n    return this.http.get(`${this.apiPath}/${poolName}`);\n  }\n\n  getList() {\n    return this.http.get(`${this.apiPath}?stats=true`);\n  }\n\n  getConfiguration(poolName: string): Observable<RbdConfigurationEntry[]> {\n    return this.http.get<RbdConfigurationEntry[]>(`${this.apiPath}/${poolName}/configuration`).pipe(\n      // Add static data maintained in RbdConfigurationService\n      map((values) =>\n        values.map((entry) =>\n          Object.assign(entry, this.rbdConfigurationService.getOptionByName(entry.name))\n        )\n      )\n    );\n  }\n\n  getInfo() {\n    return this.http.get(`ui-${this.apiPath}/info`);\n  }\n\n  list(attrs: string[] = []) {\n    const attrsStr = attrs.join(',');\n    return this.http\n      .get(`${this.apiPath}?attrs=${attrsStr}`)\n      .toPromise()\n      .then((resp: any) => {\n        return resp;\n      });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AlertmanagerSilence } from '../models/alertmanager-silence';\nimport {\n  AlertmanagerAlert,\n  AlertmanagerNotification,\n  PrometheusRuleGroup\n} from '../models/prometheus-alerts';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrometheusService {\n  private baseURL = 'api/prometheus';\n  private settingsKey = {\n    alertmanager: 'api/settings/alertmanager-api-host',\n    prometheus: 'api/settings/prometheus-api-host'\n  };\n\n  constructor(private http: HttpClient, private settingsService: SettingsService) {}\n\n  ifAlertmanagerConfigured(fn: (value?: string) => void, elseFn?: () => void): void {\n    this.settingsService.ifSettingConfigured(this.settingsKey.alertmanager, fn, elseFn);\n  }\n\n  disableAlertmanagerConfig(): void {\n    this.settingsService.disableSetting(this.settingsKey.alertmanager);\n  }\n\n  ifPrometheusConfigured(fn: (value?: string) => void, elseFn?: () => void): void {\n    this.settingsService.ifSettingConfigured(this.settingsKey.prometheus, fn, elseFn);\n  }\n\n  disablePrometheusConfig(): void {\n    this.settingsService.disableSetting(this.settingsKey.prometheus);\n  }\n\n  getAlerts(params = {}): Observable<AlertmanagerAlert[]> {\n    return this.http.get<AlertmanagerAlert[]>(this.baseURL, { params });\n  }\n\n  getSilences(params = {}): Observable<AlertmanagerSilence[]> {\n    return this.http.get<AlertmanagerSilence[]>(`${this.baseURL}/silences`, { params });\n  }\n\n  getRules(\n    type: 'all' | 'alerting' | 'rewrites' = 'all'\n  ): Observable<{ groups: PrometheusRuleGroup[] }> {\n    return this.http.get<{ groups: PrometheusRuleGroup[] }>(`${this.baseURL}/rules`).pipe(\n      map((rules) => {\n        if (['alerting', 'rewrites'].includes(type)) {\n          rules.groups.map((group) => {\n            group.rules = group.rules.filter((rule) => rule.type === type);\n          });\n        }\n        return rules;\n      })\n    );\n  }\n\n  setSilence(silence: AlertmanagerSilence) {\n    return this.http.post<object>(`${this.baseURL}/silence`, silence, { observe: 'response' });\n  }\n\n  expireSilence(silenceId: string) {\n    return this.http.delete(`${this.baseURL}/silence/${silenceId}`, { observe: 'response' });\n  }\n\n  getNotifications(\n    notification?: AlertmanagerNotification\n  ): Observable<AlertmanagerNotification[]> {\n    const url = `${this.baseURL}/notifications?from=${\n      notification && notification.id ? notification.id : 'last'\n    }`;\n    return this.http.get<AlertmanagerNotification[]>(url);\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { of as observableOf } from 'rxjs';\nimport { catchError, mapTo } from 'rxjs/operators';\n\nimport { ApiClient } from '~/app/shared/api/api-client';\nimport { RgwDaemonService } from '~/app/shared/api/rgw-daemon.service';\nimport { cdEncode } from '~/app/shared/decorators/cd-encode';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class RgwBucketService extends ApiClient {\n  private url = 'api/rgw/bucket';\n\n  constructor(private http: HttpClient, private rgwDaemonService: RgwDaemonService) {\n    super();\n  }\n\n  /**\n   * Get the list of buckets.\n   * @return Observable<Object[]>\n   */\n  list(stats: boolean = false, uid: string = '') {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      params = params.append('stats', stats.toString());\n      if (uid) {\n        params = params.append('uid', uid);\n      }\n      return this.http.get(this.url, {\n        headers: { Accept: this.getVersionHeaderValue(1, 1) },\n        params: params\n      });\n    });\n  }\n\n  get(bucket: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.get(`${this.url}/${bucket}`, { params: params });\n    });\n  }\n\n  create(\n    bucket: string,\n    uid: string,\n    zonegroup: string,\n    placementTarget: string,\n    lockEnabled: boolean,\n    lock_mode: 'GOVERNANCE' | 'COMPLIANCE',\n    lock_retention_period_days: string,\n    encryption_state: boolean,\n    encryption_type: string,\n    key_id: string\n  ) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.post(this.url, null, {\n        params: new HttpParams({\n          fromObject: {\n            bucket,\n            uid,\n            zonegroup,\n            placement_target: placementTarget,\n            lock_enabled: String(lockEnabled),\n            lock_mode,\n            lock_retention_period_days,\n            encryption_state: String(encryption_state),\n            encryption_type,\n            key_id,\n            daemon_name: params.get('daemon_name')\n          }\n        })\n      });\n    });\n  }\n\n  update(\n    bucket: string,\n    bucketId: string,\n    uid: string,\n    versioningState: string,\n    encryptionState: boolean,\n    encryptionType: string,\n    keyId: string,\n    mfaDelete: string,\n    mfaTokenSerial: string,\n    mfaTokenPin: string,\n    lockMode: 'GOVERNANCE' | 'COMPLIANCE',\n    lockRetentionPeriodDays: string\n  ) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      params = params.appendAll({\n        bucket_id: bucketId,\n        uid: uid,\n        versioning_state: versioningState,\n        encryption_state: String(encryptionState),\n        encryption_type: encryptionType,\n        key_id: keyId,\n        mfa_delete: mfaDelete,\n        mfa_token_serial: mfaTokenSerial,\n        mfa_token_pin: mfaTokenPin,\n        lock_mode: lockMode,\n        lock_retention_period_days: lockRetentionPeriodDays\n      });\n      return this.http.put(`${this.url}/${bucket}`, null, { params: params });\n    });\n  }\n\n  delete(bucket: string, purgeObjects = true) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      params = params.append('purge_objects', purgeObjects ? 'true' : 'false');\n      return this.http.delete(`${this.url}/${bucket}`, { params: params });\n    });\n  }\n\n  /**\n   * Check if the specified bucket exists.\n   * @param {string} bucket The bucket name to check.\n   * @return Observable<boolean>\n   */\n  exists(bucket: string) {\n    return this.get(bucket).pipe(\n      mapTo(true),\n      catchError((error: Event) => {\n        if (_.isFunction(error.preventDefault)) {\n          error.preventDefault();\n        }\n        return observableOf(false);\n      })\n    );\n  }\n\n  getLockDays(bucketData: object): number {\n    if (bucketData['lock_retention_period_years'] > 0) {\n      return Math.floor(bucketData['lock_retention_period_years'] * 365.242);\n    }\n\n    return bucketData['lock_retention_period_days'] || 0;\n  }\n\n  setEncryptionConfig(\n    encryption_type: string,\n    kms_provider: string,\n    auth_method: string,\n    secret_engine: string,\n    secret_path: string,\n    namespace: string,\n    address: string,\n    token: string,\n    owner: string,\n    ssl_cert: string,\n    client_cert: string,\n    client_key: string\n  ) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      params = params.appendAll({\n        encryption_type: encryption_type,\n        kms_provider: kms_provider,\n        auth_method: auth_method,\n        secret_engine: secret_engine,\n        secret_path: secret_path,\n        namespace: namespace,\n        address: address,\n        token: token,\n        owner: owner,\n        ssl_cert: ssl_cert,\n        client_cert: client_cert,\n        client_key: client_key\n      });\n      return this.http.put(`${this.url}/setEncryptionConfig`, null, { params: params });\n    });\n  }\n\n  getEncryption(bucket: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.get(`${this.url}/${bucket}/getEncryption`, { params: params });\n    });\n  }\n\n  deleteEncryption(bucket: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.get(`${this.url}/${bucket}/deleteEncryption`, { params: params });\n    });\n  }\n\n  getEncryptionConfig() {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      return this.http.get(`${this.url}/getEncryptionConfig`, { params: params });\n    });\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { mergeMap, take, tap } from 'rxjs/operators';\n\nimport { RgwDaemon } from '~/app/ceph/rgw/models/rgw-daemon';\nimport { cdEncode } from '~/app/shared/decorators/cd-encode';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class RgwDaemonService {\n  private url = 'api/rgw/daemon';\n  private daemons = new BehaviorSubject<RgwDaemon[]>([]);\n  daemons$ = this.daemons.asObservable();\n  private selectedDaemon = new BehaviorSubject<RgwDaemon>(null);\n  selectedDaemon$ = this.selectedDaemon.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  list(): Observable<RgwDaemon[]> {\n    return this.http.get<RgwDaemon[]>(this.url).pipe(\n      tap((daemons: RgwDaemon[]) => {\n        this.daemons.next(daemons);\n        const selectedDaemon = this.selectedDaemon.getValue();\n        // Set or re-select the default daemon if the current one is not\n        // in the list anymore.\n        if (_.isEmpty(selectedDaemon) || undefined === _.find(daemons, { id: selectedDaemon.id })) {\n          this.selectDefaultDaemon(daemons);\n        }\n      })\n    );\n  }\n\n  get(id: string) {\n    return this.http.get(`${this.url}/${id}`);\n  }\n\n  selectDaemon(daemon: RgwDaemon) {\n    this.selectedDaemon.next(daemon);\n  }\n\n  private selectDefaultDaemon(daemons: RgwDaemon[]): RgwDaemon {\n    if (daemons.length === 0) {\n      return null;\n    }\n\n    for (const daemon of daemons) {\n      if (daemon.default) {\n        this.selectDaemon(daemon);\n        return daemon;\n      }\n    }\n\n    this.selectDaemon(daemons[0]);\n    return daemons[0];\n  }\n\n  request(next: (params: HttpParams) => Observable<any>) {\n    return this.selectedDaemon.pipe(\n      mergeMap((daemon: RgwDaemon) =>\n        // If there is no selected daemon, retrieve daemon list so default daemon will be selected.\n        _.isEmpty(daemon)\n          ? this.list().pipe(\n              mergeMap((daemons) =>\n                _.isEmpty(daemons) ? throwError('No RGW daemons found!') : this.selectedDaemon$\n              )\n            )\n          : of(daemon)\n      ),\n      take(1),\n      mergeMap((daemon: RgwDaemon) => {\n        let params = new HttpParams();\n        params = params.append('daemon_name', daemon.id);\n        return next(params);\n      })\n    );\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\n\nimport { RgwDaemon } from '~/app/ceph/rgw/models/rgw-daemon';\nimport { RgwDaemonService } from '~/app/shared/api/rgw-daemon.service';\nimport { cdEncode } from '~/app/shared/decorators/cd-encode';\n\n@cdEncode\n@Injectable({\n  providedIn: 'root'\n})\nexport class RgwSiteService {\n  private url = 'api/rgw/site';\n\n  constructor(private http: HttpClient, private rgwDaemonService: RgwDaemonService) {}\n\n  get(query?: string) {\n    return this.rgwDaemonService.request((params: HttpParams) => {\n      if (query) {\n        params = params.append('query', query);\n      }\n      return this.http.get(this.url, { params: params });\n    });\n  }\n\n  isDefaultRealm(): Observable<boolean> {\n    return this.get('default-realm').pipe(\n      mergeMap((defaultRealm: string) =>\n        this.rgwDaemonService.selectedDaemon$.pipe(\n          map((selectedDaemon: RgwDaemon) => selectedDaemon.realm_name === defaultRealm)\n        )\n      )\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, of as observableOf } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { RoleFormModel } from '~/app/core/auth/role-form/role-form.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n  constructor(private http: HttpClient) {}\n\n  list() {\n    return this.http.get('api/role');\n  }\n\n  delete(name: string) {\n    return this.http.delete(`api/role/${name}`);\n  }\n\n  get(name: string) {\n    return this.http.get(`api/role/${name}`);\n  }\n\n  create(role: RoleFormModel) {\n    return this.http.post(`api/role`, role);\n  }\n\n  clone(name: string, newName: string) {\n    return this.http.post(`api/role/${name}/clone`, { new_name: newName });\n  }\n\n  update(role: RoleFormModel) {\n    return this.http.put(`api/role/${role.name}`, role);\n  }\n\n  exists(name: string): Observable<boolean> {\n    return this.list().pipe(\n      mergeMap((roles: Array<RoleFormModel>) => {\n        const exists = roles.some((currentRole: RoleFormModel) => {\n          return currentRole.name === name;\n        });\n        return observableOf(exists);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScopeService {\n  constructor(private http: HttpClient) {}\n\n  list() {\n    return this.http.get('ui-api/scope');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nclass SettingResponse {\n  name: string;\n  default: any;\n  type: string;\n  value: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  constructor(private http: HttpClient) {}\n\n  private settings: { [url: string]: string } = {};\n\n  getValues(names: string | string[]): Observable<{ [key: string]: any }> {\n    if (_.isArray(names)) {\n      names = names.join(',');\n    }\n    return this.http.get(`api/settings?names=${names}`).pipe(\n      map((resp: SettingResponse[]) => {\n        const result = {};\n        _.forEach(resp, (option: SettingResponse) => {\n          _.set(result, option.name, option.value);\n        });\n        return result;\n      })\n    );\n  }\n\n  ifSettingConfigured(url: string, fn: (value?: string) => void, elseFn?: () => void): void {\n    const setting = this.settings[url];\n    if (setting === undefined) {\n      this.http.get(url).subscribe(\n        (data: any) => {\n          this.settings[url] = this.getSettingsValue(data);\n          this.ifSettingConfigured(url, fn, elseFn);\n        },\n        (resp) => {\n          if (resp.status !== 401) {\n            this.settings[url] = '';\n          }\n        }\n      );\n    } else if (setting !== '') {\n      fn(setting);\n    } else {\n      if (elseFn) {\n        elseFn();\n      }\n    }\n  }\n\n  // Easiest way to stop reloading external content that can't be reached\n  disableSetting(url: string) {\n    this.settings[url] = '';\n  }\n\n  private getSettingsValue(data: any): string {\n    return data.value || data.instance || '';\n  }\n\n  validateGrafanaDashboardUrl(uid: string) {\n    return this.http.get(`api/grafana/validation/${uid}`);\n  }\n\n  getStandardSettings(): Observable<{ [key: string]: any }> {\n    return this.http.get('ui-api/standard_settings');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelemetryService {\n  private url = 'api/telemetry';\n\n  constructor(private http: HttpClient) {}\n\n  getReport() {\n    return this.http.get(`${this.url}/report`);\n  }\n\n  enable(enable: boolean = true) {\n    const body = { enable: enable };\n    if (enable) {\n      body['license_name'] = 'sharing-1-0';\n    }\n    return this.http.put(`${this.url}`, body);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, of as observableOf } from 'rxjs';\nimport { catchError, mapTo } from 'rxjs/operators';\n\nimport { UserFormModel } from '~/app/core/auth/user-form/user-form.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  list() {\n    return this.http.get('api/user');\n  }\n\n  delete(username: string) {\n    return this.http.delete(`api/user/${username}`);\n  }\n\n  get(username: string) {\n    return this.http.get(`api/user/${username}`);\n  }\n\n  create(user: UserFormModel) {\n    return this.http.post(`api/user`, user);\n  }\n\n  update(user: UserFormModel) {\n    return this.http.put(`api/user/${user.username}`, user);\n  }\n\n  changePassword(username: string, oldPassword: string, newPassword: string) {\n    // Note, the specified user MUST be logged in to be able to change\n    // the password. The backend ensures that the password of another\n    // user can not be changed, otherwise an error will be thrown.\n    return this.http.post(`api/user/${username}/change_password`, {\n      old_password: oldPassword,\n      new_password: newPassword\n    });\n  }\n\n  validateUserName(user_name: string): Observable<boolean> {\n    return this.get(user_name).pipe(\n      mapTo(true),\n      catchError((error) => {\n        error.preventDefault();\n        return observableOf(false);\n      })\n    );\n  }\n\n  validatePassword(password: string, username: string = null, oldPassword: string = null) {\n    return this.http.post('api/user/validate_password', {\n      password: password,\n      username: username,\n      old_password: oldPassword\n    });\n  }\n}\n","import _ from 'lodash';\n\nexport class CdHelperClass {\n  /**\n   * Simple way to only update variables if they have really changed and not just the reference\n   *\n   * @param componentThis - In order to update the variables if necessary\n   * @param change - The variable name (attribute of the object) is followed by the current value\n   *                 it would update even if it equals\n   */\n  static updateChanged(componentThis: any, change: { [publicVarName: string]: any }) {\n    let hasChanges = false;\n\n    Object.keys(change).forEach((publicVarName) => {\n      const data = change[publicVarName];\n      if (!_.isEqual(data, componentThis[publicVarName])) {\n        componentThis[publicVarName] = data;\n        hasChanges = true;\n      }\n    });\n\n    return hasChanges;\n  }\n\n  static cdVersionHeader(major_ver: string, minor_ver: string) {\n    return `application/vnd.ceph.api.v${major_ver}.${minor_ver}+json`;\n  }\n}\n","export class CssHelper {\n  propertyValue(propertyName: string): string {\n    return getComputedStyle(document.body).getPropertyValue(`--${propertyName}`);\n  }\n}\n","import { NgZone } from '@angular/core';\n\nimport { TableStatus } from './table-status';\n\nexport class ListWithDetails {\n  expandedRow: any;\n  staleTimeout: number;\n  tableStatus: TableStatus;\n\n  constructor(protected ngZone?: NgZone) {}\n\n  setExpandedRow(expandedRow: any) {\n    this.expandedRow = expandedRow;\n  }\n\n  setTableRefreshTimeout() {\n    clearTimeout(this.staleTimeout);\n    this.ngZone.runOutsideAngular(() => {\n      this.staleTimeout = window.setTimeout(() => {\n        this.ngZone.run(() => {\n          this.tableStatus = new TableStatus(\n            'warning',\n            $localize`The user list data might be stale. If needed, you can manually reload it.`\n          );\n        });\n      }, 10000);\n    });\n  }\n}\n","import { ViewCacheStatus } from '../enum/view-cache-status.enum';\nimport { TableStatus } from './table-status';\n\nexport class TableStatusViewCache extends TableStatus {\n  constructor(status: ViewCacheStatus = ViewCacheStatus.ValueOk, statusFor: string = '') {\n    super();\n\n    switch (status) {\n      case ViewCacheStatus.ValueOk:\n        this.type = 'light';\n        this.msg = '';\n        break;\n      case ViewCacheStatus.ValueNone:\n        this.type = 'info';\n        this.msg =\n          (statusFor ? $localize`Retrieving data for ${statusFor}.` : $localize`Retrieving data.`) +\n          ' ' +\n          $localize`Please wait...`;\n        break;\n      case ViewCacheStatus.ValueStale:\n        this.type = 'warning';\n        this.msg = statusFor\n          ? $localize`Displaying previously cached data for ${statusFor}.`\n          : $localize`Displaying previously cached data.`;\n        break;\n      case ViewCacheStatus.ValueException:\n        this.type = 'danger';\n        this.msg =\n          (statusFor\n            ? $localize`Could not load data for ${statusFor}.`\n            : $localize`Could not load data.`) +\n          ' ' +\n          $localize`Please check the cluster health.`;\n        break;\n    }\n  }\n}\n","export class TableStatus {\n  constructor(public type: 'info' | 'warning' | 'danger' | 'light' = 'light', public msg = '') {}\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\n\n@Component({\n  selector: 'cd-alert-panel',\n  templateUrl: './alert-panel.component.html',\n  styleUrls: ['./alert-panel.component.scss']\n})\nexport class AlertPanelComponent implements OnInit {\n  @Input()\n  title = '';\n  @Input()\n  bootstrapClass = '';\n  @Input()\n  type: 'warning' | 'error' | 'info' | 'success' | 'danger';\n  @Input()\n  typeIcon: Icons | string;\n  @Input()\n  size: 'slim' | 'normal' = 'normal';\n  @Input()\n  showIcon = true;\n  @Input()\n  showTitle = true;\n  @Input()\n  dismissible = false;\n\n  /**\n   * The event that is triggered when the close button (x) has been\n   * pressed.\n   */\n  @Output()\n  dismissed = new EventEmitter();\n\n  icons = Icons;\n\n  ngOnInit() {\n    switch (this.type) {\n      case 'warning':\n        this.title = this.title || $localize`Warning`;\n        this.typeIcon = this.typeIcon || Icons.warning;\n        this.bootstrapClass = this.bootstrapClass || 'warning';\n        break;\n      case 'error':\n        this.title = this.title || $localize`Error`;\n        this.typeIcon = this.typeIcon || Icons.destroyCircle;\n        this.bootstrapClass = this.bootstrapClass || 'danger';\n        break;\n      case 'info':\n        this.title = this.title || $localize`Information`;\n        this.typeIcon = this.typeIcon || Icons.infoCircle;\n        this.bootstrapClass = this.bootstrapClass || 'info';\n        break;\n      case 'success':\n        this.title = this.title || $localize`Success`;\n        this.typeIcon = this.typeIcon || Icons.check;\n        this.bootstrapClass = this.bootstrapClass || 'success';\n        break;\n      case 'danger':\n        this.title = this.title || $localize`Danger`;\n        this.typeIcon = this.typeIcon || Icons.warning;\n        this.bootstrapClass = this.bootstrapClass || 'danger';\n        break;\n    }\n  }\n\n  onClose(): void {\n    this.dismissed.emit();\n  }\n}\n","<ngb-alert type=\"{{ bootstrapClass }}\"\n           [dismissible]=\"dismissible\"\n           (closed)=\"onClose()\">\n  <table>\n    <ng-container *ngIf=\"size === 'normal'; else slim\">\n      <tr>\n        <td *ngIf=\"showIcon\"\n            rowspan=\"2\"\n            class=\"alert-panel-icon\">\n          <i [ngClass]=\"[icons.large3x]\"\n             class=\"alert-{{ bootstrapClass }} {{ typeIcon }}\"\n             aria-hidden=\"true\"></i>\n        </td>\n        <td *ngIf=\"showTitle\"\n            class=\"alert-panel-title\">{{ title }}</td>\n      </tr>\n      <tr>\n        <td class=\"alert-panel-text\">\n          <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n        </td>\n      </tr>\n    </ng-container>\n    <ng-template #slim>\n      <tr>\n        <td *ngIf=\"showIcon\"\n            class=\"alert-panel-icon\">\n          <i class=\"alert-{{ bootstrapClass }} {{ typeIcon }}\"\n             aria-hidden=\"true\"></i>\n        </td>\n        <td *ngIf=\"showTitle\"\n            class=\"alert-panel-title\">{{ title }}</td>\n        <td class=\"alert-panel-text\">\n          <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n        </td>\n      </tr>\n    </ng-template>\n  </table>\n</ngb-alert>\n\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n","import { Location } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\n\n@Component({\n  selector: 'cd-back-button',\n  templateUrl: './back-button.component.html',\n  styleUrls: ['./back-button.component.scss']\n})\nexport class BackButtonComponent {\n  @Output() backAction = new EventEmitter();\n  @Input() name: string = this.actionLabels.CANCEL;\n\n  constructor(private location: Location, private actionLabels: ActionLabelsI18n) {}\n\n  back() {\n    if (this.backAction.observers.length === 0) {\n      this.location.back();\n    } else {\n      this.backAction.emit();\n    }\n  }\n}\n","<button class=\"btn btn-light tc_backButton\"\n        (click)=\"back()\"\n        type=\"button\">\n  {{ name }}\n</button>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cd-label',\n  templateUrl: './cd-label.component.html',\n  styleUrls: ['./cd-label.component.scss']\n})\nexport class CdLabelComponent {\n  @Input() key?: string;\n  @Input() value?: string;\n}\n","<span *ngIf=\"!key; else key_value\"\n      class=\"badge badge-{{value}}\"\n      ngClass=\"{{value | colorClassFromText}}\">\n  {{ value }}\n</span>\n\n<ng-template #key_value>\n  <span class=\"badge badge-background-primary badge-{{key}}-{{value}}\">\n        {{ key }}: {{ value }}\n  </span>\n</ng-template>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'colorClassFromText'\n})\nexport class ColorClassFromTextPipe implements PipeTransform {\n  readonly cssClasses: string[] = [\n    'badge-cd-label-green',\n    'badge-cd-label-cyan',\n    'badge-cd-label-purple',\n    'badge-cd-label-light-blue',\n    'badge-cd-label-gold',\n    'badge-cd-label-light-green'\n  ];\n\n  transform(text: string): string {\n    let hash = 0;\n    let charCode = 0;\n    if (text) {\n      for (let i = 0; i < text.length; i++) {\n        charCode = text.charCodeAt(i);\n        // eslint-disable-next-line no-bitwise\n        hash = Math.abs((hash << 5) - hash + charCode);\n      }\n    }\n    return this.cssClasses[hash % this.cssClasses.length];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  NgbAlertModule,\n  NgbDatepickerModule,\n  NgbDropdownModule,\n  NgbPopoverModule,\n  NgbProgressbarModule,\n  NgbTimepickerModule,\n  NgbTooltipModule\n} from '@ng-bootstrap/ng-bootstrap';\nimport { ClickOutsideModule } from 'ng-click-outside';\nimport { ChartsModule } from 'ng2-charts';\nimport { SimplebarAngularModule } from 'simplebar-angular';\n\nimport { MotdComponent } from '~/app/shared/components/motd/motd.component';\nimport { DirectivesModule } from '../directives/directives.module';\nimport { PipesModule } from '../pipes/pipes.module';\nimport { AlertPanelComponent } from './alert-panel/alert-panel.component';\nimport { BackButtonComponent } from './back-button/back-button.component';\nimport { CdLabelComponent } from './cd-label/cd-label.component';\nimport { ColorClassFromTextPipe } from './cd-label/color-class-from-text.pipe';\nimport { ConfigOptionComponent } from './config-option/config-option.component';\nimport { ConfirmationModalComponent } from './confirmation-modal/confirmation-modal.component';\nimport { Copy2ClipboardButtonComponent } from './copy2clipboard-button/copy2clipboard-button.component';\nimport { CriticalConfirmationModalComponent } from './critical-confirmation-modal/critical-confirmation-modal.component';\nimport { CustomLoginBannerComponent } from './custom-login-banner/custom-login-banner.component';\nimport { DateTimePickerComponent } from './date-time-picker/date-time-picker.component';\nimport { DocComponent } from './doc/doc.component';\nimport { DownloadButtonComponent } from './download-button/download-button.component';\nimport { FormButtonPanelComponent } from './form-button-panel/form-button-panel.component';\nimport { FormModalComponent } from './form-modal/form-modal.component';\nimport { GrafanaComponent } from './grafana/grafana.component';\nimport { HelperComponent } from './helper/helper.component';\nimport { LanguageSelectorComponent } from './language-selector/language-selector.component';\nimport { LoadingPanelComponent } from './loading-panel/loading-panel.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { NotificationsSidebarComponent } from './notifications-sidebar/notifications-sidebar.component';\nimport { OrchestratorDocPanelComponent } from './orchestrator-doc-panel/orchestrator-doc-panel.component';\nimport { PwdExpirationNotificationComponent } from './pwd-expiration-notification/pwd-expiration-notification.component';\nimport { RefreshSelectorComponent } from './refresh-selector/refresh-selector.component';\nimport { SelectBadgesComponent } from './select-badges/select-badges.component';\nimport { SelectComponent } from './select/select.component';\nimport { SparklineComponent } from './sparkline/sparkline.component';\nimport { SubmitButtonComponent } from './submit-button/submit-button.component';\nimport { TelemetryNotificationComponent } from './telemetry-notification/telemetry-notification.component';\nimport { UsageBarComponent } from './usage-bar/usage-bar.component';\nimport { WizardComponent } from './wizard/wizard.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbAlertModule,\n    NgbPopoverModule,\n    NgbProgressbarModule,\n    NgbTooltipModule,\n    ChartsModule,\n    ReactiveFormsModule,\n    PipesModule,\n    DirectivesModule,\n    NgbDropdownModule,\n    ClickOutsideModule,\n    SimplebarAngularModule,\n    RouterModule,\n    NgbDatepickerModule,\n    NgbTimepickerModule\n  ],\n  declarations: [\n    SparklineComponent,\n    HelperComponent,\n    SelectBadgesComponent,\n    SubmitButtonComponent,\n    UsageBarComponent,\n    LoadingPanelComponent,\n    ModalComponent,\n    NotificationsSidebarComponent,\n    CriticalConfirmationModalComponent,\n    ConfirmationModalComponent,\n    LanguageSelectorComponent,\n    GrafanaComponent,\n    SelectComponent,\n    BackButtonComponent,\n    RefreshSelectorComponent,\n    ConfigOptionComponent,\n    AlertPanelComponent,\n    FormModalComponent,\n    PwdExpirationNotificationComponent,\n    TelemetryNotificationComponent,\n    OrchestratorDocPanelComponent,\n    DateTimePickerComponent,\n    DocComponent,\n    Copy2ClipboardButtonComponent,\n    DownloadButtonComponent,\n    FormButtonPanelComponent,\n    MotdComponent,\n    WizardComponent,\n    CustomLoginBannerComponent,\n    CdLabelComponent,\n    ColorClassFromTextPipe\n  ],\n  providers: [],\n  exports: [\n    SparklineComponent,\n    HelperComponent,\n    SelectBadgesComponent,\n    SubmitButtonComponent,\n    BackButtonComponent,\n    LoadingPanelComponent,\n    UsageBarComponent,\n    ModalComponent,\n    NotificationsSidebarComponent,\n    LanguageSelectorComponent,\n    GrafanaComponent,\n    SelectComponent,\n    RefreshSelectorComponent,\n    ConfigOptionComponent,\n    AlertPanelComponent,\n    PwdExpirationNotificationComponent,\n    TelemetryNotificationComponent,\n    OrchestratorDocPanelComponent,\n    DateTimePickerComponent,\n    DocComponent,\n    Copy2ClipboardButtonComponent,\n    DownloadButtonComponent,\n    FormButtonPanelComponent,\n    MotdComponent,\n    WizardComponent,\n    CustomLoginBannerComponent,\n    CdLabelComponent\n  ]\n})\nexport class ComponentsModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, NgForm } from '@angular/forms';\n\nimport _ from 'lodash';\n\nimport { ConfigurationService } from '~/app/shared/api/configuration.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { ConfigOptionTypes } from './config-option.types';\n\n@Component({\n  selector: 'cd-config-option',\n  templateUrl: './config-option.component.html',\n  styleUrls: ['./config-option.component.scss']\n})\nexport class ConfigOptionComponent implements OnInit {\n  @Input()\n  optionNames: Array<string> = [];\n  @Input()\n  optionsForm: CdFormGroup = new CdFormGroup({});\n  @Input()\n  optionsFormDir: NgForm = new NgForm([], []);\n  @Input()\n  optionsFormGroupName = '';\n  @Input()\n  optionsFormShowReset = true;\n\n  icons = Icons;\n  options: Array<any> = [];\n  optionsFormGroup: CdFormGroup = new CdFormGroup({});\n\n  constructor(private configService: ConfigurationService) {}\n\n  private static optionNameToText(optionName: string): string {\n    const sections = ['mon', 'mgr', 'osd', 'mds', 'client'];\n    return optionName\n      .split('_')\n      .filter((c, index) => index !== 0 || !sections.includes(c))\n      .map((c) => c.charAt(0).toUpperCase() + c.substring(1))\n      .join(' ');\n  }\n\n  ngOnInit() {\n    this.createForm();\n    this.loadStoredData();\n  }\n\n  private createForm() {\n    this.optionsForm.addControl(this.optionsFormGroupName, this.optionsFormGroup);\n    this.optionNames.forEach((optionName) => {\n      this.optionsFormGroup.addControl(optionName, new FormControl(null));\n    });\n  }\n\n  getStep(type: string, value: any): number | undefined {\n    return ConfigOptionTypes.getTypeStep(type, value);\n  }\n\n  private loadStoredData() {\n    this.configService.filter(this.optionNames).subscribe((data: any) => {\n      this.options = data.map((configOption: any) => {\n        const formControl = this.optionsForm.get(configOption.name);\n        const typeValidators = ConfigOptionTypes.getTypeValidators(configOption);\n        configOption.additionalTypeInfo = ConfigOptionTypes.getType(configOption.type);\n\n        // Set general information and value\n        configOption.text = ConfigOptionComponent.optionNameToText(configOption.name);\n        configOption.value = _.find(configOption.value, (p) => {\n          return p.section === 'osd'; // TODO: Can handle any other section\n        });\n        if (configOption.value) {\n          if (configOption.additionalTypeInfo.name === 'bool') {\n            formControl.setValue(configOption.value.value === 'true');\n          } else {\n            formControl.setValue(configOption.value.value);\n          }\n        }\n\n        // Set type information and validators\n        if (typeValidators) {\n          configOption.patternHelpText = typeValidators.patternHelpText;\n          if ('max' in typeValidators && typeValidators.max !== '') {\n            configOption.maxValue = typeValidators.max;\n          }\n          if ('min' in typeValidators && typeValidators.min !== '') {\n            configOption.minValue = typeValidators.min;\n          }\n          formControl.setValidators(typeValidators.validators);\n        }\n\n        return configOption;\n      });\n    });\n  }\n\n  saveValues() {\n    const options = {};\n    this.optionNames.forEach((optionName) => {\n      const optionValue = this.optionsForm.getValue(optionName);\n      if (optionValue !== null && optionValue !== '') {\n        options[optionName] = {\n          section: 'osd', // TODO: Can handle any other section\n          value: optionValue\n        };\n      }\n    });\n\n    return this.configService.bulkCreate({ options: options });\n  }\n\n  resetValue(optionName: string) {\n    this.configService.delete(optionName, 'osd').subscribe(\n      // TODO: Can handle any other section\n      () => {\n        const formControl = this.optionsForm.get(optionName);\n        formControl.reset();\n      }\n    );\n  }\n}\n","<div [formGroup]=\"optionsFormGroup\">\n  <div *ngFor=\"let option of options; let last = last\">\n    <div class=\"form-group row pt-2\"\n         *ngIf=\"option.type === 'bool'\">\n      <label class=\"cd-col-form-label\"\n             [for]=\"option.name\">\n        <b>{{ option.text }}</b>\n        <br>\n        <span class=\"text-muted\">\n          {{ option.desc }}\n          <cd-helper *ngIf=\"option.long_desc\">\n            {{ option.long_desc }}</cd-helper>\n        </span>\n      </label>\n\n      <div class=\"cd-col-form-input\">\n        <div class=\"custom-control custom-checkbox\">\n          <input class=\"custom-control-input\"\n                 type=\"checkbox\"\n                 [id]=\"option.name\"\n                 [formControlName]=\"option.name\">\n          <label class=\"custom-control-label\"\n                 [for]=\"option.name\"></label>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group row pt-2\"\n         *ngIf=\"option.type !== 'bool'\">\n      <label class=\"cd-col-form-label\"\n             [for]=\"option.name\">{{ option.text }}\n        <br>\n        <span class=\"text-muted\">\n          {{ option.desc }}\n          <cd-helper *ngIf=\"option.long_desc\">\n            {{ option.long_desc }}</cd-helper>\n        </span>\n      </label>\n      <div class=\"cd-col-form-input\">\n        <div class=\"input-group\">\n          <input class=\"form-control\"\n                 [type]=\"option.additionalTypeInfo.inputType\"\n                 [id]=\"option.name\"\n                 [placeholder]=\"option.additionalTypeInfo.humanReadable\"\n                 [formControlName]=\"option.name\"\n                 [step]=\"getStep(option.type, optionsForm.getValue(option.name))\">\n          <button class=\"btn btn-light\"\n                  type=\"button\"\n                  data-toggle=\"button\"\n                  title=\"Remove the custom configuration value. The default configuration will be inherited and used instead.\"\n                  (click)=\"resetValue(option.name)\"\n                  i18n-title\n                  *ngIf=\"optionsFormShowReset\">\n            <i [ngClass]=\"[icons.erase]\"\n               aria-hidden=\"true\"></i>\n          </button>\n        </div>\n        <span class=\"invalid-feedback\"\n              *ngIf=\"optionsForm.showError(option.name, optionsFormDir, 'pattern')\">\n          {{ option.additionalTypeInfo.patternHelpText }}</span>\n        <span class=\"invalid-feedback\"\n              *ngIf=\"optionsForm.showError(option.name, optionsFormDir, 'invalidUuid')\">\n          {{ option.additionalTypeInfo.patternHelpText }}</span>\n        <span class=\"invalid-feedback\"\n              *ngIf=\"optionsForm.showError(option.name, optionsFormDir, 'max')\"\n              i18n>The entered value is too high! It must not be greater than {{ option.maxValue }}.</span>\n        <span class=\"invalid-feedback\"\n              *ngIf=\"optionsForm.showError(option.name, optionsFormDir, 'min')\"\n              i18n>The entered value is too low! It must not be lower than {{ option.minValue }}.</span>\n      </div>\n    </div>\n    <hr *ngIf=\"!last\"\n        class=\"my-2\">\n  </div>\n</div>\n","import { Validators } from '@angular/forms';\n\nimport _ from 'lodash';\n\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { ConfigFormModel } from './config-option.model';\n\nexport class ConfigOptionTypes {\n  // TODO: I18N\n  private static knownTypes: Array<any> = [\n    {\n      name: 'uint',\n      inputType: 'number',\n      humanReadable: 'Unsigned integer value',\n      defaultMin: 0,\n      patternHelpText: 'The entered value needs to be an unsigned number.',\n      isNumberType: true,\n      allowsNegative: false\n    },\n    {\n      name: 'int',\n      inputType: 'number',\n      humanReadable: 'Integer value',\n      patternHelpText: 'The entered value needs to be a number.',\n      isNumberType: true,\n      allowsNegative: true\n    },\n    {\n      name: 'size',\n      inputType: 'number',\n      humanReadable: 'Unsigned integer value (>=16bit)',\n      defaultMin: 0,\n      patternHelpText: 'The entered value needs to be a unsigned number.',\n      isNumberType: true,\n      allowsNegative: false\n    },\n    {\n      name: 'secs',\n      inputType: 'number',\n      humanReadable: 'Number of seconds',\n      defaultMin: 1,\n      patternHelpText: 'The entered value needs to be a number >= 1.',\n      isNumberType: true,\n      allowsNegative: false\n    },\n    {\n      name: 'float',\n      inputType: 'number',\n      humanReadable: 'Double value',\n      patternHelpText: 'The entered value needs to be a number or decimal.',\n      isNumberType: true,\n      allowsNegative: true\n    },\n    { name: 'str', inputType: 'text', humanReadable: 'Text', isNumberType: false },\n    {\n      name: 'addr',\n      inputType: 'text',\n      humanReadable: 'IPv4 or IPv6 address',\n      patternHelpText: 'The entered value needs to be a valid IP address.',\n      isNumberType: false\n    },\n    {\n      name: 'uuid',\n      inputType: 'text',\n      humanReadable: 'UUID',\n      patternHelpText:\n        'The entered value is not a valid UUID, e.g.: 67dcac9f-2c03-4d6c-b7bd-1210b3a259a8',\n      isNumberType: false\n    },\n    { name: 'bool', inputType: 'checkbox', humanReadable: 'Boolean value', isNumberType: false }\n  ];\n\n  public static getType(type: string): any {\n    const currentType = _.find(this.knownTypes, (t) => {\n      return t.name === type;\n    });\n\n    if (currentType !== undefined) {\n      return currentType;\n    }\n\n    throw new Error('Found unknown type \"' + type + '\" for config option.');\n  }\n\n  public static getTypeValidators(configOption: ConfigFormModel): any {\n    const typeParams = ConfigOptionTypes.getType(configOption.type);\n\n    if (typeParams.name === 'bool' || typeParams.name === 'str') {\n      return;\n    }\n\n    const typeValidators: Record<string, any> = {\n      validators: [],\n      patternHelpText: typeParams.patternHelpText\n    };\n\n    if (typeParams.isNumberType) {\n      if (configOption.max && configOption.max !== '') {\n        typeValidators['max'] = configOption.max;\n        typeValidators.validators.push(Validators.max(configOption.max));\n      }\n\n      if (configOption.min && configOption.min !== '') {\n        typeValidators['min'] = configOption.min;\n        typeValidators.validators.push(Validators.min(configOption.min));\n      } else if ('defaultMin' in typeParams) {\n        typeValidators['min'] = typeParams.defaultMin;\n        typeValidators.validators.push(Validators.min(typeParams.defaultMin));\n      }\n\n      if (configOption.type === 'float') {\n        typeValidators.validators.push(CdValidators.decimalNumber());\n      } else {\n        typeValidators.validators.push(CdValidators.number(typeParams.allowsNegative));\n      }\n    } else if (configOption.type === 'addr') {\n      typeValidators.validators = [CdValidators.ip()];\n    } else if (configOption.type === 'uuid') {\n      typeValidators.validators = [CdValidators.uuid()];\n    }\n\n    return typeValidators;\n  }\n\n  public static getTypeStep(type: string, value: number): number | undefined {\n    const numberTypes = ['uint', 'int', 'size', 'secs'];\n\n    if (numberTypes.includes(type)) {\n      return 1;\n    }\n\n    if (type === 'float') {\n      if (value !== null) {\n        const stringVal = value.toString();\n        if (stringVal.indexOf('.') !== -1) {\n          // Value type float and contains decimal characters\n          const decimal = value.toString().split('.');\n          return Math.pow(10, -decimal[1].length);\n        }\n      }\n\n      return 0.1;\n    }\n\n    return undefined;\n  }\n}\n","import { Component, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'cd-confirmation-modal',\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.scss']\n})\nexport class ConfirmationModalComponent implements OnInit, OnDestroy {\n  // Needed\n  buttonText: string;\n  titleText: string;\n  onSubmit: Function;\n\n  // One of them is needed\n  bodyTpl?: TemplateRef<any>;\n  description?: TemplateRef<any>;\n\n  // Optional\n  warning = false;\n  bodyData?: object;\n  onCancel?: Function;\n  bodyContext?: object;\n  showSubmit = true;\n\n  // Component only\n  boundCancel = this.cancel.bind(this);\n  confirmationForm: FormGroup;\n  private canceled = false;\n\n  constructor(public activeModal: NgbActiveModal) {\n    this.confirmationForm = new FormGroup({});\n  }\n\n  ngOnInit() {\n    this.bodyContext = this.bodyContext || {};\n    this.bodyContext['$implicit'] = this.bodyData;\n    if (!this.onSubmit) {\n      throw new Error('No submit action defined');\n    } else if (!this.buttonText) {\n      throw new Error('No action name defined');\n    } else if (!this.titleText) {\n      throw new Error('No title defined');\n    } else if (!this.bodyTpl && !this.description) {\n      throw new Error('No description defined');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.onCancel && this.canceled) {\n      this.onCancel();\n    }\n  }\n\n  cancel() {\n    this.canceled = true;\n    this.activeModal.close();\n  }\n\n  stopLoadingSpinner() {\n    this.confirmationForm.setErrors({ cdSubmitButton: true });\n  }\n}\n","<cd-modal (hide)=\"cancel()\">\n  <ng-container class=\"modal-title\">\n    <span class=\"text-warning\"\n          *ngIf=\"warning\">\n      <i class=\"fa fa-exclamation-triangle fa-1x\"></i>\n    </span>{{ titleText }}</ng-container>\n  <ng-container class=\"modal-content\">\n    <form name=\"confirmationForm\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"confirmationForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <ng-container *ngTemplateOutlet=\"bodyTpl; context: bodyContext\"></ng-container>\n        <p *ngIf=\"description\">\n          {{description}}\n        </p>\n      </div>\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit(confirmationForm.value)\"\n                              (backActionEvent)=\"boundCancel()\"\n                              [form]=\"confirmationForm\"\n                              [submitText]=\"buttonText\"\n                              [showSubmit]=\"showSubmit\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, HostListener, Input } from '@angular/core';\n\nimport { detect } from 'detect-browser';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\n\n@Component({\n  selector: 'cd-copy-2-clipboard-button',\n  templateUrl: './copy2clipboard-button.component.html',\n  styleUrls: ['./copy2clipboard-button.component.scss']\n})\nexport class Copy2ClipboardButtonComponent {\n  @Input()\n  private source: string;\n\n  @Input()\n  byId = true;\n\n  icons = Icons;\n\n  constructor(private toastr: ToastrService) {}\n\n  private getText(): string {\n    const element = document.getElementById(this.source) as HTMLInputElement;\n    return element.value;\n  }\n\n  @HostListener('click')\n  onClick() {\n    try {\n      const browser = detect();\n      const text = this.byId ? this.getText() : this.source;\n      const toastrFn = () => {\n        this.toastr.success('Copied text to the clipboard successfully.');\n      };\n      if (['firefox', 'ie', 'ios', 'safari'].includes(browser.name)) {\n        // Various browsers do not support the `Permissions API`.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API#Browser_compatibility\n        navigator.clipboard.writeText(text).then(() => toastrFn());\n      } else {\n        // Checking if we have the clipboard-write permission\n        navigator.permissions\n          .query({ name: 'clipboard-write' as PermissionName })\n          .then((result: any) => {\n            if (result.state === 'granted' || result.state === 'prompt') {\n              navigator.clipboard.writeText(text).then(() => toastrFn());\n            }\n          });\n      }\n    } catch (_) {\n      this.toastr.error('Failed to copy text to the clipboard.');\n    }\n  }\n}\n","<button (click)=\"onClick()\"\n        type=\"button\"\n        class=\"btn btn-light\"\n        i18n-title\n        title=\"Copy to Clipboard\">\n  <i [ngClass]=\"[icons.clipboard]\"></i>\n</button>\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable } from 'rxjs';\n\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { SubmitButtonComponent } from '../submit-button/submit-button.component';\n\n@Component({\n  selector: 'cd-deletion-modal',\n  templateUrl: './critical-confirmation-modal.component.html',\n  styleUrls: ['./critical-confirmation-modal.component.scss']\n})\nexport class CriticalConfirmationModalComponent implements OnInit {\n  @ViewChild(SubmitButtonComponent, { static: true })\n  submitButton: SubmitButtonComponent;\n  bodyTemplate: TemplateRef<any>;\n  bodyContext: object;\n  submitActionObservable: () => Observable<any>;\n  submitAction: Function;\n  deletionForm: CdFormGroup;\n  itemDescription: 'entry';\n  itemNames: string[];\n  actionDescription = 'delete';\n\n  childFormGroup: CdFormGroup;\n  childFormGroupTemplate: TemplateRef<any>;\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  ngOnInit() {\n    const controls = {\n      confirmation: new FormControl(false, [Validators.requiredTrue])\n    };\n    if (this.childFormGroup) {\n      controls['child'] = this.childFormGroup;\n    }\n    this.deletionForm = new CdFormGroup(controls);\n    if (!(this.submitAction || this.submitActionObservable)) {\n      throw new Error('No submit action defined');\n    }\n  }\n\n  callSubmitAction() {\n    if (this.submitActionObservable) {\n      this.submitActionObservable().subscribe({\n        error: this.stopLoadingSpinner.bind(this),\n        complete: this.hideModal.bind(this)\n      });\n    } else {\n      this.submitAction();\n    }\n  }\n\n  hideModal() {\n    this.activeModal.close();\n  }\n\n  stopLoadingSpinner() {\n    this.deletionForm.setErrors({ cdSubmitButton: true });\n  }\n}\n","<cd-modal #modal\n          [modalRef]=\"activeModal\">\n  <ng-container class=\"modal-title\">\n    <ng-container *ngTemplateOutlet=\"deletionHeading\"></ng-container>\n  </ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form name=\"deletionForm\"\n          #formDir=\"ngForm\"\n          [formGroup]=\"deletionForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <ng-container *ngTemplateOutlet=\"bodyTemplate; context: bodyContext\"></ng-container>\n        <div class=\"question\">\n          <span *ngIf=\"itemNames; else noNames\">\n            <p *ngIf=\"itemNames.length === 1; else manyNames\"\n               i18n>Are you sure that you want to {{ actionDescription | lowercase }} <strong>{{ itemNames[0] }}</strong>?</p>\n            <ng-template #manyNames>\n              <p i18n>Are you sure that you want to {{ actionDescription | lowercase }} the selected items?</p>\n              <ul>\n                <li *ngFor=\"let itemName of itemNames\"><strong>{{ itemName }}</strong></li>\n              </ul>\n            </ng-template >\n          </span>\n          <ng-template #noNames>\n            <p i18n>Are you sure that you want to {{ actionDescription | lowercase }} the selected {{ itemDescription }}?</p>\n          </ng-template>\n          <ng-container *ngTemplateOutlet=\"childFormGroupTemplate; context:{form:deletionForm}\"></ng-container>\n          <div class=\"form-group\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\"\n                     class=\"custom-control-input\"\n                     name=\"confirmation\"\n                     id=\"confirmation\"\n                     formControlName=\"confirmation\"\n                     autofocus>\n              <label class=\"custom-control-label\"\n                     for=\"confirmation\"\n                     i18n>Yes, I am sure.</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"callSubmitAction()\"\n                              [form]=\"deletionForm\"\n                              [submitText]=\"(actionDescription | titlecase) + ' ' + itemDescription\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n\n<ng-template #deletionHeading>\n  {{ actionDescription | titlecase }} {{ itemDescription }}\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\nimport _ from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { CustomLoginBannerService } from '~/app/shared/api/custom-login-banner.service';\n\n@Component({\n  selector: 'cd-custom-login-banner',\n  templateUrl: './custom-login-banner.component.html',\n  styleUrls: ['./custom-login-banner.component.scss']\n})\nexport class CustomLoginBannerComponent implements OnInit {\n  bannerText$: Observable<string>;\n  constructor(private customLoginBannerService: CustomLoginBannerService) {}\n\n  ngOnInit(): void {\n    this.bannerText$ = this.customLoginBannerService.getBannerText();\n  }\n}\n","<p class=\"login-text\"\n   *ngIf=\"bannerText$ | async as bannerText\">{{ bannerText }}</p>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { NgbCalendar, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport moment from 'moment';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cd-date-time-picker',\n  templateUrl: './date-time-picker.component.html',\n  styleUrls: ['./date-time-picker.component.scss']\n})\nexport class DateTimePickerComponent implements OnInit {\n  @Input()\n  control: FormControl;\n\n  @Input()\n  hasSeconds = true;\n\n  @Input()\n  hasTime = true;\n\n  format: string;\n  minDate: NgbDateStruct;\n  date: NgbDateStruct;\n  time: NgbTimeStruct;\n\n  sub: Subscription;\n\n  constructor(private calendar: NgbCalendar) {}\n\n  ngOnInit() {\n    this.minDate = this.calendar.getToday();\n    if (!this.hasTime) {\n      this.format = 'YYYY-MM-DD';\n    } else if (this.hasSeconds) {\n      this.format = 'YYYY-MM-DD HH:mm:ss';\n    } else {\n      this.format = 'YYYY-MM-DD HH:mm';\n    }\n\n    let mom = moment(this.control?.value, this.format);\n\n    if (!mom.isValid() || mom.isBefore(moment())) {\n      mom = moment();\n    }\n\n    this.date = { year: mom.year(), month: mom.month() + 1, day: mom.date() };\n    this.time = { hour: mom.hour(), minute: mom.minute(), second: mom.second() };\n\n    this.onModelChange();\n  }\n\n  onModelChange() {\n    if (this.date) {\n      const datetime = Object.assign({}, this.date, this.time);\n      datetime.month--;\n      setTimeout(() => {\n        this.control.setValue(moment(datetime).format(this.format));\n      });\n    } else {\n      setTimeout(() => {\n        this.control.setValue('');\n      });\n    }\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n  <ngb-datepicker #dp\n                  [(ngModel)]=\"date\"\n                  [minDate]=\"minDate\"\n                  (ngModelChange)=\"onModelChange()\"></ngb-datepicker>\n</div>\n\n<div class=\"d-flex justify-content-center\"\n     *ngIf=\"hasTime\">\n  <ngb-timepicker [seconds]=\"hasSeconds\"\n                  [(ngModel)]=\"time\"\n                  (ngModelChange)=\"onModelChange()\"></ngb-timepicker>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { DocService } from '~/app/shared/services/doc.service';\n\n@Component({\n  selector: 'cd-doc',\n  templateUrl: './doc.component.html',\n  styleUrls: ['./doc.component.scss']\n})\nexport class DocComponent implements OnInit {\n  @Input() section: string;\n  @Input() docText = $localize`documentation`;\n  @Input() noSubscribe: boolean;\n\n  docUrl: string;\n\n  constructor(private docService: DocService) {}\n\n  ngOnInit() {\n    if (this.noSubscribe) {\n      this.docUrl = this.docService.urlGenerator(this.section);\n    } else {\n      this.docService.subscribeOnce(this.section, (url: string) => {\n        this.docUrl = url;\n      });\n    }\n  }\n}\n","<a href=\"{{ docUrl }}\"\n   target=\"_blank\">{{ docText }}</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { TextToDownloadService } from '~/app/shared/services/text-to-download.service';\n\n@Component({\n  selector: 'cd-download-button',\n  templateUrl: './download-button.component.html',\n  styleUrls: ['./download-button.component.scss']\n})\nexport class DownloadButtonComponent {\n  @Input() objectItem: object;\n  @Input() textItem: string;\n  @Input() fileName: any;\n  @Input() title = $localize`Download`;\n\n  icons = Icons;\n  constructor(private textToDownloadService: TextToDownloadService) {}\n\n  download(format?: string) {\n    this.fileName = `${this.fileName}_${new Date().toLocaleDateString()}`;\n    if (format === 'json') {\n      this.textToDownloadService.download(\n        JSON.stringify(this.objectItem, null, 2),\n        `${this.fileName}.json`\n      );\n    } else {\n      this.textToDownloadService.download(this.textItem, `${this.fileName}.txt`);\n    }\n  }\n}\n","<div ngbDropdown\n     placement=\"bottom-right\">\n  <button type=\"button\"\n          [title]=\"title\"\n          class=\"btn btn-light dropdown-toggle-split\"\n          ngbDropdownToggle>\n    <i [ngClass]=\"[icons.download]\"></i>\n  </button>\n  <div ngbDropdownMenu>\n    <button ngbDropdownItem\n            (click)=\"download('json')\"\n            *ngIf=\"objectItem\">\n      <i [ngClass]=\"[icons.json]\"></i>\n      <span>JSON</span>\n    </button>\n    <button ngbDropdownItem\n            (click)=\"download()\"\n            *ngIf=\"textItem\">\n      <i [ngClass]=\"[icons.text]\"></i>\n      <span>Text</span>\n    </button>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { FormGroup, NgForm } from '@angular/forms';\n\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { SubmitButtonComponent } from '../submit-button/submit-button.component';\n\n@Component({\n  selector: 'cd-form-button-panel',\n  templateUrl: './form-button-panel.component.html',\n  styleUrls: ['./form-button-panel.component.scss']\n})\nexport class FormButtonPanelComponent {\n  @ViewChild(SubmitButtonComponent)\n  submitButton: SubmitButtonComponent;\n\n  @Output()\n  submitActionEvent = new EventEmitter();\n  @Output()\n  backActionEvent = new EventEmitter();\n\n  @Input()\n  form: FormGroup | NgForm;\n  @Input()\n  showSubmit = true;\n  @Input()\n  wrappingClass = '';\n  @Input()\n  btnClass = '';\n  @Input()\n  submitText: string = this.actionLabels.CREATE;\n  @Input()\n  cancelText: string = this.actionLabels.CANCEL;\n  @Input()\n  disabled = false;\n\n  constructor(\n    private location: Location,\n    private actionLabels: ActionLabelsI18n,\n    private modalService: ModalService\n  ) {}\n\n  submitAction() {\n    this.submitActionEvent.emit();\n  }\n\n  backAction() {\n    if (this.backActionEvent.observers.length === 0) {\n      if (this.modalService.hasOpenModals()) {\n        this.modalService.dismissAll();\n      } else {\n        this.location.back();\n      }\n    } else {\n      this.backActionEvent.emit();\n    }\n  }\n}\n","<div [class]=\"wrappingClass\">\n  <cd-back-button class=\"m-2\"\n                  (backAction)=\"backAction()\"\n                  [name]=\"cancelText\"></cd-back-button>\n  <cd-submit-button *ngIf=\"showSubmit\"\n                    (submitAction)=\"submitAction()\"\n                    [disabled]=\"disabled\"\n                    [form]=\"form\"\n                    [ariaLabel]=\"submitText\"\n                    data-cy=\"submitBtn\">{{ submitText }}</cd-submit-button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, ValidatorFn, Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdFormModalFieldConfig } from '~/app/shared/models/cd-form-modal-field-config';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { FormatterService } from '~/app/shared/services/formatter.service';\n\n@Component({\n  selector: 'cd-form-modal',\n  templateUrl: './form-modal.component.html',\n  styleUrls: ['./form-modal.component.scss']\n})\nexport class FormModalComponent implements OnInit {\n  // Input\n  titleText: string;\n  message: string;\n  fields: CdFormModalFieldConfig[];\n  submitButtonText: string;\n  onSubmit: Function;\n\n  // Internal\n  formGroup: CdFormGroup;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private formBuilder: CdFormBuilder,\n    private formatter: FormatterService,\n    private dimlessBinaryPipe: DimlessBinaryPipe\n  ) {}\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  createForm() {\n    const controlsConfig: Record<string, FormControl> = {};\n    this.fields.forEach((field) => {\n      controlsConfig[field.name] = this.createFormControl(field);\n    });\n    this.formGroup = this.formBuilder.group(controlsConfig);\n  }\n\n  private createFormControl(field: CdFormModalFieldConfig): FormControl {\n    let validators: ValidatorFn[] = [];\n    if (_.isBoolean(field.required) && field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validators) {\n      validators = validators.concat(field.validators);\n    }\n    return new FormControl(\n      _.defaultTo(\n        field.type === 'binary' ? this.dimlessBinaryPipe.transform(field.value) : field.value,\n        null\n      ),\n      { validators }\n    );\n  }\n\n  getError(field: CdFormModalFieldConfig): string {\n    const formErrors = this.formGroup.get(field.name).errors;\n    const errors = Object.keys(formErrors).map((key) => {\n      return this.getErrorMessage(key, formErrors[key], field.errors);\n    });\n    return errors.join('<br>');\n  }\n\n  private getErrorMessage(\n    error: string,\n    errorContext: any,\n    fieldErrors: { [error: string]: string }\n  ): string {\n    if (fieldErrors) {\n      const customError = fieldErrors[error];\n      if (customError) {\n        return customError;\n      }\n    }\n    if (['binaryMin', 'binaryMax'].includes(error)) {\n      // binaryMin and binaryMax return a function that take I18n to\n      // provide a translated error message.\n      return errorContext();\n    }\n    if (error === 'required') {\n      return $localize`This field is required.`;\n    }\n    return $localize`An error occurred.`;\n  }\n\n  onSubmitForm(values: any) {\n    const binaries = this.fields\n      .filter((field) => field.type === 'binary')\n      .map((field) => field.name);\n    binaries.forEach((key) => {\n      const value = values[key];\n      if (value) {\n        values[key] = this.formatter.toBytes(value);\n      }\n    });\n    this.activeModal.close();\n    if (_.isFunction(this.onSubmit)) {\n      this.onSubmit(values);\n    }\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container *ngIf=\"titleText\"\n                class=\"modal-title\">\n    {{ titleText }}\n  </ng-container>\n  <ng-container class=\"modal-content\">\n    <form [formGroup]=\"formGroup\"\n          #formDir=\"ngForm\"\n          novalidate>\n      <div class=\"modal-body\">\n        <p *ngIf=\"message\">{{ message }}</p>\n        <ng-container *ngFor=\"let field of fields\">\n          <div class=\"form-group row cd-{{field.name}}-form-group\">\n            <label *ngIf=\"field.label\"\n                   class=\"cd-col-form-label\"\n                   [ngClass]=\"{'required': field?.required === true}\"\n                   [for]=\"field.name\">\n              {{ field.label }}\n            </label>\n            <div [ngClass]=\"{'cd-col-form-input': field.label, 'col-sm-12': !field.label}\">\n              <input *ngIf=\"['text', 'number'].includes(field.type)\"\n                     [type]=\"field.type\"\n                     class=\"form-control\"\n                     [id]=\"field.name\"\n                     [name]=\"field.name\"\n                     [formControlName]=\"field.name\">\n              <input *ngIf=\"field.type === 'binary'\"\n                     type=\"text\"\n                     class=\"form-control\"\n                     [id]=\"field.name\"\n                     [name]=\"field.name\"\n                     [formControlName]=\"field.name\"\n                     cdDimlessBinary>\n              <select *ngIf=\"field.type === 'select'\"\n                      class=\"form-select\"\n                      [id]=\"field.name\"\n                      [formControlName]=\"field.name\">\n                <option *ngIf=\"field?.typeConfig?.placeholder\"\n                        [ngValue]=\"null\">\n                  {{ field?.typeConfig?.placeholder }}\n                </option>\n                <option *ngFor=\"let option of field?.typeConfig?.options\"\n                        [value]=\"option.value\">\n                  {{ option.text }}\n                </option>\n              </select>\n              <cd-select-badges *ngIf=\"field.type === 'select-badges'\"\n                                [id]=\"field.name\"\n                                [data]=\"field.value\"\n                                [customBadges]=\"field?.typeConfig?.customBadges\"\n                                [options]=\"field?.typeConfig?.options\"\n                                [messages]=\"field?.typeConfig?.messages\">\n              </cd-select-badges>\n              <span *ngIf=\"formGroup.showError(field.name, formDir)\"\n                    class=\"invalid-feedback\">\n                {{ getError(field) }}\n              </span>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmitForm(formGroup.value)\"\n                              [form]=\"formGroup\"\n                              [submitText]=\"submitButtonText\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\nimport { SettingsService } from '~/app/shared/api/settings.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\n\n@Component({\n  selector: 'cd-grafana',\n  templateUrl: './grafana.component.html',\n  styleUrls: ['./grafana.component.scss']\n})\nexport class GrafanaComponent implements OnInit, OnChanges {\n  grafanaSrc: SafeUrl;\n  url: string;\n  protocol: string;\n  host: string;\n  port: number;\n  baseUrl: any;\n  panelStyle: any;\n  grafanaExist = false;\n  mode = '&kiosk';\n  datasource: string;\n  loading = true;\n  styles: Record<string, string> = {};\n  dashboardExist = true;\n  showMessage = false;\n  time: string;\n  grafanaTimes: any;\n  icons = Icons;\n  readonly DEFAULT_TIME: string = 'from=now-1h&to=now';\n\n  @Input()\n  type: string;\n  @Input()\n  grafanaPath: string;\n  @Input()\n  grafanaStyle: string;\n  @Input()\n  uid: string;\n  @Input()\n  title: string;\n\n  constructor(private sanitizer: DomSanitizer, private settingsService: SettingsService) {\n    this.grafanaTimes = [\n      {\n        name: $localize`Last 5 minutes`,\n        value: 'from=now-5m&to=now'\n      },\n      {\n        name: $localize`Last 15 minutes`,\n        value: 'from=now-15m&to=now'\n      },\n      {\n        name: $localize`Last 30 minutes`,\n        value: 'from=now-30m&to=now'\n      },\n      {\n        name: $localize`Last 1 hour (Default)`,\n        value: 'from=now-1h&to=now'\n      },\n      {\n        name: $localize`Last 3 hours`,\n        value: 'from=now-3h&to=now'\n      },\n      {\n        name: $localize`Last 6 hours`,\n        value: 'from=now-6h&to=now'\n      },\n      {\n        name: $localize`Last 12 hours`,\n        value: 'from=now-12h&to=now'\n      },\n      {\n        name: $localize`Last 24 hours`,\n        value: 'from=now-24h&to=now'\n      },\n      {\n        name: $localize`Yesterday`,\n        value: 'from=now-1d%2Fd&to=now-1d%2Fd'\n      },\n      {\n        name: $localize`Today so far`,\n        value: 'from=now%2Fd&to=now'\n      },\n      {\n        name: $localize`Day before yesterday`,\n        value: 'from=now-2d%2Fd&to=now-2d%2Fd'\n      },\n      {\n        name: $localize`Last 2 days`,\n        value: 'from=now-2d&to=now'\n      },\n      {\n        name: $localize`This day last week`,\n        value: 'from=now-7d%2Fd&to=now-7d%2Fd'\n      },\n      {\n        name: $localize`Previous week`,\n        value: 'from=now-1w%2Fw&to=now-1w%2Fw'\n      },\n      {\n        name: $localize`This week so far`,\n        value: 'from=now%2Fw&to=now'\n      },\n      {\n        name: $localize`Last 7 days`,\n        value: 'from=now-7d&to=now'\n      },\n      {\n        name: $localize`Previous month`,\n        value: 'from=now-1M%2FM&to=now-1M%2FM'\n      },\n      {\n        name: $localize`This month so far`,\n        value: 'from=now%2FM&to=now'\n      },\n      {\n        name: $localize`Last 30 days`,\n        value: 'from=now-30d&to=now'\n      },\n      {\n        name: $localize`Last 90 days`,\n        value: 'from=now-90d&to=now'\n      },\n      {\n        name: $localize`Last 6 months`,\n        value: 'from=now-6M&to=now'\n      },\n      {\n        name: $localize`Last 1 year`,\n        value: 'from=now-1y&to=now'\n      },\n      {\n        name: $localize`Previous year`,\n        value: 'from=now-1y%2Fy&to=now-1y%2Fy'\n      },\n      {\n        name: $localize`This year so far`,\n        value: 'from=now%2Fy&to=now'\n      },\n      {\n        name: $localize`Last 2 years`,\n        value: 'from=now-2y&to=now'\n      },\n      {\n        name: $localize`Last 5 years`,\n        value: 'from=now-5y&to=now'\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.time = this.DEFAULT_TIME;\n    this.styles = {\n      one: 'grafana_one',\n      two: 'grafana_two',\n      three: 'grafana_three',\n      four: 'grafana_four'\n    };\n\n    this.datasource = this.type === 'metrics' ? 'Dashboard1' : 'Loki';\n\n    this.settingsService.ifSettingConfigured('api/grafana/url', (url) => {\n      this.grafanaExist = true;\n      this.loading = false;\n      this.baseUrl = url + '/d/';\n      this.getFrame();\n    });\n    this.panelStyle = this.styles[this.grafanaStyle];\n  }\n\n  getFrame() {\n    this.settingsService\n      .validateGrafanaDashboardUrl(this.uid)\n      .subscribe((data: any) => (this.dashboardExist = data === 200));\n    if (this.type === 'metrics') {\n      this.url = `${this.baseUrl}${this.uid}/${this.grafanaPath}&refresh=2s&var-datasource=${this.datasource}${this.mode}&${this.time}`;\n    } else {\n      this.url = `${this.baseUrl.slice(0, -2)}${this.grafanaPath}orgId=1&left=[\"now-1h\",\"now\",\"${\n        this.datasource\n      }\",{\"refId\":\"A\"}]${this.mode}`;\n    }\n    this.grafanaSrc = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\n  }\n\n  onTimepickerChange() {\n    if (this.grafanaExist) {\n      this.getFrame();\n    }\n  }\n\n  reset() {\n    this.time = this.DEFAULT_TIME;\n    if (this.grafanaExist) {\n      this.getFrame();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.grafanaExist) {\n      this.getFrame();\n    }\n  }\n}\n","<!-- Embed dashboard -->\n<cd-loading-panel *ngIf=\"loading && grafanaExist\"\n                  i18n>Loading panel data...</cd-loading-panel>\n\n<cd-alert-panel type=\"info\"\n                *ngIf=\"!grafanaExist\"\n                i18n>Please consult the <cd-doc section=\"grafana\"></cd-doc> on\n  how to configure and enable the monitoring functionality.</cd-alert-panel>\n\n<cd-alert-panel type=\"info\"\n                *ngIf=\"!dashboardExist\"\n                i18n>Grafana Dashboard doesn't exist. Please refer to\n  <cd-doc section=\"grafana\"></cd-doc> on how to add dashboards to Grafana.</cd-alert-panel>\n\n<ng-container *ngIf=\"grafanaExist && dashboardExist\">\n  <div class=\"row mb-3\">\n    <div class=\"col-lg-4 d-flex\">\n      <div class=\"col-md-3 timepicker\">\n        <label for=\"timepicker\"\n               class=\"mt-2\"\n               i18n>Grafana Time Picker</label></div>\n        <div class=\"col-md-4\">\n        <select id=\"timepicker\"\n                name=\"timepicker\"\n                class=\"form-select\"\n                [(ngModel)]=\"time\"\n                (ngModelChange)=\"onTimepickerChange($event)\">\n          <option *ngFor=\"let key of grafanaTimes\"\n                  [ngValue]=\"key.value\">{{ key.name }}\n          </option>\n        </select></div>\n        <div class=\"col-md-3\">\n\n        <button class=\"btn btn-light ms-3\"\n                i18n-title\n                title=\"Reset Settings\"\n                (click)=\"reset()\">\n          <i [ngClass]=\"[icons.undo]\"></i>\n        </button>\n        <button class=\"btn btn-light ms-3\"\n                i18n-title\n                title=\"Show hidden information\"\n                (click)=\"showMessage = !showMessage\">\n          <i [ngClass]=\"[icons.infoCircle, icons.large]\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col my-2\"\n         *ngIf=\"showMessage\">\n      <cd-alert-panel type=\"info\"\n                      class=\"mb-3\"\n                      *ngIf=\"showMessage\"\n                      dismissible=\"true\"\n                      (dismissed)=\"showMessage = false\"\n                      i18n>If no embedded Grafana Dashboard appeared below, please follow <a [href]=\"grafanaSrc\"\n                      target=\"_blank\"\n                      noopener\n                      noreferrer>this link </a> to check if Grafana is reachable and there are no HTTPS certificate issues. You may need to reload this page after accepting any Browser certificate exceptions</cd-alert-panel>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"grafana-container\">\n        <iframe #iframe\n                id=\"iframe\"\n                [src]=\"grafanaSrc\"\n                class=\"grafana\"\n                [ngClass]=\"panelStyle\"\n                frameborder=\"0\"\n                scrolling=\"no\"\n                [title]=\"title\"\n                i18n-title>\n        </iframe>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from '@angular/core';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\n\n@Component({\n  selector: 'cd-helper',\n  templateUrl: './helper.component.html',\n  styleUrls: ['./helper.component.scss']\n})\nexport class HelperComponent {\n  @Input()\n  class: string;\n\n  @Input()\n  iconClass = '';\n\n  @Input()\n  html: any;\n\n  icons = Icons;\n}\n","<ng-template #popoverTpl>\n  <div [class]=\"class\"\n       [innerHtml]=\"html\">\n  </div>\n  <ng-content></ng-content>\n</ng-template>\n<i [ngClass]=\"iconClass ? iconClass : [icons.questionCircle]\"\n   aria-hidden=\"true\"\n   [ngbPopover]=\"popoverTpl\"\n   (click)=\"$event.preventDefault();\">\n</i>\n","import { Component, OnInit } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { LanguageService } from '~/app/shared/services/language.service';\nimport { SupportedLanguages } from './supported-languages.enum';\n\n@Component({\n  selector: 'cd-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss']\n})\nexport class LanguageSelectorComponent implements OnInit {\n  allLanguages = SupportedLanguages;\n  supportedLanguages: Record<string, any> = {};\n  selectedLanguage: string;\n\n  constructor(private languageService: LanguageService) {}\n\n  ngOnInit() {\n    this.selectedLanguage = this.languageService.getLocale();\n\n    this.languageService.getLanguages().subscribe((langs) => {\n      this.supportedLanguages = _.pick(SupportedLanguages, langs) as Object;\n    });\n  }\n\n  /**\n   * Jest is being more restricted regarding spying on the reload method.\n   * This will allow us to spyOn this method instead.\n   */\n  reloadWindow() {\n    window.location.reload();\n  }\n\n  changeLanguage(lang: string) {\n    this.languageService.setLocale(lang);\n    this.reloadWindow();\n  }\n}\n","<div ngbDropdown\n     display=\"dynamic\"\n     placement=\"bottom-right\">\n  <a ngbDropdownToggle\n     i18n-title\n     id=\"toggle-language-button\"\n     title=\"Select a Language\"\n     role=\"button\">\n    {{ allLanguages[selectedLanguage] }}\n  </a>\n  <div ngbDropdownMenu\n       role=\"listbox\"\n       aria-labelledby=\"toggle-language-button\">\n    <ng-container *ngFor=\"let lang of supportedLanguages | keyvalue\">\n      <button ngbDropdownItem\n              role=\"option\"\n              (click)=\"changeLanguage(lang.key)\">\n        {{ lang.value }}\n      </button>\n    </ng-container>\n  </div>\n</div>\n","// When adding a new supported language make sure to add a test for it in:\n// language-selector.component.spec.ts\nexport enum SupportedLanguages {\n  'cs' = 'Čeština',\n  'de' = 'Deutsch',\n  'en-US' = 'English',\n  'es' = 'Español',\n  'fr' = 'Français',\n  'id' = 'Bahasa Indonesia',\n  'it' = 'Italiano',\n  'ja' = '日本語',\n  'ko' = '한국어',\n  'pl' = 'Polski',\n  'pt' = 'Português (brasileiro)',\n  'zh-Hans' = '中文 (简体)',\n  'zh-Hant' = '中文 (繁體）'\n}\n","import { Component } from '@angular/core';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\n\n@Component({\n  selector: 'cd-loading-panel',\n  templateUrl: './loading-panel.component.html',\n  styleUrls: ['./loading-panel.component.scss']\n})\nexport class LoadingPanelComponent {\n  icons = Icons;\n}\n","<ngb-alert type=\"info\"\n           [dismissible]=\"false\">\n  <strong>\n    <i [ngClass]=\"[icons.spinner, icons.spin]\"\n       aria-hidden=\"true\"\n       class=\"me-2\"></i>\n  </strong>\n  <ng-content></ng-content>\n</ngb-alert>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'cd-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent {\n  @Input()\n  modalRef: NgbActiveModal;\n  @Input()\n  pageURL: string;\n\n  /**\n   * Should be a function that is triggered when the modal is hidden.\n   */\n  @Output()\n  hide = new EventEmitter();\n\n  constructor(private router: Router) {}\n\n  close() {\n    this.pageURL\n      ? this.router.navigate([this.pageURL, { outlets: { modal: null } }])\n      : this.modalRef?.close();\n    this.hide.emit();\n  }\n}\n","<div [ngClass]=\"pageURL ? 'modal' : ''\">\n  <div [ngClass]=\"pageURL ? 'modal-dialog' : ''\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title float-start\">\n          <ng-content select=\".modal-title\"></ng-content>\n        </h4>\n        <button type=\"button\"\n                class=\"btn-close float-end\"\n                aria-label=\"Close\"\n                (click)=\"close()\">\n        </button>\n      </div>\n\n      <ng-content select=\".modal-content\"></ng-content>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { Motd } from '~/app/shared/api/motd.service';\nimport { MotdNotificationService } from '~/app/shared/services/motd-notification.service';\n\n@Component({\n  selector: 'cd-motd',\n  templateUrl: './motd.component.html',\n  styleUrls: ['./motd.component.scss']\n})\nexport class MotdComponent implements OnInit, OnDestroy {\n  motd: Motd | undefined = undefined;\n\n  private subscription: Subscription;\n\n  constructor(private motdNotificationService: MotdNotificationService) {}\n\n  ngOnInit(): void {\n    this.subscription = this.motdNotificationService.motd$.subscribe((motd: Motd | undefined) => {\n      this.motd = motd;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  onDismissed(): void {\n    this.motdNotificationService.hide();\n  }\n}\n","<cd-alert-panel *ngIf=\"motd\"\n                size=\"slim\"\n                [showTitle]=\"false\"\n                [type]=\"motd.severity\"\n                [dismissible]=\"motd.severity !== 'danger'\"\n                (dismissed)=\"onDismissed()\">\n  <span [innerHTML]=\"motd.message | sanitizeHtml\"></span>\n</cd-alert-panel>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  NgZone,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\n\nimport { Mutex } from 'async-mutex';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { Subscription } from 'rxjs';\n\nimport { PrometheusService } from '~/app/shared/api/prometheus.service';\nimport { SucceededActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport {\n  AlertmanagerSilence,\n  AlertmanagerSilenceMatcher\n} from '~/app/shared/models/alertmanager-silence';\nimport { CdNotification } from '~/app/shared/models/cd-notification';\nimport { ExecutingTask } from '~/app/shared/models/executing-task';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { PrometheusAlertService } from '~/app/shared/services/prometheus-alert.service';\nimport { PrometheusNotificationService } from '~/app/shared/services/prometheus-notification.service';\nimport { SummaryService } from '~/app/shared/services/summary.service';\nimport { TaskMessageService } from '~/app/shared/services/task-message.service';\n\n@Component({\n  selector: 'cd-notifications-sidebar',\n  templateUrl: './notifications-sidebar.component.html',\n  styleUrls: ['./notifications-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationsSidebarComponent implements OnInit, OnDestroy {\n  @HostBinding('class.active') isSidebarOpened = false;\n\n  notifications: CdNotification[];\n  private interval: number;\n  private timeout: number;\n\n  executingTasks: ExecutingTask[] = [];\n\n  private subs = new Subscription();\n\n  icons = Icons;\n\n  // Tasks\n  last_task = '';\n  mutex = new Mutex();\n\n  simplebar = {\n    autoHide: false\n  };\n\n  constructor(\n    public notificationService: NotificationService,\n    private summaryService: SummaryService,\n    private taskMessageService: TaskMessageService,\n    private prometheusNotificationService: PrometheusNotificationService,\n    private succeededLabels: SucceededActionLabelsI18n,\n    private authStorageService: AuthStorageService,\n    private prometheusAlertService: PrometheusAlertService,\n    private prometheusService: PrometheusService,\n    private ngZone: NgZone,\n    private cdRef: ChangeDetectorRef\n  ) {\n    this.notifications = [];\n  }\n\n  ngOnDestroy() {\n    window.clearInterval(this.interval);\n    window.clearTimeout(this.timeout);\n    this.subs.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.last_task = window.localStorage.getItem('last_task');\n\n    const permissions = this.authStorageService.getPermissions();\n    if (permissions.prometheus.read && permissions.configOpt.read) {\n      this.triggerPrometheusAlerts();\n      this.ngZone.runOutsideAngular(() => {\n        this.interval = window.setInterval(() => {\n          this.ngZone.run(() => {\n            this.triggerPrometheusAlerts();\n          });\n        }, 5000);\n      });\n    }\n\n    this.subs.add(\n      this.notificationService.data$.subscribe((notifications: CdNotification[]) => {\n        this.notifications = _.orderBy(notifications, ['timestamp'], ['desc']);\n        this.cdRef.detectChanges();\n      })\n    );\n\n    this.subs.add(\n      this.notificationService.sidebarSubject.subscribe((forceClose) => {\n        if (forceClose) {\n          this.isSidebarOpened = false;\n        } else {\n          this.isSidebarOpened = !this.isSidebarOpened;\n        }\n\n        window.clearTimeout(this.timeout);\n        this.timeout = window.setTimeout(() => {\n          this.cdRef.detectChanges();\n        }, 0);\n      })\n    );\n\n    this.subs.add(\n      this.summaryService.subscribe((summary) => {\n        this._handleTasks(summary.executing_tasks);\n\n        this.mutex.acquire().then((release) => {\n          _.filter(\n            summary.finished_tasks,\n            (task: FinishedTask) => !this.last_task || moment(task.end_time).isAfter(this.last_task)\n          ).forEach((task) => {\n            const config = this.notificationService.finishedTaskToNotification(task, task.success);\n            const notification = new CdNotification(config);\n            notification.timestamp = task.end_time;\n            notification.duration = task.duration;\n\n            if (!this.last_task || moment(task.end_time).isAfter(this.last_task)) {\n              this.last_task = task.end_time;\n              window.localStorage.setItem('last_task', this.last_task);\n            }\n\n            this.notificationService.save(notification);\n          });\n\n          this.cdRef.detectChanges();\n\n          release();\n        });\n      })\n    );\n  }\n\n  _handleTasks(executingTasks: ExecutingTask[]) {\n    for (const excutingTask of executingTasks) {\n      excutingTask.description = this.taskMessageService.getRunningTitle(excutingTask);\n    }\n    this.executingTasks = executingTasks;\n  }\n\n  private triggerPrometheusAlerts() {\n    this.prometheusAlertService.refresh();\n    this.prometheusNotificationService.refresh();\n  }\n\n  removeAll() {\n    this.notificationService.removeAll();\n  }\n\n  remove(index: number) {\n    this.notificationService.remove(index);\n  }\n\n  closeSidebar() {\n    this.isSidebarOpened = false;\n  }\n\n  trackByFn(index: number) {\n    return index;\n  }\n\n  silence(data: CdNotification) {\n    const datetimeFormat = 'YYYY-MM-DD HH:mm';\n    const resource = $localize`silence`;\n    const matcher: AlertmanagerSilenceMatcher = {\n      name: 'alertname',\n      value: data['title'].split(' ')[0],\n      isRegex: false\n    };\n    const silencePayload: AlertmanagerSilence = {\n      matchers: [matcher],\n      startsAt: moment(moment().format(datetimeFormat)).toISOString(),\n      endsAt: moment(moment().add(2, 'hours').format(datetimeFormat)).toISOString(),\n      createdBy: this.authStorageService.getUsername(),\n      comment: 'Silence created from the alert notification'\n    };\n    let msg = '';\n\n    data.alertSilenced = true;\n    msg = msg.concat(` ${matcher.name} - ${matcher.value},`);\n    const title = `${this.succeededLabels.CREATED} ${resource} for ${msg.slice(0, -1)}`;\n    this.prometheusService.setSilence(silencePayload).subscribe((resp) => {\n      if (data) {\n        data.silenceId = resp.body['silenceId'];\n      }\n      this.notificationService.show(\n        NotificationType.success,\n        title,\n        undefined,\n        undefined,\n        'Prometheus'\n      );\n    });\n  }\n\n  expire(data: CdNotification) {\n    data.alertSilenced = false;\n    this.prometheusService.expireSilence(data.silenceId).subscribe(\n      () => {\n        this.notificationService.show(\n          NotificationType.success,\n          `${this.succeededLabels.EXPIRED} ${data.silenceId}`,\n          undefined,\n          undefined,\n          'Prometheus'\n        );\n      },\n      (resp) => {\n        resp['application'] = 'Prometheus';\n      }\n    );\n  }\n}\n","<ng-template #tasksTpl>\n  <!-- Executing -->\n  <div *ngFor=\"let executingTask of executingTasks; trackBy:trackByFn\">\n    <div class=\"card tc_task border-0\">\n      <div class=\"row no-gutters\">\n        <div class=\"col-md-2 text-center\">\n          <span [ngClass]=\"[icons.stack, icons.large2x]\"\n                class=\"text-info\">\n            <i [ngClass]=\"[icons.stack2x, icons.circle]\"></i>\n            <i [ngClass]=\"[icons.stack1x, icons.spinner, icons.spin, icons.inverse]\"></i>\n          </span>\n        </div>\n        <div class=\"col-md-9\">\n          <div class=\"card-body p-1\">\n            <h6 class=\"card-title bold\">{{ executingTask.description }}</h6>\n\n            <div class=\"mb-1\">\n              <ngb-progressbar type=\"info\"\n                               [value]=\"executingTask?.progress\"\n                               [striped]=\"true\"\n                               [animated]=\"true\"></ngb-progressbar>\n            </div>\n\n            <p class=\"card-text text-muted\">\n              <small class=\"date float-start\">\n                {{ executingTask.begin_time | cdDate }}\n              </small>\n\n              <span class=\"float-end\">\n                {{ executingTask.progress || 0 }} %\n              </span>\n            </p>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <hr>\n  </div>\n</ng-template>\n\n<ng-template #notificationsTpl>\n  <ng-container *ngIf=\"notifications.length > 0\">\n    <button type=\"button\"\n            class=\"btn btn-light btn-block\"\n            (click)=\"removeAll(); $event.stopPropagation()\">\n      <i [ngClass]=\"[icons.trash]\"\n         aria-hidden=\"true\"></i>\n      &nbsp;\n      <ng-container i18n>Clear notifications</ng-container>\n    </button>\n\n    <hr>\n\n    <div *ngFor=\"let notification of notifications; let i = index\"\n         [ngClass]=\"notification.borderClass\">\n      <div class=\"card tc_notification border-0\">\n        <div class=\"row no-gutters\">\n          <div class=\"col-md-2 text-center\">\n            <span [ngClass]=\"[icons.stack, icons.large2x,  notification.textClass]\">\n              <i [ngClass]=\"[icons.circle, icons.stack2x]\"></i>\n              <i [ngClass]=\"[icons.stack1x, icons.inverse, notification.iconClass]\"></i>\n            </span>\n          </div>\n          <div class=\"col-md-10\">\n            <div class=\"card-body p-1\">\n              <button class=\"btn btn-link float-end mt-0 pt-0\"\n                      title=\"Remove notification\"\n                      i18n-title\n                      (click)=\"remove(i); $event.stopPropagation()\">\n                <i [ngClass]=\"[icons.trash]\"></i>\n              </button>\n              <button *ngIf=\"notification.application === 'Prometheus' && notification.type !== 2 && !notification.alertSilenced\"\n                      class=\"btn btn-link float-end text-muted mute m-0 p-0\"\n                      title=\"Silence Alert\"\n                      i18n-title\n                      (click)=\"silence(notification)\">\n                <i [ngClass]=\"[icons.mute]\"></i>\n              </button>\n              <button *ngIf=\"notification.application === 'Prometheus' && notification.type !== 2 && notification.alertSilenced\"\n                      class=\"btn btn-link float-end text-muted mute m-0 p-0\"\n                      title=\"Expire Silence\"\n                      i18n-title\n                      (click)=\"expire(notification)\">\n                <i [ngClass]=\"[icons.bell]\"></i>\n              </button>\n\n\n              <h6 class=\"card-title bold\">{{ notification.title }}</h6>\n              <p class=\"card-text\"\n                 [innerHtml]=\"notification.message\"></p>\n              <p class=\"card-text text-muted\">\n                <ng-container *ngIf=\"notification.duration\">\n                  <small>\n                    <ng-container i18n>Duration:</ng-container> {{ notification.duration | duration }}\n                  </small>\n                  <br>\n                </ng-container>\n                <small class=\"date\"\n                       [title]=\"notification.timestamp | cdDate\">{{ notification.timestamp | relativeDate }}</small>\n                <i class=\"float-end custom-icon\"\n                   [ngClass]=\"[notification.applicationClass]\"\n                   [title]=\"notification.application\"></i>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <hr>\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-template #emptyTpl>\n  <div *ngIf=\"notifications.length === 0 && executingTasks.length === 0\">\n    <div class=\"message text-center\"\n         i18n>There are no notifications.</div>\n  </div>\n</ng-template>\n\n<div class=\"card\"\n     (clickOutside)=\"closeSidebar()\"\n     [clickOutsideEnabled]=\"isSidebarOpened\">\n  <div class=\"card-header\">\n    <ng-container i18n>Tasks and Notifications</ng-container>\n\n    <button class=\"btn-close float-end\"\n            tabindex=\"-1\"\n            type=\"button\"\n            title=\"close\"\n            (click)=\"closeSidebar()\">\n    </button>\n  </div>\n\n  <ngx-simplebar [options]=\"simplebar\">\n    <div class=\"card-body\">\n      <ng-container *ngTemplateOutlet=\"tasksTpl\"></ng-container>\n      <ng-container *ngTemplateOutlet=\"notificationsTpl\"></ng-container>\n      <ng-container *ngTemplateOutlet=\"emptyTpl\"></ng-container>\n    </div>\n  </ngx-simplebar>\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { OrchestratorFeature } from '~/app/shared/models/orchestrator.enum';\n\n@Component({\n  selector: 'cd-orchestrator-doc-panel',\n  templateUrl: './orchestrator-doc-panel.component.html',\n  styleUrls: ['./orchestrator-doc-panel.component.scss']\n})\nexport class OrchestratorDocPanelComponent {\n  @Input()\n  missingFeatures: OrchestratorFeature[];\n}\n","<cd-alert-panel *ngIf=\"missingFeatures; else elseBlock\"\n                type=\"info\"\n                i18n>The feature is not supported in the current Orchestrator.</cd-alert-panel>\n\n<ng-template #elseBlock>\n  <cd-alert-panel type=\"info\"\n                  i18n>Orchestrator is not available.\n    Please consult the <cd-doc section=\"orch\"></cd-doc> on how to configure and\n    enable the functionality.</cd-alert-panel>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { SettingsService } from '~/app/shared/api/settings.service';\nimport { CdPwdExpirationSettings } from '~/app/shared/models/cd-pwd-expiration-settings';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-pwd-expiration-notification',\n  templateUrl: './pwd-expiration-notification.component.html',\n  styleUrls: ['./pwd-expiration-notification.component.scss']\n})\nexport class PwdExpirationNotificationComponent implements OnInit, OnDestroy {\n  alertType: string;\n  expirationDays: number;\n  pwdExpirationSettings: CdPwdExpirationSettings;\n  displayNotification = false;\n\n  constructor(\n    private settingsService: SettingsService,\n    private authStorageService: AuthStorageService\n  ) {}\n\n  ngOnInit() {\n    this.settingsService.getStandardSettings().subscribe((pwdExpirationSettings) => {\n      this.pwdExpirationSettings = new CdPwdExpirationSettings(pwdExpirationSettings);\n      const pwdExpirationDate = this.authStorageService.getPwdExpirationDate();\n      if (pwdExpirationDate) {\n        this.expirationDays = this.getExpirationDays(pwdExpirationDate);\n        if (this.expirationDays <= this.pwdExpirationSettings.pwdExpirationWarning2) {\n          this.alertType = 'danger';\n        } else {\n          this.alertType = 'warning';\n        }\n        this.displayNotification =\n          this.expirationDays <= this.pwdExpirationSettings.pwdExpirationWarning1;\n        this.authStorageService.isPwdDisplayedSource.next(this.displayNotification);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.authStorageService.isPwdDisplayedSource.next(false);\n  }\n\n  private getExpirationDays(pwdExpirationDate: number): number {\n    const current = new Date();\n    const expiration = new Date(pwdExpirationDate * 1000);\n    return Math.floor((expiration.valueOf() - current.valueOf()) / (1000 * 3600 * 24));\n  }\n\n  onDismissed(): void {\n    this.authStorageService.isPwdDisplayedSource.next(false);\n    this.displayNotification = false;\n  }\n}\n","<cd-alert-panel class=\"no-margin-bottom\"\n                [type]=\"alertType\"\n                *ngIf=\"displayNotification\"\n                [showTitle]=\"false\"\n                size=\"slim\"\n                [dismissible]=\"alertType !== 'danger'\"\n                (dismissed)=\"onDismissed()\">\n  <div *ngIf=\"expirationDays === 0\"\n       i18n>Your password will expire in <strong>less than 1</strong> day. Click\n    <a routerLink=\"/user-profile/edit\"\n       class=\"alert-link\">here</a> to change it now.</div>\n  <div *ngIf=\"expirationDays > 0\"\n       i18n>Your password will expire in <strong>{{ expirationDays }}</strong> day(s). Click\n  <a routerLink=\"/user-profile/edit\"\n     class=\"alert-link\">here</a> to change it now.</div>\n</cd-alert-panel>\n","import { Component, OnInit } from '@angular/core';\n\nimport { RefreshIntervalService } from '~/app/shared/services/refresh-interval.service';\n\n@Component({\n  selector: 'cd-refresh-selector',\n  templateUrl: './refresh-selector.component.html',\n  styleUrls: ['./refresh-selector.component.scss']\n})\nexport class RefreshSelectorComponent implements OnInit {\n  selectedInterval: number;\n  intervalList: { [key: string]: number } = {\n    '5 s': 5000,\n    '10 s': 10000,\n    '15 s': 15000,\n    '30 s': 30000,\n    '1 min': 60000,\n    '3 min': 180000,\n    '5 min': 300000\n  };\n  intervalKeys = Object.keys(this.intervalList);\n\n  constructor(private refreshIntervalService: RefreshIntervalService) {}\n\n  ngOnInit() {\n    this.selectedInterval = this.refreshIntervalService.getRefreshInterval() || 5000;\n  }\n\n  changeRefreshInterval(interval: number) {\n    this.refreshIntervalService.setRefreshInterval(interval);\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <form>\n      <div class=\"col-sm-1 d-flex float-end\">\n        <label for=\"refreshInterval\"\n               class=\"col-form-label my-0 mx-2 float-end\"\n               i18n>Refresh</label>\n        <select id=\"refreshInterval\"\n                name=\"refreshInterval\"\n                class=\"form-select float-end\"\n                (change)=\"changeRefreshInterval($event.target.value)\"\n                [(ngModel)]=\"selectedInterval\">\n          <option *ngFor=\"let key of intervalKeys\"\n                  [value]=\"intervalList[key]\">{{ key }}</option>\n        </select>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { SelectMessages } from '../select/select-messages.model';\nimport { SelectOption } from '../select/select-option.model';\nimport { SelectComponent } from '../select/select.component';\n\n@Component({\n  selector: 'cd-select-badges',\n  templateUrl: './select-badges.component.html',\n  styleUrls: ['./select-badges.component.scss']\n})\nexport class SelectBadgesComponent {\n  @Input()\n  data: Array<string> = [];\n  @Input()\n  options: Array<SelectOption> = [];\n  @Input()\n  messages = new SelectMessages({});\n  @Input()\n  selectionLimit: number;\n  @Input()\n  customBadges = false;\n  @Input()\n  customBadgeValidators: ValidatorFn[] = [];\n\n  @Output()\n  selection = new EventEmitter();\n\n  @ViewChild('cdSelect', { static: true })\n  cdSelect: SelectComponent;\n\n  icons = Icons;\n}\n","<cd-select #cdSelect\n           [data]=\"data\"\n           [options]=\"options\"\n           [messages]=\"messages\"\n           [selectionLimit]=\"selectionLimit\"\n           [customBadges]=\"customBadges\"\n           [customBadgeValidators]=\"customBadgeValidators\"\n           elemClass=\"me-2 select-menu-edit\"\n           (selection)=\"selection.emit($event)\">\n  <i [ngClass]=\"[icons.edit]\"></i>\n</cd-select>\n\n<span *ngFor=\"let dataItem of data\">\n  <span class=\"badge badge-dark me-2\">\n    <span class=\"me-2\">{{ dataItem }}</span>\n    <a class=\"badge-remove\"\n       (click)=\"cdSelect.removeItem(dataItem)\">\n      <i [ngClass]=\"[icons.destroy]\"\n         aria-hidden=\"true\"></i>\n    </a>\n  </span>\n</span>\n","import _ from 'lodash';\n\nexport class SelectMessages {\n  empty: string;\n  selectionLimit: any;\n  customValidations = {};\n  filter: string;\n  add: string;\n  noOptions: string;\n\n  constructor(messages: {}) {\n    this.empty = $localize`No items selected.`;\n    this.selectionLimit = {\n      tooltip: $localize`Deselect item to select again`,\n      text: $localize`Selection limit reached`\n    };\n    this.filter = $localize`Filter tags`;\n    this.add = $localize`Add badge`; // followed by \" '{{filter.value}}'\"\n    this.noOptions = $localize`There are no items available.`;\n\n    _.merge(this, messages);\n  }\n}\n","export class SelectOption {\n  selected: boolean;\n  name: string;\n  description: string;\n  enabled: boolean;\n\n  constructor(selected: boolean, name: string, description: string, enabled = true) {\n    this.selected = selected;\n    this.name = name;\n    this.description = description;\n    this.enabled = enabled;\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { FormControl, ValidatorFn } from '@angular/forms';\n\nimport _ from 'lodash';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { SelectMessages } from './select-messages.model';\nimport { SelectOption } from './select-option.model';\n\n@Component({\n  selector: 'cd-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent implements OnInit, OnChanges {\n  @Input()\n  elemClass: string;\n  @Input()\n  data: Array<string> = [];\n  @Input()\n  options: Array<SelectOption> = [];\n  @Input()\n  messages = new SelectMessages({});\n  @Input()\n  selectionLimit: number;\n  @Input()\n  customBadges = false;\n  @Input()\n  customBadgeValidators: ValidatorFn[] = [];\n\n  @Output()\n  selection = new EventEmitter();\n\n  form: CdFormGroup;\n  filter: FormControl;\n  Object = Object;\n  filteredOptions: Array<SelectOption> = [];\n  icons = Icons;\n\n  ngOnInit() {\n    this.initFilter();\n    if (this.data.length > 0) {\n      this.initMissingOptions();\n    }\n    this.options = _.sortBy(this.options, ['name']);\n    this.updateOptions();\n  }\n\n  private initFilter() {\n    this.filter = new FormControl('', { validators: this.customBadgeValidators });\n    this.form = new CdFormGroup({ filter: this.filter });\n    this.filteredOptions = [...(this.options || [])];\n  }\n\n  private initMissingOptions() {\n    const options = this.options.map((option) => option.name);\n    const needToCreate = this.data.filter((option) => options.indexOf(option) === -1);\n    needToCreate.forEach((option) => this.addOption(option));\n    this.forceOptionsToReflectData();\n  }\n\n  private addOption(name: string) {\n    this.options.push(new SelectOption(false, name, ''));\n    this.options = _.sortBy(this.options, ['name']);\n    this.triggerSelection(this.options.find((option) => option.name === name));\n  }\n\n  triggerSelection(option: SelectOption) {\n    if (\n      !option ||\n      (this.selectionLimit && !option.selected && this.data.length >= this.selectionLimit)\n    ) {\n      return;\n    }\n    option.selected = !option.selected;\n    this.updateOptions();\n    this.selection.emit({ option: option });\n  }\n\n  private updateOptions() {\n    this.data.splice(0, this.data.length);\n    this.options.forEach((option: SelectOption) => {\n      if (option.selected) {\n        this.data.push(option.name);\n      }\n    });\n    this.updateFilter();\n  }\n\n  updateFilter() {\n    this.filteredOptions = this.options.filter((option) => option.name.includes(this.filter.value));\n  }\n\n  private forceOptionsToReflectData() {\n    this.options.forEach((option) => {\n      if (this.data.indexOf(option.name) !== -1) {\n        option.selected = true;\n      }\n    });\n  }\n\n  ngOnChanges() {\n    if (this.filter) {\n      this.updateFilter();\n    }\n    if (!this.options || !this.data || this.data.length === 0) {\n      return;\n    }\n    this.forceOptionsToReflectData();\n  }\n\n  selectOption() {\n    if (this.filteredOptions.length === 0) {\n      this.addCustomOption();\n    } else {\n      this.triggerSelection(this.filteredOptions[0]);\n      this.resetFilter();\n    }\n  }\n\n  addCustomOption() {\n    if (!this.isCreatable()) {\n      return;\n    }\n    this.addOption(this.filter.value);\n    this.resetFilter();\n  }\n\n  isCreatable() {\n    return (\n      this.customBadges &&\n      this.filter.valid &&\n      this.filter.value.length > 0 &&\n      this.filteredOptions.every((option) => option.name !== this.filter.value)\n    );\n  }\n\n  private resetFilter() {\n    this.filter.setValue('');\n    this.updateFilter();\n  }\n\n  removeItem(item: string) {\n    this.triggerSelection(\n      this.options.find((option: SelectOption) => option.name === item && option.selected)\n    );\n  }\n}\n","<ng-template #popTemplate>\n  <form name=\"form\"\n        #formDir=\"ngForm\"\n        [formGroup]=\"form\"\n        novalidate>\n    <div>\n      <input type=\"text\"\n             formControlName=\"filter\"\n             i18n-placeholder\n             [placeholder]=\"messages.filter\"\n             (keyup)=\"$event.keyCode === 13 ? selectOption() : updateFilter()\"\n             class=\"form-control text-center\" />\n      <ng-container *ngFor=\"let error of Object.keys(messages.customValidations)\">\n        <span class=\"invalid-feedback text-center d-block\"\n              *ngIf=\"form.showError('filter', formDir) && filter.hasError(error)\">\n          {{ messages.customValidations[error] }}\n        </span>\n      </ng-container>\n    </div>\n  </form>\n  <div *ngFor=\"let option of filteredOptions\"\n       class=\"select-menu-item\"\n       [ngClass]=\"{'help-block disabled': (data.length === selectionLimit || !option.enabled) && !option.selected}\"\n       (click)=\"triggerSelection(option)\">\n    <div class=\"select-menu-item-icon\">\n      <i [ngClass]=\"[icons.check]\"\n         aria-hidden=\"true\"\n         *ngIf=\"option.selected\"></i>\n      &nbsp;\n    </div>\n    <div class=\"select-menu-item-content\">\n      {{ option.name }}\n      <ng-container *ngIf=\"option.description\">\n        <br>\n        <small class=\"form-text text-muted\">\n          {{ option.description }}&nbsp;\n        </small>\n      </ng-container>\n    </div>\n  </div>\n  <div *ngIf=\"isCreatable()\"\n       class=\"select-menu-item\"\n       (click)=\"addCustomOption()\">\n    <div class=\"select-menu-item-icon\">\n      <i [ngClass]=\"[icons.tag]\"\n         aria-hidden=\"true\"></i>\n      &nbsp;\n    </div>\n    <div class=\"select-menu-item-content\">\n      {{ messages.add }} '{{ filter.value }}'\n    </div>\n  </div>\n  <div class=\"is-invalid\"\n       *ngIf=\"data.length === selectionLimit\">\n    <span class=\"form-text text-muted text-center text-warning\"\n          [ngbTooltip]=\"messages.selectionLimit.tooltip\"\n          *ngIf=\"data.length === selectionLimit\">\n      {{ messages.selectionLimit.text }}\n    </span>\n  </div>\n</ng-template>\n\n<a class=\"select-menu-edit float-start\"\n   [ngClass]=\"elemClass\"\n   [ngbPopover]=\"popTemplate\"\n   data-testid=\"select-menu-edit\"\n   *ngIf=\"customBadges || options.length > 0\">\n  <ng-content></ng-content>\n</a>\n\n<span class=\"form-text text-muted float-start\"\n      *ngIf=\"data.length === 0 && !(!customBadges && options.length === 0)\">\n  {{ messages.empty }}\n</span>\n\n<span class=\"form-text text-muted  float-start\"\n      *ngIf=\"!customBadges && options.length === 0\">\n  {{ messages.noOptions }}\n</span>\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nimport { ChartTooltip } from '~/app/shared/models/chart-tooltip';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\n\n@Component({\n  selector: 'cd-sparkline',\n  templateUrl: './sparkline.component.html',\n  styleUrls: ['./sparkline.component.scss']\n})\nexport class SparklineComponent implements OnInit, OnChanges {\n  @ViewChild('sparkCanvas', { static: true })\n  chartCanvasRef: ElementRef;\n  @ViewChild('sparkTooltip', { static: true })\n  chartTooltipRef: ElementRef;\n\n  @Input()\n  data: any;\n  @Input()\n  style = {\n    height: '30px',\n    width: '100px'\n  };\n  @Input()\n  isBinary: boolean;\n\n  public colors: Array<any> = [\n    {\n      backgroundColor: 'rgba(40,140,234,0.2)',\n      borderColor: 'rgba(40,140,234,1)',\n      pointBackgroundColor: 'rgba(40,140,234,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(40,140,234,0.8)'\n    }\n  ];\n\n  options: Record<string, any> = {\n    animation: {\n      duration: 0\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    elements: {\n      line: {\n        borderWidth: 1\n      }\n    },\n    tooltips: {\n      enabled: false,\n      mode: 'index',\n      intersect: false,\n      custom: undefined,\n      callbacks: {\n        label: (tooltipItem: any) => {\n          if (this.isBinary) {\n            return this.dimlessBinaryPipe.transform(tooltipItem.yLabel);\n          } else {\n            return tooltipItem.yLabel;\n          }\n        },\n        title: () => ''\n      }\n    },\n    scales: {\n      yAxes: [\n        {\n          display: false\n        }\n      ],\n      xAxes: [\n        {\n          display: false\n        }\n      ]\n    }\n  };\n\n  public datasets: Array<any> = [\n    {\n      data: []\n    }\n  ];\n\n  public labels: Array<any> = [];\n\n  constructor(private dimlessBinaryPipe: DimlessBinaryPipe) {}\n\n  ngOnInit() {\n    const getStyleTop = (tooltip: any) => {\n      return tooltip.caretY - tooltip.height - tooltip.yPadding - 5 + 'px';\n    };\n\n    const getStyleLeft = (tooltip: any, positionX: number) => {\n      return positionX + tooltip.caretX + 'px';\n    };\n\n    const chartTooltip = new ChartTooltip(\n      this.chartCanvasRef,\n      this.chartTooltipRef,\n      getStyleLeft,\n      getStyleTop\n    );\n\n    chartTooltip.customColors = {\n      backgroundColor: this.colors[0].pointBackgroundColor,\n      borderColor: this.colors[0].pointBorderColor\n    };\n\n    this.options.tooltips.custom = (tooltip: any) => {\n      chartTooltip.customTooltips(tooltip);\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.datasets[0].data = changes['data'].currentValue;\n    this.labels = [...Array(changes['data'].currentValue.length)];\n  }\n}\n","<div class=\"chart-container\"\n     [ngStyle]=\"style\">\n  <canvas baseChart\n          #sparkCanvas\n          [labels]=\"labels\"\n          [datasets]=\"datasets\"\n          [options]=\"options\"\n          [colors]=\"colors\"\n          [chartType]=\"'line'\">\n  </canvas>\n  <div class=\"chartjs-tooltip\"\n       #sparkTooltip>\n    <table></table>\n  </div>\n</div>\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormGroup, FormGroupDirective, NgForm } from '@angular/forms';\n\nimport _ from 'lodash';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\n\n/**\n * This component will render a submit button with the given label.\n *\n * The button will disabled itself and show a loading icon when the user clicks\n * it, usually initiating a request to the server, and it will stay in that\n * state until the request is finished.\n *\n * To indicate that the request failed, returning the button to the enable\n * state, you need to insert an error in the form with the 'cdSubmitButton' key.\n * p.e.: this.rbdForm.setErrors({'cdSubmitButton': true});\n *\n * It will also check if the form is valid, when clicking the button, and will\n * focus on the first invalid input.\n *\n * @export\n * @class SubmitButtonComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'cd-submit-button',\n  templateUrl: './submit-button.component.html',\n  styleUrls: ['./submit-button.component.scss']\n})\nexport class SubmitButtonComponent implements OnInit {\n  @Input()\n  form: FormGroup | NgForm;\n\n  @Input()\n  type = 'submit';\n\n  @Input()\n  disabled = false;\n\n  // A CSS class string to apply to the button's main element.\n  @Input()\n  btnClass: string;\n\n  @Input()\n  ariaLabel: string;\n\n  @Output()\n  submitAction = new EventEmitter();\n\n  loading = false;\n  icons = Icons;\n\n  constructor(private elRef: ElementRef) {}\n\n  ngOnInit() {\n    this.form.statusChanges.subscribe(() => {\n      if (_.has(this.form.errors, 'cdSubmitButton')) {\n        this.loading = false;\n        _.unset(this.form.errors, 'cdSubmitButton');\n        // Handle Reactive forms.\n        if (this.form instanceof AbstractControl) {\n          (<AbstractControl>this.form).updateValueAndValidity();\n        }\n      }\n    });\n  }\n\n  submit($event: any) {\n    this.focusButton();\n\n    // Special handling for Template driven forms.\n    if (this.form instanceof FormGroupDirective) {\n      (<FormGroupDirective>this.form).onSubmit($event);\n    }\n\n    if (this.form.invalid) {\n      this.focusInvalid();\n      return;\n    }\n\n    this.loading = true;\n    this.submitAction.emit();\n  }\n\n  focusButton() {\n    this.elRef.nativeElement.offsetParent.querySelector(`button[type=\"${this.type}\"]`).focus();\n  }\n\n  focusInvalid() {\n    const target = this.elRef.nativeElement.offsetParent.querySelector(\n      'input.ng-invalid, select.ng-invalid'\n    );\n\n    if (target) {\n      target.focus();\n    }\n  }\n}\n","<button [type]=\"type\"\n        class=\"btn btn-accent tc_submitButton\"\n        [ngClass]=\"btnClass\"\n        [disabled]=\"loading || disabled\"\n        (click)=\"submit($event)\"\n        [attr.aria-label]=\"ariaLabel\">\n  <ng-content></ng-content>\n  <span *ngIf=\"loading\">\n    <i [ngClass]=\"[icons.spinner, icons.spin]\"></i>\n  </span>\n</button>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { MgrModuleService } from '~/app/shared/api/mgr-module.service';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { TelemetryNotificationService } from '~/app/shared/services/telemetry-notification.service';\n\n@Component({\n  selector: 'cd-telemetry-notification',\n  templateUrl: './telemetry-notification.component.html',\n  styleUrls: ['./telemetry-notification.component.scss']\n})\nexport class TelemetryNotificationComponent implements OnInit, OnDestroy {\n  displayNotification = false;\n  notificationSeverity = 'warning';\n\n  constructor(\n    private mgrModuleService: MgrModuleService,\n    private authStorageService: AuthStorageService,\n    private notificationService: NotificationService,\n    private telemetryNotificationService: TelemetryNotificationService\n  ) {}\n\n  ngOnInit() {\n    this.telemetryNotificationService.update.subscribe((visible: boolean) => {\n      this.displayNotification = visible;\n    });\n\n    if (!this.isNotificationHidden()) {\n      const configOptPermissions = this.authStorageService.getPermissions().configOpt;\n      if (_.every(Object.values(configOptPermissions))) {\n        this.mgrModuleService.getConfig('telemetry').subscribe((options) => {\n          if (!options['enabled']) {\n            this.telemetryNotificationService.setVisibility(true);\n          }\n        });\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.telemetryNotificationService.setVisibility(false);\n  }\n\n  isNotificationHidden(): boolean {\n    return localStorage.getItem('telemetry_notification_hidden') === 'true';\n  }\n\n  onDismissed(): void {\n    this.telemetryNotificationService.setVisibility(false);\n    localStorage.setItem('telemetry_notification_hidden', 'true');\n    this.notificationService.show(\n      NotificationType.success,\n      $localize`Telemetry activation reminder muted`,\n      $localize`You can activate the module on the Telemetry configuration \\\npage (<b>Dashboard Settings</b> -> <b>Telemetry configuration</b>) at any time.`\n    );\n  }\n}\n","<cd-alert-panel *ngIf=\"displayNotification\"\n                class=\"no-margin-bottom\"\n                [showTitle]=\"false\"\n                size=\"slim\"\n                [type]=\"notificationSeverity\"\n                [dismissible]=\"notificationSeverity !== 'danger'\"\n                (dismissed)=\"onDismissed()\">\n  <div i18n>The Ceph community needs your help to continue improving: please\n    <a routerLink=\"/telemetry\"\n       class=\"btn activate-button alert-link activate-text\">Activate</a> the\n  <a href=\"https://docs.ceph.com/en/latest/mgr/telemetry/\">Telemetry</a> module.</div>\n</cd-alert-panel>\n","import { Component, Input, OnChanges } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Component({\n  selector: 'cd-usage-bar',\n  templateUrl: './usage-bar.component.html',\n  styleUrls: ['./usage-bar.component.scss']\n})\nexport class UsageBarComponent implements OnChanges {\n  @Input()\n  total: number;\n  @Input()\n  used: any;\n  @Input()\n  warningThreshold: number;\n  @Input()\n  errorThreshold: number;\n  @Input()\n  isBinary = true;\n  @Input()\n  decimals = 0;\n  @Input()\n  calculatePerc = true;\n  @Input()\n  title = $localize`usage`;\n\n  usedPercentage: number;\n  freePercentage: number;\n\n  ngOnChanges() {\n    if (this.calculatePerc) {\n      this.usedPercentage = this.total > 0 ? (this.used / this.total) * 100 : 0;\n      this.freePercentage = 100 - this.usedPercentage;\n    } else {\n      if (this.used) {\n        this.used = this.used.slice(0, -1);\n        this.usedPercentage = Number(this.used);\n        this.freePercentage = 100 - this.usedPercentage;\n      } else {\n        this.usedPercentage = 0;\n      }\n    }\n  }\n}\n","<ng-template #usageTooltipTpl>\n  <table>\n    <tr>\n      <td class=\"text-left\">Used:&nbsp;</td>\n      <td class=\"text-right\"><strong> {{ isBinary ? (used | dimlessBinary) : (used | dimless) }}</strong></td>\n    </tr>\n    <tr *ngIf=\"calculatePerc\">\n      <td class=\"text-left\">Free:&nbsp;</td>\n      <td class=\"'text-right\"><strong>{{ isBinary ? (total - used | dimlessBinary) : (total - used | dimless) }}</strong></td>\n    </tr>\n  </table>\n</ng-template>\n\n<div class=\"progress\"\n     data-placement=\"left\"\n     [ngbTooltip]=\"usageTooltipTpl\">\n  <div class=\"progress-bar bg-info\"\n       [ngClass]=\"{'bg-warning': usedPercentage/100 >= warningThreshold, 'bg-danger': usedPercentage/100 >= errorThreshold}\"\n       role=\"progressbar\"\n       [attr.aria-label]=\"{ title }\"\n       i18n-aria-label=\"The title of this usage bar is { title }\"\n       [style.width]=\"usedPercentage + '%'\">\n    <span>{{ usedPercentage | number: '1.0-' + decimals }}%</span>\n  </div>\n  <div class=\"progress-bar bg-freespace\"\n       role=\"progressbar\"\n       [attr.aria-label]=\"{ title }\"\n       i18n-aria-label=\"The title of this usage bar is { title }\"\n       [style.width]=\"freePercentage + '%'\">\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { WizardStepModel } from '~/app/shared/models/wizard-steps';\nimport { WizardStepsService } from '~/app/shared/services/wizard-steps.service';\n\n@Component({\n  selector: 'cd-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.scss']\n})\nexport class WizardComponent implements OnInit, OnDestroy {\n  @Input()\n  stepsTitle: string[];\n\n  steps: Observable<WizardStepModel[]>;\n  currentStep: WizardStepModel;\n  currentStepSub: Subscription;\n\n  constructor(private stepsService: WizardStepsService) {}\n\n  ngOnInit(): void {\n    this.stepsService.setTotalSteps(this.stepsTitle.length);\n    this.steps = this.stepsService.getSteps();\n    this.currentStepSub = this.stepsService.getCurrentStep().subscribe((step: WizardStepModel) => {\n      this.currentStep = step;\n    });\n  }\n\n  onStepClick(step: WizardStepModel) {\n    this.stepsService.setCurrentStep(step);\n  }\n\n  ngOnDestroy(): void {\n    this.currentStepSub.unsubscribe();\n  }\n}\n","<div class=\"card-body\">\n  <div class=\"row m-7\">\n    <nav class=\"col\">\n      <ul class=\"nav nav-pills flex-column\"\n          *ngFor=\"let step of steps | async; let i = index;\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\"\n             (click)=\"onStepClick(step)\"\n             [ngClass]=\"{active: currentStep.stepIndex === step.stepIndex}\">\n            <span class=\"circle-step\"\n                  [ngClass]=\"{active: currentStep.stepIndex === step.stepIndex}\"\n                  i18n>{{ step.stepIndex }}</span>\n            <span i18n>{{ stepsTitle[i] }}</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { environment } from '~/environments/environment';\n\nexport class AppConstants {\n  public static readonly organization = 'ceph';\n  public static readonly projectName = 'Ceph Dashboard';\n  public static readonly license = 'Free software (LGPL 2.1).';\n  public static readonly copyright = 'Copyright(c) ' + environment.year + ' Ceph contributors.';\n  public static readonly cephLogo = 'assets/Ceph_Logo.svg';\n}\n\nexport enum URLVerbs {\n  /* Create a new item */\n  CREATE = 'create',\n\n  /* Make changes to an existing item */\n  EDIT = 'edit',\n\n  /* Make changes to an existing item */\n  UPDATE = 'update',\n\n  /* Remove an item from a container WITHOUT deleting it */\n  REMOVE = 'remove',\n\n  /* Destroy an existing item */\n  DELETE = 'delete',\n\n  /* Add an existing item to a container */\n  ADD = 'add',\n\n  /* Non-standard verbs */\n  COPY = 'copy',\n  CLONE = 'clone',\n\n  /* Prometheus wording */\n  RECREATE = 'recreate',\n  EXPIRE = 'expire',\n\n  /* Daemons */\n  RESTART = 'Restart'\n}\n\nexport enum ActionLabels {\n  /* Create a new item */\n  CREATE = 'Create',\n\n  /* Destroy an existing item */\n  DELETE = 'Delete',\n\n  /* Add an existing item to a container */\n  ADD = 'Add',\n\n  /* Remove an item from a container WITHOUT deleting it */\n  REMOVE = 'Remove',\n\n  /* Make changes to an existing item */\n  EDIT = 'Edit',\n\n  /* */\n  CANCEL = 'Cancel',\n\n  /* Non-standard actions */\n  COPY = 'Copy',\n  CLONE = 'Clone',\n  UPDATE = 'Update',\n  EVICT = 'Evict',\n\n  /* Read-only */\n  SHOW = 'Show',\n\n  /* Prometheus wording */\n  RECREATE = 'Recreate',\n  EXPIRE = 'Expire',\n\n  /* Daemons */\n  START = 'Start',\n  STOP = 'Stop',\n  REDEPLOY = 'Redeploy',\n  RESTART = 'Restart'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionLabelsI18n {\n  /* This service is required as the i18n polyfill does not provide static\n  translation\n  */\n  CREATE: string;\n  DELETE: string;\n  ADD: string;\n  REMOVE: string;\n  EDIT: string;\n  CANCEL: string;\n  PREVIEW: string;\n  MOVE: string;\n  NEXT: string;\n  BACK: string;\n  CHANGE: string;\n  COPY: string;\n  CLONE: string;\n  DEEP_SCRUB: string;\n  DESTROY: string;\n  EVICT: string;\n  EXPIRE: string;\n  FLATTEN: string;\n  MARK_DOWN: string;\n  MARK_IN: string;\n  MARK_LOST: string;\n  MARK_OUT: string;\n  PROTECT: string;\n  PURGE: string;\n  RECREATE: string;\n  RENAME: string;\n  RESTORE: string;\n  REWEIGHT: string;\n  ROLLBACK: string;\n  SCRUB: string;\n  SET: string;\n  SUBMIT: string;\n  SHOW: string;\n  TRASH: string;\n  UNPROTECT: string;\n  UNSET: string;\n  UPDATE: string;\n  FLAGS: string;\n  ENTER_MAINTENANCE: string;\n  EXIT_MAINTENANCE: string;\n  REMOVE_SCHEDULING: string;\n  PROMOTE: string;\n  DEMOTE: string;\n  START_DRAIN: string;\n  STOP_DRAIN: string;\n  START: string;\n  STOP: string;\n  REDEPLOY: string;\n  RESTART: string;\n  RESYNC: string;\n\n  constructor() {\n    /* Create a new item */\n    this.CREATE = $localize`Create`;\n\n    /* Destroy an existing item */\n    this.DELETE = $localize`Delete`;\n\n    /* Add an existing item to a container */\n    this.ADD = $localize`Add`;\n    this.SET = $localize`Set`;\n    this.SUBMIT = $localize`Submit`;\n\n    /* Remove an item from a container WITHOUT deleting it */\n    this.REMOVE = $localize`Remove`;\n    this.UNSET = $localize`Unset`;\n\n    /* Make changes to an existing item */\n    this.EDIT = $localize`Edit`;\n    this.UPDATE = $localize`Update`;\n    this.CANCEL = $localize`Cancel`;\n    this.PREVIEW = $localize`Preview`;\n    this.MOVE = $localize`Move`;\n\n    /* Wizard wording */\n    this.NEXT = $localize`Next`;\n    this.BACK = $localize`Back`;\n\n    /* Non-standard actions */\n    this.CLONE = $localize`Clone`;\n    this.COPY = $localize`Copy`;\n    this.DEEP_SCRUB = $localize`Deep Scrub`;\n    this.DESTROY = $localize`Destroy`;\n    this.EVICT = $localize`Evict`;\n    this.FLATTEN = $localize`Flatten`;\n    this.MARK_DOWN = $localize`Mark Down`;\n    this.MARK_IN = $localize`Mark In`;\n    this.MARK_LOST = $localize`Mark Lost`;\n    this.MARK_OUT = $localize`Mark Out`;\n    this.PROTECT = $localize`Protect`;\n    this.PURGE = $localize`Purge`;\n    this.RENAME = $localize`Rename`;\n    this.RESTORE = $localize`Restore`;\n    this.REWEIGHT = $localize`Reweight`;\n    this.ROLLBACK = $localize`Rollback`;\n    this.SCRUB = $localize`Scrub`;\n    this.SHOW = $localize`Show`;\n    this.TRASH = $localize`Move to Trash`;\n    this.UNPROTECT = $localize`Unprotect`;\n    this.CHANGE = $localize`Change`;\n    this.FLAGS = $localize`Flags`;\n    this.ENTER_MAINTENANCE = $localize`Enter Maintenance`;\n    this.EXIT_MAINTENANCE = $localize`Exit Maintenance`;\n\n    this.START_DRAIN = $localize`Start Drain`;\n    this.STOP_DRAIN = $localize`Stop Drain`;\n    this.RESYNC = $localize`Resync`;\n    /* Prometheus wording */\n    this.RECREATE = $localize`Recreate`;\n    this.EXPIRE = $localize`Expire`;\n\n    this.START = $localize`Start`;\n    this.STOP = $localize`Stop`;\n    this.REDEPLOY = $localize`Redeploy`;\n    this.RESTART = $localize`Restart`;\n\n    this.REMOVE_SCHEDULING = $localize`Remove Scheduling`;\n    this.PROMOTE = $localize`Promote`;\n    this.DEMOTE = $localize`Demote`;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SucceededActionLabelsI18n {\n  /* This service is required as the i18n polyfill does not provide static\n  translation\n  */\n  CREATED: string;\n  DELETED: string;\n  ADDED: string;\n  REMOVED: string;\n  EDITED: string;\n  CANCELED: string;\n  PREVIEWED: string;\n  MOVED: string;\n  COPIED: string;\n  CLONED: string;\n  DEEP_SCRUBBED: string;\n  DESTROYED: string;\n  FLATTENED: string;\n  MARKED_DOWN: string;\n  MARKED_IN: string;\n  MARKED_LOST: string;\n  MARKED_OUT: string;\n  PROTECTED: string;\n  PURGED: string;\n  RENAMED: string;\n  RESTORED: string;\n  REWEIGHTED: string;\n  ROLLED_BACK: string;\n  SCRUBBED: string;\n  SHOWED: string;\n  TRASHED: string;\n  UNPROTECTED: string;\n  CHANGE: string;\n  RECREATED: string;\n  EXPIRED: string;\n  MOVE: string;\n  START: string;\n  STOP: string;\n  REDEPLOY: string;\n  RESTART: string;\n\n  constructor() {\n    /* Create a new item */\n    this.CREATED = $localize`Created`;\n\n    /* Destroy an existing item */\n    this.DELETED = $localize`Deleted`;\n\n    /* Add an existing item to a container */\n    this.ADDED = $localize`Added`;\n\n    /* Remove an item from a container WITHOUT deleting it */\n    this.REMOVED = $localize`Removed`;\n\n    /* Make changes to an existing item */\n    this.EDITED = $localize`Edited`;\n    this.CANCELED = $localize`Canceled`;\n    this.PREVIEWED = $localize`Previewed`;\n    this.MOVED = $localize`Moved`;\n\n    /* Non-standard actions */\n    this.CLONED = $localize`Cloned`;\n    this.COPIED = $localize`Copied`;\n    this.DEEP_SCRUBBED = $localize`Deep Scrubbed`;\n    this.DESTROYED = $localize`Destroyed`;\n    this.FLATTENED = $localize`Flattened`;\n    this.MARKED_DOWN = $localize`Marked Down`;\n    this.MARKED_IN = $localize`Marked In`;\n    this.MARKED_LOST = $localize`Marked Lost`;\n    this.MARKED_OUT = $localize`Marked Out`;\n    this.PROTECTED = $localize`Protected`;\n    this.PURGED = $localize`Purged`;\n    this.RENAMED = $localize`Renamed`;\n    this.RESTORED = $localize`Restored`;\n    this.REWEIGHTED = $localize`Reweighted`;\n    this.ROLLED_BACK = $localize`Rolled back`;\n    this.SCRUBBED = $localize`Scrubbed`;\n    this.SHOWED = $localize`Showed`;\n    this.TRASHED = $localize`Moved to Trash`;\n    this.UNPROTECTED = $localize`Unprotected`;\n    this.CHANGE = $localize`Change`;\n\n    /* Prometheus wording */\n    this.RECREATED = $localize`Recreated`;\n    this.EXPIRED = $localize`Expired`;\n\n    this.START = $localize`Start`;\n    this.STOP = $localize`Stop`;\n    this.REDEPLOY = $localize`Redeploy`;\n    this.RESTART = $localize`Restart`;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { NgbDropdownModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { NgxPipeFunctionModule } from 'ngx-pipe-function';\n\nimport { ComponentsModule } from '../components/components.module';\nimport { PipesModule } from '../pipes/pipes.module';\nimport { TableActionsComponent } from './table-actions/table-actions.component';\nimport { TableKeyValueComponent } from './table-key-value/table-key-value.component';\nimport { TablePaginationComponent } from './table-pagination/table-pagination.component';\nimport { TableComponent } from './table/table.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxDatatableModule,\n    NgxPipeFunctionModule,\n    FormsModule,\n    NgbDropdownModule,\n    NgbTooltipModule,\n    PipesModule,\n    ComponentsModule,\n    RouterModule\n  ],\n  declarations: [\n    TableComponent,\n    TableKeyValueComponent,\n    TableActionsComponent,\n    TablePaginationComponent\n  ],\n  exports: [\n    TableComponent,\n    NgxDatatableModule,\n    TableKeyValueComponent,\n    TableActionsComponent,\n    TablePaginationComponent\n  ]\n})\nexport class DataTableModule {}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { Permission } from '~/app/shared/models/permissions';\n\n@Component({\n  selector: 'cd-table-actions',\n  templateUrl: './table-actions.component.html',\n  styleUrls: ['./table-actions.component.scss']\n})\nexport class TableActionsComponent implements OnChanges, OnInit {\n  @Input()\n  permission: Permission;\n  @Input()\n  selection: CdTableSelection;\n  @Input()\n  tableActions: CdTableAction[];\n  @Input()\n  btnColor = 'accent';\n\n  // Use this if you just want to display a drop down button,\n  // labeled with the given text, with all actions in it.\n  // This disables the main action button.\n  @Input()\n  dropDownOnly?: string;\n\n  currentAction?: CdTableAction;\n  // Array with all visible actions\n  dropDownActions: CdTableAction[] = [];\n\n  icons = Icons;\n\n  ngOnInit() {\n    this.removeActionsWithNoPermissions();\n    this.onSelectionChange();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.selection) {\n      this.onSelectionChange();\n    }\n  }\n\n  onSelectionChange(): void {\n    this.updateDropDownActions();\n    this.updateCurrentAction();\n  }\n\n  toClassName(action: CdTableAction): string {\n    return action.name\n      .replace(/ /g, '-')\n      .replace(/[^a-z-]/gi, '')\n      .toLowerCase();\n  }\n\n  /**\n   * Removes all actions from 'tableActions' that need a permission the user doesn't have.\n   */\n  private removeActionsWithNoPermissions() {\n    if (!this.permission) {\n      this.tableActions = [];\n      return;\n    }\n    const permissions = Object.keys(this.permission).filter((key) => this.permission[key]);\n    this.tableActions = this.tableActions.filter((action) =>\n      permissions.includes(action.permission)\n    );\n  }\n\n  private updateDropDownActions(): void {\n    this.dropDownActions = this.tableActions.filter((action) =>\n      action.visible ? action.visible(this.selection) : action\n    );\n  }\n\n  /**\n   * Finds the next action that is used as main action for the button\n   *\n   * The order of the list is crucial to get the right main action.\n   *\n   * Default button conditions of actions:\n   * - 'create' actions can be used with no or multiple selections\n   * - 'update' and 'delete' actions can be used with one selection\n   */\n  private updateCurrentAction(): void {\n    if (this.dropDownOnly) {\n      this.currentAction = undefined;\n      return;\n    }\n    let buttonAction = this.dropDownActions.find((tableAction) => this.showableAction(tableAction));\n    if (!buttonAction && this.dropDownActions.length > 0) {\n      buttonAction = this.dropDownActions[0];\n    }\n    this.currentAction = buttonAction;\n  }\n\n  /**\n   * Determines if action can be used for the button\n   *\n   * @param {CdTableAction} action\n   * @returns {boolean}\n   */\n  private showableAction(action: CdTableAction): boolean {\n    const condition = action.canBePrimary;\n    const singleSelection = this.selection.hasSingleSelection;\n    const defaultCase = action.permission === 'create' ? !singleSelection : singleSelection;\n    return (condition && condition(this.selection)) || (!condition && defaultCase);\n  }\n\n  useRouterLink(action: CdTableAction): string {\n    if (!action.routerLink || this.disableSelectionAction(action)) {\n      return undefined;\n    }\n    return _.isString(action.routerLink) ? action.routerLink : action.routerLink();\n  }\n\n  /**\n   * Determines if an action should be disabled\n   *\n   * Default disable conditions of 'update' and 'delete' actions:\n   * - If no or multiple selections are made\n   * - If one selection is made, but a task is executed on that item\n   *\n   * @param {CdTableAction} action\n   * @returns {Boolean}\n   */\n  disableSelectionAction(action: CdTableAction): Boolean {\n    const disable = action.disable;\n    if (disable) {\n      return Boolean(disable(this.selection));\n    }\n    const permission = action.permission;\n    const selected = this.selection.hasSingleSelection && this.selection.first();\n    return Boolean(\n      ['update', 'delete'].includes(permission) && (!selected || selected.cdExecuting)\n    );\n  }\n\n  useClickAction(action: CdTableAction) {\n    /**\n     * In order to show tooltips for deactivated menu items, the class\n     * 'pointer-events: auto;' has been added to the .scss file which also\n     * re-activates the click-event.\n     * To prevent calling the click-event on deactivated elements we also have\n     * to check here if it's disabled.\n     */\n    return !this.disableSelectionAction(action) && action.click && action.click();\n  }\n\n  useDisableDesc(action: CdTableAction) {\n    if (action.disable) {\n      const result = action.disable(this.selection);\n      return _.isString(result) ? result : undefined;\n    }\n    return undefined;\n  }\n}\n","<div class=\"btn-group\">\n  <ng-container *ngIf=\"currentAction\">\n    <button type=\"button\"\n            title=\"{{ useDisableDesc(currentAction) }}\"\n            class=\"btn btn-{{btnColor}}\"\n            [ngClass]=\"{'disabled': disableSelectionAction(currentAction)}\"\n            (click)=\"useClickAction(currentAction)\"\n            [disabled]=\"disableSelectionAction(currentAction)\"\n            [routerLink]=\"useRouterLink(currentAction)\"\n            [attr.aria-label]=\"currentAction.name\"\n            [preserveFragment]=\"currentAction.preserveFragment ? '' : null\">\n      <i [ngClass]=\"[currentAction.icon]\"></i>\n      <span class=\"action-label\">{{ currentAction.name }}</span>\n    </button>\n  </ng-container>\n  <div class=\"btn-group\"\n       ngbDropdown\n       role=\"group\"\n       *ngIf=\"dropDownActions.length > 1\"\n       aria-label=\"Button group with nested dropdown\">\n    <button aria-label=\"dropdown-menu-toggle\"\n            class=\"btn btn-{{btnColor}} dropdown-toggle-split\"\n            ngbDropdownToggle>\n      <ng-container *ngIf=\"dropDownOnly\">{{ dropDownOnly }} </ng-container>\n      <span *ngIf=\"!dropDownOnly\"\n            class=\"sr-only\"></span>\n    </button>\n    <div class=\"dropdown-menu\"\n         ngbDropdownMenu>\n      <ng-container *ngFor=\"let action of dropDownActions\">\n        <button ngbDropdownItem\n                class=\"{{ toClassName(action) }}\"\n                title=\"{{ useDisableDesc(action) }}\"\n                (click)=\"useClickAction(action)\"\n                [routerLink]=\"useRouterLink(action)\"\n                [preserveFragment]=\"action.preserveFragment ? '' : null\"\n                [disabled]=\"disableSelectionAction(action)\"\n                [attr.aria-label]=\"action.name\">\n          <i [ngClass]=\"[action.icon, 'action-icon']\"></i>\n          <span>{{ action.name }}</span>\n        </button>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdDatePipe } from '~/app/shared/pipes/cd-date.pipe';\nimport { TableComponent } from '../table/table.component';\n\ninterface KeyValueItem {\n  key: string;\n  value: any;\n}\n\n/**\n * Display the given data in a 2 column data table. The left column\n * shows the 'key' attribute, the right column the 'value' attribute.\n * The data table has the following characteristics:\n * - No header and footer is displayed\n * - The relation of the width for the columns 'key' and 'value' is 1:3\n * - The 'key' column is displayed in bold text\n */\n@Component({\n  selector: 'cd-table-key-value',\n  templateUrl: './table-key-value.component.html',\n  styleUrls: ['./table-key-value.component.scss']\n})\nexport class TableKeyValueComponent implements OnInit, OnChanges {\n  @ViewChild(TableComponent, { static: true })\n  table: TableComponent;\n\n  @Input()\n  data: any;\n  @Input()\n  autoReload: any = 5000;\n  @Input()\n  renderObjects = false;\n  // Only used if objects are rendered\n  @Input()\n  appendParentKey = true;\n  @Input()\n  hideEmpty = false;\n  @Input()\n  hideKeys: string[] = []; // Keys of pairs not to be displayed\n\n  // If set, the classAddingTpl is used to enable different css for different values\n  @Input()\n  customCss?: { [css: string]: number | string | ((any: any) => boolean) };\n\n  columns: Array<CdTableColumn> = [];\n  tableData: KeyValueItem[];\n\n  /**\n   * The function that will be called to update the input data.\n   */\n  @Output()\n  fetchData = new EventEmitter();\n\n  constructor(private datePipe: CdDatePipe) {}\n\n  ngOnInit() {\n    this.columns = [\n      {\n        prop: 'key',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.bold\n      },\n      {\n        prop: 'value',\n        flexGrow: 3\n      }\n    ];\n    if (this.customCss) {\n      this.columns[1].cellTransformation = CellTemplate.classAdding;\n    }\n    // We need to subscribe the 'fetchData' event here and not in the\n    // HTML template, otherwise the data table will display the loading\n    // indicator infinitely if data is only bound via '[data]=\"xyz\"'.\n    // See for 'loadingIndicator' in 'TableComponent::ngOnInit()'.\n    if (this.fetchData.observers.length > 0) {\n      this.table.fetchData.subscribe(() => {\n        // Forward event triggered by the 'cd-table' data table.\n        this.fetchData.emit();\n      });\n    }\n    this.useData();\n  }\n\n  ngOnChanges() {\n    this.useData();\n  }\n\n  useData() {\n    if (!this.data) {\n      return; // Wait for data\n    }\n    let pairs = this.makePairs(this.data);\n    if (this.hideKeys) {\n      pairs = pairs.filter((pair) => !this.hideKeys.includes(pair.key));\n    }\n    this.tableData = pairs;\n  }\n\n  private makePairs(data: any): KeyValueItem[] {\n    let result: KeyValueItem[] = [];\n    if (!data) {\n      return undefined; // Wait for data\n    } else if (_.isArray(data)) {\n      result = this.makePairsFromArray(data);\n    } else if (_.isObject(data)) {\n      result = this.makePairsFromObject(data);\n    } else {\n      throw new Error('Wrong data format');\n    }\n    result = result\n      .map((item) => {\n        item.value = this.convertValue(item.value);\n        return item;\n      })\n      .filter((i) => i.value !== null);\n    return _.sortBy(this.renderObjects ? this.insertFlattenObjects(result) : result, 'key');\n  }\n\n  private makePairsFromArray(data: any[]): KeyValueItem[] {\n    let temp: any[] = [];\n    const first = data[0];\n    if (_.isArray(first)) {\n      if (first.length === 2) {\n        temp = data.map((a) => ({\n          key: a[0],\n          value: a[1]\n        }));\n      } else {\n        throw new Error(\n          `Array contains too many elements (${first.length}). ` +\n            `Needs to be of type [string, any][]`\n        );\n      }\n    } else if (_.isObject(first)) {\n      if (_.has(first, 'key') && _.has(first, 'value')) {\n        temp = [...data];\n      } else {\n        temp = data.reduce(\n          (previous: any[], item) => previous.concat(this.makePairsFromObject(item)),\n          temp\n        );\n      }\n    }\n    return temp;\n  }\n\n  private makePairsFromObject(data: any): KeyValueItem[] {\n    return Object.keys(data).map((k) => ({\n      key: k,\n      value: data[k]\n    }));\n  }\n\n  private insertFlattenObjects(data: KeyValueItem[]): any[] {\n    return _.flattenDeep(\n      data.map((item) => {\n        const value = item.value;\n        const isObject = _.isObject(value);\n        if (!isObject || _.isEmpty(value)) {\n          if (isObject) {\n            item.value = '';\n          }\n          return item;\n        }\n        return this.splitItemIntoItems(item);\n      })\n    );\n  }\n\n  /**\n   * Split item into items will call _makePairs inside _makePairs (recursion), in oder to split\n   * the object item up into items as planned.\n   */\n  private splitItemIntoItems(data: { key: string; value: object }): KeyValueItem[] {\n    return this.makePairs(data.value).map((item) => {\n      if (this.appendParentKey) {\n        item.key = data.key + ' ' + item.key;\n      }\n      return item;\n    });\n  }\n\n  private convertValue(value: any): KeyValueItem {\n    if (_.isArray(value)) {\n      if (_.isEmpty(value) && this.hideEmpty) {\n        return null;\n      }\n      value = value.map((item) => (_.isObject(item) ? JSON.stringify(item) : item)).join(', ');\n    } else if (_.isObject(value)) {\n      if ((this.hideEmpty && _.isEmpty(value)) || !this.renderObjects) {\n        return null;\n      }\n    } else if (_.isString(value)) {\n      if (value === '' && this.hideEmpty) {\n        return null;\n      }\n      if (this.isDate(value)) {\n        value = this.datePipe.transform(value) || value;\n      }\n    }\n\n    return value;\n  }\n\n  private isDate(s: string) {\n    const sep = '[ -:.TZ]';\n    const n = '\\\\d{2}' + sep;\n    //                            year     -    m - d - h : m : s . someRest  Z (if UTC)\n    return s.match(new RegExp('^\\\\d{4}' + sep + n + n + n + n + n + '\\\\d*' + 'Z?$'));\n  }\n}\n","<cd-table #table\n          [data]=\"tableData\"\n          [columns]=\"columns\"\n          columnMode=\"flex\"\n          [toolHeader]=\"false\"\n          [autoReload]=\"autoReload\"\n          [customCss]=\"customCss\"\n          [autoSave]=\"false\"\n          [header]=\"false\"\n          [footer]=\"false\"\n          [limit]=\"0\">\n</cd-table>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'cd-table-pagination',\n  templateUrl: './table-pagination.component.html',\n  styleUrls: ['./table-pagination.component.scss']\n})\nexport class TablePaginationComponent {\n  private _size = 0;\n  private _count = 0;\n  private _page = 1;\n  pages: any;\n\n  @Input()\n  set size(value: number) {\n    this._size = value;\n    this.pages = this.calcPages();\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  @Input()\n  set page(value: number) {\n    this._page = value;\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  @Input()\n  set count(value: number) {\n    this._count = value;\n  }\n\n  get count(): number {\n    return this._count;\n  }\n\n  get totalPages(): number {\n    const count = this.size < 1 ? 1 : Math.ceil(this._count / this._size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Output() pageChange: EventEmitter<any> = new EventEmitter();\n\n  canPrevious(): boolean {\n    return this._page > 1;\n  }\n\n  canNext(): boolean {\n    return this._page < this.totalPages;\n  }\n\n  prevPage(): void {\n    this.selectPage(this._page - 1);\n  }\n\n  nextPage(): void {\n    this.selectPage(this._page + 1);\n  }\n\n  selectPage(page: number): void {\n    if (page > 0 && page <= this.totalPages && page !== this.page) {\n      this._page = page;\n      this.pageChange.emit({\n        page\n      });\n    } else if (page > 0 && page >= this.totalPages) {\n      this._page = this.totalPages;\n      this.pageChange.emit({\n        page: this.totalPages\n      });\n    }\n  }\n\n  calcPages(page?: number): any[] {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = page - Math.floor(maxSize / 2);\n      endPage = page + Math.floor(maxSize / 2);\n\n      if (startPage < 1) {\n        startPage = 1;\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n      } else if (endPage > this.totalPages) {\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\n        endPage = this.totalPages;\n      }\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: <string>(<any>num)\n      });\n    }\n\n    return pages;\n  }\n}\n","<nav class=\"pagination\"\n     aria-label=\"Pagination\"\n     i18n-aria-label>\n  <button\n    class=\"pagination__btn pagination__btn_first\"\n    aria-label=\"Go to first page\"\n    i18n-aria-label\n    [disabled]=\"!canPrevious()\"\n    (click)=\"selectPage(1)\"\n  >\n    <i class=\"fa fa-angle-double-left\"\n       aria-hidden=\"true\"></i>\n  </button>\n  <button\n    class=\"pagination__btn pagination__btn_prev\"\n    aria-label=\"Go to previous page\"\n    i18n-aria-label\n    [disabled]=\"!canPrevious()\"\n    (click)=\"prevPage()\"\n  >\n    <i class=\"fa fa-angle-left\"\n       aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"pagination__pages\">\n    <input\n      #pageNumber\n      class=\"pagination__page_input\"\n      aria-label=\"Current page\"\n      i18n-aria-label\n      type=\"number\"\n      min=\"1\"\n      [max]=\"totalPages\"\n      [value]=\"page\"\n      (input)=\"selectPage(pageNumber.valueAsNumber)\"\n    />\n    <span aria-hidden=\"true\"> of {{ totalPages }} </span>\n  </div>\n  <button\n    class=\"pagination__btn pagination__btn_next\"\n    aria-label=\"Go to next page\"\n    i18n-aria-label\n    (click)=\"nextPage()\"\n    [disabled]=\"!canNext()\"\n  >\n    <i class=\"fa fa-angle-right\"\n       aria-hidden=\"true\"></i>\n  </button>\n  <button\n    class=\"pagination__btn pagination__btn_last\"\n    aria-label=\"Go to last page\"\n    i18n-aria-label\n    [disabled]=\"!canNext()\"\n    (click)=\"selectPage(totalPages)\"\n  >\n    <i class=\"fa fa-angle-double-right\"\n       aria-hidden=\"true\"></i>\n  </button>\n</nav>\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  PipeTransform,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\nimport {\n  DatatableComponent,\n  getterForProp,\n  SortDirection,\n  SortPropDir,\n  TableColumnProp\n} from '@swimlane/ngx-datatable';\nimport _ from 'lodash';\nimport { Observable, of, Subject, Subscription } from 'rxjs';\n\nimport { TableStatus } from '~/app/shared/classes/table-status';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableColumnFilter } from '~/app/shared/models/cd-table-column-filter';\nimport { CdTableColumnFiltersChange } from '~/app/shared/models/cd-table-column-filters-change';\nimport { CdTableFetchDataContext } from '~/app/shared/models/cd-table-fetch-data-context';\nimport { PageInfo } from '~/app/shared/models/cd-table-paging';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { CdUserConfig } from '~/app/shared/models/cd-user-config';\nimport { TimerService } from '~/app/shared/services/timer.service';\n\n@Component({\n  selector: 'cd-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableComponent implements AfterContentChecked, OnInit, OnChanges, OnDestroy {\n  @ViewChild(DatatableComponent, { static: true })\n  table: DatatableComponent;\n  @ViewChild('tableCellBoldTpl', { static: true })\n  tableCellBoldTpl: TemplateRef<any>;\n  @ViewChild('sparklineTpl', { static: true })\n  sparklineTpl: TemplateRef<any>;\n  @ViewChild('routerLinkTpl', { static: true })\n  routerLinkTpl: TemplateRef<any>;\n  @ViewChild('checkIconTpl', { static: true })\n  checkIconTpl: TemplateRef<any>;\n  @ViewChild('perSecondTpl', { static: true })\n  perSecondTpl: TemplateRef<any>;\n  @ViewChild('executingTpl', { static: true })\n  executingTpl: TemplateRef<any>;\n  @ViewChild('classAddingTpl', { static: true })\n  classAddingTpl: TemplateRef<any>;\n  @ViewChild('badgeTpl', { static: true })\n  badgeTpl: TemplateRef<any>;\n  @ViewChild('mapTpl', { static: true })\n  mapTpl: TemplateRef<any>;\n  @ViewChild('truncateTpl', { static: true })\n  truncateTpl: TemplateRef<any>;\n  @ViewChild('timeAgoTpl', { static: true })\n  timeAgoTpl: TemplateRef<any>;\n  @ViewChild('rowDetailsTpl', { static: true })\n  rowDetailsTpl: TemplateRef<any>;\n  @ViewChild('rowSelectionTpl', { static: true })\n  rowSelectionTpl: TemplateRef<any>;\n\n  // This is the array with the items to be shown.\n  @Input()\n  data: any[];\n  // Each item -> { prop: 'attribute name', name: 'display name' }\n  @Input()\n  columns: CdTableColumn[];\n  // Each item -> { prop: 'attribute name', dir: 'asc'||'desc'}\n  @Input()\n  sorts?: SortPropDir[];\n  // Method used for setting column widths.\n  @Input()\n  columnMode? = 'flex';\n  // Display only actions in header (make sure to disable toolHeader) and use \".only-table-actions\"\n  @Input()\n  onlyActionHeader? = false;\n  // Display the tool header, including reload button, pagination and search fields?\n  @Input()\n  toolHeader? = true;\n  // Display search field inside tool header?\n  @Input()\n  searchField? = true;\n  // Display the table header?\n  @Input()\n  header? = true;\n  // Display the table footer?\n  @Input()\n  footer? = true;\n  // Page size to show. Set to 0 to show unlimited number of rows.\n  @Input()\n  limit? = 10;\n  @Input()\n  maxLimit? = 9999;\n  // Has the row details?\n  @Input()\n  hasDetails = false;\n\n  /**\n   * Auto reload time in ms - per default every 5s\n   * You can set it to 0, undefined or false to disable the auto reload feature in order to\n   * trigger 'fetchData' if the reload button is clicked.\n   * You can set it to a negative number to, on top of disabling the auto reload,\n   * prevent triggering fetchData when initializing the table.\n   */\n  @Input()\n  autoReload = 5000;\n\n  // Which row property is unique for a row. If the identifier is not specified in any\n  // column, then the property name of the first column is used. Defaults to 'id'.\n  @Input()\n  identifier = 'id';\n  // If 'true', then the specified identifier is used anyway, although it is not specified\n  // in any column. Defaults to 'false'.\n  @Input()\n  forceIdentifier = false;\n  // Allows other components to specify which type of selection they want,\n  // e.g. 'single' or 'multi'.\n  @Input()\n  selectionType: string = undefined;\n  // By default selected item details will be updated on table refresh, if data has changed\n  @Input()\n  updateSelectionOnRefresh: 'always' | 'never' | 'onChange' = 'onChange';\n  // By default expanded item details will be updated on table refresh, if data has changed\n  @Input()\n  updateExpandedOnRefresh: 'always' | 'never' | 'onChange' = 'onChange';\n\n  @Input()\n  autoSave = true;\n\n  // Enable this in order to search through the JSON of any used object.\n  @Input()\n  searchableObjects = false;\n\n  // Only needed to set if the classAddingTpl is used\n  @Input()\n  customCss?: { [css: string]: number | string | ((any: any) => boolean) };\n\n  // Columns that aren't displayed but can be used as filters\n  @Input()\n  extraFilterableColumns: CdTableColumn[] = [];\n\n  @Input()\n  status = new TableStatus();\n\n  // Support server-side pagination/sorting/etc.\n  @Input()\n  serverSide = false;\n\n  /*\n  Only required when serverSide is enabled.\n  It should be provided by the server via \"X-Total-Count\" HTTP Header\n  */\n  @Input()\n  count = 0;\n\n  /**\n   * Should be a function to update the input data if undefined nothing will be triggered\n   *\n   * Sometimes it's useful to only define fetchData once.\n   * Example:\n   * Usage of multiple tables with data which is updated by the same function\n   * What happens:\n   * The function is triggered through one table and all tables will update\n   */\n  @Output()\n  fetchData = new EventEmitter<CdTableFetchDataContext>();\n\n  /**\n   * This should be defined if you need access to the selection object.\n   *\n   * Each time the table selection changes, this will be triggered and\n   * the new selection object will be sent.\n   *\n   * @memberof TableComponent\n   */\n  @Output()\n  updateSelection = new EventEmitter();\n\n  @Output()\n  setExpandedRow = new EventEmitter();\n\n  /**\n   * This should be defined if you need access to the applied column filters.\n   *\n   * Each time the column filters changes, this will be triggered and\n   * the column filters change event will be sent.\n   *\n   * @memberof TableComponent\n   */\n  @Output() columnFiltersChanged = new EventEmitter<CdTableColumnFiltersChange>();\n\n  /**\n   * Use this variable to access the selected row(s).\n   */\n  selection = new CdTableSelection();\n\n  /**\n   * Use this variable to access the expanded row\n   */\n  expanded: any = undefined;\n\n  /**\n   * To prevent making changes to the original columns list, that might change\n   * how the table is renderer a second time, we now clone that list into a\n   * local variable and only use the clone.\n   */\n  localColumns: CdTableColumn[];\n  tableColumns: CdTableColumn[];\n  icons = Icons;\n  cellTemplates: {\n    [key: string]: TemplateRef<any>;\n  } = {};\n  search = '';\n  rows: any[] = [];\n  loadingIndicator = true;\n  paginationClasses = {\n    pagerLeftArrow: Icons.leftArrowDouble,\n    pagerRightArrow: Icons.rightArrowDouble,\n    pagerPrevious: Icons.leftArrow,\n    pagerNext: Icons.rightArrow\n  };\n  userConfig: CdUserConfig = {};\n  tableName: string;\n  localStorage = window.localStorage;\n  private saveSubscriber: Subscription;\n  private reloadSubscriber: Subscription;\n  private updating = false;\n\n  // Internal variable to check if it is necessary to recalculate the\n  // table columns after the browser window has been resized.\n  private currentWidth: number;\n\n  columnFilters: CdTableColumnFilter[] = [];\n  selectedFilter: CdTableColumnFilter;\n  get columnFiltered(): boolean {\n    return _.some(this.columnFilters, (filter) => {\n      return filter.value !== undefined;\n    });\n  }\n\n  constructor(\n    // private ngZone: NgZone,\n    private cdRef: ChangeDetectorRef,\n    private timerService: TimerService\n  ) {}\n\n  static prepareSearch(search: string) {\n    search = search.toLowerCase().replace(/,/g, '');\n    if (search.match(/['\"][^'\"]+['\"]/)) {\n      search = search.replace(/['\"][^'\"]+['\"]/g, (match: string) => {\n        return match.replace(/(['\"])([^'\"]+)(['\"])/g, '$2').replace(/ /g, '+');\n      });\n    }\n    return search.split(' ').filter((word) => word);\n  }\n\n  ngOnInit() {\n    this.localColumns = _.clone(this.columns);\n    // debounce reloadData method so that search doesn't run api requests\n    // for every keystroke\n    if (this.serverSide) {\n      this.reloadData = _.debounce(this.reloadData, 1000);\n    }\n\n    // ngx-datatable triggers calculations each time mouse enters a row,\n    // this will prevent that.\n    this.table.element.addEventListener('mouseenter', (e) => e.stopPropagation());\n    this._addTemplates();\n    if (!this.sorts) {\n      // Check whether the specified identifier exists.\n      const exists = _.findIndex(this.localColumns, ['prop', this.identifier]) !== -1;\n      // Auto-build the sorting configuration. If the specified identifier doesn't exist,\n      // then use the property of the first column.\n      this.sorts = this.createSortingDefinition(\n        exists ? this.identifier : this.localColumns[0].prop + ''\n      );\n      // If the specified identifier doesn't exist and it is not forced to use it anyway,\n      // then use the property of the first column.\n      if (!exists && !this.forceIdentifier) {\n        this.identifier = this.localColumns[0].prop + '';\n      }\n    }\n\n    this.initUserConfig();\n    this.localColumns.forEach((c) => {\n      if (c.cellTransformation) {\n        c.cellTemplate = this.cellTemplates[c.cellTransformation];\n      }\n      if (!c.flexGrow) {\n        c.flexGrow = c.prop + '' === this.identifier ? 1 : 2;\n      }\n      if (!c.resizeable) {\n        c.resizeable = false;\n      }\n    });\n\n    this.initExpandCollapseColumn(); // If rows have details, add a column to expand or collapse the rows\n    this.initCheckboxColumn();\n    this.filterHiddenColumns();\n    this.initColumnFilters();\n    this.updateColumnFilterOptions();\n    // Notify all subscribers to reset their current selection.\n    this.updateSelection.emit(new CdTableSelection());\n    // Load the data table content every N ms or at least once.\n    // Force showing the loading indicator if there are subscribers to the fetchData\n    // event. This is necessary because it has been set to False in useData() when\n    // this method was triggered by ngOnChanges().\n    if (this.fetchData.observers.length > 0) {\n      this.loadingIndicator = true;\n    }\n    if (_.isInteger(this.autoReload) && this.autoReload > 0) {\n      this.reloadSubscriber = this.timerService\n        .get(() => of(0), this.autoReload)\n        .subscribe(() => {\n          this.reloadData();\n        });\n    } else if (!this.autoReload) {\n      this.reloadData();\n    } else {\n      this.useData();\n    }\n  }\n\n  initUserConfig() {\n    if (this.autoSave) {\n      this.tableName = this._calculateUniqueTableName(this.localColumns);\n      this._loadUserConfig();\n      this._initUserConfigAutoSave();\n    }\n    if (!this.userConfig.limit) {\n      this.userConfig.limit = this.limit;\n    }\n    if (!(this.userConfig.offset >= 0)) {\n      this.userConfig.offset = this.table.offset;\n    }\n    if (!this.userConfig.search) {\n      this.userConfig.search = this.search;\n    }\n    if (!this.userConfig.sorts) {\n      this.userConfig.sorts = this.sorts;\n    }\n    if (!this.userConfig.columns) {\n      this.updateUserColumns();\n    } else {\n      this.userConfig.columns.forEach((col) => {\n        for (let i = 0; i < this.localColumns.length; i++) {\n          if (this.localColumns[i].prop === col.prop) {\n            this.localColumns[i].isHidden = col.isHidden;\n          }\n        }\n      });\n    }\n  }\n\n  _calculateUniqueTableName(columns: any[]) {\n    const stringToNumber = (s: string) => {\n      if (!_.isString(s)) {\n        return 0;\n      }\n      let result = 0;\n      for (let i = 0; i < s.length; i++) {\n        result += s.charCodeAt(i) * i;\n      }\n      return result;\n    };\n    return columns\n      .reduce(\n        (result, value, index) =>\n          (stringToNumber(value.prop) + stringToNumber(value.name)) * (index + 1) + result,\n        0\n      )\n      .toString();\n  }\n\n  _loadUserConfig() {\n    const loaded = this.localStorage.getItem(this.tableName);\n    if (loaded) {\n      this.userConfig = JSON.parse(loaded);\n    }\n  }\n\n  _initUserConfigAutoSave() {\n    const source: Observable<any> = new Observable(this._initUserConfigProxy.bind(this));\n    this.saveSubscriber = source.subscribe(this._saveUserConfig.bind(this));\n  }\n\n  _initUserConfigProxy(observer: Subject<any>) {\n    this.userConfig = new Proxy(this.userConfig, {\n      set(config, prop: string, value) {\n        config[prop] = value;\n        observer.next(config);\n        return true;\n      }\n    });\n  }\n\n  _saveUserConfig(config: any) {\n    this.localStorage.setItem(this.tableName, JSON.stringify(config));\n  }\n\n  updateUserColumns() {\n    this.userConfig.columns = this.localColumns.map((c) => ({\n      prop: c.prop,\n      name: c.name,\n      isHidden: !!c.isHidden\n    }));\n  }\n\n  /**\n   * Add a column containing a checkbox if selectionType is 'multiClick'.\n   */\n  initCheckboxColumn() {\n    if (this.selectionType === 'multiClick') {\n      this.localColumns.unshift({\n        prop: undefined,\n        resizeable: false,\n        sortable: false,\n        draggable: false,\n        checkboxable: false,\n        canAutoResize: false,\n        cellClass: 'cd-datatable-checkbox',\n        cellTemplate: this.rowSelectionTpl,\n        width: 30\n      });\n    }\n  }\n\n  /**\n   * Add a column to expand and collapse the table row if it 'hasDetails'\n   */\n  initExpandCollapseColumn() {\n    if (this.hasDetails) {\n      this.localColumns.unshift({\n        prop: undefined,\n        resizeable: false,\n        sortable: false,\n        draggable: false,\n        isHidden: false,\n        canAutoResize: false,\n        cellClass: 'cd-datatable-expand-collapse',\n        width: 40,\n        cellTemplate: this.rowDetailsTpl\n      });\n    }\n  }\n\n  filterHiddenColumns() {\n    this.tableColumns = this.localColumns.filter((c) => !c.isHidden);\n  }\n\n  initColumnFilters() {\n    let filterableColumns = _.filter(this.localColumns, { filterable: true });\n    filterableColumns = [...filterableColumns, ...this.extraFilterableColumns];\n    this.columnFilters = filterableColumns.map((col: CdTableColumn) => {\n      return {\n        column: col,\n        options: [],\n        value: col.filterInitValue\n          ? this.createColumnFilterOption(col.filterInitValue, col.pipe)\n          : undefined\n      };\n    });\n    this.selectedFilter = _.first(this.columnFilters);\n  }\n\n  private createColumnFilterOption(\n    value: any,\n    pipe?: PipeTransform\n  ): { raw: string; formatted: string } {\n    return {\n      raw: _.toString(value),\n      formatted: pipe ? pipe.transform(value) : _.toString(value)\n    };\n  }\n\n  updateColumnFilterOptions() {\n    // update all possible values in a column\n    this.columnFilters.forEach((filter) => {\n      let values: any[] = [];\n\n      if (_.isUndefined(filter.column.filterOptions)) {\n        // only allow types that can be easily converted into string\n        const pre = _.filter(_.map(this.data, filter.column.prop), (v) => {\n          return (_.isString(v) && v !== '') || _.isBoolean(v) || _.isFinite(v) || _.isDate(v);\n        });\n        values = _.sortedUniq(pre.sort());\n      } else {\n        values = filter.column.filterOptions;\n      }\n\n      const options = values.map((v) => this.createColumnFilterOption(v, filter.column.pipe));\n\n      // In case a previous value is not available anymore\n      if (filter.value && _.isUndefined(_.find(options, { raw: filter.value.raw }))) {\n        filter.value = undefined;\n      }\n\n      filter.options = options;\n    });\n  }\n\n  onSelectFilter(filter: CdTableColumnFilter) {\n    this.selectedFilter = filter;\n  }\n\n  onChangeFilter(filter: CdTableColumnFilter, option?: { raw: string; formatted: string }) {\n    filter.value = _.isEqual(filter.value, option) ? undefined : option;\n    this.updateFilter();\n  }\n\n  doColumnFiltering() {\n    const appliedFilters: CdTableColumnFiltersChange['filters'] = [];\n    let data = [...this.data];\n    let dataOut: any[] = [];\n    this.columnFilters.forEach((filter) => {\n      if (filter.value === undefined) {\n        return;\n      }\n      appliedFilters.push({\n        name: filter.column.name,\n        prop: filter.column.prop,\n        value: filter.value\n      });\n      // Separate data to filtered and filtered-out parts.\n      const parts = _.partition(data, (row) => {\n        // Use getter from ngx-datatable to handle props like 'sys_api.size'\n        const valueGetter = getterForProp(filter.column.prop);\n        const value = valueGetter(row, filter.column.prop);\n        if (_.isUndefined(filter.column.filterPredicate)) {\n          // By default, test string equal\n          return `${value}` === filter.value.raw;\n        } else {\n          // Use custom function to filter\n          return filter.column.filterPredicate(row, filter.value.raw);\n        }\n      });\n      data = parts[0];\n      dataOut = [...dataOut, ...parts[1]];\n    });\n\n    this.columnFiltersChanged.emit({\n      filters: appliedFilters,\n      data: data,\n      dataOut: dataOut\n    });\n\n    // Remove the selection if previously-selected rows are filtered out.\n    _.forEach(this.selection.selected, (selectedItem) => {\n      if (_.find(data, { [this.identifier]: selectedItem[this.identifier] }) === undefined) {\n        this.selection = new CdTableSelection();\n        this.onSelect(this.selection);\n      }\n    });\n    return data;\n  }\n\n  ngOnDestroy() {\n    if (this.reloadSubscriber) {\n      this.reloadSubscriber.unsubscribe();\n    }\n    if (this.saveSubscriber) {\n      this.saveSubscriber.unsubscribe();\n    }\n  }\n\n  ngAfterContentChecked() {\n    // If the data table is not visible, e.g. another tab is active, and the\n    // browser window gets resized, the table and its columns won't get resized\n    // automatically if the tab gets visible again.\n    // https://github.com/swimlane/ngx-datatable/issues/193\n    // https://github.com/swimlane/ngx-datatable/issues/193#issuecomment-329144543\n    if (this.table && this.table.element.clientWidth !== this.currentWidth) {\n      this.currentWidth = this.table.element.clientWidth;\n      // Recalculate the sizes of the grid.\n      this.table.recalculate();\n      // Mark the datatable as changed, Angular's change-detection will\n      // do the rest for us => the grid will be redrawn.\n      // Note, the ChangeDetectorRef variable is private, so we need to\n      // use this workaround to access it and make TypeScript happy.\n      const cdRef = _.get(this.table, 'cd');\n      cdRef.markForCheck();\n    }\n  }\n\n  _addTemplates() {\n    this.cellTemplates.bold = this.tableCellBoldTpl;\n    this.cellTemplates.checkIcon = this.checkIconTpl;\n    this.cellTemplates.sparkline = this.sparklineTpl;\n    this.cellTemplates.routerLink = this.routerLinkTpl;\n    this.cellTemplates.perSecond = this.perSecondTpl;\n    this.cellTemplates.executing = this.executingTpl;\n    this.cellTemplates.classAdding = this.classAddingTpl;\n    this.cellTemplates.badge = this.badgeTpl;\n    this.cellTemplates.map = this.mapTpl;\n    this.cellTemplates.truncate = this.truncateTpl;\n    this.cellTemplates.timeAgo = this.timeAgoTpl;\n  }\n\n  useCustomClass(value: any): string {\n    if (!this.customCss) {\n      throw new Error('Custom classes are not set!');\n    }\n    const classes = Object.keys(this.customCss);\n    const css = Object.values(this.customCss)\n      .map((v, i) => ((_.isFunction(v) && v(value)) || v === value) && classes[i])\n      .filter((x) => x)\n      .join(' ');\n    return _.isEmpty(css) ? undefined : css;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && changes.data.currentValue) {\n      this.useData();\n    }\n  }\n\n  setLimit(e: any) {\n    const value = Number(e.target.value);\n    if (value > 0) {\n      if (this.maxLimit && value > this.maxLimit) {\n        this.userConfig.limit = this.maxLimit;\n        // change input field to maxLimit\n        e.srcElement.value = this.maxLimit;\n      } else {\n        this.userConfig.limit = value;\n      }\n    }\n    if (this.serverSide) {\n      this.reloadData();\n    }\n  }\n\n  reloadData() {\n    if (!this.updating) {\n      this.status = new TableStatus();\n      const context = new CdTableFetchDataContext(() => {\n        // Do we have to display the error panel?\n        if (!!context.errorConfig.displayError) {\n          this.status = new TableStatus('danger', $localize`Failed to load data.`);\n        }\n        // Force data table to show no data?\n        if (context.errorConfig.resetData) {\n          this.data = [];\n        }\n        // Stop the loading indicator and reset the data table\n        // to the correct state.\n        this.useData();\n      });\n      context.pageInfo.offset = this.userConfig.offset;\n      context.pageInfo.limit = this.userConfig.limit;\n      context.search = this.userConfig.search;\n      if (this.userConfig.sorts?.length) {\n        const sort = this.userConfig.sorts[0];\n        context.sort = `${sort.dir === 'desc' ? '-' : '+'}${sort.prop}`;\n      }\n      this.fetchData.emit(context);\n      this.updating = true;\n    }\n  }\n\n  refreshBtn() {\n    this.loadingIndicator = true;\n    this.reloadData();\n  }\n\n  changePage(pageInfo: PageInfo) {\n    this.userConfig.offset = pageInfo.offset;\n    this.userConfig.limit = pageInfo.limit;\n    if (this.serverSide) {\n      this.reloadData();\n    }\n  }\n  rowIdentity() {\n    return (row: any) => {\n      const id = row[this.identifier];\n      if (_.isUndefined(id)) {\n        throw new Error(`Wrong identifier \"${this.identifier}\" -> \"${id}\"`);\n      }\n      return id;\n    };\n  }\n\n  useData() {\n    if (!this.data) {\n      return; // Wait for data\n    }\n    this.updateColumnFilterOptions();\n    this.updateFilter();\n    this.reset();\n    this.updateSelected();\n    this.updateExpanded();\n  }\n\n  /**\n   * Reset the data table to correct state. This includes:\n   * - Disable loading indicator\n   * - Reset 'Updating' flag\n   */\n  reset() {\n    this.loadingIndicator = false;\n    this.updating = false;\n  }\n\n  /**\n   * After updating the data, we have to update the selected items\n   * because details may have changed,\n   * or some selected items may have been removed.\n   */\n  updateSelected() {\n    if (this.updateSelectionOnRefresh === 'never') {\n      return;\n    }\n    const newSelected = new Set();\n    this.selection.selected.forEach((selectedItem) => {\n      for (const row of this.data) {\n        if (selectedItem[this.identifier] === row[this.identifier]) {\n          newSelected.add(row);\n        }\n      }\n    });\n    const newSelectedArray = Array.from(newSelected.values());\n    if (\n      this.updateSelectionOnRefresh === 'onChange' &&\n      _.isEqual(this.selection.selected, newSelectedArray)\n    ) {\n      return;\n    }\n    this.selection.selected = newSelectedArray;\n    this.onSelect(this.selection);\n  }\n\n  updateExpanded() {\n    if (_.isUndefined(this.expanded) || this.updateExpandedOnRefresh === 'never') {\n      return;\n    }\n\n    const expandedId = this.expanded[this.identifier];\n    const newExpanded = _.find(this.data, (row) => expandedId === row[this.identifier]);\n\n    if (this.updateExpandedOnRefresh === 'onChange' && _.isEqual(this.expanded, newExpanded)) {\n      return;\n    }\n\n    this.expanded = newExpanded;\n    this.setExpandedRow.emit(newExpanded);\n  }\n\n  onSelect($event: any) {\n    // Ensure we do not process DOM 'select' events.\n    // https://github.com/swimlane/ngx-datatable/issues/899\n    if (_.has($event, 'selected')) {\n      this.selection.selected = $event['selected'];\n    }\n    this.updateSelection.emit(_.clone(this.selection));\n  }\n\n  toggleColumn(column: CdTableColumn) {\n    const prop: TableColumnProp = column.prop;\n    const hide = !column.isHidden;\n    if (hide && this.tableColumns.length === 1) {\n      column.isHidden = true;\n      return;\n    }\n    _.find(this.localColumns, (c: CdTableColumn) => c.prop === prop).isHidden = hide;\n    this.updateColumns();\n  }\n\n  updateColumns() {\n    this.updateUserColumns();\n    this.filterHiddenColumns();\n    const sortProp = this.userConfig.sorts[0].prop;\n    if (!_.find(this.tableColumns, (c: CdTableColumn) => c.prop === sortProp)) {\n      this.userConfig.sorts = this.createSortingDefinition(this.tableColumns[0].prop);\n    }\n    this.table.recalculate();\n    this.cdRef.detectChanges();\n  }\n\n  createSortingDefinition(prop: TableColumnProp): SortPropDir[] {\n    return [\n      {\n        prop: prop,\n        dir: SortDirection.asc\n      }\n    ];\n  }\n\n  changeSorting({ sorts }: any) {\n    this.userConfig.sorts = sorts;\n    if (this.serverSide) {\n      this.userConfig.offset = 0;\n      this.reloadData();\n    }\n  }\n\n  onClearSearch() {\n    this.search = '';\n    this.updateFilter();\n  }\n\n  onClearFilters() {\n    this.columnFilters.forEach((filter) => {\n      filter.value = undefined;\n    });\n    this.selectedFilter = _.first(this.columnFilters);\n    this.updateFilter();\n  }\n\n  updateFilter() {\n    if (this.serverSide) {\n      if (this.userConfig.search !== this.search) {\n        // if we don't go back to the first page it will try load\n        // a page which could not exists with an especific search\n        this.userConfig.offset = 0;\n        this.userConfig.limit = this.limit;\n        this.userConfig.search = this.search;\n        this.updating = false;\n        this.reloadData();\n      }\n      this.rows = this.data;\n    } else {\n      let rows = this.columnFilters.length !== 0 ? this.doColumnFiltering() : this.data;\n\n      if (this.search.length > 0 && rows) {\n        const columns = this.localColumns.filter(\n          (c) => c.cellTransformation !== CellTemplate.sparkline\n        );\n        // update the rows\n        rows = this.subSearch(rows, TableComponent.prepareSearch(this.search), columns);\n        // Whenever the filter changes, always go back to the first page\n        this.table.offset = 0;\n      }\n\n      this.rows = rows;\n    }\n  }\n\n  subSearch(data: any[], currentSearch: string[], columns: CdTableColumn[]): any[] {\n    if (currentSearch.length === 0 || data.length === 0) {\n      return data;\n    }\n    const searchTerms: string[] = currentSearch.pop().replace(/\\+/g, ' ').split(':');\n    const columnsClone = [...columns];\n    if (searchTerms.length === 2) {\n      columns = columnsClone.filter((c) => c.name.toLowerCase().indexOf(searchTerms[0]) !== -1);\n    }\n    data = this.basicDataSearch(_.last(searchTerms), data, columns);\n    // Checks if user searches for column but he is still typing\n    return this.subSearch(data, currentSearch, columnsClone);\n  }\n\n  basicDataSearch(searchTerm: string, rows: any[], columns: CdTableColumn[]) {\n    if (searchTerm.length === 0) {\n      return rows;\n    }\n    return rows.filter((row) => {\n      return (\n        columns.filter((col) => {\n          let cellValue: any = _.get(row, col.prop);\n\n          if (!_.isUndefined(col.pipe)) {\n            cellValue = col.pipe.transform(cellValue);\n          }\n          if (_.isUndefined(cellValue) || _.isNull(cellValue)) {\n            return false;\n          }\n\n          if (_.isArray(cellValue)) {\n            cellValue = cellValue.join(' ');\n          } else if (_.isNumber(cellValue) || _.isBoolean(cellValue)) {\n            cellValue = cellValue.toString();\n          }\n\n          if (_.isObjectLike(cellValue)) {\n            if (this.searchableObjects) {\n              cellValue = JSON.stringify(cellValue);\n            } else {\n              return false;\n            }\n          }\n\n          return cellValue.toLowerCase().indexOf(searchTerm) !== -1;\n        }).length > 0\n      );\n    });\n  }\n\n  getRowClass() {\n    // Return the function used to populate a row's CSS classes.\n    return () => {\n      return {\n        clickable: !_.isUndefined(this.selectionType)\n      };\n    };\n  }\n\n  toggleExpandRow(row: any, isExpanded: boolean, event: any) {\n    event.stopPropagation();\n    if (!isExpanded) {\n      // If current row isn't expanded, collapse others\n      this.expanded = row;\n      this.table.rowDetail.collapseAllRows();\n      this.setExpandedRow.emit(row);\n    } else {\n      // If all rows are closed, emit undefined\n      this.expanded = undefined;\n      this.setExpandedRow.emit(undefined);\n    }\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n}\n","<div class=\"dataTables_wrapper\">\n\n  <div *ngIf=\"onlyActionHeader\"\n       class=\"dataTables_header clearfix\">\n    <div class=\"cd-datatable-actions\">\n      <ng-content select=\".only-table-actions\"></ng-content>\n    </div>\n  </div>\n  <div class=\"dataTables_header clearfix\"\n       *ngIf=\"toolHeader\">\n    <!-- actions -->\n    <div class=\"cd-datatable-actions\">\n      <ng-content select=\".table-actions\"></ng-content>\n    </div>\n    <!-- end actions -->\n\n    <!-- column filters -->\n    <div *ngIf=\"columnFilters.length !== 0\"\n         class=\"btn-group widget-toolbar\">\n      <div ngbDropdown\n           placement=\"bottom-right\"\n           class=\"tc_filter_name\">\n        <button ngbDropdownToggle\n                class=\"btn btn-light\"\n                title=\"Filter\">\n          <i [ngClass]=\"[icons.large, icons.filter]\"></i>\n          {{ selectedFilter.column.name }}\n        </button>\n        <div ngbDropdownMenu>\n          <ng-container *ngFor=\"let filter of columnFilters\">\n            <button ngbDropdownItem\n                    (click)=\"onSelectFilter(filter); false\">{{ filter.column.name }}</button>\n          </ng-container>\n        </div>\n      </div>\n\n      <div ngbDropdown\n           placement=\"bottom-right\"\n           class=\"tc_filter_option\">\n        <button ngbDropdownToggle\n                class=\"btn btn-light\"\n                [class.disabled]=\"selectedFilter.options.length === 0\">\n          {{ selectedFilter.value ? selectedFilter.value.formatted: 'Any' }}\n        </button>\n        <div ngbDropdownMenu>\n          <ng-container *ngFor=\"let option of selectedFilter.options\">\n            <button ngbDropdownItem\n                    (click)=\"onChangeFilter(selectedFilter, option); false\">\n              {{ option.formatted }}\n              <i *ngIf=\"selectedFilter.value !== undefined && (selectedFilter.value.raw === option.raw)\"\n                 [ngClass]=\"[icons.check]\"></i>\n            </button>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n    <!-- end column filters -->\n\n    <!-- search -->\n    <div class=\"input-group search\"\n         *ngIf=\"searchField\">\n      <span class=\"input-group-text\">\n        <i [ngClass]=\"[icons.search]\"></i>\n      </span>\n      <input aria-label=\"search\"\n             class=\"form-control\"\n             type=\"text\"\n             [(ngModel)]=\"search\"\n             (keyup)=\"updateFilter()\">\n      <button type=\"button\"\n              class=\"btn btn-light\"\n              title=\"Clear\"\n              (click)=\"onClearSearch()\">\n        <i class=\"icon-prepend {{ icons.destroy }}\"></i>\n      </button>\n    </div>\n    <!-- end search -->\n\n    <!-- pagination limit -->\n    <div class=\"input-group dataTables_paginate\"\n         *ngIf=\"limit\">\n      <input aria-label=\"table pagination\"\n             class=\"form-control\"\n             type=\"number\"\n             min=\"1\"\n             max=\"9999\"\n             [value]=\"userConfig.limit\"\n             (click)=\"setLimit($event)\"\n             (keyup)=\"setLimit($event)\"\n             (blur)=\"setLimit($event)\">\n    </div>\n    <!-- end pagination limit-->\n\n    <!-- show hide columns -->\n    <div class=\"widget-toolbar\">\n      <div ngbDropdown\n           autoClose=\"outside\"\n           class=\"tc_menuitem\">\n        <button ngbDropdownToggle\n                class=\"btn btn-light tc_columnBtn\"\n                title=\"toggle columns\">\n          <i [ngClass]=\"[icons.large, icons.table]\"></i>\n        </button>\n        <div ngbDropdownMenu>\n          <ng-container *ngFor=\"let column of columns\">\n            <button ngbDropdownItem\n                    *ngIf=\"column.name !== ''\"\n                    (click)=\"toggleColumn(column); false;\">\n              <div class=\"custom-control custom-checkbox py-0\">\n                <input class=\"custom-control-input\"\n                       type=\"checkbox\"\n                       [name]=\"column.prop\"\n                       id=\"{{ column.prop }}{{ tableName }}\"\n                       [checked]=\"!column.isHidden\">\n                <label class=\"custom-control-label\"\n                       for=\"{{ column.prop }}{{ tableName }}\">{{ column.name }}</label>\n              </div>\n            </button>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n    <!-- end show hide columns -->\n\n    <!-- refresh button -->\n    <div class=\"widget-toolbar tc_refreshBtn\"\n         *ngIf=\"fetchData.observers.length > 0\">\n\n      <button type=\"button\"\n              [class]=\"'btn btn-' + status.type\"\n              [ngbTooltip]=\"status.msg\"\n              (click)=\"refreshBtn()\"\n              title=\"Refresh\">\n        <i [ngClass]=\"[icons.large, icons.refresh]\"\n           [class.fa-spin]=\"updating || loadingIndicator\"></i>\n      </button>\n    </div>\n    <!-- end refresh button -->\n  </div>\n  <div class=\"dataTables_header clearfix\"\n       *ngIf=\"toolHeader && columnFiltered\">\n    <!-- filter chips for column filters -->\n    <div class=\"filter-chips\">\n      <span *ngFor=\"let filter of columnFilters\">\n        <span *ngIf=\"filter.value\"\n              class=\"badge badge-info me-2\">\n          <span class=\"me-2\">{{ filter.column.name }}: {{ filter.value.formatted }}</span>\n          <a class=\"badge-remove\"\n             (click)=\"onChangeFilter(filter); false\">\n            <i [ngClass]=\"[icons.destroy]\"\n               aria-hidden=\"true\"></i>\n          </a>\n        </span>\n      </span>\n      <a class=\"tc_clearSelections\"\n         href=\"\"\n         (click)=\"onClearFilters(); false\">\n        <ng-container i18n>Clear filters</ng-container>\n      </a>\n    </div>\n    <!-- end filter chips for column filters -->\n  </div>\n  <ngx-datatable #table\n                 class=\"bootstrap cd-datatable\"\n                 [cssClasses]=\"paginationClasses\"\n                 [selectionType]=\"selectionType\"\n                 [selected]=\"selection.selected\"\n                 (select)=\"onSelect($event)\"\n                 [sorts]=\"userConfig.sorts\"\n                 (sort)=\"changeSorting($event)\"\n                 [columns]=\"tableColumns\"\n                 [columnMode]=\"columnMode\"\n                 [rows]=\"rows\"\n                 [rowClass]=\"getRowClass()\"\n                 [headerHeight]=\"header ? 'auto' : 0\"\n                 [footerHeight]=\"footer ? 'auto' : 0\"\n                 [count]=\"count\"\n                 [externalPaging]=\"serverSide\"\n                 [externalSorting]=\"serverSide\"\n                 [limit]=\"userConfig.limit > 0 ? userConfig.limit : undefined\"\n                 [offset]=\"userConfig.offset >= 0 ? userConfig.offset : 0\"\n                 (page)=\"changePage($event)\"\n                 [loadingIndicator]=\"loadingIndicator\"\n                 [rowIdentity]=\"rowIdentity()\"\n                 [rowHeight]=\"'auto'\">\n\n    <!-- Row Selection Template-->\n    <ng-template #rowSelectionTpl\n                 let-value=\"value\"\n                 let-isSelected=\"isSelected\"\n                 ngx-datatable-cell-template>\n      <input type=\"checkbox\"\n             [attr.aria-label]=\"isSelected ? 'selected' : 'select'\"\n             [checked]=\"isSelected\"\n             class=\"cd-datatable-checkbox\" />\n    </ng-template>\n\n    <!-- Row Detail Template -->\n    <ngx-datatable-row-detail rowHeight=\"auto\"\n                              #detailRow>\n      <ng-template let-row=\"row\"\n                   let-expanded=\"expanded\"\n                   ngx-datatable-row-detail-template>\n        <!-- Table Details -->\n        <ng-content select=\"[cdTableDetail]\"></ng-content>\n      </ng-template>\n    </ngx-datatable-row-detail>\n\n    <ngx-datatable-footer>\n      <ng-template ngx-datatable-footer-template\n                   let-rowCount=\"rowCount\"\n                   let-pageSize=\"pageSize\"\n                   let-selectedCount=\"selectedCount\"\n                   let-curPage=\"curPage\"\n                   let-offset=\"offset\"\n                   let-isVisible=\"isVisible\">\n        <div class=\"page-count\">\n          <span *ngIf=\"selectionType\">\n            {{ selectedCount }} <ng-container i18n=\"X selected\">selected</ng-container> /\n          </span>\n\n          <!-- rowCount might have different semantics with or without serverSide.\n            We treat serverSide (backend-driven tables) as a specific case.\n          -->\n          <span *ngIf=\"!serverSide else serverSideTpl\">\n            <span *ngIf=\"rowCount != data?.length\">\n              {{ rowCount }} <ng-container i18n=\"X found\">found</ng-container> /\n            </span>\n            {{ data?.length || 0 }} <ng-container i18n=\"X total\">total</ng-container>\n          </span>\n\n          <ng-template #serverSideTpl>\n            {{ data?.length || 0 }} <ng-container i18n=\"X found\">found</ng-container> /\n            {{ rowCount }} <ng-container i18n=\"X total\">total</ng-container>\n          </ng-template>\n        </div>\n        <cd-table-pagination [page]=\"curPage\"\n                             [size]=\"pageSize\"\n                             [count]=\"rowCount\"\n                             [hidden]=\"!((rowCount / pageSize) > 1)\"\n                             (pageChange)=\"table.onFooterPage($event)\"></cd-table-pagination>\n      </ng-template>\n    </ngx-datatable-footer>\n  </ngx-datatable>\n</div>\n\n<!-- cell templates that can be accessed from outside -->\n<ng-template #tableCellBoldTpl\n             let-value=\"value\">\n  <strong>{{ value }}</strong>\n</ng-template>\n\n<ng-template #sparklineTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <cd-sparkline [data]=\"value\"\n                [isBinary]=\"row.cdIsBinary\"></cd-sparkline>\n</ng-template>\n\n<ng-template #routerLinkTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  <a [routerLink]=\"[row.cdLink]\"\n     [queryParams]=\"row.cdParams\">{{ value }}</a>\n</ng-template>\n\n<ng-template #checkIconTpl\n             let-value=\"value\">\n  <i [ngClass]=\"[icons.check]\"\n     [hidden]=\"!(value | boolean)\"></i>\n</ng-template>\n\n<ng-template #perSecondTpl\n             let-row=\"row\"\n             let-value=\"value\">\n  {{ value | dimless }} /s\n</ng-template>\n\n<ng-template #executingTpl\n             let-column=\"column\"\n             let-row=\"row\"\n             let-value=\"value\">\n  <i [ngClass]=\"[icons.spinner, icons.spin]\"\n     *ngIf=\"row.cdExecuting\"></i>\n  <span [ngClass]=\"column?.customTemplateConfig?.valueClass\">\n    {{ value }}\n  </span>\n  <span *ngIf=\"row.cdExecuting\"\n        [ngClass]=\"column?.customTemplateConfig?.executingClass ? column.customTemplateConfig.executingClass : 'text-muted italic'\">({{ row.cdExecuting }})</span>\n</ng-template>\n\n<ng-template #classAddingTpl\n             let-value=\"value\">\n  <span class=\"{{ value | pipeFunction:useCustomClass:this }}\">{{ value }}</span>\n</ng-template>\n\n<ng-template #badgeTpl\n             let-column=\"column\"\n             let-value=\"value\">\n  <span *ngFor=\"let item of (value | array); last as last\">\n    <span class=\"badge\"\n          [ngClass]=\"(column?.customTemplateConfig?.map && column?.customTemplateConfig?.map[item]?.class) ? column.customTemplateConfig.map[item].class : (column?.customTemplateConfig?.class ? column.customTemplateConfig.class : 'badge-primary')\"\n          *ngIf=\"(column?.customTemplateConfig?.map && column?.customTemplateConfig?.map[item]?.value) ? column.customTemplateConfig.map[item].value : column?.customTemplateConfig?.prefix ? column.customTemplateConfig.prefix + item : item\">\n      {{ (column?.customTemplateConfig?.map && column?.customTemplateConfig?.map[item]?.value) ? column.customTemplateConfig.map[item].value : column?.customTemplateConfig?.prefix ? column.customTemplateConfig.prefix + item : item }}\n    </span>\n    <span *ngIf=\"!last\">&nbsp;</span>\n  </span>\n</ng-template>\n\n<ng-template #mapTpl\n             let-column=\"column\"\n             let-value=\"value\">\n  <span>{{ value | map:column?.customTemplateConfig }}</span>\n</ng-template>\n\n<ng-template #truncateTpl\n             let-column=\"column\"\n             let-value=\"value\">\n  <span data-toggle=\"tooltip\"\n        [title]=\"value\">{{ value | truncate:column?.customTemplateConfig?.length:column?.customTemplateConfig?.omission }}</span>\n</ng-template>\n\n<ng-template #rowDetailsTpl\n             let-row=\"row\"\n             let-isExpanded=\"expanded\"\n             ngx-datatable-cell-template>\n  <a href=\"javascript:void(0)\"\n     [class.expand-collapse-icon-right]=\"!isExpanded\"\n     [class.expand-collapse-icon-down]=\"isExpanded\"\n     class=\"expand-collapse-icon tc_expand-collapse\"\n     title=\"Expand/Collapse Row\"\n     i18n-title\n     (click)=\"toggleExpandRow(row, isExpanded, $event)\">\n  </a>\n</ng-template>\n\n<ng-template #timeAgoTpl\n             let-value=\"value\">\n  <span data-toggle=\"tooltip\"\n        [title]=\"value | cdDate\">{{ value | relativeDate }}</span>\n</ng-template>\n","import _ from 'lodash';\n\n/**\n * This decorator can be used in a class or method.\n * It will encode all the string parameters of all the methods of a class\n * or, if applied on a method, the specified method.\n *\n * @export\n * @param {Function} [target=null]\n * @returns {*}\n */\nexport function cdEncode(...args: any[]): any {\n  switch (args.length) {\n    case 1:\n      return encodeClass.apply(undefined, args);\n    case 3:\n      return encodeMethod.apply(undefined, args);\n    default:\n      throw new Error();\n  }\n}\n\n/**\n * This decorator can be used in parameters only.\n * It will exclude the parameter from being encode.\n * This should be used in parameters that are going\n * to be sent in the request's body.\n *\n * @export\n * @param {Object} target\n * @param {string} propertyKey\n * @param {number} index\n */\nexport function cdEncodeNot(target: object, propertyKey: string, index: number) {\n  const metadataKey = `__ignore_${propertyKey}`;\n  if (Array.isArray(target[metadataKey])) {\n    target[metadataKey].push(index);\n  } else {\n    target[metadataKey] = [index];\n  }\n}\n\nfunction encodeClass(target: Function) {\n  for (const propertyName of Object.getOwnPropertyNames(target.prototype)) {\n    const descriptor = Object.getOwnPropertyDescriptor(target.prototype, propertyName);\n\n    const isMethod = descriptor.value instanceof Function;\n    const isConstructor = propertyName === 'constructor';\n    if (!isMethod || isConstructor) {\n      continue;\n    }\n\n    encodeMethod(target.prototype, propertyName, descriptor);\n    Object.defineProperty(target.prototype, propertyName, descriptor);\n  }\n}\n\nfunction encodeMethod(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n  if (descriptor === undefined) {\n    descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\n  }\n  const originalMethod = descriptor.value;\n\n  descriptor.value = function () {\n    const metadataKey = `__ignore_${propertyKey}`;\n    const indices: number[] = target[metadataKey] || [];\n    const args = [];\n\n    for (let i = 0; i < arguments.length; i++) {\n      if (_.isString(arguments[i]) && indices.indexOf(i) === -1) {\n        args[i] = encodeURIComponent(arguments[i]);\n      } else {\n        args[i] = arguments[i];\n      }\n    }\n\n    const result = originalMethod.apply(this, args);\n    return result;\n  };\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { Permission, Permissions } from '~/app/shared/models/permissions';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\n\ntype Condition = string | string[] | Partial<{ [Property in keyof Permissions]: keyof Permission }>;\n\n@Directive({\n  selector: '[cdScope]'\n})\nexport class AuthStorageDirective {\n  permissions: Permissions;\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private authStorageService: AuthStorageService\n  ) {}\n\n  @Input() set cdScope(condition: Condition) {\n    this.permissions = this.authStorageService.getPermissions();\n    if (this.isAuthorized(condition)) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainer.clear();\n    }\n  }\n\n  @Input() cdScopeMatchAll = true;\n\n  private isAuthorized(condition: Condition): boolean {\n    const everyOrSome = this.cdScopeMatchAll ? _.every : _.some;\n\n    if (_.isString(condition)) {\n      return _.get(this.permissions, [condition, 'read'], false);\n    } else if (_.isArray(condition)) {\n      return everyOrSome(condition, (permission) => this.permissions[permission]['read']);\n    } else if (_.isObject(condition)) {\n      return everyOrSome(condition, (value, key) => {\n        return everyOrSome(value, (val) => this.permissions[key][val]);\n      });\n    }\n\n    return false;\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Directive({\n  selector: '[autofocus]' // eslint-disable-line\n})\nexport class AutofocusDirective implements AfterViewInit {\n  private focus = true;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngAfterViewInit() {\n    const el: HTMLInputElement = this.elementRef.nativeElement;\n    if (this.focus && _.isFunction(el.focus)) {\n      el.focus();\n    }\n  }\n\n  @Input()\n  public set autofocus(condition: any) {\n    if (_.isBoolean(condition)) {\n      this.focus = condition;\n    } else if (_.isFunction(condition)) {\n      this.focus = condition();\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport _ from 'lodash';\n\nimport { DimlessBinaryPerSecondPipe } from '../pipes/dimless-binary-per-second.pipe';\nimport { FormatterService } from '../services/formatter.service';\n\n@Directive({\n  selector: '[cdDimlessBinaryPerSecond]'\n})\nexport class DimlessBinaryPerSecondDirective implements OnInit {\n  @Output()\n  ngModelChange: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Event emitter for letting this directive know that the data has (asynchronously) been loaded\n   * and the value needs to be adapted by this directive.\n   */\n  @Input()\n  ngDataReady: EventEmitter<any>;\n\n  /**\n   * Minimum size in bytes.\n   * If user enter a value lower than <minBytes>,\n   * the model will automatically be update to <minBytes>.\n   *\n   * If <roundPower> is used, this value should be a power of <roundPower>.\n   *\n   * Example:\n   *   Given minBytes=4096 (4KiB), if user type 1KiB, then model will be updated to 4KiB\n   */\n  @Input()\n  minBytes: number;\n\n  /**\n   * Maximum size in bytes.\n   * If user enter a value greater than <maxBytes>,\n   * the model will automatically be update to <maxBytes>.\n   *\n   * If <roundPower> is used, this value should be a power of <roundPower>.\n   *\n   * Example:\n   *   Given maxBytes=3145728 (3MiB), if user type 4MiB, then model will be updated to 3MiB\n   */\n  @Input()\n  maxBytes: number;\n\n  /**\n   * Value will be rounded up the nearest power of <roundPower>\n   *\n   * Example:\n   *   Given roundPower=2, if user type 7KiB, then model will be updated to 8KiB\n   *   Given roundPower=2, if user type 5KiB, then model will be updated to 4KiB\n   */\n  @Input()\n  roundPower: number;\n\n  /**\n   * Default unit that should be used when user do not type a unit.\n   * By default, \"MiB\" will be used.\n   *\n   * Example:\n   *   Given defaultUnit=null, if user type 7, then model will be updated to 7MiB\n   *   Given defaultUnit=k, if user type 7, then model will be updated to 7KiB\n   */\n  @Input()\n  defaultUnit: string;\n\n  private el: HTMLInputElement;\n\n  constructor(\n    private elementRef: ElementRef,\n    private control: NgControl,\n    private dimlessBinaryPerSecondPipe: DimlessBinaryPerSecondPipe,\n    private formatter: FormatterService\n  ) {\n    this.el = this.elementRef.nativeElement;\n  }\n\n  ngOnInit() {\n    this.setValue(this.el.value);\n    if (this.ngDataReady) {\n      this.ngDataReady.subscribe(() => this.setValue(this.el.value));\n    }\n  }\n\n  setValue(value: string) {\n    if (/^[\\d.]+$/.test(value)) {\n      value += this.defaultUnit || 'm';\n    }\n    const size = this.formatter.toBytes(value, 0);\n    const roundedSize = this.round(size);\n    this.el.value = this.dimlessBinaryPerSecondPipe.transform(roundedSize);\n    if (size !== null) {\n      this.ngModelChange.emit(this.el.value);\n      this.control.control.setValue(this.el.value);\n    } else {\n      this.ngModelChange.emit(null);\n      this.control.control.setValue(null);\n    }\n  }\n\n  round(size: number) {\n    if (size !== null && size !== 0) {\n      if (!_.isUndefined(this.minBytes) && size < this.minBytes) {\n        return this.minBytes;\n      }\n      if (!_.isUndefined(this.maxBytes) && size > this.maxBytes) {\n        return this.maxBytes;\n      }\n      if (!_.isUndefined(this.roundPower)) {\n        const power = Math.round(Math.log(size) / Math.log(this.roundPower));\n        return Math.pow(this.roundPower, power);\n      }\n    }\n    return size;\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  onBlur(value: string) {\n    this.setValue(value);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport _ from 'lodash';\n\nimport { DimlessBinaryPipe } from '../pipes/dimless-binary.pipe';\nimport { FormatterService } from '../services/formatter.service';\n\n@Directive({\n  selector: '[cdDimlessBinary]'\n})\nexport class DimlessBinaryDirective implements OnInit {\n  @Output()\n  ngModelChange: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Minimum size in bytes.\n   * If user enter a value lower than <minBytes>,\n   * the model will automatically be update to <minBytes>.\n   *\n   * If <roundPower> is used, this value should be a power of <roundPower>.\n   *\n   * Example:\n   *   Given minBytes=4096 (4KiB), if user type 1KiB, then model will be updated to 4KiB\n   */\n  @Input()\n  minBytes: number;\n\n  /**\n   * Maximum size in bytes.\n   * If user enter a value greater than <maxBytes>,\n   * the model will automatically be update to <maxBytes>.\n   *\n   * If <roundPower> is used, this value should be a power of <roundPower>.\n   *\n   * Example:\n   *   Given maxBytes=3145728 (3MiB), if user type 4MiB, then model will be updated to 3MiB\n   */\n  @Input()\n  maxBytes: number;\n\n  /**\n   * Value will be rounded up the nearest power of <roundPower>\n   *\n   * Example:\n   *   Given roundPower=2, if user type 7KiB, then model will be updated to 8KiB\n   *   Given roundPower=2, if user type 5KiB, then model will be updated to 4KiB\n   */\n  @Input()\n  roundPower: number;\n\n  /**\n   * Default unit that should be used when user do not type a unit.\n   * By default, \"MiB\" will be used.\n   *\n   * Example:\n   *   Given defaultUnit=null, if user type 7, then model will be updated to 7MiB\n   *   Given defaultUnit=k, if user type 7, then model will be updated to 7KiB\n   */\n  @Input()\n  defaultUnit: string;\n\n  private el: HTMLInputElement;\n\n  constructor(\n    private elementRef: ElementRef,\n    private control: NgControl,\n    private dimlessBinaryPipe: DimlessBinaryPipe,\n    private formatter: FormatterService\n  ) {\n    this.el = this.elementRef.nativeElement;\n  }\n\n  ngOnInit() {\n    this.setValue(this.el.value);\n  }\n\n  setValue(value: string) {\n    if (/^[\\d.]+$/.test(value)) {\n      value += this.defaultUnit || 'm';\n    }\n    const size = this.formatter.toBytes(value);\n    const roundedSize = this.round(size);\n    this.el.value = this.dimlessBinaryPipe.transform(roundedSize);\n    if (size !== null) {\n      this.ngModelChange.emit(this.el.value);\n      this.control.control.setValue(this.el.value);\n    } else {\n      this.ngModelChange.emit(null);\n      this.control.control.setValue(null);\n    }\n  }\n\n  round(size: number) {\n    if (size !== null && size !== 0) {\n      if (!_.isUndefined(this.minBytes) && size < this.minBytes) {\n        return this.minBytes;\n      }\n      if (!_.isUndefined(this.maxBytes) && size > this.maxBytes) {\n        return this.maxBytes;\n      }\n      if (!_.isUndefined(this.roundPower)) {\n        const power = Math.round(Math.log(size) / Math.log(this.roundPower));\n        return Math.pow(this.roundPower, power);\n      }\n    }\n    return size;\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  onBlur(value: string) {\n    this.setValue(value);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { AuthStorageDirective } from './auth-storage.directive';\nimport { AutofocusDirective } from './autofocus.directive';\nimport { DimlessBinaryPerSecondDirective } from './dimless-binary-per-second.directive';\nimport { DimlessBinaryDirective } from './dimless-binary.directive';\nimport { FormInputDisableDirective } from './form-input-disable.directive';\nimport { FormLoadingDirective } from './form-loading.directive';\nimport { FormScopeDirective } from './form-scope.directive';\nimport { IopsDirective } from './iops.directive';\nimport { MillisecondsDirective } from './milliseconds.directive';\nimport { CdFormControlDirective } from './ng-bootstrap-form-validation/cd-form-control.directive';\nimport { CdFormGroupDirective } from './ng-bootstrap-form-validation/cd-form-group.directive';\nimport { CdFormValidationDirective } from './ng-bootstrap-form-validation/cd-form-validation.directive';\nimport { PasswordButtonDirective } from './password-button.directive';\nimport { StatefulTabDirective } from './stateful-tab.directive';\nimport { TrimDirective } from './trim.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    AutofocusDirective,\n    DimlessBinaryDirective,\n    DimlessBinaryPerSecondDirective,\n    PasswordButtonDirective,\n    TrimDirective,\n    MillisecondsDirective,\n    IopsDirective,\n    FormLoadingDirective,\n    StatefulTabDirective,\n    FormInputDisableDirective,\n    FormScopeDirective,\n    CdFormControlDirective,\n    CdFormGroupDirective,\n    CdFormValidationDirective,\n    AuthStorageDirective\n  ],\n  exports: [\n    AutofocusDirective,\n    DimlessBinaryDirective,\n    DimlessBinaryPerSecondDirective,\n    PasswordButtonDirective,\n    TrimDirective,\n    MillisecondsDirective,\n    IopsDirective,\n    FormLoadingDirective,\n    StatefulTabDirective,\n    FormInputDisableDirective,\n    FormScopeDirective,\n    CdFormControlDirective,\n    CdFormGroupDirective,\n    CdFormValidationDirective,\n    AuthStorageDirective\n  ]\n})\nexport class DirectivesModule {}\n","import { AfterViewInit, Directive, ElementRef, Optional } from '@angular/core';\n\nimport { Permissions } from '../models/permissions';\nimport { AuthStorageService } from '../services/auth-storage.service';\nimport { FormScopeDirective } from './form-scope.directive';\n\n@Directive({\n  selector:\n    'input:not([cdNoFormInputDisable]), select:not([cdNoFormInputDisable]), button:not([cdNoFormInputDisable]), [cdFormInputDisable]'\n})\nexport class FormInputDisableDirective implements AfterViewInit {\n  permissions: Permissions;\n\n  constructor(\n    @Optional() private formScope: FormScopeDirective,\n    private authStorageService: AuthStorageService,\n    private elementRef: ElementRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.permissions = this.authStorageService.getPermissions();\n    const service_name = this.formScope?.cdFormScope;\n    if (service_name && !this.permissions?.[service_name]?.update) {\n      this.elementRef.nativeElement.disabled = true;\n    }\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { AlertPanelComponent } from '../components/alert-panel/alert-panel.component';\nimport { LoadingPanelComponent } from '../components/loading-panel/loading-panel.component';\nimport { LoadingStatus } from '../forms/cd-form';\n\n@Directive({\n  selector: '[cdFormLoading]'\n})\nexport class FormLoadingDirective {\n  constructor(private templateRef: TemplateRef<any>, private viewContainer: ViewContainerRef) {}\n\n  @Input() set cdFormLoading(condition: LoadingStatus) {\n    let content: any;\n\n    this.viewContainer.clear();\n\n    switch (condition) {\n      case LoadingStatus.Loading:\n        content = this.resolveNgContent($localize`Loading form data...`);\n        this.viewContainer.createComponent(LoadingPanelComponent, { projectableNodes: content });\n        break;\n      case LoadingStatus.Ready:\n        this.viewContainer.createEmbeddedView(this.templateRef);\n        break;\n      case LoadingStatus.Error:\n        content = this.resolveNgContent($localize`Form data could not be loaded.`);\n        const componentRef = this.viewContainer.createComponent(AlertPanelComponent, {\n          projectableNodes: content\n        });\n        (<AlertPanelComponent>componentRef.instance).type = 'error';\n        break;\n    }\n  }\n\n  resolveNgContent(content: string) {\n    const element = document.createTextNode(content);\n    return [[element]];\n  }\n}\n","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[cdFormScope]'\n})\nexport class FormScopeDirective {\n  @Input() cdFormScope: any;\n}\n","import { Directive, EventEmitter, HostListener, Input, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { FormatterService } from '../services/formatter.service';\n\n@Directive({\n  selector: '[cdIops]'\n})\nexport class IopsDirective implements OnInit {\n  @Input()\n  ngDataReady: EventEmitter<any>;\n\n  constructor(private formatter: FormatterService, private ngControl: NgControl) {}\n\n  setValue(value: string): void {\n    const iops = this.formatter.toIops(value);\n    this.ngControl.control.setValue(`${iops} IOPS`);\n  }\n\n  ngOnInit(): void {\n    this.setValue(this.ngControl.value);\n    if (this.ngDataReady) {\n      this.ngDataReady.subscribe(() => this.setValue(this.ngControl.value));\n    }\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  onUpdate(value: string) {\n    this.setValue(value);\n  }\n}\n","import { Directive, EventEmitter, HostListener, Input, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { FormatterService } from '../services/formatter.service';\n\n@Directive({\n  selector: '[cdMilliseconds]'\n})\nexport class MillisecondsDirective implements OnInit {\n  @Input()\n  ngDataReady: EventEmitter<any>;\n\n  constructor(private control: NgControl, private formatter: FormatterService) {}\n\n  setValue(value: string): void {\n    const ms = this.formatter.toMilliseconds(value);\n    this.control.control.setValue(`${ms} ms`);\n  }\n\n  ngOnInit(): void {\n    this.setValue(this.control.value);\n    if (this.ngDataReady) {\n      this.ngDataReady.subscribe(() => this.setValue(this.control.value));\n    }\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  onUpdate(value: string) {\n    this.setValue(value);\n  }\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2017 Kevin Kipp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * Based on https://github.com/third774/ng-bootstrap-form-validation\n */\n\nimport { Directive, Host, HostBinding, Input, Optional, SkipSelf } from '@angular/core';\nimport { ControlContainer, FormControl } from '@angular/forms';\n\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  // tslint:disable-next-line:no-non-null-assertion\n  return [...parent.path!, name];\n}\n\n@Directive({\n  // eslint-disable-next-line\n  selector: '.form-control,.form-check-input,.custom-control-input'\n})\nexport class CdFormControlDirective {\n  @Input()\n  formControlName: string;\n  @Input()\n  formControl: string;\n\n  @HostBinding('class.is-valid')\n  get validClass() {\n    if (!this.control) {\n      return false;\n    }\n    return this.control.valid && (this.control.touched || this.control.dirty);\n  }\n\n  @HostBinding('class.is-invalid')\n  get invalidClass() {\n    if (!this.control) {\n      return false;\n    }\n    return this.control.invalid && this.control.touched && this.control.dirty;\n  }\n\n  get path() {\n    return controlPath(this.formControlName, this.parent);\n  }\n\n  get control(): FormControl {\n    return this.formDirective && this.formDirective.getControl(this);\n  }\n\n  get formDirective(): any {\n    return this.parent ? this.parent.formDirective : null;\n  }\n\n  constructor(\n    // this value might be null, but we union type it as such until\n    // this issue is resolved: https://github.com/angular/angular/issues/25544\n    @Optional()\n    @Host()\n    @SkipSelf()\n    private parent: ControlContainer\n  ) {}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2017 Kevin Kipp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * Based on https://github.com/third774/ng-bootstrap-form-validation\n */\n\nimport {\n  ContentChildren,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList\n} from '@angular/core';\nimport { FormControlName } from '@angular/forms';\n\n@Directive({\n  // eslint-disable-next-line\n  selector: '.form-group'\n})\nexport class CdFormGroupDirective {\n  @ContentChildren(FormControlName)\n  formControlNames: QueryList<FormControlName>;\n\n  @Input()\n  validationDisabled = false;\n\n  @HostBinding('class.has-error')\n  get hasErrors() {\n    return (\n      this.formControlNames.some((c) => !c.valid && c.dirty && c.touched) &&\n      !this.validationDisabled\n    );\n  }\n\n  @HostBinding('class.has-success')\n  get hasSuccess() {\n    return (\n      !this.formControlNames.some((c) => !c.valid) &&\n      this.formControlNames.some((c) => c.dirty && c.touched) &&\n      !this.validationDisabled\n    );\n  }\n\n  constructor(private elRef: ElementRef) {}\n\n  get label() {\n    const label = this.elRef.nativeElement.querySelector('label');\n    return label && label.textContent ? label.textContent.trim() : 'This field';\n  }\n\n  get isDirtyAndTouched() {\n    return this.formControlNames.some((c) => c.dirty && c.touched);\n  }\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2017 Kevin Kipp\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * Based on https://github.com/third774/ng-bootstrap-form-validation\n */\n\nimport { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { AbstractControl, FormArray, FormControl, FormGroup } from '@angular/forms';\n\n@Directive({\n  // eslint-disable-next-line\n  selector: '[formGroup]'\n})\nexport class CdFormValidationDirective {\n  @Input()\n  formGroup: FormGroup;\n  @Output()\n  validSubmit = new EventEmitter<any>();\n\n  @HostListener('submit')\n  onSubmit() {\n    this.markAsTouchedAndDirty(this.formGroup);\n    if (this.formGroup.valid) {\n      this.validSubmit.emit(this.formGroup.value);\n    }\n  }\n\n  markAsTouchedAndDirty(control: AbstractControl) {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) =>\n        this.markAsTouchedAndDirty(control.controls[key])\n      );\n    } else if (control instanceof FormArray) {\n      control.controls.forEach((c) => this.markAsTouchedAndDirty(c));\n    } else if (control instanceof FormControl && control.enabled) {\n      control.markAsDirty();\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[cdPasswordButton]'\n})\nexport class PasswordButtonDirective implements OnInit {\n  private iElement: HTMLElement;\n\n  @Input()\n  private cdPasswordButton: string;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.renderer.setAttribute(this.elementRef.nativeElement, 'tabindex', '-1');\n    this.iElement = this.renderer.createElement('i');\n    this.renderer.addClass(this.iElement, 'fa');\n    this.renderer.appendChild(this.elementRef.nativeElement, this.iElement);\n    this.update();\n  }\n\n  private getInputElement() {\n    return document.getElementById(this.cdPasswordButton) as HTMLInputElement;\n  }\n\n  private update() {\n    const inputElement = this.getInputElement();\n    if (inputElement && inputElement.type === 'text') {\n      this.renderer.removeClass(this.iElement, 'fa-eye');\n      this.renderer.addClass(this.iElement, 'fa-eye-slash');\n    } else {\n      this.renderer.removeClass(this.iElement, 'fa-eye-slash');\n      this.renderer.addClass(this.iElement, 'fa-eye');\n    }\n  }\n\n  @HostListener('click')\n  onClick() {\n    const inputElement = this.getInputElement();\n    // Modify the type of the input field.\n    inputElement.type = inputElement.type === 'password' ? 'text' : 'password';\n    // Update the button icon/tooltip.\n    this.update();\n  }\n}\n","import { Directive, Host, HostListener, Input, OnInit, Optional } from '@angular/core';\n\nimport { NgbNav, NgbNavChangeEvent } from '@ng-bootstrap/ng-bootstrap';\n\n@Directive({\n  selector: '[cdStatefulTab]'\n})\nexport class StatefulTabDirective implements OnInit {\n  @Input()\n  cdStatefulTab: string;\n\n  private localStorage = window.localStorage;\n\n  constructor(@Optional() @Host() private nav: NgbNav) {}\n\n  ngOnInit() {\n    // Is an activate tab identifier stored in the local storage?\n    const activeId = this.localStorage.getItem(`tabset_${this.cdStatefulTab}`);\n    if (activeId) {\n      this.nav.select(activeId);\n    }\n  }\n\n  @HostListener('navChange', ['$event'])\n  onNavChange(event: NgbNavChangeEvent) {\n    // Store the current active tab identifier in the local storage.\n    if (this.cdStatefulTab && event.nextId) {\n      this.localStorage.setItem(`tabset_${this.cdStatefulTab}`, event.nextId);\n    }\n  }\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport _ from 'lodash';\n\n@Directive({\n  selector: '[cdTrim]'\n})\nexport class TrimDirective {\n  constructor(private ngControl: NgControl) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onInput(value: string) {\n    this.setValue(value);\n  }\n\n  setValue(value: string): void {\n    value = _.isString(value) ? value.trim() : value;\n    this.ngControl.control.setValue(value);\n  }\n}\n","export enum CellTemplate {\n  bold = 'bold',\n  sparkline = 'sparkline',\n  perSecond = 'perSecond',\n  checkIcon = 'checkIcon',\n  routerLink = 'routerLink',\n  // Display the cell with an executing state. The state can be set to the `cdExecuting`\n  // attribute of table rows.\n  // It supports an optional custom configuration:\n  // {\n  //   ...\n  //   cellTransformation: CellTemplate.executing,\n  //   customTemplateConfig: {\n  //     valueClass?: string;       // Cell value classes.\n  //     executingClass?: string;   // Executing state classes.\n  // }\n  executing = 'executing',\n  classAdding = 'classAdding',\n  // Display the cell value as a badge. The template\n  // supports an optional custom configuration:\n  // {\n  //   ...\n  //   cellTransformation: CellTemplate.badge,\n  //   customTemplateConfig: {\n  //     class?: string; // Additional class name.\n  //     prefix?: any;   // Prefix of the value to be displayed.\n  //                     // 'map' and 'prefix' exclude each other.\n  //     map?: {\n  //       [key: any]: { value: any, class?: string }\n  //     }\n  //   }\n  // }\n  badge = 'badge',\n  // Maps the value using the given dictionary.\n  // {\n  //   ...\n  //   cellTransformation: CellTemplate.map,\n  //   customTemplateConfig: {\n  //     [key: any]: any\n  //   }\n  // }\n  map = 'map',\n  // Truncates string if it's longer than the given maximum\n  // string length.\n  // {\n  //   ...\n  //   cellTransformation: CellTemplate.truncate,\n  //   customTemplateConfig: {\n  //     length?: number;   // Defaults to 30.\n  //     omission?: string; // Defaults to empty string.\n  //   }\n  // }\n  truncate = 'truncate',\n  /*\n  This templace replaces a time, datetime or timestamp with a user-friendly \"X {seconds,minutes,hours,days,...} ago\",\n  but the tooltip still displays the absolute timestamp\n  */\n  timeAgo = 'timeAgo'\n}\n","export enum Components {\n  auth = 'Login',\n  cephfs = 'CephFS',\n  rbd = 'RBD',\n  pool = 'Pool',\n  osd = 'OSD',\n  role = 'Role',\n  user = 'User'\n}\n","export enum HealthColor {\n  HEALTH_ERR = 'health-color-error',\n  HEALTH_WARN = 'health-color-warning',\n  HEALTH_OK = 'health-color-healthy'\n}\n","export enum HealthLabel {\n  HEALTH_ERR = 'error',\n  HEALTH_WARN = 'warning',\n  HEALTH_OK = 'ok'\n}\n","export enum Icons {\n  /* Icons for Symbol */\n  add = 'fa fa-plus', // Create, Add\n  addCircle = 'fa fa-plus-circle', // Plus with Circle\n  minusCircle = 'fa fa-minus-circle', // Minus with Circle\n  edit = 'fa fa-pencil', // Edit, Edit Mode, Rename\n  destroy = 'fa fa-times', // Destroy, Remove, Delete\n  destroyCircle = 'fa fa-times-circle', // Destroy, Remove, Delete\n  exchange = 'fa fa-exchange', // Edit-Peer\n  copy = 'fa fa-copy', // Copy\n  clipboard = 'fa fa-clipboard', // Clipboard\n  flatten = 'fa fa-chain-broken', // Flatten, Link broken, Mark Lost\n  trash = 'fa fa-trash-o', // Move to trash\n  lock = 'fa fa-lock', // Protect\n  unlock = 'fa fa-unlock', // Unprotect\n  clone = 'fa fa-clone', // clone\n  undo = 'fa fa-undo', // Rollback, Restore\n  search = 'fa fa-search', // Search\n  start = 'fa fa-play', // Enable\n  stop = 'fa fa-stop', // Disable\n  analyse = 'fa fa-stethoscope', // Scrub\n  deepCheck = 'fa fa-cog', // Deep Scrub, Setting, Configuration\n  reweight = 'fa fa-balance-scale', // Reweight\n  left = 'fa fa-arrow-left', // Mark out\n  right = 'fa fa-arrow-right', // Mark in\n  down = 'fa fa-arrow-down', // Mark Down\n  erase = 'fa fa-eraser', // Purge  color: bd.$white;\n\n  user = 'fa fa-user', // User, Initiators\n  users = 'fa fa-users', // Users, Groups\n  share = 'fa fa-share-alt', // share\n  key = 'fa fa-key-modern', // S3 Keys, Swift Keys, Authentication\n  warning = 'fa fa-exclamation-triangle', // Notification warning\n  info = 'fa fa-info', // Notification information\n  infoCircle = 'fa fa-info-circle', // Info on landing page\n  questionCircle = 'fa fa-question-circle-o',\n  check = 'fa fa-check', // Notification check\n  show = 'fa fa-eye', // Show\n  paragraph = 'fa fa-paragraph', // Silence Matcher - Attribute name\n  terminal = 'fa fa-terminal', // Silence Matcher - Value\n  magic = 'fa fa-magic', // Silence Matcher - Regex checkbox\n  hourglass = 'fa fa-hourglass-o', // Task\n  filledHourglass = 'fa fa-hourglass', // Task\n  table = 'fa fa-table', // Table,\n  spinner = 'fa fa-spinner', // spinner, Load\n  refresh = 'fa fa-refresh', // Refresh\n  bullseye = 'fa fa-bullseye', // Target\n  disk = 'fa fa-hdd-o', // Hard disk, disks\n  server = 'fa fa-server', // Server, Portal\n  filter = 'fa fa-filter', // Filter\n  lineChart = 'fa fa-line-chart', // Line chart\n  signOut = 'fa fa-sign-out', // Sign Out\n  health = 'fa fa-heartbeat', // Health\n  circle = 'fa fa-circle', // Circle\n  bell = 'fa fa-bell', // Notification\n  mute = 'fa fa-bell-slash', // Mute or silence\n  tag = 'fa fa-tag', // Tag, Badge\n  leftArrow = 'fa fa-angle-left', // Left facing angle\n  rightArrow = 'fa fa-angle-right', // Right facing angle\n  leftArrowDouble = 'fa fa-angle-double-left', // Left facing Double angle\n  rightArrowDouble = 'fa fa-angle-double-right', // Left facing Double angle\n  flag = 'fa fa-flag', // OSD configuration\n  clearFilters = 'fa fa-window-close', // Clear filters, solid x\n  download = 'fa fa-download', // Download\n  upload = 'fa fa-upload', // Upload\n  close = 'fa fa-times', // Close\n  json = 'fa fa-file-code-o', // JSON file\n  text = 'fa fa-file-text', // Text file\n  wrench = 'fa fa-wrench', // Configuration Error\n  enter = 'fa fa-sign-in', // Enter\n  exit = 'fa fa-sign-out', // Exit\n  restart = 'fa fa-history', // Restart\n  deploy = 'fa fa-cube', // Deploy, Redeploy\n\n  /* Icons for special effect */\n  large = 'fa fa-lg', // icon becomes 33% larger\n  large2x = 'fa fa-2x', // icon becomes 50% larger\n  large3x = 'fa fa-3x', // icon becomes 3 times larger\n  stack = 'fa fa-stack', // To stack multiple icons\n  stack1x = 'fa fa-stack-1x', // To stack regularly sized icon\n  stack2x = 'fa fa-stack-2x', // To stack regularly sized icon\n  pulse = 'fa fa-pulse', // To have spinner rotate with 8 steps\n  spin = 'fa fa-spin', //  To get any icon to rotate\n  inverse = 'fa fa-inverse' // To get an alternative icon color\n}\n","export enum NotificationType {\n  error,\n  info,\n  success\n}\n","export enum ViewCacheStatus {\n  ValueOk = 0,\n  ValueStale = 1,\n  ValueNone = 2,\n  ValueException = 3\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder } from '@angular/forms';\n\nimport { CdFormGroup } from './cd-form-group';\n\n/**\n * CdFormBuilder extends FormBuilder to create an CdFormGroup based form.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CdFormBuilder extends FormBuilder {\n  group(\n    controlsConfig: { [key: string]: any },\n    extra: AbstractControlOptions | null = null\n  ): CdFormGroup {\n    const form = super.group(controlsConfig, extra);\n    return new CdFormGroup(form.controls, form.validator, form.asyncValidator);\n  }\n}\n","import {\n  AbstractControl,\n  AbstractControlOptions,\n  AsyncValidatorFn,\n  FormGroup,\n  NgForm,\n  ValidatorFn\n} from '@angular/forms';\n\n/**\n * CdFormGroup extends FormGroup with a few new methods that will help form development.\n */\nexport class CdFormGroup extends FormGroup {\n  constructor(\n    public controls: { [key: string]: AbstractControl },\n    validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n    asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null\n  ) {\n    super(controls, validatorOrOpts, asyncValidator);\n  }\n\n  /**\n   * Get a control out of any control even if its nested in other CdFormGroups or a FormGroup\n   */\n  get(controlName: string): AbstractControl {\n    const control = this._get(controlName);\n    if (!control) {\n      throw new Error(`Control '${controlName}' could not be found!`);\n    }\n    return control;\n  }\n\n  _get(controlName: string): AbstractControl {\n    return (\n      super.get(controlName) ||\n      Object.values(this.controls)\n        .filter((c) => c.get)\n        .map((form) => {\n          if (form instanceof CdFormGroup) {\n            return form._get(controlName);\n          }\n          return form.get(controlName);\n        })\n        .find((c) => Boolean(c))\n    );\n  }\n\n  /**\n   * Get the value of a control\n   */\n  getValue(controlName: string): any {\n    return this.get(controlName).value;\n  }\n\n  /**\n   * Sets a control without triggering a value changes event\n   *\n   * Very useful if a function is called through a value changes event but the value\n   * should be changed within the call.\n   */\n  silentSet(controlName: string, value: any) {\n    this.get(controlName).setValue(value, { emitEvent: false });\n  }\n\n  /**\n   * Indicates errors of the control in templates\n   */\n  showError(controlName: string, form: NgForm, errorName?: string): boolean {\n    const control = this.get(controlName);\n    return (\n      (form.submitted || control.dirty) &&\n      (errorName ? control.hasError(errorName) : control.invalid)\n    );\n  }\n}\n","export enum LoadingStatus {\n  Loading,\n  Ready,\n  Error,\n  None\n}\n\nexport class CdForm {\n  loading = LoadingStatus.Loading;\n\n  loadingStart() {\n    this.loading = LoadingStatus.Loading;\n  }\n\n  loadingReady() {\n    this.loading = LoadingStatus.Ready;\n  }\n\n  loadingError() {\n    this.loading = LoadingStatus.Error;\n  }\n\n  loadingNone() {\n    this.loading = LoadingStatus.None;\n  }\n}\n","import {\n  AbstractControl,\n  AsyncValidatorFn,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\n\nimport _ from 'lodash';\nimport { Observable, of as observableOf, timer as observableTimer } from 'rxjs';\nimport { map, switchMapTo, take } from 'rxjs/operators';\n\nimport { RgwBucketService } from '~/app/shared/api/rgw-bucket.service';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { FormatterService } from '~/app/shared/services/formatter.service';\n\nexport function isEmptyInputValue(value: any): boolean {\n  return value == null || value.length === 0;\n}\n\nexport type existsServiceFn = (value: any) => Observable<boolean>;\n\nexport class CdValidators {\n  /**\n   * Validator that performs email validation. In contrast to the Angular\n   * email validator an empty email will not be handled as invalid.\n   */\n  static email(control: AbstractControl): ValidationErrors | null {\n    // Exit immediately if value is empty.\n    if (isEmptyInputValue(control.value)) {\n      return null;\n    }\n    return Validators.email(control);\n  }\n\n  /**\n   * Validator function in order to validate IP addresses.\n   * @param {number} version determines the protocol version. It needs to be set to 4 for IPv4 and\n   *   to 6 for IPv6 validation. For any other number (it's also the default case) it will return a\n   *   function to validate the input string against IPv4 OR IPv6.\n   * @returns {ValidatorFn} A validator function that returns an error map containing `pattern`\n   *   if the validation check fails, otherwise `null`.\n   */\n  static ip(version: number = 0): ValidatorFn {\n    // prettier-ignore\n    const ipv4Rgx =\n      /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i;\n    const ipv6Rgx = /^(?:[a-f0-9]{1,4}:){7}[a-f0-9]{1,4}$/i;\n\n    if (version === 4) {\n      return Validators.pattern(ipv4Rgx);\n    } else if (version === 6) {\n      return Validators.pattern(ipv6Rgx);\n    } else {\n      return Validators.pattern(new RegExp(ipv4Rgx.source + '|' + ipv6Rgx.source));\n    }\n  }\n\n  /**\n   * Validator function in order to validate numbers.\n   * @returns {ValidatorFn} A validator function that returns an error map containing `pattern`\n   *   if the validation check fails, otherwise `null`.\n   */\n  static number(allowsNegative: boolean = true): ValidatorFn {\n    if (allowsNegative) {\n      return Validators.pattern(/^-?[0-9]+$/i);\n    } else {\n      return Validators.pattern(/^[0-9]+$/i);\n    }\n  }\n\n  /**\n   * Validator function in order to validate decimal numbers.\n   * @returns {ValidatorFn} A validator function that returns an error map containing `pattern`\n   *   if the validation check fails, otherwise `null`.\n   */\n  static decimalNumber(allowsNegative: boolean = true): ValidatorFn {\n    if (allowsNegative) {\n      return Validators.pattern(/^-?[0-9]+(.[0-9]+)?$/i);\n    } else {\n      return Validators.pattern(/^[0-9]+(.[0-9]+)?$/i);\n    }\n  }\n\n  /**\n   * Validator that performs SSL certificate validation.\n   * @returns {ValidatorFn} A validator function that returns an error map containing `pattern`\n   *   if the validation check fails, otherwise `null`.\n   */\n  static sslCert(): ValidatorFn {\n    return Validators.pattern(\n      /^-----BEGIN CERTIFICATE-----(\\n|\\r|\\f)((.+)?((\\n|\\r|\\f).+)*)(\\n|\\r|\\f)-----END CERTIFICATE-----[\\n\\r\\f]*$/\n    );\n  }\n\n  /**\n   * Validator that performs SSL private key validation.\n   * @returns {ValidatorFn} A validator function that returns an error map containing `pattern`\n   *   if the validation check fails, otherwise `null`.\n   */\n  static sslPrivKey(): ValidatorFn {\n    return Validators.pattern(\n      /^-----BEGIN RSA PRIVATE KEY-----(\\n|\\r|\\f)((.+)?((\\n|\\r|\\f).+)*)(\\n|\\r|\\f)-----END RSA PRIVATE KEY-----[\\n\\r\\f]*$/\n    );\n  }\n\n  /**\n   * Validator that performs SSL certificate validation of pem format.\n   * @returns {ValidatorFn} A validator function that returns an error map containing `pattern`\n   *   if the validation check fails, otherwise `null`.\n   */\n  static pemCert(): ValidatorFn {\n    return Validators.pattern(/^-----BEGIN .+-----$.+^-----END .+-----$/ms);\n  }\n\n  /**\n   * Validator that requires controls to fulfill the specified condition if\n   * the specified prerequisites matches. If the prerequisites are fulfilled,\n   * then the given function is executed and if it succeeds, the 'required'\n   * validation error will be returned, otherwise null.\n   * @param {Object} prerequisites An object containing the prerequisites.\n   *   To do additional checks rather than checking for equality you can\n   *   use the extended prerequisite syntax:\n   *     'field_name': { 'op': '<OPERATOR>', arg1: '<OPERATOR_ARGUMENT>' }\n   *   The following operators are supported:\n   *   * empty\n   *   * !empty\n   *   * equal\n   *   * !equal\n   *   * minLength\n   *   ### Example\n   *   ```typescript\n   *   {\n   *     'generate_key': true,\n   *     'username': 'Max Mustermann'\n   *   }\n   *   ```\n   *   ### Example - Extended prerequisites\n   *   ```typescript\n   *   {\n   *     'generate_key': { 'op': 'equal', 'arg1': true },\n   *     'username': { 'op': 'minLength', 'arg1': 5 }\n   *   }\n   *   ```\n   *   Only if all prerequisites are fulfilled, then the validation of the\n   *   control will be triggered.\n   * @param {Function | undefined} condition The function to be executed when all\n   *   prerequisites are fulfilled. If not set, then the {@link isEmptyInputValue}\n   *   function will be used by default. The control's value is used as function\n   *   argument. The function must return true to set the validation error.\n   * @return {ValidatorFn} Returns the validator function.\n   */\n  static requiredIf(prerequisites: object, condition?: Function | undefined): ValidatorFn {\n    let isWatched = false;\n\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (!isWatched && control.parent) {\n        Object.keys(prerequisites).forEach((key) => {\n          control.parent.get(key).valueChanges.subscribe(() => {\n            control.updateValueAndValidity({ emitEvent: false });\n          });\n        });\n\n        isWatched = true;\n      }\n\n      // Check if all prerequisites met.\n      if (\n        !Object.keys(prerequisites).every((key) => {\n          if (!control.parent) {\n            return false;\n          }\n          const value = control.parent.get(key).value;\n          const prerequisite = prerequisites[key];\n          if (_.isObjectLike(prerequisite)) {\n            let result = false;\n            switch (prerequisite['op']) {\n              case 'empty':\n                result = _.isEmpty(value);\n                break;\n              case '!empty':\n                result = !_.isEmpty(value);\n                break;\n              case 'equal':\n                result = value === prerequisite['arg1'];\n                break;\n              case '!equal':\n                result = value !== prerequisite['arg1'];\n                break;\n              case 'minLength':\n                if (_.isString(value)) {\n                  result = value.length >= prerequisite['arg1'];\n                }\n                break;\n            }\n            return result;\n          }\n          return value === prerequisite;\n        })\n      ) {\n        return null;\n      }\n      const success = _.isFunction(condition)\n        ? condition.call(condition, control.value)\n        : isEmptyInputValue(control.value);\n      return success ? { required: true } : null;\n    };\n  }\n\n  /**\n   * Compose multiple validators into a single function that returns the union of\n   * the individual error maps for the provided control when the given prerequisites\n   * are fulfilled.\n   *\n   * @param {Object} prerequisites An object containing the prerequisites as\n   *   key/value pairs.\n   *   ### Example\n   *   ```typescript\n   *   {\n   *     'generate_key': true,\n   *     'username': 'Max Mustermann'\n   *   }\n   *   ```\n   * @param {ValidatorFn[]} validators List of validators that should be taken\n   *   into action when the prerequisites are met.\n   * @return {ValidatorFn} Returns the validator function.\n   */\n  static composeIf(prerequisites: object, validators: ValidatorFn[]): ValidatorFn {\n    let isWatched = false;\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (!isWatched && control.parent) {\n        Object.keys(prerequisites).forEach((key) => {\n          control.parent.get(key).valueChanges.subscribe(() => {\n            control.updateValueAndValidity({ emitEvent: false });\n          });\n        });\n        isWatched = true;\n      }\n      // Check if all prerequisites are met.\n      if (\n        !Object.keys(prerequisites).every((key) => {\n          return control.parent && control.parent.get(key).value === prerequisites[key];\n        })\n      ) {\n        return null;\n      }\n      return Validators.compose(validators)(control);\n    };\n  }\n\n  /**\n   * Custom validation by passing a name for the error and a function as error condition.\n   *\n   * @param {string} error\n   * @param {Function} condition - a truthy return value will trigger the error\n   * @returns {ValidatorFn}\n   */\n  static custom(error: string, condition: Function): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const value = condition.call(this, control.value);\n      if (value) {\n        return { [error]: value };\n      }\n      return null;\n    };\n  }\n\n  /**\n   * Validate form control if condition is true with validators.\n   *\n   * @param {AbstractControl} formControl\n   * @param {Function} condition\n   * @param {ValidatorFn[]} conditionalValidators List of validators that should only be tested\n   * when the condition is met\n   * @param {ValidatorFn[]} permanentValidators List of validators that should always be tested\n   * @param {AbstractControl[]} watchControls List of controls that the condition depend on.\n   * Every time one of this controls value is updated, the validation will be triggered\n   */\n  static validateIf(\n    formControl: AbstractControl,\n    condition: Function,\n    conditionalValidators: ValidatorFn[],\n    permanentValidators: ValidatorFn[] = [],\n    watchControls: AbstractControl[] = []\n  ) {\n    conditionalValidators = conditionalValidators.concat(permanentValidators);\n\n    formControl.setValidators((control: AbstractControl): {\n      [key: string]: any;\n    } => {\n      const value = condition.call(this);\n      if (value) {\n        return Validators.compose(conditionalValidators)(control);\n      }\n      if (permanentValidators.length > 0) {\n        return Validators.compose(permanentValidators)(control);\n      }\n      return null;\n    });\n\n    watchControls.forEach((control: AbstractControl) => {\n      control.valueChanges.subscribe(() => {\n        formControl.updateValueAndValidity({ emitEvent: false });\n      });\n    });\n  }\n\n  /**\n   * Validator that requires that both specified controls have the same value.\n   * Error will be added to the `path2` control.\n   * @param {string} path1 A dot-delimited string that define the path to the control.\n   * @param {string} path2 A dot-delimited string that define the path to the control.\n   * @return {ValidatorFn} Returns a validator function that always returns `null`.\n   *   If the validation fails an error map with the `match` property will be set\n   *   on the `path2` control.\n   */\n  static match(path1: string, path2: string): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const ctrl1 = control.get(path1);\n      const ctrl2 = control.get(path2);\n      if (!ctrl1 || !ctrl2) {\n        return null;\n      }\n      if (ctrl1.value !== ctrl2.value) {\n        ctrl2.setErrors({ match: true });\n      } else {\n        const hasError = ctrl2.hasError('match');\n        if (hasError) {\n          // Remove the 'match' error. If no more errors exists, then set\n          // the error value to 'null', otherwise the field is still marked\n          // as invalid.\n          const errors = ctrl2.errors;\n          _.unset(errors, 'match');\n          ctrl2.setErrors(_.isEmpty(_.keys(errors)) ? null : errors);\n        }\n      }\n      return null;\n    };\n  }\n\n  /**\n   * Asynchronous validator that requires the control's value to be unique.\n   * The validation is only executed after the specified delay. Every\n   * keystroke during this delay will restart the timer.\n   * @param serviceFn {existsServiceFn} The service function that is\n   *   called to check whether the given value exists. It must return\n   *   boolean 'true' if the given value exists, otherwise 'false'.\n   * @param serviceFnThis {any} The object to be used as the 'this' object\n   *   when calling the serviceFn function. Defaults to null.\n   * @param {number|Date} dueTime The delay time to wait before the\n   *   serviceFn call is executed. This is useful to prevent calls on\n   *   every keystroke. Defaults to 500.\n   * @return {AsyncValidatorFn} Returns an asynchronous validator function\n   *   that returns an error map with the `notUnique` property if the\n   *   validation check succeeds, otherwise `null`.\n   */\n  static unique(\n    serviceFn: existsServiceFn,\n    serviceFnThis: any = null,\n    usernameFn?: Function,\n    uidField = false\n  ): AsyncValidatorFn {\n    let uName: string;\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      // Exit immediately if user has not interacted with the control yet\n      // or the control value is empty.\n      if (control.pristine || isEmptyInputValue(control.value)) {\n        return observableOf(null);\n      }\n      uName = control.value;\n      if (_.isFunction(usernameFn) && usernameFn() !== null && usernameFn() !== '') {\n        if (uidField) {\n          uName = `${control.value}$${usernameFn()}`;\n        } else {\n          uName = `${usernameFn()}$${control.value}`;\n        }\n      }\n\n      return observableTimer().pipe(\n        switchMapTo(serviceFn.call(serviceFnThis, uName)),\n        map((resp: boolean) => {\n          if (!resp) {\n            return null;\n          } else {\n            return { notUnique: true };\n          }\n        }),\n        take(1)\n      );\n    };\n  }\n\n  /**\n   * Validator function for UUIDs.\n   * @param required - Defines if it is mandatory to fill in the UUID\n   * @return Validator function that returns an error object containing `invalidUuid` if the\n   * validation failed, `null` otherwise.\n   */\n  static uuid(required = false): ValidatorFn {\n    const uuidRe = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      if (control.pristine && control.untouched) {\n        return null;\n      } else if (!required && !control.value) {\n        return null;\n      } else if (uuidRe.test(control.value)) {\n        return null;\n      }\n      return { invalidUuid: 'This is not a valid UUID' };\n    };\n  }\n\n  /**\n   * A simple minimum validator vor cd-binary inputs.\n   *\n   * To use the validation message pass I18n into the function as it cannot\n   * be called in a static one.\n   */\n  static binaryMin(bytes: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: () => string } | null => {\n      const formatterService = new FormatterService();\n      const currentBytes = new FormatterService().toBytes(control.value);\n      if (bytes <= currentBytes) {\n        return null;\n      }\n      const value = new DimlessBinaryPipe(formatterService).transform(bytes);\n      return {\n        binaryMin: () => $localize`Size has to be at least ${value} or more`\n      };\n    };\n  }\n\n  /**\n   * A simple maximum validator vor cd-binary inputs.\n   *\n   * To use the validation message pass I18n into the function as it cannot\n   * be called in a static one.\n   */\n  static binaryMax(bytes: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: () => string } | null => {\n      const formatterService = new FormatterService();\n      const currentBytes = formatterService.toBytes(control.value);\n      if (bytes >= currentBytes) {\n        return null;\n      }\n      const value = new DimlessBinaryPipe(formatterService).transform(bytes);\n      return {\n        binaryMax: () => $localize`Size has to be at most ${value} or less`\n      };\n    };\n  }\n\n  /**\n   * Asynchronous validator that checks if the password meets the password\n   * policy.\n   * @param userServiceThis The object to be used as the 'this' object\n   *   when calling the 'validatePassword' method of the 'UserService'.\n   * @param usernameFn Function to get the username that should be\n   *   taken into account.\n   * @param callback Callback function that is called after the validation\n   *   has been done.\n   * @return {AsyncValidatorFn} Returns an asynchronous validator function\n   *   that returns an error map with the `passwordPolicy` property if the\n   *   validation check fails, otherwise `null`.\n   */\n  static passwordPolicy(\n    userServiceThis: any,\n    usernameFn?: Function,\n    callback?: (valid: boolean, credits?: number, valuation?: string) => void\n  ): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      if (control.pristine || control.value === '') {\n        if (_.isFunction(callback)) {\n          callback(true, 0);\n        }\n        return observableOf(null);\n      }\n      let username;\n      if (_.isFunction(usernameFn)) {\n        username = usernameFn();\n      }\n      return observableTimer(500).pipe(\n        switchMapTo(_.invoke(userServiceThis, 'validatePassword', control.value, username)),\n        map((resp: { valid: boolean; credits: number; valuation: string }) => {\n          if (_.isFunction(callback)) {\n            callback(resp.valid, resp.credits, resp.valuation);\n          }\n          if (resp.valid) {\n            return null;\n          } else {\n            return { passwordPolicy: true };\n          }\n        }),\n        take(1)\n      );\n    };\n  }\n\n  /**\n   * Validate the bucket name. In general, bucket names should follow domain\n   * name constraints:\n   * - Bucket names must be unique.\n   * - Bucket names cannot be formatted as IP address.\n   * - Bucket names can be between 3 and 63 characters long.\n   * - Bucket names must not contain uppercase characters or underscores.\n   * - Bucket names must start with a lowercase letter or number.\n   * - Bucket names must be a series of one or more labels. Adjacent\n   *   labels are separated by a single period (.). Bucket names can\n   *   contain lowercase letters, numbers, and hyphens. Each label must\n   *   start and end with a lowercase letter or a number.\n   */\n  static bucketName(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      if (control.pristine || !control.value) {\n        return observableOf({ required: true });\n      }\n      const constraints = [];\n      let errorName: string;\n      // - Bucket names cannot be formatted as IP address.\n      constraints.push(() => {\n        const ipv4Rgx = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i;\n        const ipv6Rgx = /^(?:[a-f0-9]{1,4}:){7}[a-f0-9]{1,4}$/i;\n        const name = control.value;\n        let notIP = true;\n        if (ipv4Rgx.test(name) || ipv6Rgx.test(name)) {\n          errorName = 'ipAddress';\n          notIP = false;\n        }\n        return notIP;\n      });\n      // - Bucket names can be between 3 and 63 characters long.\n      constraints.push((name: string) => {\n        if (!_.inRange(name.length, 3, 64)) {\n          errorName = 'shouldBeInRange';\n          return false;\n        }\n        // Bucket names can only contain lowercase letters, numbers, periods and hyphens.\n        if (!/^[0-9a-z.-]+$/.test(control.value)) {\n          errorName = 'bucketNameInvalid';\n          return false;\n        }\n        return true;\n      });\n      // - Bucket names must not contain uppercase characters or underscores.\n      // - Bucket names must start with a lowercase letter or number.\n      // - Bucket names must be a series of one or more labels. Adjacent\n      //   labels are separated by a single period (.). Bucket names can\n      //   contain lowercase letters, numbers, and hyphens. Each label must\n      //   start and end with a lowercase letter or a number.\n      constraints.push((name: string) => {\n        const labels = _.split(name, '.');\n        return _.every(labels, (label) => {\n          // Bucket names must not contain uppercase characters or underscores.\n          if (label !== _.toLower(label) || label.includes('_')) {\n            errorName = 'containsUpperCase';\n            return false;\n          }\n          // Bucket labels can contain lowercase letters, numbers, and hyphens.\n          if (!/^[0-9a-z-]+$/.test(label)) {\n            errorName = 'onlyLowerCaseAndNumbers';\n            return false;\n          }\n          // Each label must start and end with a lowercase letter or a number.\n          return _.every([0, label.length - 1], (index) => {\n            errorName = 'lowerCaseOrNumber';\n            return /[a-z]/.test(label[index]) || _.isInteger(_.parseInt(label[index]));\n          });\n        });\n      });\n      if (!_.every(constraints, (func: Function) => func(control.value))) {\n        return observableOf(\n          (() => {\n            switch (errorName) {\n              case 'onlyLowerCaseAndNumbers':\n                return { onlyLowerCaseAndNumbers: true };\n              case 'shouldBeInRange':\n                return { shouldBeInRange: true };\n              case 'ipAddress':\n                return { ipAddress: true };\n              case 'containsUpperCase':\n                return { containsUpperCase: true };\n              case 'lowerCaseOrNumber':\n                return { lowerCaseOrNumber: true };\n              default:\n                return { bucketNameInvalid: true };\n            }\n          })()\n        );\n      }\n\n      return observableOf(null);\n    };\n  }\n\n  static bucketExistence(\n    requiredExistenceResult: boolean,\n    rgwBucketService: RgwBucketService\n  ): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      if (control.pristine || !control.value) {\n        return observableOf({ required: true });\n      }\n      return rgwBucketService\n        .exists(control.value)\n        .pipe(\n          map((existenceResult: boolean) =>\n            existenceResult === requiredExistenceResult ? null : { bucketNameNotAllowed: true }\n          )\n        );\n    };\n  }\n}\n","/*\nThe MIT License\n\nCopyright (c) 2017 (null) McNull https://github.com/McNull\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n */\n\nimport { ActivatedRouteSnapshot, Resolve, UrlSegment } from '@angular/router';\n\nimport { Observable, of } from 'rxjs';\n\nexport class BreadcrumbsResolver implements Resolve<IBreadcrumb[]> {\n  public resolve(\n    route: ActivatedRouteSnapshot\n  ): Observable<IBreadcrumb[]> | Promise<IBreadcrumb[]> | IBreadcrumb[] {\n    const data = route.routeConfig.data;\n    const path = data.path === null ? null : this.getFullPath(route);\n\n    const text =\n      typeof data.breadcrumbs === 'string'\n        ? data.breadcrumbs\n        : data.breadcrumbs.text || data.text || path;\n\n    const crumbs: IBreadcrumb[] = [{ text: text, path: path }];\n\n    return of(crumbs);\n  }\n\n  public getFullPath(route: ActivatedRouteSnapshot): string {\n    const relativePath = (segments: UrlSegment[]) =>\n      segments.reduce((a, v) => (a += '/' + v.path), '');\n    const fullPath = (routes: ActivatedRouteSnapshot[]) =>\n      routes.reduce((a, v) => (a += relativePath(v.url)), '');\n\n    return fullPath(route.pathFromRoot);\n  }\n}\n\nexport interface IBreadcrumb {\n  text: string;\n  path: string;\n}\n","import { IndividualConfig } from 'ngx-toastr';\n\nimport { Icons } from '../enum/icons.enum';\nimport { NotificationType } from '../enum/notification-type.enum';\n\nexport class CdNotificationConfig {\n  applicationClass: string;\n  isFinishedTask = false;\n\n  private classes = {\n    Ceph: 'ceph-icon',\n    Prometheus: 'prometheus-icon'\n  };\n\n  constructor(\n    public type: NotificationType = NotificationType.info,\n    public title?: string,\n    public message?: string, // Use this for additional information only\n    public options?: any | IndividualConfig,\n    public application: string = 'Ceph'\n  ) {\n    this.applicationClass = this.classes[this.application];\n  }\n}\n\nexport class CdNotification extends CdNotificationConfig {\n  timestamp: string;\n  textClass: string;\n  iconClass: string;\n  duration: number;\n  borderClass: string;\n  alertSilenced = false;\n  silenceId?: string;\n\n  private textClasses = ['text-danger', 'text-info', 'text-success'];\n  private iconClasses = [Icons.warning, Icons.info, Icons.check];\n  private borderClasses = ['border-danger', 'border-info', 'border-success'];\n\n  constructor(private config: CdNotificationConfig = new CdNotificationConfig()) {\n    super(config.type, config.title, config.message, config.options, config.application);\n    delete this.config;\n    /* string representation of the Date object so it can be directly compared\n    with the timestamps parsed from localStorage */\n    this.timestamp = new Date().toJSON();\n    this.iconClass = this.iconClasses[this.type];\n    this.textClass = this.textClasses[this.type];\n    this.borderClass = this.borderClasses[this.type];\n    this.isFinishedTask = config.isFinishedTask;\n  }\n}\n","export class CdPwdExpirationSettings {\n  pwdExpirationSpan = 0;\n  pwdExpirationWarning1: number;\n  pwdExpirationWarning2: number;\n\n  constructor(settings: { [key: string]: any }) {\n    this.pwdExpirationSpan = settings.user_pwd_expiration_span;\n    this.pwdExpirationWarning1 = settings.user_pwd_expiration_warning_1;\n    this.pwdExpirationWarning2 = settings.user_pwd_expiration_warning_2;\n  }\n}\n","export class CdPwdPolicySettings {\n  pwdPolicyEnabled: boolean;\n  pwdPolicyMinLength: number;\n  pwdPolicyCheckLengthEnabled: boolean;\n  pwdPolicyCheckOldpwdEnabled: boolean;\n  pwdPolicyCheckUsernameEnabled: boolean;\n  pwdPolicyCheckExclusionListEnabled: boolean;\n  pwdPolicyCheckRepetitiveCharsEnabled: boolean;\n  pwdPolicyCheckSequentialCharsEnabled: boolean;\n  pwdPolicyCheckComplexityEnabled: boolean;\n\n  constructor(settings: { [key: string]: any }) {\n    this.pwdPolicyEnabled = settings.pwd_policy_enabled;\n    this.pwdPolicyMinLength = settings.pwd_policy_min_length;\n    this.pwdPolicyCheckLengthEnabled = settings.pwd_policy_check_length_enabled;\n    this.pwdPolicyCheckOldpwdEnabled = settings.pwd_policy_check_oldpwd_enabled;\n    this.pwdPolicyCheckUsernameEnabled = settings.pwd_policy_check_username_enabled;\n    this.pwdPolicyCheckExclusionListEnabled = settings.pwd_policy_check_exclusion_list_enabled;\n    this.pwdPolicyCheckRepetitiveCharsEnabled = settings.pwd_policy_check_repetitive_chars_enabled;\n    this.pwdPolicyCheckSequentialCharsEnabled = settings.pwd_policy_check_sequential_chars_enabled;\n    this.pwdPolicyCheckComplexityEnabled = settings.pwd_policy_check_complexity_enabled;\n  }\n}\n","import { HttpParams } from '@angular/common/http';\n\nimport { PageInfo } from './cd-table-paging';\n\nexport class CdTableFetchDataContext {\n  errorConfig = {\n    resetData: true, // Force data table to show no data\n    displayError: true // Show an error panel above the data table\n  };\n\n  /**\n   * The function that should be called from within the error handler\n   * of the 'fetchData' function to display the error panel and to\n   * reset the data table to the correct state.\n   */\n  error: Function;\n  pageInfo: PageInfo = new PageInfo();\n  search = '';\n  sort = '+name';\n\n  constructor(error: () => void) {\n    this.error = error;\n  }\n\n  toParams(): HttpParams {\n    if (Number.isNaN(this.pageInfo.offset)) {\n      this.pageInfo.offset = 0;\n    }\n\n    if (this.pageInfo.limit === null) {\n      this.pageInfo.limit = 0;\n    }\n\n    if (!this.search) {\n      this.search = '';\n    }\n\n    if (!this.sort || this.sort.length < 2) {\n      this.sort = '+name';\n    }\n\n    return new HttpParams({\n      fromObject: {\n        offset: String(this.pageInfo.offset * this.pageInfo.limit),\n        limit: String(this.pageInfo.limit),\n        search: this.search,\n        sort: this.sort\n      }\n    });\n  }\n}\n","export const PAGE_LIMIT = 10;\n\nexport class PageInfo {\n  // Total number of rows in a table\n  count: number;\n\n  // Current page (current row = offset x limit or pageSize)\n  offset = 0;\n\n  // Max. number of rows fetched from the server\n  limit: number = PAGE_LIMIT;\n\n  /*\n  pageSize and limit can be decoupled if hybrid server-side and client-side\n  are used. A use-case would be to reduce the amount of queries: that is,\n  the pageSize (client-side paging) might be 10, but the back-end queries\n  could have a limit of 100. That would avoid triggering requests\n  */\n  pageSize: number = PAGE_LIMIT;\n}\n","export class CdTableSelection {\n  private _selected: any[] = [];\n  hasMultiSelection: boolean;\n  hasSingleSelection: boolean;\n  hasSelection: boolean;\n\n  constructor(rows?: any[]) {\n    if (rows) {\n      this._selected = rows;\n    }\n    this.update();\n  }\n\n  /**\n   * Recalculate the variables based on the current number\n   * of selected rows.\n   */\n  private update() {\n    this.hasSelection = this._selected.length > 0;\n    this.hasSingleSelection = this._selected.length === 1;\n    this.hasMultiSelection = this._selected.length > 1;\n  }\n\n  set selected(selection: any[]) {\n    this._selected = selection;\n    this.update();\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  add(row: any) {\n    this._selected.push(row);\n    this.update();\n  }\n\n  /**\n   * Get the first selected row.\n   * @return {any | null}\n   */\n  first() {\n    return this.hasSelection ? this._selected[0] : null;\n  }\n}\n","import { ElementRef } from '@angular/core';\n\nexport class ChartTooltip {\n  tooltipEl: any;\n  chartEl: any;\n  getStyleLeft: Function;\n  getStyleTop: Function;\n  customColors: Record<string, any> = {\n    backgroundColor: undefined,\n    borderColor: undefined\n  };\n  checkOffset = false;\n\n  /**\n   * Creates an instance of ChartTooltip.\n   * @param {ElementRef} chartCanvas Canvas Element\n   * @param {ElementRef} chartTooltip Tooltip Element\n   * @param {Function} getStyleLeft Function that calculates the value of Left\n   * @param {Function} getStyleTop Function that calculates the value of Top\n   * @memberof ChartTooltip\n   */\n  constructor(\n    chartCanvas: ElementRef,\n    chartTooltip: ElementRef,\n    getStyleLeft: Function,\n    getStyleTop: Function\n  ) {\n    this.chartEl = chartCanvas.nativeElement;\n    this.getStyleLeft = getStyleLeft;\n    this.getStyleTop = getStyleTop;\n    this.tooltipEl = chartTooltip.nativeElement;\n  }\n\n  /**\n   * Implementation of a ChartJS custom tooltip function.\n   *\n   * @param {any} tooltip\n   * @memberof ChartTooltip\n   */\n  customTooltips(tooltip: any) {\n    // Hide if no tooltip\n    if (tooltip.opacity === 0) {\n      this.tooltipEl.style.opacity = 0;\n      return;\n    }\n\n    // Set caret Position\n    this.tooltipEl.classList.remove('above', 'below', 'no-transform');\n    if (tooltip.yAlign) {\n      this.tooltipEl.classList.add(tooltip.yAlign);\n    } else {\n      this.tooltipEl.classList.add('no-transform');\n    }\n\n    // Set Text\n    if (tooltip.body) {\n      const titleLines = tooltip.title || [];\n      const bodyLines = tooltip.body.map((bodyItem: any) => {\n        return bodyItem.lines;\n      });\n\n      let innerHtml = '<thead>';\n\n      titleLines.forEach((title: string) => {\n        innerHtml += '<tr><th>' + this.getTitle(title) + '</th></tr>';\n      });\n      innerHtml += '</thead><tbody>';\n\n      bodyLines.forEach((body: string, i: number) => {\n        const colors = tooltip.labelColors[i];\n        let style = 'background:' + (this.customColors.backgroundColor || colors.backgroundColor);\n        style += '; border-color:' + (this.customColors.borderColor || colors.borderColor);\n        style += '; border-width: 2px';\n        const span = '<span class=\"chartjs-tooltip-key\" style=\"' + style + '\"></span>';\n        innerHtml += '<tr><td nowrap>' + span + this.getBody(body) + '</td></tr>';\n      });\n      innerHtml += '</tbody>';\n\n      const tableRoot = this.tooltipEl.querySelector('table');\n      tableRoot.innerHTML = innerHtml;\n    }\n\n    const positionY = this.chartEl.offsetTop;\n    const positionX = this.chartEl.offsetLeft;\n\n    // Display, position, and set styles for font\n    if (this.checkOffset) {\n      const halfWidth = tooltip.width / 2;\n      this.tooltipEl.classList.remove('transform-left');\n      this.tooltipEl.classList.remove('transform-right');\n      if (tooltip.caretX - halfWidth < 0) {\n        this.tooltipEl.classList.add('transform-left');\n      } else if (tooltip.caretX + halfWidth > this.chartEl.width) {\n        this.tooltipEl.classList.add('transform-right');\n      }\n    }\n\n    this.tooltipEl.style.left = this.getStyleLeft(tooltip, positionX);\n    this.tooltipEl.style.top = this.getStyleTop(tooltip, positionY);\n\n    this.tooltipEl.style.opacity = 1;\n    this.tooltipEl.style.fontFamily = tooltip._fontFamily;\n    this.tooltipEl.style.fontSize = tooltip.fontSize;\n    this.tooltipEl.style.fontStyle = tooltip._fontStyle;\n    this.tooltipEl.style.padding = tooltip.yPadding + 'px ' + tooltip.xPadding + 'px';\n  }\n\n  getBody(body: string) {\n    return body;\n  }\n\n  getTitle(title: string) {\n    return title;\n  }\n}\n","export enum RbdConfigurationSourceField {\n  global = 0,\n  pool = 1,\n  image = 2\n}\n\nexport enum RbdConfigurationType {\n  bps,\n  iops,\n  milliseconds\n}\n\n/**\n * This configuration can also be set on a pool level.\n */\nexport interface RbdConfigurationEntry {\n  name: string;\n  source: RbdConfigurationSourceField;\n  value: any;\n  type?: RbdConfigurationType; // Non-external field.\n  description?: string; // Non-external field.\n  displayName?: string; // Non-external field. Nice name for the UI which is added in the UI.\n}\n\n/**\n * This object contains additional information injected into the elements retrieved by the service.\n */\nexport interface RbdConfigurationExtraField {\n  name: string;\n  displayName: string;\n  description: string;\n  type: RbdConfigurationType;\n  readOnly?: boolean;\n}\n\n/**\n * Represents a set of data to be used for editing or creating configuration options\n */\nexport interface RbdConfigurationSection {\n  heading: string;\n  class: string;\n  options: RbdConfigurationExtraField[];\n}\n","export class Credentials {\n  username: string;\n  password: string;\n}\n","import { Task } from './task';\n\nexport class ExecutingTask extends Task {\n  begin_time: number;\n  progress: number;\n}\n","import { Task } from './task';\nimport { TaskException } from './task-exception';\n\nexport class FinishedTask extends Task {\n  begin_time: string;\n  end_time: string;\n  exception: TaskException;\n  latency: number;\n  progress: number;\n  ret_value: any;\n  success: boolean;\n  duration: number;\n\n  errorMessage: string;\n}\n","export class ImageSpec {\n  static fromString(imageSpec: string) {\n    const imageSpecSplited = imageSpec.split('/');\n\n    const poolName = imageSpecSplited[0];\n    const namespace = imageSpecSplited.length >= 3 ? imageSpecSplited[1] : null;\n    const imageName = imageSpecSplited.length >= 3 ? imageSpecSplited[2] : imageSpecSplited[1];\n\n    return new this(poolName, namespace, imageName);\n  }\n\n  constructor(public poolName: string, public namespace: string, public imageName: string) {}\n\n  private getNameSpace() {\n    return this.namespace ? `${this.namespace}/` : '';\n  }\n\n  toString() {\n    return `${this.poolName}/${this.getNameSpace()}${this.imageName}`;\n  }\n\n  toStringEncoded() {\n    return encodeURIComponent(`${this.poolName}/${this.getNameSpace()}${this.imageName}`);\n  }\n}\n","export enum OrchestratorFeature {\n  HOST_LIST = 'get_hosts',\n  HOST_ADD = 'add_host',\n  HOST_REMOVE = 'remove_host',\n  HOST_LABEL_ADD = 'add_host_label',\n  HOST_LABEL_REMOVE = 'remove_host_label',\n  HOST_MAINTENANCE_ENTER = 'enter_host_maintenance',\n  HOST_MAINTENANCE_EXIT = 'exit_host_maintenance',\n  HOST_FACTS = 'get_facts',\n  HOST_DRAIN = 'drain_host',\n\n  SERVICE_LIST = 'describe_service',\n  SERVICE_CREATE = 'apply',\n  SERVICE_EDIT = 'apply',\n  SERVICE_DELETE = 'remove_service',\n  SERVICE_RELOAD = 'service_action',\n  DAEMON_LIST = 'list_daemons',\n\n  OSD_GET_REMOVE_STATUS = 'remove_osds_status',\n  OSD_CREATE = 'apply_drivegroups',\n  OSD_DELETE = 'remove_osds',\n\n  DEVICE_LIST = 'get_inventory',\n  DEVICE_BLINK_LIGHT = 'blink_device_light'\n}\n","export enum OsdDeploymentOptions {\n  COST_CAPACITY = 'cost_capacity',\n  THROUGHPUT = 'throughput_optimized',\n  IOPS = 'iops_optimized'\n}\n\nexport interface DeploymentOption {\n  name: OsdDeploymentOptions;\n  title: string;\n  desc: string;\n  capacity: number;\n  available: boolean;\n  hdd_used: number;\n  used: number;\n  nvme_used: number;\n  ssd_used: number;\n}\n\nexport interface DeploymentOptions {\n  options: {\n    [key in OsdDeploymentOptions]: DeploymentOption;\n  };\n  recommended_option: OsdDeploymentOptions;\n}\n","export class OsdSettings {\n  nearfull_ratio: number;\n  full_ratio: number;\n}\n","export class Permission {\n  read: boolean;\n  create: boolean;\n  update: boolean;\n  delete: boolean;\n\n  constructor(serverPermission: Array<string> = []) {\n    ['read', 'create', 'update', 'delete'].forEach(\n      (permission) => (this[permission] = serverPermission.includes(permission))\n    );\n  }\n}\n\nexport class Permissions {\n  hosts: Permission;\n  configOpt: Permission;\n  pool: Permission;\n  osd: Permission;\n  monitor: Permission;\n  rbdImage: Permission;\n  iscsi: Permission;\n  rbdMirroring: Permission;\n  rgw: Permission;\n  cephfs: Permission;\n  manager: Permission;\n  log: Permission;\n  user: Permission;\n  grafana: Permission;\n  prometheus: Permission;\n  nfs: Permission;\n\n  constructor(serverPermissions: any) {\n    this.hosts = new Permission(serverPermissions['hosts']);\n    this.configOpt = new Permission(serverPermissions['config-opt']);\n    this.pool = new Permission(serverPermissions['pool']);\n    this.osd = new Permission(serverPermissions['osd']);\n    this.monitor = new Permission(serverPermissions['monitor']);\n    this.rbdImage = new Permission(serverPermissions['rbd-image']);\n    this.iscsi = new Permission(serverPermissions['iscsi']);\n    this.rbdMirroring = new Permission(serverPermissions['rbd-mirroring']);\n    this.rgw = new Permission(serverPermissions['rgw']);\n    this.cephfs = new Permission(serverPermissions['cephfs']);\n    this.manager = new Permission(serverPermissions['manager']);\n    this.log = new Permission(serverPermissions['log']);\n    this.user = new Permission(serverPermissions['user']);\n    this.grafana = new Permission(serverPermissions['grafana']);\n    this.prometheus = new Permission(serverPermissions['prometheus']);\n    this.nfs = new Permission(serverPermissions['nfs-ganesha']);\n  }\n}\n","export class Task {\n  constructor(name?: string, metadata?: object) {\n    this.name = name;\n    this.metadata = metadata;\n  }\n  name: string;\n  metadata: object;\n\n  description: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n/**\n * Convert the given value to an array.\n */\n@Pipe({\n  name: 'array'\n})\nexport class ArrayPipe implements PipeTransform {\n  /**\n   * Convert the given value into an array. If the value is already an\n   * array, then nothing happens, except the `force` flag is set.\n   * @param value The value to process.\n   * @param force Convert the specified value to an array, either it is\n   *              already an array.\n   */\n  transform(value: any, force = false): any[] {\n    let result = value;\n    if (!_.isArray(value) || (_.isArray(value) && force)) {\n      result = [value];\n    }\n    return result;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'booleanText'\n})\nexport class BooleanTextPipe implements PipeTransform {\n  transform(\n    value: any,\n    truthyText: string = $localize`Yes`,\n    falsyText: string = $localize`No`\n  ): string {\n    return Boolean(value) ? truthyText : falsyText;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Convert the given value to a boolean value.\n */\n@Pipe({\n  name: 'boolean'\n})\nexport class BooleanPipe implements PipeTransform {\n  transform(value: any): boolean {\n    let result = false;\n    switch (value) {\n      case true:\n      case 1:\n      case 'y':\n      case 'yes':\n      case 't':\n      case 'true':\n      case 'on':\n      case '1':\n        result = true;\n        break;\n    }\n    return result;\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cdDate'\n})\nexport class CdDatePipe implements PipeTransform {\n  constructor(private datePipe: DatePipe) {}\n\n  transform(value: any): any {\n    if (value === null || value === '') {\n      return '';\n    }\n    return (\n      this.datePipe.transform(value, 'shortDate') +\n      ' ' +\n      this.datePipe.transform(value, 'mediumTime')\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cephReleaseName'\n})\nexport class CephReleaseNamePipe implements PipeTransform {\n  transform(value: any): any {\n    // Expect \"ceph version 13.1.0-419-g251e2515b5\n    //         (251e2515b563856349498c6caf34e7a282f62937) nautilus (dev)\"\n    const result = /ceph version\\s+[^ ]+\\s+\\(.+\\)\\s+(.+)\\s+\\((.+)\\)/.exec(value);\n    if (result) {\n      if (result[2] === 'dev') {\n        // Assume this is actually main\n        return 'main';\n      } else {\n        // Return the \"nautilus\" part\n        return result[1];\n      }\n    } else {\n      // Unexpected format, pass it through\n      return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cephShortVersion'\n})\nexport class CephShortVersionPipe implements PipeTransform {\n  transform(value: any): any {\n    // Expect \"ceph version 1.2.3-g9asdasd (as98d7a0s8d7)\"\n    const result = /ceph version\\s+([^ ]+)\\s+\\(.+\\)/.exec(value);\n    if (result) {\n      // Return the \"1.2.3-g9asdasd\" part\n      return result[1];\n    } else {\n      // Unexpected format, pass it through\n      return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { FormatterService } from '../services/formatter.service';\n\n@Pipe({\n  name: 'dimlessBinaryPerSecond'\n})\nexport class DimlessBinaryPerSecondPipe implements PipeTransform {\n  constructor(private formatter: FormatterService) {}\n\n  transform(value: any): any {\n    return this.formatter.format_number(value, 1024, [\n      'B/s',\n      'kB/s',\n      'MB/s',\n      'GB/s',\n      'TB/s',\n      'PB/s',\n      'EB/s',\n      'ZB/s',\n      'YB/s'\n    ]);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { FormatterService } from '../services/formatter.service';\n\n@Pipe({\n  name: 'dimlessBinary'\n})\nexport class DimlessBinaryPipe implements PipeTransform {\n  constructor(private formatter: FormatterService) {}\n\n  transform(value: any): any {\n    return this.formatter.format_number(value, 1024, [\n      'B',\n      'KiB',\n      'MiB',\n      'GiB',\n      'TiB',\n      'PiB',\n      'EiB',\n      'ZiB',\n      'YiB'\n    ]);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { FormatterService } from '../services/formatter.service';\n\n@Pipe({\n  name: 'dimless'\n})\nexport class DimlessPipe implements PipeTransform {\n  constructor(private formatter: FormatterService) {}\n\n  transform(value: any): any {\n    return this.formatter.format_number(value, 1000, ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'duration',\n  pure: false\n})\nexport class DurationPipe implements PipeTransform {\n  /**\n   * Translates seconds into human readable format of seconds, minutes, hours, days, and years\n   * source: https://stackoverflow.com/a/34270811\n   *\n   * @param  {number} seconds The number of seconds to be processed\n   * @return {string}         The phrase describing the the amount of time\n   */\n  transform(seconds: number): string {\n    if (seconds === null || seconds <= 0) {\n      return '';\n    }\n    const levels = [\n      [`${Math.floor(seconds / 31536000)}`, 'years'],\n      [`${Math.floor((seconds % 31536000) / 86400)}`, 'days'],\n      [`${Math.floor((seconds % 86400) / 3600)}`, 'hours'],\n      [`${Math.floor((seconds % 3600) / 60)}`, 'minutes'],\n      [`${Math.floor(seconds % 60)}`, 'seconds']\n    ];\n    let returntext = '';\n\n    for (let i = 0, max = levels.length; i < max; i++) {\n      if (levels[i][0] === '0') {\n        continue;\n      }\n      returntext +=\n        ' ' +\n        levels[i][0] +\n        ' ' +\n        (levels[i][0] === '1' ? levels[i][1].substr(0, levels[i][1].length - 1) : levels[i][1]);\n    }\n    return returntext.trim() || '1 second';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'empty'\n})\nexport class EmptyPipe implements PipeTransform {\n  transform(value: any): any {\n    if (_.isUndefined(value) || _.isNull(value)) {\n      return '-';\n    } else if (_.isNaN(value)) {\n      return 'N/A';\n    }\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'encodeUri'\n})\nexport class EncodeUriPipe implements PipeTransform {\n  transform(value: any): any {\n    return encodeURIComponent(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return value.filter((row: any) => {\n      let result = true;\n\n      args.forEach((filter: any): boolean | void => {\n        if (!filter.value) {\n          return undefined;\n        }\n\n        result = result && filter.applyFilter(row, filter.value);\n        if (!result) {\n          return result;\n        }\n      });\n\n      return result;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { CssHelper } from '~/app/shared/classes/css-helper';\nimport { HealthColor } from '~/app/shared/enum/health-color.enum';\n\n@Pipe({\n  name: 'healthColor'\n})\nexport class HealthColorPipe implements PipeTransform {\n  constructor(private cssHelper: CssHelper) {}\n\n  transform(value: any): any {\n    return Object.keys(HealthColor).includes(value as HealthColor)\n      ? { color: this.cssHelper.propertyValue(HealthColor[value]) }\n      : null;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { HealthLabel } from '~/app/shared/enum/health-label.enum';\n\n@Pipe({\n  name: 'healthLabel'\n})\nexport class HealthLabelPipe implements PipeTransform {\n  transform(value: any): any {\n    return Object.keys(HealthLabel).includes(value as HealthLabel) ? HealthLabel[value] : null;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'iops'\n})\nexport class IopsPipe implements PipeTransform {\n  transform(value: any): any {\n    return `${value} IOPS`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'iscsiBackstore'\n})\nexport class IscsiBackstorePipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'user:rbd':\n        return 'user:rbd (tcmu-runner)';\n      default:\n        return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'join'\n})\nexport class JoinPipe implements PipeTransform {\n  transform(value: Array<any>): string {\n    return value.join(', ');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'logPriority'\n})\nexport class LogPriorityPipe implements PipeTransform {\n  transform(value: any): any {\n    if (value === '[DBG]') {\n      return 'debug';\n    } else if (value === '[INF]') {\n      return 'info';\n    } else if (value === '[WRN]') {\n      return 'warn';\n    } else if (value === '[ERR]') {\n      return 'err';\n    } else {\n      return ''; // Inherit\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'map'\n})\nexport class MapPipe implements PipeTransform {\n  transform(value: string | number, map?: object): any {\n    if (!_.isPlainObject(map)) {\n      return value;\n    }\n    return _.get(map, value, value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'milliseconds'\n})\nexport class MillisecondsPipe implements PipeTransform {\n  transform(value: any): any {\n    return `${value} ms`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'notAvailable'\n})\nexport class NotAvailablePipe implements PipeTransform {\n  transform(value: any, text?: string): any {\n    if (value === '') {\n      return _.defaultTo(text, $localize`n/a`);\n    }\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ordinal'\n})\nexport class OrdinalPipe implements PipeTransform {\n  transform(value: any): any {\n    const num = parseInt(value, 10);\n    if (isNaN(num)) {\n      return value;\n    }\n    return (\n      value +\n      (Math.floor(num / 10) === 1\n        ? 'th'\n        : num % 10 === 1\n        ? 'st'\n        : num % 10 === 2\n        ? 'nd'\n        : num % 10 === 3\n        ? 'rd'\n        : 'th')\n    );\n  }\n}\n","import { CommonModule, DatePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ArrayPipe } from './array.pipe';\nimport { BooleanTextPipe } from './boolean-text.pipe';\nimport { BooleanPipe } from './boolean.pipe';\nimport { CdDatePipe } from './cd-date.pipe';\nimport { CephReleaseNamePipe } from './ceph-release-name.pipe';\nimport { CephShortVersionPipe } from './ceph-short-version.pipe';\nimport { DimlessBinaryPerSecondPipe } from './dimless-binary-per-second.pipe';\nimport { DimlessBinaryPipe } from './dimless-binary.pipe';\nimport { DimlessPipe } from './dimless.pipe';\nimport { DurationPipe } from './duration.pipe';\nimport { EmptyPipe } from './empty.pipe';\nimport { EncodeUriPipe } from './encode-uri.pipe';\nimport { FilterPipe } from './filter.pipe';\nimport { HealthColorPipe } from './health-color.pipe';\nimport { HealthLabelPipe } from './health-label.pipe';\nimport { IopsPipe } from './iops.pipe';\nimport { IscsiBackstorePipe } from './iscsi-backstore.pipe';\nimport { JoinPipe } from './join.pipe';\nimport { LogPriorityPipe } from './log-priority.pipe';\nimport { MapPipe } from './map.pipe';\nimport { MillisecondsPipe } from './milliseconds.pipe';\nimport { NotAvailablePipe } from './not-available.pipe';\nimport { OrdinalPipe } from './ordinal.pipe';\nimport { RbdConfigurationSourcePipe } from './rbd-configuration-source.pipe';\nimport { RelativeDatePipe } from './relative-date.pipe';\nimport { RoundPipe } from './round.pipe';\nimport { SanitizeHtmlPipe } from './sanitize-html.pipe';\nimport { SearchHighlightPipe } from './search-highlight.pipe';\nimport { TruncatePipe } from './truncate.pipe';\nimport { UpperFirstPipe } from './upper-first.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    ArrayPipe,\n    BooleanPipe,\n    BooleanTextPipe,\n    DimlessBinaryPipe,\n    DimlessBinaryPerSecondPipe,\n    HealthColorPipe,\n    HealthLabelPipe,\n    DimlessPipe,\n    CephShortVersionPipe,\n    CephReleaseNamePipe,\n    RelativeDatePipe,\n    IscsiBackstorePipe,\n    JoinPipe,\n    LogPriorityPipe,\n    FilterPipe,\n    CdDatePipe,\n    EmptyPipe,\n    EncodeUriPipe,\n    RoundPipe,\n    OrdinalPipe,\n    MillisecondsPipe,\n    NotAvailablePipe,\n    IopsPipe,\n    UpperFirstPipe,\n    RbdConfigurationSourcePipe,\n    DurationPipe,\n    MapPipe,\n    TruncatePipe,\n    SanitizeHtmlPipe,\n    SearchHighlightPipe\n  ],\n  exports: [\n    ArrayPipe,\n    BooleanPipe,\n    BooleanTextPipe,\n    DimlessBinaryPipe,\n    DimlessBinaryPerSecondPipe,\n    HealthColorPipe,\n    HealthLabelPipe,\n    DimlessPipe,\n    CephShortVersionPipe,\n    CephReleaseNamePipe,\n    RelativeDatePipe,\n    IscsiBackstorePipe,\n    JoinPipe,\n    LogPriorityPipe,\n    FilterPipe,\n    CdDatePipe,\n    EmptyPipe,\n    EncodeUriPipe,\n    RoundPipe,\n    OrdinalPipe,\n    MillisecondsPipe,\n    NotAvailablePipe,\n    IopsPipe,\n    UpperFirstPipe,\n    RbdConfigurationSourcePipe,\n    DurationPipe,\n    MapPipe,\n    TruncatePipe,\n    SanitizeHtmlPipe,\n    SearchHighlightPipe\n  ],\n  providers: [\n    ArrayPipe,\n    BooleanPipe,\n    BooleanTextPipe,\n    DatePipe,\n    CephShortVersionPipe,\n    CephReleaseNamePipe,\n    DimlessBinaryPipe,\n    DimlessBinaryPerSecondPipe,\n    DimlessPipe,\n    RelativeDatePipe,\n    IscsiBackstorePipe,\n    JoinPipe,\n    LogPriorityPipe,\n    CdDatePipe,\n    EmptyPipe,\n    EncodeUriPipe,\n    OrdinalPipe,\n    IopsPipe,\n    MillisecondsPipe,\n    NotAvailablePipe,\n    UpperFirstPipe,\n    DurationPipe,\n    MapPipe,\n    TruncatePipe,\n    SanitizeHtmlPipe\n  ]\n})\nexport class PipesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'rbdConfigurationSource'\n})\nexport class RbdConfigurationSourcePipe implements PipeTransform {\n  transform(value: any): any {\n    const sourceMap = {\n      0: 'global',\n      1: 'pool',\n      2: 'image'\n    };\n    return sourceMap[value];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\nimport moment from 'moment';\n\nmoment.updateLocale('en', {\n  relativeTime: {\n    future: $localize`in %s`,\n    past: $localize`%s ago`,\n    s: $localize`a few seconds`,\n    ss: $localize`%d seconds`,\n    m: $localize`a minute`,\n    mm: $localize`%d minutes`,\n    h: $localize`an hour`,\n    hh: $localize`%d hours`,\n    d: $localize`a day`,\n    dd: $localize`%d days`,\n    w: $localize`a week`,\n    ww: $localize`%d weeks`,\n    M: $localize`a month`,\n    MM: $localize`%d months`,\n    y: $localize`a year`,\n    yy: $localize`%d years`\n  }\n});\n\n@Pipe({\n  name: 'relativeDate',\n  pure: false\n})\nexport class RelativeDatePipe implements PipeTransform {\n  /**\n   * Convert a time into a human readable form, e.g. '2 minutes ago'.\n   * @param {Date | string | number} value The date to convert, should be\n   *   an ISO8601 string, an Unix timestamp (seconds) or Date object.\n   * @param {boolean} upperFirst Set to `true` to start the sentence\n   *   upper case. Defaults to `true`.\n   * @return {string} The time in human readable form or an empty string\n   *   on failure (e.g. invalid input).\n   */\n  transform(value: Date | string | number, upperFirst = true): string {\n    let date: moment.Moment;\n    if (_.isNumber(value)) {\n      date = moment.unix(value);\n    } else {\n      date = moment(value);\n    }\n    if (!date.isValid()) {\n      return '';\n    }\n    let relativeDate: string = date.fromNow();\n    if (upperFirst) {\n      relativeDate = _.upperFirst(relativeDate);\n    }\n    return relativeDate;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'round'\n})\nexport class RoundPipe implements PipeTransform {\n  transform(value: any, precision: number): any {\n    return _.round(value, precision);\n  }\n}\n","import { Pipe, PipeTransform, SecurityContext } from '@angular/core';\nimport { DomSanitizer, SafeValue } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeHtml'\n})\nexport class SanitizeHtmlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  transform(value: SafeValue | string | null): string | null {\n    return this.domSanitizer.sanitize(SecurityContext.HTML, value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchHighlight'\n})\nexport class SearchHighlightPipe implements PipeTransform {\n  transform(value: string, args: string): string {\n    if (!args) {\n      return value;\n    }\n    args = this.escapeRegExp(args);\n    const regex = new RegExp(args, 'gi');\n    const match = value.match(regex);\n\n    if (!match) {\n      return value;\n    }\n\n    return value.replace(regex, '<mark>$&</mark>');\n  }\n\n  private escapeRegExp(str: string) {\n    // $& means the whole matched string\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: any, length: number, omission?: string): any {\n    if (!_.isString(value)) {\n      return value;\n    }\n    omission = _.defaultTo(omission, '');\n    return _.truncate(value, { length, omission });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'upperFirst'\n})\nexport class UpperFirstPipe implements PipeTransform {\n  transform(value: string): string {\n    return _.upperFirst(value);\n  }\n}\n","import { fromEvent, Observable, partition } from 'rxjs';\nimport { repeatWhen, shareReplay, takeUntil } from 'rxjs/operators';\n\nexport function whenPageVisible() {\n  const visibilitychange$ = fromEvent(document, 'visibilitychange').pipe(\n    shareReplay({ refCount: true, bufferSize: 1 })\n  );\n\n  const [pageVisible$, pageHidden$] = partition(\n    visibilitychange$,\n    () => document.visibilityState === 'visible'\n  );\n\n  return function <T>(source: Observable<T>) {\n    return source.pipe(\n      takeUntil(pageHidden$),\n      repeatWhen(() => pageVisible$)\n    );\n  };\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport _ from 'lodash';\nimport { Observable, throwError as observableThrowError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { CdHelperClass } from '~/app/shared/classes/cd-helper.class';\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { CdNotificationConfig } from '../models/cd-notification';\nimport { FinishedTask } from '../models/finished-task';\nimport { AuthStorageService } from './auth-storage.service';\nimport { NotificationService } from './notification.service';\n\nexport class CdHttpErrorResponse extends HttpErrorResponse {\n  preventDefault: Function;\n  ignoreStatusCode: Function;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiInterceptorService implements HttpInterceptor {\n  constructor(\n    private router: Router,\n    private authStorageService: AuthStorageService,\n    public notificationService: NotificationService\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const acceptHeader = request.headers.get('Accept');\n    let reqWithVersion: HttpRequest<any>;\n    if (acceptHeader && acceptHeader.startsWith('application/vnd.ceph.api.v')) {\n      reqWithVersion = request.clone();\n    } else {\n      reqWithVersion = request.clone({\n        setHeaders: {\n          Accept: CdHelperClass.cdVersionHeader('1', '0')\n        }\n      });\n    }\n    return next.handle(reqWithVersion).pipe(\n      catchError((resp: CdHttpErrorResponse) => {\n        if (resp instanceof HttpErrorResponse) {\n          let timeoutId: number;\n          switch (resp.status) {\n            case 400:\n              const finishedTask = new FinishedTask();\n\n              const task = resp.error.task;\n              if (_.isPlainObject(task)) {\n                task.metadata.component = task.metadata.component || resp.error.component;\n\n                finishedTask.name = task.name;\n                finishedTask.metadata = task.metadata;\n              } else {\n                finishedTask.metadata = resp.error;\n              }\n\n              finishedTask.success = false;\n              finishedTask.exception = resp.error;\n              timeoutId = this.notificationService.notifyTask(finishedTask);\n              break;\n            case 401:\n              this.authStorageService.remove();\n              this.router.navigate(['/login']);\n              break;\n            case 403:\n              this.router.navigate(['error'], {\n                state: {\n                  message: $localize`Sorry, you don’t have permission to view this page or resource.`,\n                  header: $localize`Access Denied`,\n                  icon: 'fa fa-lock',\n                  source: 'forbidden'\n                }\n              });\n              break;\n            default:\n              timeoutId = this.prepareNotification(resp);\n          }\n\n          /**\n           * Decorated preventDefault method (in case error previously had\n           * preventDefault method defined). If called, it will prevent a\n           * notification to be shown.\n           */\n          resp.preventDefault = () => {\n            this.notificationService.cancel(timeoutId);\n          };\n\n          /**\n           * If called, it will prevent a notification for the specific status code.\n           * @param {number} status The status code to be ignored.\n           */\n          resp.ignoreStatusCode = function (status: number) {\n            if (this.status === status) {\n              this.preventDefault();\n            }\n          };\n        }\n        // Return the error to the method that called it.\n        return observableThrowError(resp);\n      })\n    );\n  }\n\n  private prepareNotification(resp: any): number {\n    return this.notificationService.show(() => {\n      let message = '';\n      if (_.isPlainObject(resp.error) && _.isString(resp.error.detail)) {\n        message = resp.error.detail; // Error was triggered by the backend.\n      } else if (_.isString(resp.error)) {\n        message = resp.error;\n      } else if (_.isString(resp.message)) {\n        message = resp.message;\n      }\n      return new CdNotificationConfig(\n        NotificationType.error,\n        `${resp.status} - ${resp.statusText}`,\n        message,\n        undefined,\n        resp['application']\n      );\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\n\nimport { AuthStorageService } from './auth-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private authStorageService: AuthStorageService) {}\n\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authStorageService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(childRoute, state);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Permissions } from '../models/permissions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStorageService {\n  isPwdDisplayedSource = new BehaviorSubject(false);\n  isPwdDisplayed$ = this.isPwdDisplayedSource.asObservable();\n\n  set(\n    username: string,\n    permissions = {},\n    sso = false,\n    pwdExpirationDate: number = null,\n    pwdUpdateRequired: boolean = false\n  ) {\n    localStorage.setItem('dashboard_username', username);\n    localStorage.setItem('dashboard_permissions', JSON.stringify(new Permissions(permissions)));\n    localStorage.setItem('user_pwd_expiration_date', String(pwdExpirationDate));\n    localStorage.setItem('user_pwd_update_required', String(pwdUpdateRequired));\n    localStorage.setItem('sso', String(sso));\n  }\n\n  remove() {\n    localStorage.removeItem('dashboard_username');\n    localStorage.removeItem('user_pwd_expiration_data');\n    localStorage.removeItem('user_pwd_update_required');\n  }\n\n  isLoggedIn() {\n    return localStorage.getItem('dashboard_username') !== null;\n  }\n\n  getUsername() {\n    return localStorage.getItem('dashboard_username');\n  }\n\n  getPermissions(): Permissions {\n    return JSON.parse(\n      localStorage.getItem('dashboard_permissions') || JSON.stringify(new Permissions({}))\n    );\n  }\n\n  getPwdExpirationDate(): number {\n    return Number(localStorage.getItem('user_pwd_expiration_date'));\n  }\n\n  getPwdUpdateRequired(): boolean {\n    return localStorage.getItem('user_pwd_update_required') === 'true';\n  }\n\n  isSSO() {\n    return localStorage.getItem('sso') === 'true';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\n\nimport { AuthStorageService } from './auth-storage.service';\n\n/**\n * This service guard checks if a user must be redirected to a special\n * page at '/login-change-password' to set a new password.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangePasswordGuardService implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private authStorageService: AuthStorageService) {}\n\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // Redirect to '/login-change-password' when the following constraints\n    // are fulfilled:\n    // - The user must be logged in.\n    // - SSO must be disabled.\n    // - The flag 'User must change password at next logon' must be set.\n    if (\n      this.authStorageService.isLoggedIn() &&\n      !this.authStorageService.isSSO() &&\n      this.authStorageService.getPwdUpdateRequired()\n    ) {\n      this.router.navigate(['/login-change-password'], { queryParams: { returnUrl: state.url } });\n      return false;\n    }\n    return true;\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(childRoute, state);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport moment from 'moment';\n\nimport { CdDevice } from '../models/devices';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceService {\n  /**\n   * Calculates additional data and appends them as new attributes to the given device.\n   */\n  calculateAdditionalData(device: CdDevice): CdDevice {\n    if (!device.life_expectancy_min || !device.life_expectancy_max) {\n      device.state = 'unknown';\n      return device;\n    }\n    const hasDate = (float: string): boolean => !!Number.parseFloat(float);\n    const weeks = (isoDate1: string, isoDate2: string): number =>\n      !isoDate1 || !isoDate2 || !hasDate(isoDate1) || !hasDate(isoDate2)\n        ? null\n        : moment.duration(moment(isoDate1).diff(moment(isoDate2))).asWeeks();\n\n    const ageOfStamp = moment\n      .duration(moment(moment.now()).diff(moment(device.life_expectancy_stamp)))\n      .asWeeks();\n    const max = weeks(device.life_expectancy_max, device.life_expectancy_stamp);\n    const min = weeks(device.life_expectancy_min, device.life_expectancy_stamp);\n\n    if (ageOfStamp > 1) {\n      device.state = 'stale';\n    } else if (max !== null && max <= 2) {\n      device.state = 'bad';\n    } else if (min !== null && min <= 4) {\n      device.state = 'warning';\n    } else {\n      device.state = 'good';\n    }\n\n    device.life_expectancy_weeks = {\n      max: max !== null ? Math.round(max) : null,\n      min: min !== null ? Math.round(min) : null\n    };\n\n    return device;\n  }\n\n  readable(device: CdDevice): CdDevice {\n    device.readableDaemons = device.daemons.join(' ');\n    return device;\n  }\n\n  prepareDevice(device: CdDevice): CdDevice {\n    return this.readable(this.calculateAdditionalData(device));\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { CephReleaseNamePipe } from '../pipes/ceph-release-name.pipe';\nimport { SummaryService } from './summary.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocService {\n  private releaseDataSource = new BehaviorSubject<string>(null);\n  releaseData$ = this.releaseDataSource.asObservable();\n\n  constructor(\n    private summaryservice: SummaryService,\n    private cephReleaseNamePipe: CephReleaseNamePipe\n  ) {\n    this.summaryservice.subscribeOnce((summary) => {\n      const releaseName = this.cephReleaseNamePipe.transform(summary.version);\n      this.releaseDataSource.next(releaseName);\n    });\n  }\n\n  urlGenerator(section: string, release = 'master'): string {\n    const docVersion = release === 'master' ? 'latest' : release;\n    const domain = `https://docs.ceph.com/en/${docVersion}/`;\n    const domainCeph = `https://ceph.io/`;\n\n    const sections = {\n      iscsi: `${domain}mgr/dashboard/#enabling-iscsi-management`,\n      prometheus: `${domain}mgr/dashboard/#enabling-prometheus-alerting`,\n      'nfs-ganesha': `${domain}mgr/dashboard/#configuring-nfs-ganesha-in-the-dashboard`,\n      'rgw-nfs': `${domain}radosgw/nfs`,\n      rgw: `${domain}mgr/dashboard/#enabling-the-object-gateway-management-frontend`,\n      dashboard: `${domain}mgr/dashboard`,\n      grafana: `${domain}mgr/dashboard/#enabling-the-embedding-of-grafana-dashboards`,\n      orch: `${domain}mgr/orchestrator`,\n      pgs: `${domainCeph}pgcalc`,\n      help: `${domainCeph}help/`,\n      security: `${domainCeph}security/`,\n      trademarks: `${domainCeph}legal-page/trademarks/`,\n      'dashboard-landing-page-status': `${domain}mgr/dashboard/#dashboard-landing-page-status`,\n      'dashboard-landing-page-performance': `${domain}mgr/dashboard/#dashboard-landing-page-performance`,\n      'dashboard-landing-page-capacity': `${domain}mgr/dashboard/#dashboard-landing-page-capacity`\n    };\n\n    return sections[section];\n  }\n\n  subscribeOnce(\n    section: string,\n    next: (release: string) => void,\n    error?: (error: any) => void\n  ): Subscription {\n    return this.releaseData$\n      .pipe(\n        filter((value) => !!value),\n        map((release) => this.urlGenerator(section, release)),\n        first()\n      )\n      .subscribe(next, error);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { CssHelper } from '~/app/shared/classes/css-helper';\nimport { HealthColor } from '~/app/shared/enum/health-color.enum';\nimport { SummaryService } from './summary.service';\n\n@Injectable()\nexport class FaviconService implements OnDestroy {\n  sub: Subscription;\n  oldStatus: string;\n  url: string;\n\n  constructor(\n    @Inject(DOCUMENT) private document: HTMLDocument,\n    private summaryService: SummaryService,\n    private cssHelper: CssHelper\n  ) {}\n\n  init() {\n    this.url = this.document.getElementById('cdFavicon')?.getAttribute('href');\n\n    this.sub = this.summaryService.subscribe((summary) => {\n      this.changeIcon(summary.health_status);\n    });\n  }\n\n  changeIcon(status?: string) {\n    if (status === this.oldStatus) {\n      return;\n    }\n\n    this.oldStatus = status;\n\n    const favicon = this.document.getElementById('cdFavicon');\n    const faviconSize = 16;\n    const radius = faviconSize / 4;\n\n    const canvas = this.document.createElement('canvas');\n    canvas.width = faviconSize;\n    canvas.height = faviconSize;\n\n    const context = canvas.getContext('2d');\n    const img = this.document.createElement('img');\n    img.src = this.url;\n\n    img.onload = () => {\n      // Draw Original Favicon as Background\n      context.drawImage(img, 0, 0, faviconSize, faviconSize);\n\n      if (Object.keys(HealthColor).includes(status as HealthColor)) {\n        // Cut notification circle area\n        context.save();\n        context.globalCompositeOperation = 'destination-out';\n        context.beginPath();\n        context.arc(canvas.width - radius, radius, radius + 2, 0, 2 * Math.PI);\n        context.fill();\n        context.restore();\n\n        // Draw Notification Circle\n        context.beginPath();\n        context.arc(canvas.width - radius, radius, radius, 0, 2 * Math.PI);\n\n        context.fillStyle = this.cssHelper.propertyValue(HealthColor[status]);\n        context.fill();\n      }\n\n      // Replace favicon\n      favicon.setAttribute('href', canvas.toDataURL('image/png'));\n    };\n  }\n\n  ngOnDestroy() {\n    this.changeIcon();\n    this.sub?.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\n\nimport { DashboardNotFoundError } from '~/app/core/error/error';\nimport { FeatureTogglesMap, FeatureTogglesService } from './feature-toggles.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeatureTogglesGuardService implements CanActivate, CanActivateChild {\n  constructor(private featureToggles: FeatureTogglesService) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    return this.featureToggles.get().pipe(\n      map((enabledFeatures: FeatureTogglesMap) => {\n        if (enabledFeatures[route.routeConfig.path] === false) {\n          throw new DashboardNotFoundError();\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot) {\n    return this.canActivate(route.parent);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { TimerService } from './timer.service';\n\nexport class FeatureTogglesMap {\n  rbd = true;\n  mirroring = true;\n  iscsi = true;\n  cephfs = true;\n  rgw = true;\n  nfs = true;\n}\nexport type Features = keyof FeatureTogglesMap;\nexport type FeatureTogglesMap$ = Observable<FeatureTogglesMap>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeatureTogglesService {\n  readonly API_URL: string = 'api/feature_toggles';\n  readonly REFRESH_INTERVAL: number = 30000;\n  private featureToggleMap$: FeatureTogglesMap$;\n\n  constructor(private http: HttpClient, private timerService: TimerService) {\n    this.featureToggleMap$ = this.timerService.get(\n      () => this.http.get<FeatureTogglesMap>(this.API_URL),\n      this.REFRESH_INTERVAL\n    );\n  }\n\n  get(): FeatureTogglesMap$ {\n    return this.featureToggleMap$;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormatterService {\n  format_number(n: any, divisor: number, units: string[], decimals: number = 1): string {\n    if (_.isString(n)) {\n      n = Number(n);\n    }\n    if (!_.isNumber(n)) {\n      return '-';\n    }\n    let unit = n < 1 ? 0 : Math.floor(Math.log(n) / Math.log(divisor));\n    unit = unit >= units.length ? units.length - 1 : unit;\n    let result = _.round(n / Math.pow(divisor, unit), decimals).toString();\n    if (result === '') {\n      return '-';\n    }\n    if (units[unit] !== '') {\n      result = `${result} ${units[unit]}`;\n    }\n    return result;\n  }\n\n  /**\n   * Convert the given value into bytes.\n   * @param {string} value The value to be converted, e.g. 1024B, 10M, 300KiB or 1ZB.\n   * @param error_value The value returned in case the regular expression did not match. Defaults to\n   *                    null.\n   * @returns Returns the given value in bytes without any unit appended or the defined error value\n   *          in case xof an error.\n   */\n  toBytes(value: string, error_value: number = null): number | null {\n    const base = 1024;\n    const units = ['b', 'k', 'm', 'g', 't', 'p', 'e', 'z', 'y'];\n    const m = RegExp('^(\\\\d+(.\\\\d+)?) ?([' + units.join('') + ']?(b|ib|B/s)?)?$', 'i').exec(value);\n    if (m === null) {\n      return error_value;\n    }\n    let bytes = parseFloat(m[1]);\n    if (_.isString(m[3])) {\n      bytes = bytes * Math.pow(base, units.indexOf(m[3].toLowerCase()[0]));\n    }\n    return Math.round(bytes);\n  }\n\n  /**\n   * Converts `x ms` to `x` (currently) or `0` if the conversion fails\n   */\n  toMilliseconds(value: string): number {\n    const pattern = /^\\s*(\\d+)\\s*(ms)?\\s*$/i;\n    const testResult = pattern.exec(value);\n\n    if (testResult !== null) {\n      return +testResult[1];\n    }\n\n    return 0;\n  }\n\n  /**\n   * Converts `x IOPS` to `x` (currently) or `0` if the conversion fails\n   */\n  toIops(value: string): number {\n    const pattern = /^\\s*(\\d+)\\s*(IOPS)?\\s*$/i;\n    const testResult = pattern.exec(value);\n\n    if (testResult !== null) {\n      return +testResult[1];\n    }\n\n    return 0;\n  }\n}\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { DashboardError } from '~/app/core/error/error';\nimport { LoggingService } from '../api/logging.service';\n\n@Injectable()\nexport class JsErrorHandler implements ErrorHandler {\n  constructor(private injector: Injector, private router: Router) {}\n\n  handleError(error: any) {\n    const loggingService = this.injector.get(LoggingService);\n    const url = window.location.href;\n    const message = error && error.message;\n    const stack = error && error.stack;\n    loggingService.jsError(url, message, stack).subscribe();\n    if (error.rejection instanceof DashboardError) {\n      setTimeout(\n        () =>\n          this.router.navigate(['error'], {\n            state: {\n              message: error.rejection.message,\n              header: error.rejection.header,\n              icon: error.rejection.icon\n            }\n          }),\n        50\n      );\n    } else {\n      throw error;\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\n\nimport { environment } from '~/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  constructor(private http: HttpClient, @Inject(LOCALE_ID) protected localeId: string) {}\n\n  getLocale(): string {\n    return this.localeId || environment.default_lang;\n  }\n\n  setLocale(lang: string) {\n    document.cookie = `cd-lang=${lang}`;\n  }\n\n  getLanguages() {\n    return this.http.get<string[]>('ui-api/langs');\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NgbModal, NgbModalOptions, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n  constructor(private modal: NgbModal) {}\n\n  show(component: any, initialState?: any, options?: NgbModalOptions): NgbModalRef {\n    const modalRef = this.modal.open(component, options);\n\n    if (initialState) {\n      Object.assign(modalRef.componentInstance, initialState);\n    }\n\n    return modalRef;\n  }\n\n  dismissAll() {\n    this.modal.dismissAll();\n  }\n\n  hasOpenModals() {\n    return this.modal.hasOpenModals();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router } from '@angular/router';\n\nimport { of as observableOf } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { MgrModuleService } from '~/app/shared/api/mgr-module.service';\nimport { Icons } from '~/app/shared/enum/icons.enum';\n\n/**\n * This service checks if a route can be activated by executing a\n * REST API call to '/ui-api/<uiApiPath>/status'. If the returned response\n * states that the module is not available, then the user is redirected\n * to the specified <redirectTo> URL path.\n *\n * A controller implementing this endpoint should return an object of\n * the following form:\n * {'available': true|false, 'message': null|string}.\n *\n * The configuration of this guard should look like this:\n * const routes: Routes = [\n * {\n *   path: 'rgw/bucket',\n *   component: RgwBucketListComponent,\n *   canActivate: [AuthGuardService, ModuleStatusGuardService],\n *   data: {\n *     moduleStatusGuardConfig: {\n *       uiApiPath: 'rgw',\n *       redirectTo: 'rgw/501'\n *     }\n *   }\n * },\n * ...\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleStatusGuardService implements CanActivate, CanActivateChild {\n  // TODO: Hotfix - remove ALLOWLIST'ing when a generic ErrorComponent is implemented\n  static readonly ALLOWLIST: string[] = ['501'];\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private mgrModuleService: MgrModuleService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    return this.doCheck(route);\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot) {\n    return this.doCheck(childRoute);\n  }\n\n  private doCheck(route: ActivatedRouteSnapshot) {\n    if (route.url.length > 0 && ModuleStatusGuardService.ALLOWLIST.includes(route.url[0].path)) {\n      return observableOf(true);\n    }\n    const config = route.data['moduleStatusGuardConfig'];\n    let backendCheck = false;\n    if (config.backend) {\n      this.mgrModuleService.getConfig('orchestrator').subscribe(\n        (resp) => {\n          backendCheck = config.backend === resp['orchestrator'];\n        },\n        () => {\n          this.router.navigate([config.redirectTo]);\n          return observableOf(false);\n        }\n      );\n    }\n    return this.http.get(`ui-api/${config.uiApiPath}/status`).pipe(\n      map((resp: any) => {\n        if (!resp.available && !backendCheck) {\n          this.router.navigate([config.redirectTo || ''], {\n            state: {\n              header: config.header,\n              message: resp.message,\n              section: config.section,\n              section_info: config.section_info,\n              button_name: config.button_name,\n              button_route: config.button_route,\n              button_title: config.button_title,\n              uiConfig: config.uiConfig,\n              uiApiPath: config.uiApiPath,\n              icon: Icons.wrench,\n              component: config.component\n            }\n          });\n        }\n        return resp.available;\n      }),\n      catchError(() => {\n        this.router.navigate([config.redirectTo]);\n        return observableOf(false);\n      })\n    );\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { BehaviorSubject, EMPTY, Observable, of, Subscription } from 'rxjs';\nimport { catchError, delay, mergeMap, repeat, tap } from 'rxjs/operators';\n\nimport { Motd, MotdService } from '~/app/shared/api/motd.service';\nimport { whenPageVisible } from '../rxjs/operators/page-visibilty.operator';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MotdNotificationService implements OnDestroy {\n  public motd$: Observable<Motd | null>;\n  public motdSource = new BehaviorSubject<Motd | null>(null);\n\n  private subscription: Subscription;\n  private localStorageKey = 'dashboard_motd_hidden';\n\n  constructor(private motdService: MotdService) {\n    this.motd$ = this.motdSource.asObservable();\n    // Check every 60 seconds for the latest MOTD configuration.\n    this.subscription = of(true)\n      .pipe(\n        mergeMap(() => this.motdService.get()),\n        catchError((error) => {\n          // Do not show an error notification.\n          if (_.isFunction(error.preventDefault)) {\n            error.preventDefault();\n          }\n          return EMPTY;\n        }),\n        tap((motd: Motd | null) => this.processResponse(motd)),\n        delay(60000),\n        repeat(),\n        whenPageVisible()\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  hide() {\n    // Store the severity and MD5 of the current MOTD in local or\n    // session storage to be able to show it again if the severity\n    // or message of the latest MOTD has changed.\n    const motd: Motd = this.motdSource.getValue();\n    if (motd) {\n      const value = `${motd.severity}:${motd.md5}`;\n      switch (motd.severity) {\n        case 'info':\n          localStorage.setItem(this.localStorageKey, value);\n          sessionStorage.removeItem(this.localStorageKey);\n          break;\n        case 'warning':\n          sessionStorage.setItem(this.localStorageKey, value);\n          localStorage.removeItem(this.localStorageKey);\n          break;\n      }\n    }\n    this.motdSource.next(null);\n  }\n\n  processResponse(motd: Motd | null) {\n    const value: string | null =\n      sessionStorage.getItem(this.localStorageKey) || localStorage.getItem(this.localStorageKey);\n    let visible: boolean = _.isNull(value);\n    // Force a hidden MOTD to be shown again if the severity or message\n    // has been changed.\n    if (!visible && motd) {\n      const [severity, md5] = value.split(':');\n      if (severity !== motd.severity || md5 !== motd.md5) {\n        visible = true;\n        sessionStorage.removeItem(this.localStorageKey);\n        localStorage.removeItem(this.localStorageKey);\n      }\n    }\n    if (visible) {\n      this.motdSource.next(motd);\n    }\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\n\nimport { asyncScheduler, SchedulerLike, Subscription } from 'rxjs';\n\nabstract class NgZoneScheduler implements SchedulerLike {\n  protected scheduler = asyncScheduler;\n\n  constructor(protected zone: NgZone) {}\n\n  abstract schedule(...args: any[]): Subscription;\n\n  now(): number {\n    return this.scheduler.now();\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaveNgZoneScheduler extends NgZoneScheduler {\n  constructor(zone: NgZone) {\n    super(zone);\n  }\n\n  schedule(...args: any[]): Subscription {\n    return this.zone.runOutsideAngular(() => this.scheduler.schedule.apply(this.scheduler, args));\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnterNgZoneScheduler extends NgZoneScheduler {\n  constructor(zone: NgZone) {\n    super(zone);\n  }\n\n  schedule(...args: any[]): Subscription {\n    return this.zone.run(() => this.scheduler.schedule.apply(this.scheduler, args));\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgZoneSchedulerService {\n  constructor(public leave: LeaveNgZoneScheduler, public enter: EnterNgZoneScheduler) {}\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild } from '@angular/router';\n\nimport { DashboardUserDeniedError } from '~/app/core/error/error';\nimport { AuthStorageService } from './auth-storage.service';\n\n/**\n * This service checks if a route can be activated if the user has not\n * been logged in via SSO.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoSsoGuardService implements CanActivate, CanActivateChild {\n  constructor(private authStorageService: AuthStorageService) {}\n\n  canActivate() {\n    if (!this.authStorageService.isSSO()) {\n      return true;\n    }\n    throw new DashboardUserDeniedError();\n    return false;\n  }\n\n  canActivateChild(): boolean {\n    return this.canActivate();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { IndividualConfig, ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { CdNotification, CdNotificationConfig } from '../models/cd-notification';\nimport { FinishedTask } from '../models/finished-task';\nimport { CdDatePipe } from '../pipes/cd-date.pipe';\nimport { TaskMessageService } from './task-message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  private hideToasties = false;\n\n  // Data observable\n  private dataSource = new BehaviorSubject<CdNotification[]>([]);\n  data$ = this.dataSource.asObservable();\n\n  // Sidebar observable\n  sidebarSubject = new Subject();\n\n  private queued: CdNotificationConfig[] = [];\n  private queuedTimeoutId: number;\n  KEY = 'cdNotifications';\n\n  constructor(\n    public toastr: ToastrService,\n    private taskMessageService: TaskMessageService,\n    private cdDatePipe: CdDatePipe\n  ) {\n    const stringNotifications = localStorage.getItem(this.KEY);\n    let notifications: CdNotification[] = [];\n\n    if (_.isString(stringNotifications)) {\n      notifications = JSON.parse(stringNotifications, (_key, value) => {\n        if (_.isPlainObject(value)) {\n          return _.assign(new CdNotification(), value);\n        }\n        return value;\n      });\n    }\n\n    this.dataSource.next(notifications);\n  }\n\n  /**\n   * Removes all current saved notifications\n   */\n  removeAll() {\n    localStorage.removeItem(this.KEY);\n    this.dataSource.next([]);\n  }\n\n  /**\n   * Removes a single saved notifications\n   */\n  remove(index: number) {\n    const recent = this.dataSource.getValue();\n    recent.splice(index, 1);\n    this.dataSource.next(recent);\n    localStorage.setItem(this.KEY, JSON.stringify(recent));\n  }\n\n  /**\n   * Method used for saving a shown notification (check show() method).\n   */\n  save(notification: CdNotification) {\n    const recent = this.dataSource.getValue();\n    recent.push(notification);\n    recent.sort((a, b) => (a.timestamp > b.timestamp ? -1 : 1));\n    while (recent.length > 10) {\n      recent.pop();\n    }\n    this.dataSource.next(recent);\n    localStorage.setItem(this.KEY, JSON.stringify(recent));\n  }\n\n  /**\n   * Method for showing a notification.\n   * @param {NotificationType} type toastr type\n   * @param {string} title\n   * @param {string} [message] The message to be displayed. Note, use this field\n   *   for error notifications only.\n   * @param {*} [options] toastr compatible options, used when creating a toastr\n   * @param {string} [application] Only needed if notification comes from an external application\n   * @returns The timeout ID that is set to be able to cancel the notification.\n   */\n  show(\n    type: NotificationType,\n    title: string,\n    message?: string,\n    options?: any | IndividualConfig,\n    application?: string\n  ): number;\n  show(config: CdNotificationConfig | (() => CdNotificationConfig)): number;\n  show(\n    arg: NotificationType | CdNotificationConfig | (() => CdNotificationConfig),\n    title?: string,\n    message?: string,\n    options?: any | IndividualConfig,\n    application?: string\n  ): number {\n    return window.setTimeout(() => {\n      let config: CdNotificationConfig;\n      if (_.isFunction(arg)) {\n        config = arg() as CdNotificationConfig;\n      } else if (_.isObject(arg)) {\n        config = arg as CdNotificationConfig;\n      } else {\n        config = new CdNotificationConfig(\n          arg as NotificationType,\n          title,\n          message,\n          options,\n          application\n        );\n      }\n      this.queueToShow(config);\n    }, 10);\n  }\n\n  private queueToShow(config: CdNotificationConfig) {\n    this.cancel(this.queuedTimeoutId);\n    if (!this.queued.find((c) => _.isEqual(c, config))) {\n      this.queued.push(config);\n    }\n    this.queuedTimeoutId = window.setTimeout(() => {\n      this.showQueued();\n    }, 500);\n  }\n\n  private showQueued() {\n    this.getUnifiedTitleQueue().forEach((config) => {\n      const notification = new CdNotification(config);\n\n      if (!notification.isFinishedTask) {\n        this.save(notification);\n      }\n      this.showToasty(notification);\n    });\n  }\n\n  private getUnifiedTitleQueue(): CdNotificationConfig[] {\n    return Object.values(this.queueShiftByTitle()).map((configs) => {\n      const config = configs[0];\n      if (configs.length > 1) {\n        config.message = '<ul>' + configs.map((c) => `<li>${c.message}</li>`).join('') + '</ul>';\n      }\n      return config;\n    });\n  }\n\n  private queueShiftByTitle(): { [key: string]: CdNotificationConfig[] } {\n    const byTitle: { [key: string]: CdNotificationConfig[] } = {};\n    let config: CdNotificationConfig;\n    while ((config = this.queued.shift())) {\n      if (!byTitle[config.title]) {\n        byTitle[config.title] = [];\n      }\n      byTitle[config.title].push(config);\n    }\n    return byTitle;\n  }\n\n  private showToasty(notification: CdNotification) {\n    // Exit immediately if no toasty should be displayed.\n    if (this.hideToasties) {\n      return;\n    }\n    this.toastr[['error', 'info', 'success'][notification.type]](\n      (notification.message ? notification.message + '<br>' : '') +\n        this.renderTimeAndApplicationHtml(notification),\n      notification.title,\n      notification.options\n    );\n  }\n\n  renderTimeAndApplicationHtml(notification: CdNotification): string {\n    return `<small class=\"date\">${this.cdDatePipe.transform(\n      notification.timestamp\n    )}</small><i class=\"float-end custom-icon ${notification.applicationClass}\" title=\"${\n      notification.application\n    }\"></i>`;\n  }\n\n  notifyTask(finishedTask: FinishedTask, success: boolean = true): number {\n    const notification = this.finishedTaskToNotification(finishedTask, success);\n    notification.isFinishedTask = true;\n    return this.show(notification);\n  }\n\n  finishedTaskToNotification(\n    finishedTask: FinishedTask,\n    success: boolean = true\n  ): CdNotificationConfig {\n    let notification: CdNotificationConfig;\n    if (finishedTask.success && success) {\n      notification = new CdNotificationConfig(\n        NotificationType.success,\n        this.taskMessageService.getSuccessTitle(finishedTask)\n      );\n    } else {\n      notification = new CdNotificationConfig(\n        NotificationType.error,\n        this.taskMessageService.getErrorTitle(finishedTask),\n        this.taskMessageService.getErrorMessage(finishedTask)\n      );\n    }\n    notification.isFinishedTask = true;\n\n    return notification;\n  }\n\n  /**\n   * Prevent the notification from being shown.\n   * @param {number} timeoutId A number representing the ID of the timeout to be canceled.\n   */\n  cancel(timeoutId: number) {\n    window.clearTimeout(timeoutId);\n  }\n\n  /**\n   * Suspend showing the notification toasties.\n   * @param {boolean} suspend Set to ``true`` to disable/hide toasties.\n   */\n  suspendToasties(suspend: boolean) {\n    this.hideToasties = suspend;\n  }\n\n  toggleSidebar(forceClose = false) {\n    this.sidebarSubject.next(forceClose);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SettingsService } from '../api/settings.service';\nimport { CdPwdPolicySettings } from '../models/cd-pwd-policy-settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordPolicyService {\n  constructor(private settingsService: SettingsService) {}\n\n  getHelpText(): Observable<string> {\n    return this.settingsService.getStandardSettings().pipe(\n      map((resp: { [key: string]: any }) => {\n        const settings = new CdPwdPolicySettings(resp);\n        let helpText: string[] = [];\n        if (settings.pwdPolicyEnabled) {\n          helpText.push($localize`Required rules for passwords:`);\n          const i18nHelp: { [key: string]: string } = {\n            pwdPolicyCheckLengthEnabled: $localize`Must contain at least ${settings.pwdPolicyMinLength} characters`,\n            pwdPolicyCheckOldpwdEnabled: $localize`Must not be the same as the previous one`,\n            pwdPolicyCheckUsernameEnabled: $localize`Cannot contain the username`,\n            pwdPolicyCheckExclusionListEnabled: $localize`Cannot contain any configured keyword`,\n            pwdPolicyCheckRepetitiveCharsEnabled: $localize`Cannot contain any repetitive characters e.g. \"aaa\"`,\n            pwdPolicyCheckSequentialCharsEnabled: $localize`Cannot contain any sequential characters e.g. \"abc\"`,\n            pwdPolicyCheckComplexityEnabled: $localize`Must consist of characters from the following groups:\n  * Alphabetic a-z, A-Z\n  * Numbers 0-9\n  * Special chars: !\"#$%& '()*+,-./:;<=>?@[\\\\]^_\\`{{|}}~\n  * Any other characters (signs)`\n          };\n          helpText = helpText.concat(\n            _.keys(i18nHelp)\n              .filter((key) => _.get(settings, key))\n              .map((key) => '- ' + _.get(i18nHelp, key))\n          );\n        }\n        return helpText.join('\\n');\n      })\n    );\n  }\n\n  /**\n   * Helper function to map password policy credits to a CSS class.\n   * @param credits The password policy credits.\n   * @return The name of the CSS class.\n   */\n  mapCreditsToCssClass(credits: number): string {\n    let result = 'very-strong';\n    if (credits < 10) {\n      result = 'too-weak';\n    } else if (credits < 15) {\n      result = 'weak';\n    } else if (credits < 20) {\n      result = 'ok';\n    } else if (credits < 25) {\n      result = 'strong';\n    }\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { Icons } from '../enum/icons.enum';\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { CdNotificationConfig } from '../models/cd-notification';\nimport {\n  AlertmanagerAlert,\n  AlertmanagerNotificationAlert,\n  PrometheusCustomAlert\n} from '../models/prometheus-alerts';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrometheusAlertFormatter {\n  constructor(private notificationService: NotificationService) {}\n\n  sendNotifications(notifications: CdNotificationConfig[]) {\n    notifications.forEach((n) => this.notificationService.show(n));\n  }\n\n  convertToCustomAlerts(\n    alerts: (AlertmanagerNotificationAlert | AlertmanagerAlert)[]\n  ): PrometheusCustomAlert[] {\n    return _.uniqWith(\n      alerts.map((alert) => {\n        return {\n          status: _.isObject(alert.status)\n            ? (alert as AlertmanagerAlert).status.state\n            : this.getPrometheusNotificationStatus(alert as AlertmanagerNotificationAlert),\n          name: alert.labels.alertname,\n          url: alert.generatorURL,\n          description: alert.annotations.description,\n          fingerprint: _.isObject(alert.status) && (alert as AlertmanagerAlert).fingerprint\n        };\n      }),\n      _.isEqual\n    ) as PrometheusCustomAlert[];\n  }\n\n  /*\n   * This is needed because NotificationAlerts don't use 'active'\n   */\n  private getPrometheusNotificationStatus(alert: AlertmanagerNotificationAlert): string {\n    const state = alert.status;\n    return state === 'firing' ? 'active' : state;\n  }\n\n  convertAlertToNotification(alert: PrometheusCustomAlert): CdNotificationConfig {\n    return new CdNotificationConfig(\n      this.formatType(alert.status),\n      `${alert.name} (${alert.status})`,\n      this.appendSourceLink(alert, alert.description),\n      undefined,\n      'Prometheus'\n    );\n  }\n\n  private formatType(status: string): NotificationType {\n    const types = {\n      error: ['firing', 'active'],\n      info: ['suppressed', 'unprocessed'],\n      success: ['resolved']\n    };\n    return NotificationType[_.findKey(types, (type) => type.includes(status))];\n  }\n\n  private appendSourceLink(alert: PrometheusCustomAlert, message: string): string {\n    return `${message} <a href=\"${alert.url}\" target=\"_blank\"><i class=\"${Icons.lineChart}\"></i></a>`;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { PrometheusService } from '../api/prometheus.service';\nimport {\n  AlertmanagerAlert,\n  PrometheusCustomAlert,\n  PrometheusRule\n} from '../models/prometheus-alerts';\nimport { PrometheusAlertFormatter } from './prometheus-alert-formatter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrometheusAlertService {\n  private canAlertsBeNotified = false;\n  alerts: AlertmanagerAlert[] = [];\n  rules: PrometheusRule[] = [];\n  activeAlerts: number;\n  activeCriticalAlerts: number;\n  activeWarningAlerts: number;\n\n  constructor(\n    private alertFormatter: PrometheusAlertFormatter,\n    private prometheusService: PrometheusService\n  ) {}\n\n  getAlerts() {\n    this.prometheusService.ifAlertmanagerConfigured(() => {\n      this.prometheusService.getAlerts().subscribe(\n        (alerts) => this.handleAlerts(alerts),\n        (resp) => {\n          if ([404, 504].includes(resp.status)) {\n            this.prometheusService.disableAlertmanagerConfig();\n          }\n        }\n      );\n    });\n  }\n\n  getRules() {\n    this.prometheusService.ifPrometheusConfigured(() => {\n      this.prometheusService.getRules('alerting').subscribe((groups) => {\n        this.rules = groups['groups'].reduce((acc, group) => {\n          return acc.concat(\n            group.rules.map((rule) => {\n              rule.group = group.name;\n              return rule;\n            })\n          );\n        }, []);\n      });\n    });\n  }\n\n  refresh() {\n    this.getAlerts();\n    this.getRules();\n  }\n\n  private handleAlerts(alerts: AlertmanagerAlert[]) {\n    if (this.canAlertsBeNotified) {\n      this.notifyOnAlertChanges(alerts, this.alerts);\n    }\n    this.activeAlerts = _.reduce<AlertmanagerAlert, number>(\n      this.alerts,\n      (result, alert) => (alert.status.state === 'active' ? ++result : result),\n      0\n    );\n    this.activeCriticalAlerts = _.reduce<AlertmanagerAlert, number>(\n      this.alerts,\n      (result, alert) =>\n        alert.status.state === 'active' && alert.labels.severity === 'critical' ? ++result : result,\n      0\n    );\n    this.activeWarningAlerts = _.reduce<AlertmanagerAlert, number>(\n      this.alerts,\n      (result, alert) =>\n        alert.status.state === 'active' && alert.labels.severity === 'warning' ? ++result : result,\n      0\n    );\n    this.alerts = alerts;\n    this.canAlertsBeNotified = true;\n  }\n\n  private notifyOnAlertChanges(alerts: AlertmanagerAlert[], oldAlerts: AlertmanagerAlert[]) {\n    const changedAlerts = this.getChangedAlerts(\n      this.alertFormatter.convertToCustomAlerts(alerts),\n      this.alertFormatter.convertToCustomAlerts(oldAlerts)\n    );\n    const suppressedFiltered = _.filter(changedAlerts, (alert) => {\n      return alert.status !== 'suppressed';\n    });\n    const notifications = suppressedFiltered.map((alert) =>\n      this.alertFormatter.convertAlertToNotification(alert)\n    );\n    this.alertFormatter.sendNotifications(notifications);\n  }\n\n  private getChangedAlerts(alerts: PrometheusCustomAlert[], oldAlerts: PrometheusCustomAlert[]) {\n    const updatedAndNew = _.differenceWith(alerts, oldAlerts, _.isEqual);\n    return updatedAndNew.concat(this.getVanishedAlerts(alerts, oldAlerts));\n  }\n\n  private getVanishedAlerts(alerts: PrometheusCustomAlert[], oldAlerts: PrometheusCustomAlert[]) {\n    return _.differenceWith(oldAlerts, alerts, (a, b) => a.fingerprint === b.fingerprint).map(\n      (alert) => {\n        alert.status = 'resolved';\n        return alert;\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { PrometheusService } from '../api/prometheus.service';\nimport { CdNotificationConfig } from '../models/cd-notification';\nimport { AlertmanagerNotification } from '../models/prometheus-alerts';\nimport { PrometheusAlertFormatter } from './prometheus-alert-formatter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrometheusNotificationService {\n  private notifications: AlertmanagerNotification[];\n  private backendFailure = false;\n\n  constructor(\n    private alertFormatter: PrometheusAlertFormatter,\n    private prometheusService: PrometheusService\n  ) {\n    this.notifications = [];\n  }\n\n  refresh() {\n    if (this.backendFailure) {\n      return;\n    }\n    this.prometheusService.getNotifications(_.last(this.notifications)).subscribe(\n      (notifications) => this.handleNotifications(notifications),\n      () => (this.backendFailure = true)\n    );\n  }\n\n  private handleNotifications(notifications: AlertmanagerNotification[]) {\n    if (notifications.length === 0) {\n      return;\n    }\n    if (this.notifications.length > 0) {\n      this.alertFormatter.sendNotifications(\n        _.flatten(notifications.map((notification) => this.formatNotification(notification)))\n      );\n    }\n    this.notifications = this.notifications.concat(notifications);\n  }\n\n  private formatNotification(notification: AlertmanagerNotification): CdNotificationConfig[] {\n    return this.alertFormatter\n      .convertToCustomAlerts(notification.alerts)\n      .map((alert) => this.alertFormatter.convertAlertToNotification(alert));\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport {\n  AlertmanagerSilenceMatcher,\n  AlertmanagerSilenceMatcherMatch\n} from '../models/alertmanager-silence';\nimport { PrometheusRule } from '../models/prometheus-alerts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrometheusSilenceMatcherService {\n  private valueAttributePath = {\n    alertname: 'name',\n    instance: 'alerts.0.labels.instance',\n    job: 'alerts.0.labels.job',\n    severity: 'labels.severity'\n  };\n\n  singleMatch(\n    matcher: AlertmanagerSilenceMatcher,\n    rules: PrometheusRule[]\n  ): AlertmanagerSilenceMatcherMatch {\n    return this.multiMatch([matcher], rules);\n  }\n\n  multiMatch(\n    matchers: AlertmanagerSilenceMatcher[],\n    rules: PrometheusRule[]\n  ): AlertmanagerSilenceMatcherMatch {\n    if (matchers.some((matcher) => matcher.isRegex)) {\n      return undefined;\n    }\n    matchers.forEach((matcher) => {\n      rules = this.getMatchedRules(matcher, rules);\n    });\n    return this.describeMatch(rules);\n  }\n\n  getMatchedRules(matcher: AlertmanagerSilenceMatcher, rules: PrometheusRule[]): PrometheusRule[] {\n    const attributePath = this.getAttributePath(matcher.name);\n    return rules.filter((r) => _.get(r, attributePath) === matcher.value);\n  }\n\n  private describeMatch(rules: PrometheusRule[]): AlertmanagerSilenceMatcherMatch {\n    let alerts = 0;\n    rules.forEach((r) => (alerts += r.alerts.length));\n    return {\n      status: this.getMatchText(rules.length, alerts),\n      cssClass: alerts ? 'has-success' : 'has-warning'\n    };\n  }\n\n  getAttributePath(name: string): string {\n    return this.valueAttributePath[name];\n  }\n\n  private getMatchText(rules: number, alerts: number): string {\n    const msg = {\n      noRule: $localize`Your matcher seems to match no currently defined rule or active alert.`,\n      noAlerts: $localize`no active alerts`,\n      alert: $localize`1 active alert`,\n      alerts: $localize`${alerts} active alerts`,\n      rule: $localize`Matches 1 rule`,\n      rules: $localize`Matches ${rules} rules`\n    };\n\n    const rule = rules > 1 ? msg.rules : msg.rule;\n    const alert = alerts ? (alerts > 1 ? msg.alerts : msg.alert) : msg.noAlerts;\n\n    return rules ? $localize`${rule} with ${alert}.` : msg.noRule;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  RbdConfigurationExtraField,\n  RbdConfigurationSection,\n  RbdConfigurationType\n} from '../models/configuration';\n\n/**\n * Define here which options should be made available under which section heading.\n * The display name and description needs to be added manually as long as Ceph does not provide\n * this information.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RbdConfigurationService {\n  readonly sections: RbdConfigurationSection[];\n\n  constructor() {\n    this.sections = [\n      {\n        heading: $localize`Quality of Service`,\n        class: 'quality-of-service',\n        options: [\n          {\n            name: 'rbd_qos_bps_limit',\n            displayName: $localize`BPS Limit`,\n            description: $localize`The desired limit of IO bytes per second.`,\n            type: RbdConfigurationType.bps\n          },\n          {\n            name: 'rbd_qos_iops_limit',\n            displayName: $localize`IOPS Limit`,\n            description: $localize`The desired limit of IO operations per second.`,\n            type: RbdConfigurationType.iops\n          },\n          {\n            name: 'rbd_qos_read_bps_limit',\n            displayName: $localize`Read BPS Limit`,\n            description: $localize`The desired limit of read bytes per second.`,\n            type: RbdConfigurationType.bps\n          },\n          {\n            name: 'rbd_qos_read_iops_limit',\n            displayName: $localize`Read IOPS Limit`,\n            description: $localize`The desired limit of read operations per second.`,\n            type: RbdConfigurationType.iops\n          },\n          {\n            name: 'rbd_qos_write_bps_limit',\n            displayName: $localize`Write BPS Limit`,\n            description: $localize`The desired limit of write bytes per second.`,\n            type: RbdConfigurationType.bps\n          },\n          {\n            name: 'rbd_qos_write_iops_limit',\n            displayName: $localize`Write IOPS Limit`,\n            description: $localize`The desired limit of write operations per second.`,\n            type: RbdConfigurationType.iops\n          },\n          {\n            name: 'rbd_qos_bps_burst',\n            displayName: $localize`BPS Burst`,\n            description: $localize`The desired burst limit of IO bytes.`,\n            type: RbdConfigurationType.bps\n          },\n          {\n            name: 'rbd_qos_iops_burst',\n            displayName: $localize`IOPS Burst`,\n            description: $localize`The desired burst limit of IO operations.`,\n            type: RbdConfigurationType.iops\n          },\n          {\n            name: 'rbd_qos_read_bps_burst',\n            displayName: $localize`Read BPS Burst`,\n            description: $localize`The desired burst limit of read bytes.`,\n            type: RbdConfigurationType.bps\n          },\n          {\n            name: 'rbd_qos_read_iops_burst',\n            displayName: $localize`Read IOPS Burst`,\n            description: $localize`The desired burst limit of read operations.`,\n            type: RbdConfigurationType.iops\n          },\n          {\n            name: 'rbd_qos_write_bps_burst',\n            displayName: $localize`Write BPS Burst`,\n            description: $localize`The desired burst limit of write bytes.`,\n            type: RbdConfigurationType.bps\n          },\n          {\n            name: 'rbd_qos_write_iops_burst',\n            displayName: $localize`Write IOPS Burst`,\n            description: $localize`The desired burst limit of write operations.`,\n            type: RbdConfigurationType.iops\n          }\n        ] as RbdConfigurationExtraField[]\n      }\n    ];\n  }\n\n  private static getOptionsFromSections(sections: RbdConfigurationSection[]) {\n    return sections.map((section) => section.options).reduce((a, b) => a.concat(b));\n  }\n\n  private filterConfigOptionsByName(configName: string) {\n    return RbdConfigurationService.getOptionsFromSections(this.sections).filter(\n      (option) => option.name === configName\n    );\n  }\n\n  private getOptionValueByName(configName: string, fieldName: string, defaultValue = '') {\n    const configOptions = this.filterConfigOptionsByName(configName);\n    return configOptions.length === 1 ? configOptions.pop()[fieldName] : defaultValue;\n  }\n\n  getWritableSections() {\n    return this.sections.map((section) => {\n      section.options = section.options.filter((o) => !o.readOnly);\n      return section;\n    });\n  }\n\n  getOptionFields() {\n    return RbdConfigurationService.getOptionsFromSections(this.sections);\n  }\n\n  getWritableOptionFields() {\n    return RbdConfigurationService.getOptionsFromSections(this.getWritableSections());\n  }\n\n  getOptionByName(optionName: string): RbdConfigurationExtraField {\n    return this.filterConfigOptionsByName(optionName).pop();\n  }\n\n  getDisplayName(configName: string): string {\n    return this.getOptionValueByName(configName, 'displayName');\n  }\n\n  getDescription(configName: string): string {\n    return this.getOptionValueByName(configName, 'description');\n  }\n}\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\n\nimport { BehaviorSubject, interval, Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RefreshIntervalService implements OnDestroy {\n  private intervalTime: number;\n  // Observable sources\n  private intervalDataSource = new BehaviorSubject(null);\n  private intervalSubscription: Subscription;\n  // Observable streams\n  intervalData$ = this.intervalDataSource.asObservable();\n\n  constructor(private ngZone: NgZone) {\n    const initialInterval = parseInt(sessionStorage.getItem('dashboard_interval'), 10) || 5000;\n    this.setRefreshInterval(initialInterval);\n  }\n\n  setRefreshInterval(newInterval: number) {\n    this.intervalTime = newInterval;\n    sessionStorage.setItem('dashboard_interval', newInterval.toString());\n\n    if (this.intervalSubscription) {\n      this.intervalSubscription.unsubscribe();\n    }\n    this.ngZone.runOutsideAngular(() => {\n      this.intervalSubscription = interval(this.intervalTime).subscribe(() =>\n        this.ngZone.run(() => {\n          this.intervalDataSource.next(this.intervalTime);\n        })\n      );\n    });\n  }\n\n  getRefreshInterval() {\n    return this.intervalTime;\n  }\n\n  ngOnDestroy() {\n    if (this.intervalSubscription) {\n      this.intervalSubscription.unsubscribe();\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { ExecutingTask } from '../models/executing-task';\nimport { Summary } from '../models/summary.model';\nimport { TimerService } from './timer.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SummaryService {\n  readonly REFRESH_INTERVAL = 5000;\n  // Observable sources\n  private summaryDataSource = new BehaviorSubject<Summary>(null);\n  // Observable streams\n  summaryData$ = this.summaryDataSource.asObservable();\n\n  constructor(private http: HttpClient, private timerService: TimerService) {}\n\n  startPolling(): Subscription {\n    return this.timerService\n      .get(() => this.retrieveSummaryObservable(), this.REFRESH_INTERVAL)\n      .subscribe(this.retrieveSummaryObserver());\n  }\n\n  refresh(): Subscription {\n    return this.retrieveSummaryObservable().subscribe(this.retrieveSummaryObserver());\n  }\n\n  private retrieveSummaryObservable(): Observable<Summary> {\n    return this.http.get<Summary>('api/summary');\n  }\n\n  private retrieveSummaryObserver(): (data: Summary) => void {\n    return (data: Summary) => {\n      this.summaryDataSource.next(data);\n    };\n  }\n\n  /**\n   * Subscribes to the summaryData and receive only the first, non undefined, value.\n   */\n  subscribeOnce(next: (summary: Summary) => void, error?: (error: any) => void): Subscription {\n    return this.summaryData$\n      .pipe(\n        filter((value) => !!value),\n        first()\n      )\n      .subscribe(next, error);\n  }\n\n  /**\n   * Subscribes to the summaryData,\n   * which is updated periodically or when a new task is created.\n   * Will receive only non undefined values.\n   */\n  subscribe(next: (summary: Summary) => void, error?: (error: any) => void): Subscription {\n    return this.summaryData$.pipe(filter((value) => !!value)).subscribe(next, error);\n  }\n\n  /**\n   * Inserts a newly created task to the local list of executing tasks.\n   * After that, it will automatically push that new information\n   * to all subscribers.\n   */\n  addRunningTask(task: ExecutingTask) {\n    const current = this.summaryDataSource.getValue();\n    if (!current) {\n      return;\n    }\n\n    if (_.isArray(current.executing_tasks)) {\n      const exists = current.executing_tasks.find((element: any) => {\n        return element.name === task.name && _.isEqual(element.metadata, task.metadata);\n      });\n      if (!exists) {\n        current.executing_tasks.push(task);\n      }\n    } else {\n      current.executing_tasks = [task];\n    }\n\n    this.summaryDataSource.next(current);\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { Observable, Subscription } from 'rxjs';\n\nimport { ExecutingTask } from '../models/executing-task';\nimport { Summary } from '../models/summary.model';\nimport { SummaryService } from './summary.service';\nimport { TaskMessageService } from './task-message.service';\n\n@Injectable()\nexport class TaskListService implements OnDestroy {\n  summaryDataSubscription: Subscription;\n\n  getUpdate: (context?: any) => Observable<object>;\n  preProcessing: (_: any) => any[];\n  setList: (_: any[]) => void;\n  onFetchError: (error: any) => void;\n  taskFilter: (task: ExecutingTask) => boolean;\n  itemFilter: (item: any, task: ExecutingTask) => boolean;\n  builders: object;\n  summary: Summary;\n\n  constructor(\n    private taskMessageService: TaskMessageService,\n    private summaryService: SummaryService\n  ) {}\n\n  /**\n   * @param {() => Observable<object>} getUpdate Method that calls the api and\n   * returns that without subscribing.\n   * @param {(_: any) => any[]} preProcessing Method executed before merging\n   * Tasks with Items\n   * @param {(_: any[]) => void} setList  Method used to update array of item in the component.\n   * @param {(error: any) => void} onFetchError Method called when there were\n   * problems while fetching data.\n   * @param {(task: ExecutingTask) => boolean} taskFilter callback used in tasks_array.filter()\n   * @param {(item, task: ExecutingTask) => boolean} itemFilter callback used in\n   * items_array.filter()\n   * @param {object} builders\n   * object with builders for each type of task.\n   * You can also use a 'default' one.\n   * @memberof TaskListService\n   */\n  init(\n    getUpdate: (context?: any) => Observable<object>,\n    preProcessing: (_: any) => any[],\n    setList: (_: any[]) => void,\n    onFetchError: (error: any) => void,\n    taskFilter: (task: ExecutingTask) => boolean,\n    itemFilter: (item: any, task: ExecutingTask) => boolean,\n    builders: object\n  ) {\n    this.getUpdate = getUpdate;\n    this.preProcessing = preProcessing;\n    this.setList = setList;\n    this.onFetchError = onFetchError;\n    this.taskFilter = taskFilter;\n    this.itemFilter = itemFilter;\n    this.builders = builders || {};\n\n    this.summaryDataSubscription = this.summaryService.subscribe((summary) => {\n      this.summary = summary;\n      this.fetch();\n    }, this.onFetchError);\n  }\n\n  fetch(context: any = null) {\n    this.getUpdate(context).subscribe((resp: any) => {\n      this.updateData(resp, this.summary?.['executing_tasks'].filter(this.taskFilter));\n    }, this.onFetchError);\n  }\n\n  private updateData(resp: any, tasks: ExecutingTask[]) {\n    const data: any[] = this.preProcessing ? this.preProcessing(resp) : resp;\n    this.addMissing(data, tasks);\n    data.forEach((item) => {\n      const executingTasks = tasks.filter((task) => this.itemFilter(item, task));\n      item.cdExecuting = this.getTaskAction(executingTasks);\n    });\n    this.setList(data);\n  }\n\n  private addMissing(data: any[], tasks: ExecutingTask[]) {\n    const defaultBuilder = this.builders['default'];\n    tasks?.forEach((task) => {\n      const existing = data.find((item) => this.itemFilter(item, task));\n      const builder = this.builders[task.name];\n      if (!existing && (builder || defaultBuilder)) {\n        data.push(builder ? builder(task.metadata) : defaultBuilder(task.metadata));\n      }\n    });\n  }\n\n  private getTaskAction(tasks: ExecutingTask[]): string {\n    if (tasks.length === 0) {\n      return undefined;\n    }\n    return tasks\n      .map((task) => {\n        const progress = task.progress ? ` ${task.progress}%` : '';\n        return this.taskMessageService.getRunningText(task) + '...' + progress;\n      })\n      .join(', ');\n  }\n\n  ngOnDestroy() {\n    if (this.summaryDataSubscription) {\n      this.summaryDataSubscription.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { ExecutingTask } from '../models/executing-task';\nimport { FinishedTask } from '../models/finished-task';\nimport { Task } from '../models/task';\nimport { SummaryService } from './summary.service';\n\nclass TaskSubscription {\n  name: string;\n  metadata: object;\n  onTaskFinished: (finishedTask: FinishedTask) => any;\n\n  constructor(name: string, metadata: object, onTaskFinished: any) {\n    this.name = name;\n    this.metadata = metadata;\n    this.onTaskFinished = onTaskFinished;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskManagerService {\n  subscriptions: Array<TaskSubscription> = [];\n\n  init(summaryService: SummaryService) {\n    return summaryService.subscribe((summary) => {\n      const executingTasks = summary.executing_tasks;\n      const finishedTasks = summary.finished_tasks;\n      const newSubscriptions: Array<TaskSubscription> = [];\n      for (const subscription of this.subscriptions) {\n        const finishedTask = <FinishedTask>this._getTask(subscription, finishedTasks);\n        const executingTask = <ExecutingTask>this._getTask(subscription, executingTasks);\n        if (finishedTask !== null && executingTask === null) {\n          subscription.onTaskFinished(finishedTask);\n        }\n        if (executingTask !== null) {\n          newSubscriptions.push(subscription);\n        }\n        this.subscriptions = newSubscriptions;\n      }\n    });\n  }\n\n  subscribe(name: string, metadata: object, onTaskFinished: (finishedTask: FinishedTask) => any) {\n    this.subscriptions.push(new TaskSubscription(name, metadata, onTaskFinished));\n  }\n\n  private _getTask(subscription: TaskSubscription, tasks: Array<Task>): Task {\n    for (const task of tasks) {\n      if (task.name === subscription.name && _.isEqual(task.metadata, subscription.metadata)) {\n        return task;\n      }\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Components } from '../enum/components.enum';\nimport { FinishedTask } from '../models/finished-task';\nimport { ImageSpec } from '../models/image-spec';\nimport { Task } from '../models/task';\n\nexport class TaskMessageOperation {\n  running: string;\n  failure: string;\n  success: string;\n\n  constructor(running: string, failure: string, success: string) {\n    this.running = running;\n    this.failure = failure;\n    this.success = success;\n  }\n}\n\nclass TaskMessage {\n  operation: TaskMessageOperation;\n  involves: (object: any) => string;\n  errors: (metadata: any) => object;\n\n  failure(metadata: any): string {\n    return $localize`Failed to ${this.operation.failure} ${this.involves(metadata)}`;\n  }\n\n  running(metadata: any): string {\n    return `${this.operation.running} ${this.involves(metadata)}`;\n  }\n\n  success(metadata: any): string {\n    return `${this.operation.success} ${this.involves(metadata)}`;\n  }\n\n  constructor(\n    operation: TaskMessageOperation,\n    involves: (metadata: any) => string,\n    errors?: (metadata: any) => object\n  ) {\n    this.operation = operation;\n    this.involves = involves;\n    this.errors = errors || (() => ({}));\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskMessageService {\n  defaultMessage = this.newTaskMessage(\n    new TaskMessageOperation($localize`Executing`, $localize`execute`, $localize`Executed`),\n    (metadata) => {\n      return (\n        (metadata && (Components[metadata.component] || metadata.component)) ||\n        $localize`unknown task`\n      );\n    },\n    () => {\n      return {};\n    }\n  );\n\n  commonOperations = {\n    create: new TaskMessageOperation($localize`Creating`, $localize`create`, $localize`Created`),\n    update: new TaskMessageOperation($localize`Updating`, $localize`update`, $localize`Updated`),\n    delete: new TaskMessageOperation($localize`Deleting`, $localize`delete`, $localize`Deleted`),\n    add: new TaskMessageOperation($localize`Adding`, $localize`add`, $localize`Added`),\n    remove: new TaskMessageOperation($localize`Removing`, $localize`remove`, $localize`Removed`),\n    import: new TaskMessageOperation($localize`Importing`, $localize`import`, $localize`Imported`)\n  };\n\n  rbd = {\n    default: (metadata: any) => $localize`RBD '${metadata.image_spec}'`,\n    create: (metadata: any) => {\n      const id = new ImageSpec(\n        metadata.pool_name,\n        metadata.namespace,\n        metadata.image_name\n      ).toString();\n      return $localize`RBD '${id}'`;\n    },\n    child: (metadata: any) => {\n      const id = new ImageSpec(\n        metadata.child_pool_name,\n        metadata.child_namespace,\n        metadata.child_image_name\n      ).toString();\n      return $localize`RBD '${id}'`;\n    },\n    destination: (metadata: any) => {\n      const id = new ImageSpec(\n        metadata.dest_pool_name,\n        metadata.dest_namespace,\n        metadata.dest_image_name\n      ).toString();\n      return $localize`RBD '${id}'`;\n    },\n    snapshot: (metadata: any) =>\n      $localize`RBD snapshot '${metadata.image_spec}@${metadata.snapshot_name}'`\n  };\n\n  rbd_mirroring = {\n    site_name: () => $localize`mirroring site name`,\n    bootstrap: () => $localize`bootstrap token`,\n    pool: (metadata: any) => $localize`mirror mode for pool '${metadata.pool_name}'`,\n    pool_peer: (metadata: any) => $localize`mirror peer for pool '${metadata.pool_name}'`\n  };\n\n  grafana = {\n    update_dashboards: () => $localize`all dashboards`\n  };\n\n  messages = {\n    // Host tasks\n    'host/add': this.newTaskMessage(this.commonOperations.add, (metadata) => this.host(metadata)),\n    'host/remove': this.newTaskMessage(this.commonOperations.remove, (metadata) =>\n      this.host(metadata)\n    ),\n    'host/identify_device': this.newTaskMessage(\n      new TaskMessageOperation($localize`Identifying`, $localize`identify`, $localize`Identified`),\n      (metadata) => $localize`device '${metadata.device}' on host '${metadata.hostname}'`\n    ),\n    // OSD tasks\n    'osd/create': this.newTaskMessage(\n      this.commonOperations.create,\n      (metadata) => $localize`OSDs (DriveGroups: ${metadata.tracking_id})`\n    ),\n    'osd/delete': this.newTaskMessage(this.commonOperations.delete, (metadata) =>\n      this.osd(metadata)\n    ),\n    // Pool tasks\n    'pool/create': this.newTaskMessage(\n      this.commonOperations.create,\n      (metadata) => this.pool(metadata),\n      (metadata) => ({\n        '17': $localize`Name is already used by ${this.pool(metadata)}.`\n      })\n    ),\n    'pool/edit': this.newTaskMessage(\n      this.commonOperations.update,\n      (metadata) => this.pool(metadata),\n      (metadata) => ({\n        '17': $localize`Name is already used by ${this.pool(metadata)}.`\n      })\n    ),\n    'pool/delete': this.newTaskMessage(this.commonOperations.delete, (metadata) =>\n      this.pool(metadata)\n    ),\n    // Erasure code profile tasks\n    'ecp/create': this.newTaskMessage(\n      this.commonOperations.create,\n      (metadata) => this.ecp(metadata),\n      (metadata) => ({\n        '17': $localize`Name is already used by ${this.ecp(metadata)}.`\n      })\n    ),\n    'ecp/delete': this.newTaskMessage(this.commonOperations.delete, (metadata) =>\n      this.ecp(metadata)\n    ),\n    // Crush rule tasks\n    'crushRule/create': this.newTaskMessage(\n      this.commonOperations.create,\n      (metadata) => this.crushRule(metadata),\n      (metadata) => ({\n        '17': $localize`Name is already used by ${this.crushRule(metadata)}.`\n      })\n    ),\n    'crushRule/delete': this.newTaskMessage(this.commonOperations.delete, (metadata) =>\n      this.crushRule(metadata)\n    ),\n    // RBD tasks\n    'rbd/create': this.newTaskMessage(\n      this.commonOperations.create,\n      this.rbd.create,\n      (metadata) => ({\n        '17': $localize`Name is already used by ${this.rbd.create(metadata)}.`\n      })\n    ),\n    'rbd/edit': this.newTaskMessage(this.commonOperations.update, this.rbd.default, (metadata) => ({\n      '17': $localize`Name is already used by ${this.rbd.default(metadata)}.`\n    })),\n    'rbd/delete': this.newTaskMessage(\n      this.commonOperations.delete,\n      this.rbd.default,\n      (metadata) => ({\n        '16': $localize`${this.rbd.default(metadata)} is busy.`,\n        '39': $localize`${this.rbd.default(metadata)} contains snapshots.`\n      })\n    ),\n    'rbd/clone': this.newTaskMessage(\n      new TaskMessageOperation($localize`Cloning`, $localize`clone`, $localize`Cloned`),\n      this.rbd.child,\n      (metadata) => ({\n        '17': $localize`Name is already used by ${this.rbd.child(metadata)}.`,\n        '22': $localize`Snapshot of ${this.rbd.child(metadata)} must be protected.`\n      })\n    ),\n    'rbd/copy': this.newTaskMessage(\n      new TaskMessageOperation($localize`Copying`, $localize`copy`, $localize`Copied`),\n      this.rbd.destination,\n      (metadata) => ({\n        '17': $localize`Name is already used by ${this.rbd.destination(metadata)}.`\n      })\n    ),\n    'rbd/flatten': this.newTaskMessage(\n      new TaskMessageOperation($localize`Flattening`, $localize`flatten`, $localize`Flattened`),\n      this.rbd.default\n    ),\n    // RBD snapshot tasks\n    'rbd/snap/create': this.newTaskMessage(\n      this.commonOperations.create,\n      this.rbd.snapshot,\n      (metadata) => ({\n        '17': $localize`Name is already used by ${this.rbd.snapshot(metadata)}.`\n      })\n    ),\n    'rbd/snap/edit': this.newTaskMessage(\n      this.commonOperations.update,\n      this.rbd.snapshot,\n      (metadata) => ({\n        '16': $localize`Cannot unprotect ${this.rbd.snapshot(\n          metadata\n        )} because it contains child images.`\n      })\n    ),\n    'rbd/snap/delete': this.newTaskMessage(\n      this.commonOperations.delete,\n      this.rbd.snapshot,\n      (metadata) => ({\n        '16': $localize`Cannot delete ${this.rbd.snapshot(metadata)} because it's protected.`\n      })\n    ),\n    'rbd/snap/rollback': this.newTaskMessage(\n      new TaskMessageOperation(\n        $localize`Rolling back`,\n        $localize`rollback`,\n        $localize`Rolled back`\n      ),\n      this.rbd.snapshot\n    ),\n    // RBD trash tasks\n    'rbd/trash/move': this.newTaskMessage(\n      new TaskMessageOperation($localize`Moving`, $localize`move`, $localize`Moved`),\n      (metadata) => $localize`image '${metadata.image_spec}' to trash`,\n      () => ({\n        2: $localize`Could not find image.`\n      })\n    ),\n    'rbd/trash/restore': this.newTaskMessage(\n      new TaskMessageOperation($localize`Restoring`, $localize`restore`, $localize`Restored`),\n      (metadata) => $localize`image '${metadata.image_id_spec}' into '${metadata.new_image_name}'`,\n      (metadata) => ({\n        17: $localize`Image name '${metadata.new_image_name}' is already in use.`\n      })\n    ),\n    'rbd/trash/remove': this.newTaskMessage(\n      new TaskMessageOperation($localize`Deleting`, $localize`delete`, $localize`Deleted`),\n      (metadata) => $localize`image '${metadata.image_id_spec}'`\n    ),\n    'rbd/trash/purge': this.newTaskMessage(\n      new TaskMessageOperation($localize`Purging`, $localize`purge`, $localize`Purged`),\n      (metadata) => {\n        let message = $localize`all pools`;\n        if (metadata.pool_name) {\n          message = `'${metadata.pool_name}'`;\n        }\n        return $localize`images from ${message}`;\n      }\n    ),\n    // RBD mirroring tasks\n    'rbd/mirroring/site_name/edit': this.newTaskMessage(\n      this.commonOperations.update,\n      this.rbd_mirroring.site_name,\n      () => ({})\n    ),\n    'rbd/mirroring/bootstrap/create': this.newTaskMessage(\n      this.commonOperations.create,\n      this.rbd_mirroring.bootstrap,\n      () => ({})\n    ),\n    'rbd/mirroring/bootstrap/import': this.newTaskMessage(\n      this.commonOperations.import,\n      this.rbd_mirroring.bootstrap,\n      () => ({})\n    ),\n    'rbd/mirroring/pool/edit': this.newTaskMessage(\n      this.commonOperations.update,\n      this.rbd_mirroring.pool,\n      () => ({\n        16: $localize`Cannot disable mirroring because it contains a peer.`\n      })\n    ),\n    'rbd/mirroring/peer/add': this.newTaskMessage(\n      this.commonOperations.create,\n      this.rbd_mirroring.pool_peer,\n      () => ({})\n    ),\n    'rbd/mirroring/peer/edit': this.newTaskMessage(\n      this.commonOperations.update,\n      this.rbd_mirroring.pool_peer,\n      () => ({})\n    ),\n    'rbd/mirroring/peer/delete': this.newTaskMessage(\n      this.commonOperations.delete,\n      this.rbd_mirroring.pool_peer,\n      () => ({})\n    ),\n    // iSCSI target tasks\n    'iscsi/target/create': this.newTaskMessage(this.commonOperations.create, (metadata) =>\n      this.iscsiTarget(metadata)\n    ),\n    'iscsi/target/edit': this.newTaskMessage(this.commonOperations.update, (metadata) =>\n      this.iscsiTarget(metadata)\n    ),\n    'iscsi/target/delete': this.newTaskMessage(this.commonOperations.delete, (metadata) =>\n      this.iscsiTarget(metadata)\n    ),\n    'nfs/create': this.newTaskMessage(this.commonOperations.create, (metadata) =>\n      this.nfs(metadata)\n    ),\n    'nfs/edit': this.newTaskMessage(this.commonOperations.update, (metadata) => this.nfs(metadata)),\n    'nfs/delete': this.newTaskMessage(this.commonOperations.delete, (metadata) =>\n      this.nfs(metadata)\n    ),\n    // Grafana tasks\n    'grafana/dashboards/update': this.newTaskMessage(\n      this.commonOperations.update,\n      this.grafana.update_dashboards,\n      () => ({})\n    ),\n    // Service tasks\n    'service/create': this.newTaskMessage(this.commonOperations.create, (metadata) =>\n      this.service(metadata)\n    ),\n    'service/edit': this.newTaskMessage(this.commonOperations.update, (metadata) =>\n      this.service(metadata)\n    ),\n    'service/delete': this.newTaskMessage(this.commonOperations.delete, (metadata) =>\n      this.service(metadata)\n    )\n  };\n\n  newTaskMessage(\n    operation: TaskMessageOperation,\n    involves: (metadata: any) => string,\n    errors?: (metadata: any) => object\n  ) {\n    return new TaskMessage(operation, involves, errors);\n  }\n\n  host(metadata: any) {\n    return $localize`host '${metadata.hostname}'`;\n  }\n\n  osd(metadata: any) {\n    return $localize`OSD '${metadata.svc_id}'`;\n  }\n\n  pool(metadata: any) {\n    return $localize`pool '${metadata.pool_name}'`;\n  }\n\n  ecp(metadata: any) {\n    return $localize`erasure code profile '${metadata.name}'`;\n  }\n\n  crushRule(metadata: any) {\n    return $localize`crush rule '${metadata.name}'`;\n  }\n\n  iscsiTarget(metadata: any) {\n    return $localize`target '${metadata.target_iqn}'`;\n  }\n\n  nfs(metadata: any) {\n    return $localize`NFS '${metadata.cluster_id}\\:${\n      metadata.export_id ? metadata.export_id : metadata.path\n    }'`;\n  }\n\n  service(metadata: any) {\n    return $localize`Service '${metadata.service_name}'`;\n  }\n\n  _getTaskTitle(task: Task) {\n    if (task.name && task.name.startsWith('progress/')) {\n      // we don't fill the failure string because, at least for now, all\n      // progress module tasks will be considered successful\n      return this.newTaskMessage(\n        new TaskMessageOperation(\n          task.name.replace('progress/', ''),\n          '',\n          task.name.replace('progress/', '')\n        ),\n        (_metadata) => ''\n      );\n    }\n    return this.messages[task.name] || this.defaultMessage;\n  }\n\n  getSuccessTitle(task: FinishedTask) {\n    return this._getTaskTitle(task).success(task.metadata);\n  }\n\n  getErrorMessage(task: FinishedTask) {\n    return (\n      this._getTaskTitle(task).errors(task.metadata)[task.exception.code] || task.exception.detail\n    );\n  }\n\n  getErrorTitle(task: Task) {\n    return this._getTaskTitle(task).failure(task.metadata);\n  }\n\n  getRunningTitle(task: Task) {\n    return this._getTaskTitle(task).running(task.metadata);\n  }\n\n  getRunningText(task: Task) {\n    return this._getTaskTitle(task).operation.running;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subscriber } from 'rxjs';\n\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { CdNotificationConfig } from '../models/cd-notification';\nimport { ExecutingTask } from '../models/executing-task';\nimport { FinishedTask } from '../models/finished-task';\nimport { NotificationService } from './notification.service';\nimport { SummaryService } from './summary.service';\nimport { TaskManagerService } from './task-manager.service';\nimport { TaskMessageService } from './task-message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskWrapperService {\n  constructor(\n    private notificationService: NotificationService,\n    private summaryService: SummaryService,\n    private taskMessageService: TaskMessageService,\n    private taskManagerService: TaskManagerService\n  ) {}\n\n  wrapTaskAroundCall({ task, call }: { task: FinishedTask; call: Observable<any> }) {\n    return new Observable((observer: Subscriber<any>) => {\n      call.subscribe(\n        (resp) => {\n          if (resp.status === 202) {\n            this._handleExecutingTasks(task);\n          } else {\n            this.summaryService.refresh();\n            task.success = true;\n            this.notificationService.notifyTask(task);\n          }\n        },\n        (resp) => {\n          task.success = false;\n          task.exception = resp.error;\n          observer.error(resp);\n        },\n        () => {\n          observer.complete();\n        }\n      );\n    });\n  }\n\n  _handleExecutingTasks(task: FinishedTask) {\n    const notification = new CdNotificationConfig(\n      NotificationType.info,\n      this.taskMessageService.getRunningTitle(task)\n    );\n    notification.isFinishedTask = true;\n    this.notificationService.show(notification);\n\n    const executingTask = new ExecutingTask(task.name, task.metadata);\n    this.summaryService.addRunningTask(executingTask);\n\n    this.taskManagerService.subscribe(\n      executingTask.name,\n      executingTask.metadata,\n      (asyncTask: FinishedTask) => {\n        this.notificationService.notifyTask(asyncTask);\n      }\n    );\n  }\n}\n","import { EventEmitter, Injectable, Output } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelemetryNotificationService {\n  visible = false;\n\n  @Output()\n  update: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  setVisibility(visible: boolean) {\n    this.visible = visible;\n    this.update.emit(visible);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { saveAs } from 'file-saver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TextToDownloadService {\n  download(downloadText: string, filename?: string) {\n    saveAs(new Blob([downloadText]), filename);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeDiffService {\n  calculateDuration(startDate: Date, endDate: Date): string {\n    const startTime = +startDate;\n    const endTime = +endDate;\n    const duration = this.getDuration(Math.abs(startTime - endTime));\n    if (startTime > endTime) {\n      return '-' + duration;\n    }\n    return duration;\n  }\n\n  /**\n   * Get the duration in the format '[Nd] [Nh] [Nm]', e.g. '2d 1h 15m'.\n   * @param ms The time in milliseconds.\n   * @return The duration. An empty string is returned if the duration is\n   *   less than a minute.\n   */\n  private getDuration(ms: number): string {\n    const date = new Date(ms);\n    const h = date.getUTCHours();\n    const m = date.getUTCMinutes();\n    const d = Math.floor(ms / (24 * 3600 * 1000));\n\n    const format = (n: number, s: string) => (n ? n + s : n);\n    return [format(d, 'd'), format(h, 'h'), format(m, 'm')].filter((x) => x).join(' ');\n  }\n\n  calculateDate(date: Date, duration: string, reverse?: boolean): Date {\n    const time = +date;\n    if (_.isNaN(time)) {\n      return undefined;\n    }\n    const diff = this.getDurationMs(duration) * (reverse ? -1 : 1);\n    return new Date(time + diff);\n  }\n\n  private getDurationMs(duration: string): number {\n    const d = this.getNumbersFromString(duration, 'd');\n    const h = this.getNumbersFromString(duration, 'h');\n    const m = this.getNumbersFromString(duration, 'm');\n    return ((d * 24 + h) * 60 + m) * 60000;\n  }\n\n  private getNumbersFromString(duration: string, prefix: string): number {\n    const match = duration.match(new RegExp(`[0-9 ]+${prefix}`, 'i'));\n    return match ? parseInt(match[0], 10) : 0;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, timer } from 'rxjs';\nimport { observeOn, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { whenPageVisible } from '../rxjs/operators/page-visibilty.operator';\nimport { NgZoneSchedulerService } from './ngzone-scheduler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n  readonly DEFAULT_REFRESH_INTERVAL = 5000;\n  readonly DEFAULT_DUE_TIME = 0;\n  constructor(private ngZone: NgZoneSchedulerService) {}\n\n  get(\n    next: () => Observable<any>,\n    refreshInterval: number = this.DEFAULT_REFRESH_INTERVAL,\n    dueTime: number = this.DEFAULT_DUE_TIME\n  ): Observable<any> {\n    return timer(dueTime, refreshInterval, this.ngZone.leave).pipe(\n      observeOn(this.ngZone.enter),\n      switchMap(next),\n      shareReplay({ refCount: true, bufferSize: 1 }),\n      whenPageVisible()\n    );\n  }\n}\n","import { Location } from '@angular/common';\n\nimport { URLVerbs } from '../constants/app.constants';\n\nexport class URLBuilderService {\n  constructor(readonly base: string) {}\n\n  private static concatURLSegments(segments: string[]): string {\n    return segments.reduce(Location.joinWithSlash);\n  }\n\n  static buildURL(absolute: boolean, ...segments: string[]): string {\n    return URLBuilderService.concatURLSegments([...(absolute ? ['/'] : []), ...segments]);\n  }\n\n  private getURL(verb: URLVerbs, absolute = true, ...segments: string[]): string {\n    return URLBuilderService.buildURL(absolute, this.base, verb, ...segments);\n  }\n\n  getCreate(absolute = true): string {\n    return this.getURL(URLVerbs.CREATE, absolute);\n  }\n\n  getCreateFrom(item: string, absolute = true): string {\n    return this.getURL(URLVerbs.CREATE, absolute, item);\n  }\n\n  getDelete(absolute = true): string {\n    return this.getURL(URLVerbs.DELETE, absolute);\n  }\n\n  getEdit(item: string, absolute = true): string {\n    return this.getURL(URLVerbs.EDIT, absolute, item);\n  }\n  getUpdate(item: string, absolute = true): string {\n    return this.getURL(URLVerbs.UPDATE, absolute, item);\n  }\n\n  getAdd(absolute = true): string {\n    return this.getURL(URLVerbs.ADD, absolute);\n  }\n  getRemove(absolute = true): string {\n    return this.getURL(URLVerbs.REMOVE, absolute);\n  }\n\n  // Prometheus wording\n  getRecreate(item: string, absolute = true): string {\n    return this.getURL(URLVerbs.RECREATE, absolute, item);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { WizardStepModel } from '~/app/shared/models/wizard-steps';\n\nconst initialStep = [{ stepIndex: 1, isComplete: false }];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WizardStepsService {\n  steps$: BehaviorSubject<WizardStepModel[]>;\n  currentStep$: BehaviorSubject<WizardStepModel> = new BehaviorSubject<WizardStepModel>(null);\n\n  constructor() {\n    this.steps$ = new BehaviorSubject<WizardStepModel[]>(initialStep);\n    this.currentStep$.next(this.steps$.value[0]);\n  }\n\n  setTotalSteps(step: number) {\n    const steps: WizardStepModel[] = [];\n    for (let i = 1; i <= step; i++) {\n      steps.push({ stepIndex: i, isComplete: false });\n    }\n    this.steps$ = new BehaviorSubject<WizardStepModel[]>(steps);\n  }\n\n  setCurrentStep(step: WizardStepModel): void {\n    this.currentStep$.next(step);\n  }\n\n  getCurrentStep(): Observable<WizardStepModel> {\n    return this.currentStep$.asObservable();\n  }\n\n  getSteps(): Observable<WizardStepModel[]> {\n    return this.steps$.asObservable();\n  }\n\n  moveToNextStep(): void {\n    const index = this.currentStep$.value.stepIndex;\n    this.currentStep$.next(this.steps$.value[index]);\n  }\n\n  moveToPreviousStep(): void {\n    const index = this.currentStep$.value.stepIndex - 1;\n    this.currentStep$.next(this.steps$.value[index - 1]);\n  }\n\n  isLastStep(): boolean {\n    return this.currentStep$.value.stepIndex === this.steps$.value.length;\n  }\n\n  isFirstStep(): boolean {\n    return this.currentStep$.value?.stepIndex - 1 === 0;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CssHelper } from '~/app/shared/classes/css-helper';\nimport { ComponentsModule } from './components/components.module';\nimport { DataTableModule } from './datatable/datatable.module';\nimport { DirectivesModule } from './directives/directives.module';\nimport { PipesModule } from './pipes/pipes.module';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthStorageService } from './services/auth-storage.service';\nimport { FormatterService } from './services/formatter.service';\n\n@NgModule({\n  imports: [CommonModule, PipesModule, ComponentsModule, DataTableModule, DirectivesModule],\n  declarations: [],\n  exports: [ComponentsModule, PipesModule, DataTableModule, DirectivesModule],\n  providers: [AuthStorageService, AuthGuardService, FormatterService, CssHelper]\n})\nexport class SharedModule {}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  default_lang: 'en-US',\n  production: false,\n  year: '2023'\n};\n","import { ApplicationRef, enableProdMode, isDevMode } from '@angular/core';\nimport { enableDebugTools } from '@angular/platform-browser';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .then((moduleRef) => {\n    if (isDevMode()) {\n      // source: https://medium.com/@dmitrymogilko/profiling-angular-change-detection-c00605862b9f\n      const applicationRef = moduleRef.injector.get(ApplicationRef);\n      const componentRef = applicationRef.components[0];\n      // allows to run `ng.profiler.timeChangeDetection();`\n      enableDebugTools(componentRef);\n    }\n  })\n  .catch((err) => console.log(err)); // eslint-disable-line no-console\n","var map = {\n\t\"./af\": 62275,\n\t\"./af.js\": 62275,\n\t\"./ar\": 90857,\n\t\"./ar-dz\": 11218,\n\t\"./ar-dz.js\": 11218,\n\t\"./ar-kw\": 14754,\n\t\"./ar-kw.js\": 14754,\n\t\"./ar-ly\": 66680,\n\t\"./ar-ly.js\": 66680,\n\t\"./ar-ma\": 92178,\n\t\"./ar-ma.js\": 92178,\n\t\"./ar-sa\": 56522,\n\t\"./ar-sa.js\": 56522,\n\t\"./ar-tn\": 95682,\n\t\"./ar-tn.js\": 95682,\n\t\"./ar.js\": 90857,\n\t\"./az\": 70164,\n\t\"./az.js\": 70164,\n\t\"./be\": 79774,\n\t\"./be.js\": 79774,\n\t\"./bg\": 60947,\n\t\"./bg.js\": 60947,\n\t\"./bm\": 21832,\n\t\"./bm.js\": 21832,\n\t\"./bn\": 89650,\n\t\"./bn-bd\": 74477,\n\t\"./bn-bd.js\": 74477,\n\t\"./bn.js\": 89650,\n\t\"./bo\": 66005,\n\t\"./bo.js\": 66005,\n\t\"./br\": 98492,\n\t\"./br.js\": 98492,\n\t\"./bs\": 70534,\n\t\"./bs.js\": 70534,\n\t\"./ca\": 52061,\n\t\"./ca.js\": 52061,\n\t\"./cs\": 84737,\n\t\"./cs.js\": 84737,\n\t\"./cv\": 61167,\n\t\"./cv.js\": 61167,\n\t\"./cy\": 77996,\n\t\"./cy.js\": 77996,\n\t\"./da\": 9528,\n\t\"./da.js\": 9528,\n\t\"./de\": 14540,\n\t\"./de-at\": 49430,\n\t\"./de-at.js\": 49430,\n\t\"./de-ch\": 67978,\n\t\"./de-ch.js\": 67978,\n\t\"./de.js\": 14540,\n\t\"./dv\": 83426,\n\t\"./dv.js\": 83426,\n\t\"./el\": 6616,\n\t\"./el.js\": 6616,\n\t\"./en-au\": 63816,\n\t\"./en-au.js\": 63816,\n\t\"./en-ca\": 32162,\n\t\"./en-ca.js\": 32162,\n\t\"./en-gb\": 83305,\n\t\"./en-gb.js\": 83305,\n\t\"./en-ie\": 61954,\n\t\"./en-ie.js\": 61954,\n\t\"./en-il\": 43060,\n\t\"./en-il.js\": 43060,\n\t\"./en-in\": 59923,\n\t\"./en-in.js\": 59923,\n\t\"./en-nz\": 13540,\n\t\"./en-nz.js\": 13540,\n\t\"./en-sg\": 16505,\n\t\"./en-sg.js\": 16505,\n\t\"./eo\": 41907,\n\t\"./eo.js\": 41907,\n\t\"./es\": 86640,\n\t\"./es-do\": 41246,\n\t\"./es-do.js\": 41246,\n\t\"./es-mx\": 56131,\n\t\"./es-mx.js\": 56131,\n\t\"./es-us\": 36430,\n\t\"./es-us.js\": 36430,\n\t\"./es.js\": 86640,\n\t\"./et\": 62551,\n\t\"./et.js\": 62551,\n\t\"./eu\": 32711,\n\t\"./eu.js\": 32711,\n\t\"./fa\": 54572,\n\t\"./fa.js\": 54572,\n\t\"./fi\": 33390,\n\t\"./fi.js\": 33390,\n\t\"./fil\": 87860,\n\t\"./fil.js\": 87860,\n\t\"./fo\": 48216,\n\t\"./fo.js\": 48216,\n\t\"./fr\": 99291,\n\t\"./fr-ca\": 98527,\n\t\"./fr-ca.js\": 98527,\n\t\"./fr-ch\": 58407,\n\t\"./fr-ch.js\": 58407,\n\t\"./fr.js\": 99291,\n\t\"./fy\": 47054,\n\t\"./fy.js\": 47054,\n\t\"./ga\": 49540,\n\t\"./ga.js\": 49540,\n\t\"./gd\": 73917,\n\t\"./gd.js\": 73917,\n\t\"./gl\": 51486,\n\t\"./gl.js\": 51486,\n\t\"./gom-deva\": 56245,\n\t\"./gom-deva.js\": 56245,\n\t\"./gom-latn\": 48868,\n\t\"./gom-latn.js\": 48868,\n\t\"./gu\": 59652,\n\t\"./gu.js\": 59652,\n\t\"./he\": 89019,\n\t\"./he.js\": 89019,\n\t\"./hi\": 42040,\n\t\"./hi.js\": 42040,\n\t\"./hr\": 63402,\n\t\"./hr.js\": 63402,\n\t\"./hu\": 79322,\n\t\"./hu.js\": 79322,\n\t\"./hy-am\": 27609,\n\t\"./hy-am.js\": 27609,\n\t\"./id\": 57942,\n\t\"./id.js\": 57942,\n\t\"./is\": 98275,\n\t\"./is.js\": 98275,\n\t\"./it\": 73053,\n\t\"./it-ch\": 4378,\n\t\"./it-ch.js\": 4378,\n\t\"./it.js\": 73053,\n\t\"./ja\": 46176,\n\t\"./ja.js\": 46176,\n\t\"./jv\": 679,\n\t\"./jv.js\": 679,\n\t\"./ka\": 92726,\n\t\"./ka.js\": 92726,\n\t\"./kk\": 72953,\n\t\"./kk.js\": 72953,\n\t\"./km\": 86957,\n\t\"./km.js\": 86957,\n\t\"./kn\": 59181,\n\t\"./kn.js\": 59181,\n\t\"./ko\": 47148,\n\t\"./ko.js\": 47148,\n\t\"./ku\": 27752,\n\t\"./ku.js\": 27752,\n\t\"./ky\": 65675,\n\t\"./ky.js\": 65675,\n\t\"./lb\": 41263,\n\t\"./lb.js\": 41263,\n\t\"./lo\": 65746,\n\t\"./lo.js\": 65746,\n\t\"./lt\": 11143,\n\t\"./lt.js\": 11143,\n\t\"./lv\": 38753,\n\t\"./lv.js\": 38753,\n\t\"./me\": 44054,\n\t\"./me.js\": 44054,\n\t\"./mi\": 31573,\n\t\"./mi.js\": 31573,\n\t\"./mk\": 30202,\n\t\"./mk.js\": 30202,\n\t\"./ml\": 68523,\n\t\"./ml.js\": 68523,\n\t\"./mn\": 79794,\n\t\"./mn.js\": 79794,\n\t\"./mr\": 56681,\n\t\"./mr.js\": 56681,\n\t\"./ms\": 56975,\n\t\"./ms-my\": 39859,\n\t\"./ms-my.js\": 39859,\n\t\"./ms.js\": 56975,\n\t\"./mt\": 3691,\n\t\"./mt.js\": 3691,\n\t\"./my\": 5152,\n\t\"./my.js\": 5152,\n\t\"./nb\": 7607,\n\t\"./nb.js\": 7607,\n\t\"./ne\": 21526,\n\t\"./ne.js\": 21526,\n\t\"./nl\": 86368,\n\t\"./nl-be\": 40076,\n\t\"./nl-be.js\": 40076,\n\t\"./nl.js\": 86368,\n\t\"./nn\": 68420,\n\t\"./nn.js\": 68420,\n\t\"./oc-lnc\": 51906,\n\t\"./oc-lnc.js\": 51906,\n\t\"./pa-in\": 94504,\n\t\"./pa-in.js\": 94504,\n\t\"./pl\": 54721,\n\t\"./pl.js\": 54721,\n\t\"./pt\": 74645,\n\t\"./pt-br\": 54548,\n\t\"./pt-br.js\": 54548,\n\t\"./pt.js\": 74645,\n\t\"./ro\": 71977,\n\t\"./ro.js\": 71977,\n\t\"./ru\": 26042,\n\t\"./ru.js\": 26042,\n\t\"./sd\": 78849,\n\t\"./sd.js\": 78849,\n\t\"./se\": 27739,\n\t\"./se.js\": 27739,\n\t\"./si\": 50084,\n\t\"./si.js\": 50084,\n\t\"./sk\": 92449,\n\t\"./sk.js\": 92449,\n\t\"./sl\": 23086,\n\t\"./sl.js\": 23086,\n\t\"./sq\": 33139,\n\t\"./sq.js\": 33139,\n\t\"./sr\": 30607,\n\t\"./sr-cyrl\": 30063,\n\t\"./sr-cyrl.js\": 30063,\n\t\"./sr.js\": 30607,\n\t\"./ss\": 40131,\n\t\"./ss.js\": 40131,\n\t\"./sv\": 21665,\n\t\"./sv.js\": 21665,\n\t\"./sw\": 5642,\n\t\"./sw.js\": 5642,\n\t\"./ta\": 33622,\n\t\"./ta.js\": 33622,\n\t\"./te\": 74825,\n\t\"./te.js\": 74825,\n\t\"./tet\": 48336,\n\t\"./tet.js\": 48336,\n\t\"./tg\": 39238,\n\t\"./tg.js\": 39238,\n\t\"./th\": 99463,\n\t\"./th.js\": 99463,\n\t\"./tk\": 39986,\n\t\"./tk.js\": 39986,\n\t\"./tl-ph\": 29672,\n\t\"./tl-ph.js\": 29672,\n\t\"./tlh\": 40043,\n\t\"./tlh.js\": 40043,\n\t\"./tr\": 51212,\n\t\"./tr.js\": 51212,\n\t\"./tzl\": 50110,\n\t\"./tzl.js\": 50110,\n\t\"./tzm\": 80482,\n\t\"./tzm-latn\": 38309,\n\t\"./tzm-latn.js\": 38309,\n\t\"./tzm.js\": 80482,\n\t\"./ug-cn\": 42495,\n\t\"./ug-cn.js\": 42495,\n\t\"./uk\": 54157,\n\t\"./uk.js\": 54157,\n\t\"./ur\": 80984,\n\t\"./ur.js\": 80984,\n\t\"./uz\": 64141,\n\t\"./uz-latn\": 43662,\n\t\"./uz-latn.js\": 43662,\n\t\"./uz.js\": 64141,\n\t\"./vi\": 12607,\n\t\"./vi.js\": 12607,\n\t\"./x-pseudo\": 66460,\n\t\"./x-pseudo.js\": 66460,\n\t\"./yo\": 92948,\n\t\"./yo.js\": 92948,\n\t\"./zh-cn\": 62658,\n\t\"./zh-cn.js\": 62658,\n\t\"./zh-hk\": 39352,\n\t\"./zh-hk.js\": 39352,\n\t\"./zh-mo\": 38274,\n\t\"./zh-mo.js\": 38274,\n\t\"./zh-tw\": 98451,\n\t\"./zh-tw.js\": 98451\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/* (ignored) */"],"names":[],"sourceRoot":"webpack:///"}