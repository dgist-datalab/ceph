{"version":3,"file":"src_app_ceph_pool_pool_module_ts.js","mappings":"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","sources":["./src/app/ceph/pool/crush-rule-form-modal/crush-rule-form-modal.component.ts","./src/app/ceph/pool/crush-rule-form-modal/crush-rule-form-modal.component.html","./src/app/ceph/pool/erasure-code-profile-form/erasure-code-profile-form-modal.component.ts","./src/app/ceph/pool/erasure-code-profile-form/erasure-code-profile-form-modal.component.html","./src/app/ceph/pool/pool-details/pool-details.component.ts","./src/app/ceph/pool/pool-details/pool-details.component.html","./src/app/ceph/pool/pool-form/pool-form-data.ts","./src/app/ceph/pool/pool-form/pool-form.component.ts","./src/app/ceph/pool/pool-form/pool-form.component.html","./src/app/ceph/pool/pool-list/pool-list.component.ts","./src/app/ceph/pool/pool-list/pool-list.component.html","./src/app/ceph/pool/pool.module.ts","./src/app/ceph/pool/pool.ts","./src/app/shared/api/erasure-code-profile.service.ts","./src/app/shared/classes/crush.node.selection.class.ts","./src/app/shared/models/erasure-code-profile.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\n\nimport { CrushRuleService } from '~/app/shared/api/crush-rule.service';\nimport { CrushNodeSelectionClass } from '~/app/shared/classes/crush.node.selection.class';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { CrushNode } from '~/app/shared/models/crush-node';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-crush-rule-form-modal',\n  templateUrl: './crush-rule-form-modal.component.html',\n  styleUrls: ['./crush-rule-form-modal.component.scss']\n})\nexport class CrushRuleFormModalComponent extends CrushNodeSelectionClass implements OnInit {\n  @Output()\n  submitAction = new EventEmitter();\n\n  tooltips = this.crushRuleService.formTooltips;\n\n  form: CdFormGroup;\n  names: string[];\n  action: string;\n  resource: string;\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    public activeModal: NgbActiveModal,\n    private taskWrapper: TaskWrapperService,\n    private crushRuleService: CrushRuleService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.action = this.actionLabels.CREATE;\n    this.resource = $localize`Crush Rule`;\n    this.createForm();\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      // name: string\n      name: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('[A-Za-z0-9_-]+'),\n          CdValidators.custom(\n            'uniqueName',\n            (value: any) => this.names && this.names.indexOf(value) !== -1\n          )\n        ]\n      ],\n      // root: CrushNode\n      root: null, // Replaced with first root\n      // failure_domain: string\n      failure_domain: '', // Replaced with most common type\n      // device_class: string\n      device_class: '' // Replaced with device type if only one exists beneath domain\n    });\n  }\n\n  ngOnInit() {\n    this.crushRuleService\n      .getInfo()\n      .subscribe(({ names, nodes }: { names: string[]; nodes: CrushNode[] }) => {\n        this.initCrushNodeSelection(\n          nodes,\n          this.form.get('root'),\n          this.form.get('failure_domain'),\n          this.form.get('device_class')\n        );\n        this.names = names;\n      });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      this.form.setErrors({ cdSubmitButton: true });\n      return;\n    }\n    const rule = _.cloneDeep(this.form.value);\n    rule.root = rule.root.name;\n    if (rule.device_class === '') {\n      delete rule.device_class;\n    }\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('crushRule/create', rule),\n        call: this.crushRuleService.create(rule)\n      })\n      .subscribe({\n        error: () => {\n          this.form.setErrors({ cdSubmitButton: true });\n        },\n        complete: () => {\n          this.activeModal.close();\n          this.submitAction.emit(rule);\n        }\n      });\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n=\"form title\"\n                class=\"modal-title\">{{ action | titlecase }} {{ resource | upperFirst }}</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form #frm=\"ngForm\"\n          [formGroup]=\"form\"\n          novalidate>\n      <div class=\"modal-body\">\n        <div class=\"form-group row\">\n          <label for=\"name\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Name</ng-container>\n            <span class=\"required\"></span>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"text\"\n                   id=\"name\"\n                   name=\"name\"\n                   class=\"form-control\"\n                   placeholder=\"Name...\"\n                   formControlName=\"name\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('name', frm, 'required')\"\n                  i18n>This field is required!</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('name', frm, 'pattern')\"\n                  i18n>The name can only consist of alphanumeric characters, dashes and underscores.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('name', frm, 'uniqueName')\"\n                  i18n>The chosen erasure code profile name is already in use.</span>\n          </div>\n        </div>\n\n        <!-- Root -->\n        <div class=\"form-group row\">\n          <label for=\"root\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Root</ng-container>\n            <cd-helper [html]=\"tooltips.root\">\n            </cd-helper>\n            <span class=\"required\"></span>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"root\"\n                    name=\"root\"\n                    formControlName=\"root\">\n              <option *ngIf=\"!buckets\"\n                      ngValue=\"\"\n                      i18n>Loading...</option>\n              <option *ngFor=\"let bucket of buckets\"\n                      [ngValue]=\"bucket\">\n                {{ bucket.name }}\n              </option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('root', frm, 'required')\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <!-- Failure Domain Type -->\n        <div class=\"form-group row\">\n          <label for=\"failure_domain\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Failure domain type</ng-container>\n            <cd-helper [html]=\"tooltips.failure_domain\">\n            </cd-helper>\n            <span class=\"required\"></span>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"failure_domain\"\n                    name=\"failure_domain\"\n                    formControlName=\"failure_domain\">\n              <option *ngIf=\"!failureDomains\"\n                      ngValue=\"\"\n                      i18n>Loading...</option>\n              <option *ngFor=\"let domain of failureDomainKeys\"\n                      [ngValue]=\"domain\">\n                {{ domain }} ( {{failureDomains[domain].length}} )\n              </option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('failure_domain', frm, 'required')\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <!-- Class -->\n        <div class=\"form-group row\">\n          <label for=\"device_class\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Device class</ng-container>\n            <cd-helper [html]=\"tooltips.device_class\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"device_class\"\n                    name=\"device_class\"\n                    formControlName=\"device_class\">\n              <option ngValue=\"\"\n                      i18n>Let Ceph decide</option>\n              <option *ngFor=\"let deviceClass of devices\"\n                      [ngValue]=\"deviceClass\">\n                {{ deviceClass }}\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"form\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ErasureCodeProfileService } from '~/app/shared/api/erasure-code-profile.service';\nimport { CrushNodeSelectionClass } from '~/app/shared/classes/crush.node.selection.class';\nimport { ActionLabelsI18n } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdFormBuilder } from '~/app/shared/forms/cd-form-builder';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport { CrushNode } from '~/app/shared/models/crush-node';\nimport { ErasureCodeProfile } from '~/app/shared/models/erasure-code-profile';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\n\n@Component({\n  selector: 'cd-erasure-code-profile-form-modal',\n  templateUrl: './erasure-code-profile-form-modal.component.html',\n  styleUrls: ['./erasure-code-profile-form-modal.component.scss']\n})\nexport class ErasureCodeProfileFormModalComponent\n  extends CrushNodeSelectionClass\n  implements OnInit {\n  @Output()\n  submitAction = new EventEmitter();\n\n  tooltips = this.ecpService.formTooltips;\n  PLUGIN = {\n    LRC: 'lrc', // Locally Repairable Erasure Code\n    SHEC: 'shec', // Shingled Erasure Code\n    CLAY: 'clay', // Coupled LAYer\n    JERASURE: 'jerasure', // default\n    ISA: 'isa' // Intel Storage Acceleration\n  };\n  plugin = this.PLUGIN.JERASURE;\n  icons = Icons;\n\n  form: CdFormGroup;\n  plugins: string[];\n  names: string[];\n  techniques: string[];\n  action: string;\n  resource: string;\n  dCalc: boolean;\n  lrcGroups: number;\n  lrcMultiK: number;\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    public activeModal: NgbActiveModal,\n    private taskWrapper: TaskWrapperService,\n    private ecpService: ErasureCodeProfileService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.action = this.actionLabels.CREATE;\n    this.resource = $localize`EC Profile`;\n    this.createForm();\n    this.setJerasureDefaults();\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      name: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern('[A-Za-z0-9_-]+'),\n          CdValidators.custom(\n            'uniqueName',\n            (value: string) => this.names && this.names.indexOf(value) !== -1\n          )\n        ]\n      ],\n      plugin: [this.PLUGIN.JERASURE, [Validators.required]],\n      k: [\n        4, // Will be overwritten with plugin defaults\n        [\n          Validators.required,\n          CdValidators.custom('max', () => this.baseValueValidation(true)),\n          CdValidators.custom('unequal', (v: number) => this.lrcDataValidation(v)),\n          CdValidators.custom('kLowerM', (v: number) => this.shecDataValidation(v))\n        ]\n      ],\n      m: [\n        2, // Will be overwritten with plugin defaults\n        [Validators.required, CdValidators.custom('max', () => this.baseValueValidation())]\n      ],\n      crushFailureDomain: '', // Will be preselected\n      crushRoot: null, // Will be preselected\n      crushDeviceClass: '', // Will be preselected\n      directory: '',\n      // Only for 'jerasure', 'clay' and 'isa' use\n      technique: 'reed_sol_van',\n      // Only for 'jerasure' use\n      packetSize: [2048],\n      // Only for 'lrc' use\n      l: [\n        3, // Will be overwritten with plugin defaults\n        [\n          Validators.required,\n          CdValidators.custom('unequal', (v: number) => this.lrcLocalityValidation(v))\n        ]\n      ],\n      crushLocality: '', // set to none at the end (same list as for failure domains)\n      // Only for 'shec' use\n      c: [\n        2, // Will be overwritten with plugin defaults\n        [\n          Validators.required,\n          CdValidators.custom('cGreaterM', (v: number) => this.shecDurabilityValidation(v))\n        ]\n      ],\n      // Only for 'clay' use\n      d: [\n        5, // Will be overwritten with plugin defaults (k+m-1) = k+1 <= d <= k+m-1\n        [\n          Validators.required,\n          CdValidators.custom('dMin', (v: number) => this.dMinValidation(v)),\n          CdValidators.custom('dMax', (v: number) => this.dMaxValidation(v))\n        ]\n      ],\n      scalar_mds: [this.PLUGIN.JERASURE, [Validators.required]] // jerasure or isa or shec\n    });\n    this.toggleDCalc();\n    this.form.get('k').valueChanges.subscribe(() => this.updateValidityOnChange(['m', 'l', 'd']));\n    this.form\n      .get('m')\n      .valueChanges.subscribe(() => this.updateValidityOnChange(['k', 'l', 'c', 'd']));\n    this.form.get('l').valueChanges.subscribe(() => this.updateValidityOnChange(['k', 'm']));\n    this.form.get('plugin').valueChanges.subscribe((plugin) => this.onPluginChange(plugin));\n    this.form.get('scalar_mds').valueChanges.subscribe(() => this.setClayDefaultsForScalar());\n  }\n\n  private baseValueValidation(dataChunk: boolean = false): boolean {\n    return this.validValidation(() => {\n      return (\n        this.getKMSum() > this.deviceCount &&\n        this.form.getValue('k') > this.form.getValue('m') === dataChunk\n      );\n    });\n  }\n\n  private validValidation(fn: () => boolean, plugin?: string): boolean {\n    if (!this.form || plugin ? this.plugin !== plugin : false) {\n      return false;\n    }\n    return fn();\n  }\n\n  private getKMSum(): number {\n    return this.form.getValue('k') + this.form.getValue('m');\n  }\n\n  private lrcDataValidation(k: number): boolean {\n    return this.validValidation(() => {\n      const m = this.form.getValue('m');\n      const l = this.form.getValue('l');\n      const km = k + m;\n      this.lrcMultiK = k / (km / l);\n      return k % (km / l) !== 0;\n    }, 'lrc');\n  }\n\n  private shecDataValidation(k: number): boolean {\n    return this.validValidation(() => {\n      const m = this.form.getValue('m');\n      return m > k;\n    }, 'shec');\n  }\n\n  private lrcLocalityValidation(l: number) {\n    return this.validValidation(() => {\n      const value = this.getKMSum();\n      this.lrcGroups = l > 0 ? value / l : 0;\n      return l > 0 && value % l !== 0;\n    }, 'lrc');\n  }\n\n  private shecDurabilityValidation(c: number): boolean {\n    return this.validValidation(() => {\n      const m = this.form.getValue('m');\n      return c > m;\n    }, 'shec');\n  }\n\n  private dMinValidation(d: number): boolean {\n    return this.validValidation(() => this.getDMin() > d, 'clay');\n  }\n\n  getDMin(): number {\n    return this.form.getValue('k') + 1;\n  }\n\n  private dMaxValidation(d: number): boolean {\n    return this.validValidation(() => d > this.getDMax(), 'clay');\n  }\n\n  getDMax(): number {\n    const m = this.form.getValue('m');\n    const k = this.form.getValue('k');\n    return k + m - 1;\n  }\n\n  toggleDCalc() {\n    this.dCalc = !this.dCalc;\n    this.form.get('d')[this.dCalc ? 'disable' : 'enable']();\n    this.calculateD();\n  }\n\n  private calculateD() {\n    if (this.plugin !== this.PLUGIN.CLAY || !this.dCalc) {\n      return;\n    }\n    this.form.silentSet('d', this.getDMax());\n  }\n\n  private updateValidityOnChange(names: string[]) {\n    names.forEach((name) => {\n      if (name === 'd') {\n        this.calculateD();\n      }\n      this.form.get(name).updateValueAndValidity({ emitEvent: false });\n    });\n  }\n\n  private onPluginChange(plugin: string) {\n    this.plugin = plugin;\n    if (plugin === this.PLUGIN.JERASURE) {\n      this.setJerasureDefaults();\n    } else if (plugin === this.PLUGIN.LRC) {\n      this.setLrcDefaults();\n    } else if (plugin === this.PLUGIN.ISA) {\n      this.setIsaDefaults();\n    } else if (plugin === this.PLUGIN.SHEC) {\n      this.setShecDefaults();\n    } else if (plugin === this.PLUGIN.CLAY) {\n      this.setClayDefaults();\n    }\n    this.updateValidityOnChange(['m']); // Triggers k, m, c, d and l\n  }\n\n  private setJerasureDefaults() {\n    this.techniques = [\n      'reed_sol_van',\n      'reed_sol_r6_op',\n      'cauchy_orig',\n      'cauchy_good',\n      'liberation',\n      'blaum_roth',\n      'liber8tion'\n    ];\n    this.setDefaults({\n      k: 4,\n      m: 2,\n      technique: 'reed_sol_van'\n    });\n  }\n\n  private setLrcDefaults() {\n    this.setDefaults({\n      k: 4,\n      m: 2,\n      l: 3\n    });\n  }\n\n  private setIsaDefaults() {\n    /**\n     * Actually k and m are not required - but they will be set to the default values in case\n     * if they are not set, therefore it's fine to mark them as required in order to get\n     * strange values that weren't set.\n     */\n    this.techniques = ['reed_sol_van', 'cauchy'];\n    this.setDefaults({\n      k: 7,\n      m: 3,\n      technique: 'reed_sol_van'\n    });\n  }\n\n  private setShecDefaults() {\n    /**\n     * Actually k, c and m are not required - but they will be set to the default values in case\n     * if they are not set, therefore it's fine to mark them as required in order to get\n     * strange values that weren't set.\n     */\n    this.setDefaults({\n      k: 4,\n      m: 3,\n      c: 2\n    });\n  }\n\n  private setClayDefaults() {\n    /**\n     * Actually d and scalar_mds are not required - but they will be set to show the default values\n     * in case if they are not set, therefore it's fine to mark them as required in order to not get\n     * strange values that weren't set.\n     *\n     * As d would be set to the value k+m-1 for the greatest savings, the form will\n     * automatically update d if the automatic calculation is activated (default).\n     */\n    this.setDefaults({\n      k: 4,\n      m: 2,\n      // d: 5, <- Will be automatically update to 5\n      scalar_mds: this.PLUGIN.JERASURE\n    });\n    this.setClayDefaultsForScalar();\n  }\n\n  private setClayDefaultsForScalar() {\n    const plugin = this.form.getValue('scalar_mds');\n    let defaultTechnique = 'reed_sol_van';\n    if (plugin === this.PLUGIN.JERASURE) {\n      this.techniques = [\n        'reed_sol_van',\n        'reed_sol_r6_op',\n        'cauchy_orig',\n        'cauchy_good',\n        'liber8tion'\n      ];\n    } else if (plugin === this.PLUGIN.ISA) {\n      this.techniques = ['reed_sol_van', 'cauchy'];\n    } else {\n      // this.PLUGIN.SHEC\n      defaultTechnique = 'single';\n      this.techniques = ['single', 'multiple'];\n    }\n    this.setDefaults({ technique: defaultTechnique });\n  }\n\n  private setDefaults(defaults: object) {\n    Object.keys(defaults).forEach((controlName) => {\n      const control = this.form.get(controlName);\n      const value = control.value;\n      /**\n       * As k, m, c and l are now set touched and dirty on the beginning, plugin change will\n       * overwrite their values as we can't determine if the user has changed anything.\n       * k and m can have two default values where as l and c can only have one,\n       * so there is no need to overwrite them.\n       */\n      const overwrite =\n        control.pristine ||\n        (controlName === 'technique' && !this.techniques.includes(value)) ||\n        (controlName === 'k' && [4, 7].includes(value)) ||\n        (controlName === 'm' && [2, 3].includes(value));\n      if (overwrite) {\n        control.setValue(defaults[controlName]); // also validates new value\n      } else {\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.ecpService\n      .getInfo()\n      .subscribe(\n        ({\n          plugins,\n          names,\n          directory,\n          nodes\n        }: {\n          plugins: string[];\n          names: string[];\n          directory: string;\n          nodes: CrushNode[];\n        }) => {\n          this.initCrushNodeSelection(\n            nodes,\n            this.form.get('crushRoot'),\n            this.form.get('crushFailureDomain'),\n            this.form.get('crushDeviceClass')\n          );\n          this.plugins = plugins;\n          this.names = names;\n          this.form.silentSet('directory', directory);\n          this.preValidateNumericInputFields();\n        }\n      );\n  }\n\n  /**\n   * This allows k, m, l and c to be validated instantly on change, before the\n   * fields got changed before by the user.\n   */\n  private preValidateNumericInputFields() {\n    const kml = ['k', 'm', 'l', 'c', 'd'].map((name) => this.form.get(name));\n    kml.forEach((control) => {\n      control.markAsTouched();\n      control.markAsDirty();\n    });\n    kml[1].updateValueAndValidity(); // Update validity of k, m, c, d and l\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      this.form.setErrors({ cdSubmitButton: true });\n      return;\n    }\n    const profile = this.createJson();\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('ecp/create', { name: profile.name }),\n        call: this.ecpService.create(profile)\n      })\n      .subscribe({\n        error: () => {\n          this.form.setErrors({ cdSubmitButton: true });\n        },\n        complete: () => {\n          this.activeModal.close();\n          this.submitAction.emit(profile);\n        }\n      });\n  }\n\n  private createJson() {\n    const pluginControls = {\n      technique: [this.PLUGIN.ISA, this.PLUGIN.JERASURE, this.PLUGIN.CLAY],\n      packetSize: [this.PLUGIN.JERASURE],\n      l: [this.PLUGIN.LRC],\n      crushLocality: [this.PLUGIN.LRC],\n      c: [this.PLUGIN.SHEC],\n      d: [this.PLUGIN.CLAY],\n      scalar_mds: [this.PLUGIN.CLAY]\n    };\n    const ecp = new ErasureCodeProfile();\n    const plugin = this.form.getValue('plugin');\n    Object.keys(this.form.controls)\n      .filter((name) => {\n        const pluginControl = pluginControls[name];\n        const value = this.form.getValue(name);\n        const usable = (pluginControl && pluginControl.includes(plugin)) || !pluginControl;\n        return usable && value && value !== '';\n      })\n      .forEach((name) => {\n        this.extendJson(name, ecp);\n      });\n    return ecp;\n  }\n\n  private extendJson(name: string, ecp: ErasureCodeProfile) {\n    const differentApiAttributes = {\n      crushFailureDomain: 'crush-failure-domain',\n      crushRoot: 'crush-root',\n      crushDeviceClass: 'crush-device-class',\n      packetSize: 'packetsize',\n      crushLocality: 'crush-locality'\n    };\n    const value = this.form.getValue(name);\n    ecp[differentApiAttributes[name] || name] = name === 'crushRoot' ? value.name : value;\n  }\n}\n","<cd-modal [modalRef]=\"activeModal\">\n  <ng-container i18n=\"form title\"\n                class=\"modal-title\">{{ action | titlecase }} {{ resource | upperFirst }}</ng-container>\n\n  <ng-container class=\"modal-content\">\n    <form #frm=\"ngForm\"\n          [formGroup]=\"form\"\n          novalidate>\n      <div class=\"modal-body\">\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label\"\n                 for=\"name\"\n                 i18n>Name</label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"text\"\n                   id=\"name\"\n                   name=\"name\"\n                   class=\"form-control\"\n                   placeholder=\"Name...\"\n                   formControlName=\"name\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('name', frm, 'required')\"\n                  i18n>This field is required!</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('name', frm, 'pattern')\"\n                  i18n>The name can only consist of alphanumeric characters, dashes and underscores.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('name', frm, 'uniqueName')\"\n                  i18n>The chosen erasure code profile name is already in use.</span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"plugin\"\n                 class=\"cd-col-form-label\">\n            <span class=\"required\"\n                  i18n>Plugin</span>\n            <cd-helper [html]=\"tooltips.plugins[plugin].description\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"plugin\"\n                    name=\"plugin\"\n                    formControlName=\"plugin\">\n              <option *ngIf=\"!plugins\"\n                      ngValue=\"\"\n                      i18n>Loading...</option>\n              <option *ngFor=\"let plugin of plugins\"\n                      [ngValue]=\"plugin\">\n                {{ plugin }}\n              </option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('name', frm, 'required')\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"k\"\n                 class=\"cd-col-form-label\">\n            <span class=\"required\"\n                  i18n>Data chunks (k)</span>\n            <cd-helper [html]=\"tooltips.k\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"number\"\n                   id=\"k\"\n                   name=\"k\"\n                   class=\"form-control\"\n                   ng-model=\"$ctrl.erasureCodeProfile.k\"\n                   placeholder=\"Data chunks...\"\n                   formControlName=\"k\"\n                   min=\"2\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('k', frm, 'required')\"\n                  i18n>This field is required!</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('k', frm, 'min')\"\n                  i18n>Must be equal to or greater than 2.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('k', frm, 'max')\"\n                  i18n>Chunks (k+m) have exceeded the available OSDs of {{deviceCount}}.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('k', frm, 'unequal')\"\n                  i18n>For an equal distribution k has to be a multiple of (k+m)/l.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('k', frm, 'kLowerM')\"\n                  i18n>K has to be equal to or greater than m in order to recover data correctly through c.</span>\n            <span *ngIf=\"plugin === 'lrc'\"\n                  class=\"form-text text-muted\"\n                  i18n>Distribution factor: {{lrcMultiK}}</span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"m\"\n                 class=\"cd-col-form-label\">\n            <span class=\"required\"\n                  i18n>Coding chunks (m)</span>\n            <cd-helper [html]=\"tooltips.m\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"number\"\n                   id=\"m\"\n                   name=\"m\"\n                   class=\"form-control\"\n                   placeholder=\"Coding chunks...\"\n                   formControlName=\"m\"\n                   min=\"1\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('m', frm, 'required')\"\n                  i18n>This field is required!</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('m', frm, 'min')\"\n                  i18n>Must be equal to or greater than 1.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('m', frm, 'max')\"\n                  i18n>Chunks (k+m) have exceeded the available OSDs of {{deviceCount}}.</span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\"\n             *ngIf=\"plugin === 'shec'\">\n          <label for=\"c\"\n                 class=\"cd-col-form-label\">\n            <span class=\"required\"\n                  i18n>Durability estimator (c)</span>\n            <cd-helper [html]=\"tooltips.plugins.shec.c\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"number\"\n                   id=\"c\"\n                   name=\"c\"\n                   class=\"form-control\"\n                   placeholder=\"Coding chunks...\"\n                   formControlName=\"c\"\n                   min=\"1\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('c', frm, 'min')\"\n                  i18n>Must be equal to or greater than 1.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('c', frm, 'cGreaterM')\"\n                  i18n>C has to be equal to or lower than m as m defines the amount of chunks that can be used.</span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\"\n             *ngIf=\"plugin === 'clay'\">\n          <label for=\"d\"\n                 class=\"cd-col-form-label\">\n            <span class=\"required\"\n                  i18n>Helper chunks (d)</span>\n            <cd-helper [html]=\"tooltips.plugins.clay.d\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <div class=\"input-group\">\n              <input type=\"number\"\n                     id=\"d\"\n                     name=\"d\"\n                     class=\"form-control\"\n                     placeholder=\"Helper chunks...\"\n                     formControlName=\"d\">\n              <button class=\"btn btn-light\"\n                      id=\"d-calc-btn\"\n                      ngbTooltip=\"Set d manually or use the plugin's default calculation that maximizes d.\"\n                      i18n-ngbTooltip\n                      type=\"button\"\n                      (click)=\"toggleDCalc()\">\n                <i [ngClass]=\"dCalc ? icons.unlock : icons.lock\"\n                   aria-hidden=\"true\"></i>\n              </button>\n            </div>\n            <span class=\"form-text text-muted\"\n                  *ngIf=\"dCalc\"\n                  i18n>D is automatically updated on k and m changes</span>\n            <ng-container\n              *ngIf=\"!dCalc\">\n              <span class=\"form-text text-muted\"\n                    *ngIf=\"getDMin() < getDMax()\"\n                    i18n>D can be set from {{getDMin()}} to {{getDMax()}}</span>\n              <span class=\"form-text text-muted\"\n                    *ngIf=\"getDMin() === getDMax()\"\n                    i18n>D can only be set to {{getDMax()}}</span>\n            </ng-container>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('d', frm, 'dMin')\"\n                  i18n>D has to be greater than k ({{getDMin()}}).</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('d', frm, 'dMax')\"\n                  i18n>D has to be lower than k + m ({{getDMax()}}).</span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\"\n             *ngIf=\"plugin === PLUGIN.LRC\">\n          <label class=\"cd-col-form-label\"\n                 for=\"l\">\n            <span class=\"required\"\n                  i18n>Locality (l)</span>\n            <cd-helper [html]=\"tooltips.plugins.lrc.l\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"number\"\n                   id=\"l\"\n                   name=\"l\"\n                   class=\"form-control\"\n                   placeholder=\"Coding chunks...\"\n                   formControlName=\"l\"\n                   min=\"1\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('l', frm, 'required')\"\n                  i18n>This field is required!</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('l', frm, 'min')\"\n                  i18n>Must be equal to or greater than 1.</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('l', frm, 'unequal')\"\n                  i18n>Can't split up chunks (k+m) correctly with the current locality.</span>\n            <span class=\"form-text text-muted\"\n                  i18n>Locality groups: {{lrcGroups}}</span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"crushFailureDomain\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Crush failure domain</ng-container>\n            <cd-helper [html]=\"tooltips.crushFailureDomain\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"crushFailureDomain\"\n                    name=\"crushFailureDomain\"\n                    formControlName=\"crushFailureDomain\">\n              <option *ngIf=\"!failureDomains\"\n                      ngValue=\"\"\n                      i18n>Loading...</option>\n              <option *ngFor=\"let domain of failureDomainKeys\"\n                      [ngValue]=\"domain\">\n                {{ domain }} ( {{failureDomains[domain].length}} )\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group row\"\n             *ngIf=\"plugin === PLUGIN.LRC\">\n          <label for=\"crushLocality\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Crush Locality</ng-container>\n            <cd-helper [html]=\"tooltips.plugins.lrc.crushLocality\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"crushLocality\"\n                    name=\"crushLocality\"\n                    formControlName=\"crushLocality\">\n              <option *ngIf=\"!failureDomains\"\n                      ngValue=\"\"\n                      i18n>Loading...</option>\n              <option *ngIf=\"failureDomainKeys.length > 0\"\n                      ngValue=\"\"\n                      i18n>None</option>\n              <option *ngFor=\"let domain of failureDomainKeys\"\n                      [ngValue]=\"domain\">\n                {{ domain }} ( {{failureDomains[domain].length}} )\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group row\"\n             *ngIf=\"PLUGIN.CLAY === plugin\">\n          <label for=\"scalar_mds\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Scalar mds</ng-container>\n            <cd-helper [html]=\"tooltips.plugins.clay.scalar_mds\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"scalar_mds\"\n                    name=\"scalar_mds\"\n                    formControlName=\"scalar_mds\">\n              <option *ngFor=\"let plugin of [PLUGIN.JERASURE, PLUGIN.ISA, PLUGIN.SHEC]\"\n                      [ngValue]=\"plugin\">\n                {{ plugin }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group row\"\n             *ngIf=\"[PLUGIN.JERASURE, PLUGIN.ISA, PLUGIN.CLAY].includes(plugin)\">\n          <label for=\"technique\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Technique</ng-container>\n            <cd-helper [html]=\"tooltips.plugins[plugin].technique\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"technique\"\n                    name=\"technique\"\n                    formControlName=\"technique\">\n              <option *ngFor=\"let technique of techniques\"\n                      [ngValue]=\"technique\">\n                {{ technique }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group row\"\n             *ngIf=\"plugin === PLUGIN.JERASURE\">\n          <label for=\"packetSize\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Packetsize</ng-container>\n            <cd-helper [html]=\"tooltips.plugins.jerasure.packetSize\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"number\"\n                   id=\"packetSize\"\n                   name=\"packetSize\"\n                   class=\"form-control\"\n                   placeholder=\"Packetsize...\"\n                   formControlName=\"packetSize\"\n                   min=\"1\">\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('packetSize', frm, 'min')\"\n                  i18n>Must be equal to or greater than 1.</span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"crushRoot\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Crush root</ng-container>\n            <cd-helper [html]=\"tooltips.crushRoot\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"crushRoot\"\n                    name=\"crushRoot\"\n                    formControlName=\"crushRoot\">\n              <option *ngIf=\"!buckets\"\n                      ngValue=\"\"\n                      i18n>Loading...</option>\n              <option *ngFor=\"let bucket of buckets\"\n                      [ngValue]=\"bucket\">\n                {{ bucket.name }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"crushDeviceClass\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Crush device class</ng-container>\n            <cd-helper [html]=\"tooltips.crushDeviceClass\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"crushDeviceClass\"\n                    name=\"crushDeviceClass\"\n                    formControlName=\"crushDeviceClass\">\n              <option ngValue=\"\"\n                      i18n>Let Ceph decide</option>\n              <option *ngFor=\"let deviceClass of devices\"\n                      [ngValue]=\"deviceClass\">\n                {{ deviceClass }}\n              </option>\n            </select>\n            <span class=\"form-text text-muted\"\n                  i18n>Available OSDs: {{deviceCount}}</span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"directory\"\n                 class=\"cd-col-form-label\">\n            <ng-container i18n>Directory</ng-container>\n            <cd-helper [html]=\"tooltips.directory\">\n            </cd-helper>\n          </label>\n          <div class=\"cd-col-form-input\">\n            <input type=\"text\"\n                   id=\"directory\"\n                   name=\"directory\"\n                   class=\"form-control\"\n                   placeholder=\"Path...\"\n                   formControlName=\"directory\">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"onSubmit()\"\n                              [form]=\"form\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"></cd-form-button-panel>\n      </div>\n    </form>\n  </ng-container>\n</cd-modal>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges } from '@angular/core';\n\nimport _ from 'lodash';\n\nimport { PoolService } from '~/app/shared/api/pool.service';\nimport { CdHelperClass } from '~/app/shared/classes/cd-helper.class';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { RbdConfigurationEntry } from '~/app/shared/models/configuration';\nimport { Permissions } from '~/app/shared/models/permissions';\n\n@Component({\n  selector: 'cd-pool-details',\n  templateUrl: './pool-details.component.html',\n  styleUrls: ['./pool-details.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoolDetailsComponent implements OnChanges {\n  @Input()\n  cacheTiers: any[];\n  @Input()\n  permissions: Permissions;\n  @Input()\n  selection: any;\n\n  cacheTierColumns: Array<CdTableColumn> = [];\n  // 'stats' won't be shown as the pure stat numbers won't tell the user much,\n  // if they are not converted or used in a chart (like the ones available in the pool listing)\n  omittedPoolAttributes = ['cdExecuting', 'cdIsBinary', 'stats'];\n\n  poolDetails: object;\n  selectedPoolConfiguration: RbdConfigurationEntry[];\n\n  constructor(private poolService: PoolService) {\n    this.cacheTierColumns = [\n      {\n        prop: 'pool_name',\n        name: $localize`Name`,\n        flexGrow: 3\n      },\n      {\n        prop: 'cache_mode',\n        name: $localize`Cache Mode`,\n        flexGrow: 2\n      },\n      {\n        prop: 'cache_min_evict_age',\n        name: $localize`Min Evict Age`,\n        flexGrow: 2\n      },\n      {\n        prop: 'cache_min_flush_age',\n        name: $localize`Min Flush Age`,\n        flexGrow: 2\n      },\n      {\n        prop: 'target_max_bytes',\n        name: $localize`Target Max Bytes`,\n        flexGrow: 2\n      },\n      {\n        prop: 'target_max_objects',\n        name: $localize`Target Max Objects`,\n        flexGrow: 2\n      }\n    ];\n  }\n\n  ngOnChanges() {\n    if (this.selection) {\n      this.poolService\n        .getConfiguration(this.selection.pool_name)\n        .subscribe((poolConf: RbdConfigurationEntry[]) => {\n          CdHelperClass.updateChanged(this, { selectedPoolConfiguration: poolConf });\n        });\n      CdHelperClass.updateChanged(this, {\n        poolDetails: _.omit(this.selection, this.omittedPoolAttributes)\n      });\n    }\n  }\n}\n","<ng-container *ngIf=\"selection\"\n              cdTableDetail>\n  <nav ngbNav\n       #nav=\"ngbNav\"\n       class=\"nav-tabs\"\n       cdStatefulTab=\"pool-details\">\n    <ng-container ngbNavItem=\"details\">\n      <a ngbNavLink\n         i18n>Details</a>\n      <ng-template ngbNavContent>\n        <cd-table-key-value [renderObjects]=\"true\"\n                            [data]=\"poolDetails\"\n                            [autoReload]=\"false\">\n        </cd-table-key-value>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"performance-details\"\n                  *ngIf=\"permissions.grafana.read\">\n      <a ngbNavLink\n         i18n>Performance Details</a>\n      <ng-template ngbNavContent>\n        <cd-grafana i18n-title\n                    title=\"Pool details\"\n                    grafanaPath=\"ceph-pool-detail?var-pool_name={{selection.pool_name}}\"\n                    [type]=\"'metrics'\"\n                    uid=\"-xyV8KCiz\"\n                    grafanaStyle=\"three\">\n        </cd-grafana>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"configuration\"\n                  *ngIf=\"selection.type === 'replicated'\">\n      <a ngbNavLink\n         i18n>Configuration</a>\n      <ng-template ngbNavContent>\n        <cd-rbd-configuration-table [data]=\"selectedPoolConfiguration\"></cd-rbd-configuration-table>\n      </ng-template>\n    </ng-container>\n    <ng-container ngbNavItem=\"cache-tiers-details\"\n                  *ngIf=\"selection['tiers']?.length > 0\">\n      <a ngbNavLink\n         i18n>Cache Tiers Details</a>\n      <ng-template ngbNavContent>\n        <cd-table [data]=\"cacheTiers\"\n                  [columns]=\"cacheTierColumns\"\n                  [autoSave]=\"false\"\n                  columnMode=\"flex\">\n        </cd-table>\n      </ng-template>\n    </ng-container>\n  </nav>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n</ng-container>\n","import { Validators } from '@angular/forms';\n\nimport { SelectMessages } from '~/app/shared/components/select/select-messages.model';\nimport { Pool } from '../pool';\n\nexport class PoolFormData {\n  poolTypes: string[];\n  erasureInfo = false;\n  crushInfo = false;\n  applications: any;\n\n  constructor() {\n    this.poolTypes = ['erasure', 'replicated'];\n    this.applications = {\n      selected: [],\n      default: ['cephfs', 'rbd', 'rgw'],\n      available: [], // Filled during runtime\n      validators: [Validators.pattern('[A-Za-z0-9_]+'), Validators.maxLength(128)],\n      messages: new SelectMessages({\n        empty: $localize`No applications added`,\n        selectionLimit: {\n          text: $localize`Applications limit reached`,\n          tooltip: $localize`A pool can only have up to four applications definitions.`\n        },\n        customValidations: {\n          pattern: $localize`Allowed characters '_a-zA-Z0-9'`,\n          maxlength: $localize`Maximum length is 128 characters`\n        },\n        filter: $localize`Filter or add applications'`,\n        add: $localize`Add application`\n      })\n    };\n  }\n\n  pgs = 1;\n  pool: Pool; // Only available during edit mode\n}\n","import { Component, OnInit, Type, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NgbNav, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\nimport _ from 'lodash';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\n\nimport { DashboardNotFoundError } from '~/app/core/error/error';\nimport { CrushRuleService } from '~/app/shared/api/crush-rule.service';\nimport { ErasureCodeProfileService } from '~/app/shared/api/erasure-code-profile.service';\nimport { PoolService } from '~/app/shared/api/pool.service';\nimport { CrushNodeSelectionClass } from '~/app/shared/classes/crush.node.selection.class';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { SelectOption } from '~/app/shared/components/select/select-option.model';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { CdForm } from '~/app/shared/forms/cd-form';\nimport { CdFormGroup } from '~/app/shared/forms/cd-form-group';\nimport { CdValidators } from '~/app/shared/forms/cd-validators';\nimport {\n  RbdConfigurationEntry,\n  RbdConfigurationSourceField\n} from '~/app/shared/models/configuration';\nimport { CrushRule } from '~/app/shared/models/crush-rule';\nimport { CrushStep } from '~/app/shared/models/crush-step';\nimport { ErasureCodeProfile } from '~/app/shared/models/erasure-code-profile';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { Permission } from '~/app/shared/models/permissions';\nimport { PoolFormInfo } from '~/app/shared/models/pool-form-info';\nimport { DimlessBinaryPipe } from '~/app/shared/pipes/dimless-binary.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { FormatterService } from '~/app/shared/services/formatter.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { CrushRuleFormModalComponent } from '../crush-rule-form-modal/crush-rule-form-modal.component';\nimport { ErasureCodeProfileFormModalComponent } from '../erasure-code-profile-form/erasure-code-profile-form-modal.component';\nimport { Pool } from '../pool';\nimport { PoolFormData } from './pool-form-data';\n\ninterface FormFieldDescription {\n  externalFieldName: string;\n  formControlName: string;\n  attr?: string;\n  replaceFn?: Function;\n  editable?: boolean;\n  resetValue?: any;\n}\n\n@Component({\n  selector: 'cd-pool-form',\n  templateUrl: './pool-form.component.html',\n  styleUrls: ['./pool-form.component.scss']\n})\nexport class PoolFormComponent extends CdForm implements OnInit {\n  @ViewChild('crushInfoTabs') crushInfoTabs: NgbNav;\n  @ViewChild('crushDeletionBtn') crushDeletionBtn: NgbTooltip;\n  @ViewChild('ecpInfoTabs') ecpInfoTabs: NgbNav;\n  @ViewChild('ecpDeletionBtn') ecpDeletionBtn: NgbTooltip;\n\n  permission: Permission;\n  form: CdFormGroup;\n  ecProfiles: ErasureCodeProfile[];\n  info: PoolFormInfo;\n  routeParamsSubscribe: any;\n  editing = false;\n  isReplicated = false;\n  isErasure = false;\n  data = new PoolFormData();\n  externalPgChange = false;\n  current: Record<string, any> = {\n    rules: []\n  };\n  initializeConfigData = new ReplaySubject<{\n    initialData: RbdConfigurationEntry[];\n    sourceType: RbdConfigurationSourceField;\n  }>(1);\n  currentConfigurationValues: { [configKey: string]: any } = {};\n  action: string;\n  resource: string;\n  icons = Icons;\n  pgAutoscaleModes: string[];\n  crushUsage: string[] = undefined; // Will only be set if a rule is used by some pool\n  ecpUsage: string[] = undefined; // Will only be set if a rule is used by some pool\n  crushRuleMaxSize = 10;\n\n  private modalSubscription: Subscription;\n\n  constructor(\n    private dimlessBinaryPipe: DimlessBinaryPipe,\n    private route: ActivatedRoute,\n    private router: Router,\n    private modalService: ModalService,\n    private poolService: PoolService,\n    private authStorageService: AuthStorageService,\n    private formatter: FormatterService,\n    private taskWrapper: TaskWrapperService,\n    private ecpService: ErasureCodeProfileService,\n    private crushRuleService: CrushRuleService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.editing = this.router.url.startsWith(`/pool/${URLVerbs.EDIT}`);\n    this.action = this.editing ? this.actionLabels.EDIT : this.actionLabels.CREATE;\n    this.resource = $localize`pool`;\n    this.authenticate();\n    this.createForm();\n  }\n\n  authenticate() {\n    this.permission = this.authStorageService.getPermissions().pool;\n    if (\n      !this.permission.read ||\n      (!this.permission.update && this.editing) ||\n      (!this.permission.create && !this.editing)\n    ) {\n      throw new DashboardNotFoundError();\n    }\n  }\n\n  private createForm() {\n    const compressionForm = new CdFormGroup({\n      mode: new FormControl('none'),\n      algorithm: new FormControl(''),\n      minBlobSize: new FormControl('', {\n        updateOn: 'blur'\n      }),\n      maxBlobSize: new FormControl('', {\n        updateOn: 'blur'\n      }),\n      ratio: new FormControl('', {\n        updateOn: 'blur'\n      })\n    });\n\n    this.form = new CdFormGroup(\n      {\n        name: new FormControl('', {\n          validators: [\n            Validators.pattern(/^[.A-Za-z0-9_/-]+$/),\n            Validators.required,\n            CdValidators.custom('rbdPool', () => {\n              return (\n                this.form &&\n                this.form.getValue('name').includes('/') &&\n                this.data &&\n                this.data.applications.selected.indexOf('rbd') !== -1\n              );\n            })\n          ]\n        }),\n        poolType: new FormControl('', {\n          validators: [Validators.required]\n        }),\n        crushRule: new FormControl(null, {\n          validators: [\n            CdValidators.custom(\n              'tooFewOsds',\n              (rule: any) => this.info && rule && this.info.osd_count < 1\n            ),\n            CdValidators.custom(\n              'required',\n              (rule: CrushRule) =>\n                this.isReplicated && this.info.crush_rules_replicated.length > 0 && !rule\n            )\n          ]\n        }),\n        size: new FormControl('', {\n          updateOn: 'blur'\n        }),\n        erasureProfile: new FormControl(null),\n        pgNum: new FormControl('', {\n          validators: [Validators.required]\n        }),\n        pgAutoscaleMode: new FormControl(null),\n        ecOverwrites: new FormControl(false),\n        compression: compressionForm,\n        max_bytes: new FormControl(''),\n        max_objects: new FormControl(0)\n      },\n      [CdValidators.custom('form', (): null => null)]\n    );\n  }\n\n  ngOnInit() {\n    this.poolService.getInfo().subscribe((info: PoolFormInfo) => {\n      this.initInfo(info);\n      if (this.editing) {\n        this.initEditMode();\n      } else {\n        this.setAvailableApps();\n        this.loadingReady();\n      }\n      this.listenToChanges();\n      this.setComplexValidators();\n    });\n  }\n\n  private initInfo(info: PoolFormInfo) {\n    this.pgAutoscaleModes = info.pg_autoscale_modes;\n    this.form.silentSet('pgAutoscaleMode', info.pg_autoscale_default_mode);\n    this.form.silentSet('algorithm', info.bluestore_compression_algorithm);\n    this.info = info;\n    this.initEcp(info.erasure_code_profiles);\n  }\n\n  private initEcp(ecProfiles: ErasureCodeProfile[]) {\n    this.setListControlStatus('erasureProfile', ecProfiles);\n    this.ecProfiles = ecProfiles;\n  }\n\n  /**\n   * Used to update the crush rule or erasure code profile listings.\n   *\n   * If only one rule or profile exists it will be selected.\n   * If nothing exists null will be selected.\n   * If more than one rule or profile exists the listing will be enabled,\n   * otherwise disabled.\n   */\n  private setListControlStatus(controlName: string, arr: any[]) {\n    const control = this.form.get(controlName);\n    const value = control.value;\n    if (arr.length === 1 && (!value || !_.isEqual(value, arr[0]))) {\n      control.setValue(arr[0]);\n    } else if (arr.length === 0 && value) {\n      control.setValue(null);\n    }\n    if (arr.length <= 1) {\n      if (control.enabled) {\n        control.disable();\n      }\n    } else if (control.disabled) {\n      control.enable();\n    }\n  }\n\n  private initEditMode() {\n    this.disableForEdit();\n    this.routeParamsSubscribe = this.route.params.subscribe((param: { name: string }) =>\n      this.poolService.get(param.name).subscribe((pool: Pool) => {\n        this.data.pool = pool;\n        this.initEditFormData(pool);\n        this.loadingReady();\n      })\n    );\n  }\n\n  private disableForEdit() {\n    ['poolType', 'crushRule', 'size', 'erasureProfile', 'ecOverwrites'].forEach((controlName) =>\n      this.form.get(controlName).disable()\n    );\n  }\n\n  private initEditFormData(pool: Pool) {\n    this.initializeConfigData.next({\n      initialData: pool.configuration,\n      sourceType: RbdConfigurationSourceField.pool\n    });\n    this.poolTypeChange(pool.type);\n    const rules = this.info.crush_rules_replicated.concat(this.info.crush_rules_erasure);\n    const dataMap = {\n      name: pool.pool_name,\n      poolType: pool.type,\n      crushRule: rules.find((rule: CrushRule) => rule.rule_name === pool.crush_rule),\n      size: pool.size,\n      erasureProfile: this.ecProfiles.find((ecp) => ecp.name === pool.erasure_code_profile),\n      pgAutoscaleMode: pool.pg_autoscale_mode,\n      pgNum: pool.pg_num,\n      ecOverwrites: pool.flags_names.includes('ec_overwrites'),\n      mode: pool.options.compression_mode,\n      algorithm: pool.options.compression_algorithm,\n      minBlobSize: this.dimlessBinaryPipe.transform(pool.options.compression_min_blob_size),\n      maxBlobSize: this.dimlessBinaryPipe.transform(pool.options.compression_max_blob_size),\n      ratio: pool.options.compression_required_ratio,\n      max_bytes: this.dimlessBinaryPipe.transform(pool.quota_max_bytes),\n      max_objects: pool.quota_max_objects\n    };\n    Object.keys(dataMap).forEach((controlName: string) => {\n      const value = dataMap[controlName];\n      if (!_.isUndefined(value) && value !== '') {\n        this.form.silentSet(controlName, value);\n      }\n    });\n    this.data.pgs = this.form.getValue('pgNum');\n    this.setAvailableApps(this.data.applications.default.concat(pool.application_metadata));\n    this.data.applications.selected = pool.application_metadata;\n  }\n\n  private setAvailableApps(apps: string[] = this.data.applications.default) {\n    this.data.applications.available = _.uniq(apps.sort()).map(\n      (x: string) => new SelectOption(false, x, '')\n    );\n  }\n\n  private listenToChanges() {\n    this.listenToChangesDuringAddEdit();\n    if (!this.editing) {\n      this.listenToChangesDuringAdd();\n    }\n  }\n\n  private listenToChangesDuringAddEdit() {\n    this.form.get('pgNum').valueChanges.subscribe((pgs) => {\n      const change = pgs - this.data.pgs;\n      if (Math.abs(change) !== 1 || pgs === 2) {\n        this.data.pgs = pgs;\n        return;\n      }\n      this.doPgPowerJump(change as 1 | -1);\n    });\n  }\n\n  private doPgPowerJump(jump: 1 | -1) {\n    const power = this.calculatePgPower() + jump;\n    this.setPgs(jump === -1 ? Math.round(power) : Math.floor(power));\n  }\n\n  private calculatePgPower(pgs = this.form.getValue('pgNum')): number {\n    return Math.log(pgs) / Math.log(2);\n  }\n\n  private setPgs(power: number) {\n    const pgs = Math.pow(2, power < 0 ? 0 : power); // Set size the nearest accurate size.\n    this.data.pgs = pgs;\n    this.form.silentSet('pgNum', pgs);\n  }\n\n  private listenToChangesDuringAdd() {\n    this.form.get('poolType').valueChanges.subscribe((poolType) => {\n      this.poolTypeChange(poolType);\n    });\n    this.form.get('crushRule').valueChanges.subscribe((rule) => {\n      // The crush rule can only be changed if type 'replicated' is set.\n      if (this.crushDeletionBtn && this.crushDeletionBtn.isOpen()) {\n        this.crushDeletionBtn.close();\n      }\n      if (!rule) {\n        return;\n      }\n      this.setCorrectMaxSize(rule);\n      this.crushRuleIsUsedBy(rule.rule_name);\n      this.replicatedRuleChange();\n      this.pgCalc();\n    });\n    this.form.get('size').valueChanges.subscribe(() => {\n      // The size can only be changed if type 'replicated' is set.\n      this.pgCalc();\n    });\n    this.form.get('erasureProfile').valueChanges.subscribe((profile) => {\n      // The ec profile can only be changed if type 'erasure' is set.\n      if (this.ecpDeletionBtn && this.ecpDeletionBtn.isOpen()) {\n        this.ecpDeletionBtn.close();\n      }\n      if (!profile) {\n        return;\n      }\n      this.ecpIsUsedBy(profile.name);\n      this.pgCalc();\n    });\n    this.form.get('mode').valueChanges.subscribe(() => {\n      ['minBlobSize', 'maxBlobSize', 'ratio'].forEach((name) => {\n        this.form.get(name).updateValueAndValidity({ emitEvent: false });\n      });\n    });\n    this.form.get('minBlobSize').valueChanges.subscribe(() => {\n      this.form.get('maxBlobSize').updateValueAndValidity({ emitEvent: false });\n    });\n    this.form.get('maxBlobSize').valueChanges.subscribe(() => {\n      this.form.get('minBlobSize').updateValueAndValidity({ emitEvent: false });\n    });\n  }\n\n  private poolTypeChange(poolType: string) {\n    if (poolType === 'replicated') {\n      this.setTypeBooleans(true, false);\n    } else if (poolType === 'erasure') {\n      this.setTypeBooleans(false, true);\n    } else {\n      this.setTypeBooleans(false, false);\n    }\n    if (!poolType || !this.info) {\n      this.current.rules = [];\n      return;\n    }\n    const rules = this.info['crush_rules_' + poolType] || [];\n    this.current.rules = rules;\n    if (this.editing) {\n      return;\n    }\n    if (this.isReplicated) {\n      this.setListControlStatus('crushRule', rules);\n    }\n    this.replicatedRuleChange();\n    this.pgCalc();\n  }\n\n  private setTypeBooleans(replicated: boolean, erasure: boolean) {\n    this.isReplicated = replicated;\n    this.isErasure = erasure;\n  }\n\n  private replicatedRuleChange() {\n    if (!this.isReplicated) {\n      return;\n    }\n    const control = this.form.get('size');\n    let size = this.form.getValue('size') || 3;\n    const min = this.getMinSize();\n    const max = this.getMaxSize();\n    if (size < min) {\n      size = min;\n    } else if (size > max) {\n      size = max;\n    }\n    if (size !== control.value) {\n      this.form.silentSet('size', size);\n    }\n  }\n\n  getMinSize(): number {\n    if (!this.info || this.info.osd_count < 1) {\n      return 0;\n    }\n    return 1;\n  }\n\n  getMaxSize(): number {\n    const rule = this.form.getValue('crushRule');\n    if (!this.info) {\n      return 0;\n    }\n    if (!rule) {\n      const osds = this.info.osd_count;\n      const defaultSize = 3;\n      return Math.min(osds, defaultSize);\n    }\n    return rule.usable_size;\n  }\n\n  private pgCalc() {\n    const poolType = this.form.getValue('poolType');\n    if (!this.info || this.form.get('pgNum').dirty || !poolType) {\n      return;\n    }\n    const pgMax = this.info.osd_count * 100;\n    const pgs = this.isReplicated ? this.replicatedPgCalc(pgMax) : this.erasurePgCalc(pgMax);\n    if (!pgs) {\n      return;\n    }\n    const oldValue = this.data.pgs;\n    this.alignPgs(pgs);\n    const newValue = this.data.pgs;\n    if (!this.externalPgChange) {\n      this.externalPgChange = oldValue !== newValue;\n    }\n  }\n\n  private setCorrectMaxSize(rule: CrushRule = this.form.getValue('crushRule')) {\n    if (!rule) {\n      return;\n    }\n    const domains = CrushNodeSelectionClass.searchFailureDomains(\n      this.info.nodes,\n      rule.steps[0].item_name\n    );\n    const currentDomain = domains[rule.steps[1].type];\n    const usable = currentDomain ? currentDomain.length : this.crushRuleMaxSize;\n    rule.usable_size = Math.min(usable, this.crushRuleMaxSize);\n  }\n\n  private replicatedPgCalc(pgs: number): number {\n    const sizeControl = this.form.get('size');\n    const size = sizeControl.value;\n    return sizeControl.valid && size > 0 ? pgs / size : 0;\n  }\n\n  private erasurePgCalc(pgs: number): number {\n    const ecpControl = this.form.get('erasureProfile');\n    const ecp = ecpControl.value;\n    return (ecpControl.valid || ecpControl.disabled) && ecp ? pgs / (ecp.k + ecp.m) : 0;\n  }\n\n  alignPgs(pgs = this.form.getValue('pgNum')) {\n    this.setPgs(Math.round(this.calculatePgPower(pgs < 1 ? 1 : pgs)));\n  }\n\n  private setComplexValidators() {\n    if (this.editing) {\n      this.form\n        .get('name')\n        .setValidators([\n          this.form.get('name').validator,\n          CdValidators.custom(\n            'uniqueName',\n            (name: string) =>\n              this.data.pool &&\n              this.info &&\n              this.info.pool_names.indexOf(name) !== -1 &&\n              this.info.pool_names.indexOf(name) !==\n                this.info.pool_names.indexOf(this.data.pool.pool_name)\n          )\n        ]);\n    } else {\n      CdValidators.validateIf(this.form.get('size'), () => this.isReplicated, [\n        CdValidators.custom(\n          'min',\n          (value: number) => this.form.getValue('size') && value < this.getMinSize()\n        ),\n        CdValidators.custom(\n          'max',\n          (value: number) => this.form.getValue('size') && this.getMaxSize() < value\n        )\n      ]);\n      this.form\n        .get('name')\n        .setValidators([\n          this.form.get('name').validator,\n          CdValidators.custom(\n            'uniqueName',\n            (name: string) => this.info && this.info.pool_names.indexOf(name) !== -1\n          )\n        ]);\n    }\n    this.setCompressionValidators();\n  }\n\n  private setCompressionValidators() {\n    CdValidators.validateIf(this.form.get('minBlobSize'), () => this.hasCompressionEnabled(), [\n      Validators.min(0),\n      CdValidators.custom('maximum', (size: string) =>\n        this.oddBlobSize(size, this.form.getValue('maxBlobSize'))\n      )\n    ]);\n    CdValidators.validateIf(this.form.get('maxBlobSize'), () => this.hasCompressionEnabled(), [\n      Validators.min(0),\n      CdValidators.custom('minimum', (size: string) =>\n        this.oddBlobSize(this.form.getValue('minBlobSize'), size)\n      )\n    ]);\n    CdValidators.validateIf(this.form.get('ratio'), () => this.hasCompressionEnabled(), [\n      Validators.min(0),\n      Validators.max(1)\n    ]);\n  }\n\n  private oddBlobSize(minimum: string, maximum: string) {\n    const min = this.formatter.toBytes(minimum);\n    const max = this.formatter.toBytes(maximum);\n    return Boolean(min && max && min >= max);\n  }\n\n  hasCompressionEnabled() {\n    return this.form.getValue('mode') && this.form.get('mode').value.toLowerCase() !== 'none';\n  }\n\n  describeCrushStep(step: CrushStep) {\n    return [\n      step.op.replace('_', ' '),\n      step.item_name || '',\n      step.type ? step.num + ' type ' + step.type : ''\n    ].join(' ');\n  }\n\n  addErasureCodeProfile() {\n    this.addModal(ErasureCodeProfileFormModalComponent, (name) => this.reloadECPs(name));\n  }\n\n  private addModal(modalComponent: Type<any>, reload: (name: string) => void) {\n    this.hideOpenTooltips();\n    const modalRef = this.modalService.show(modalComponent);\n    modalRef.componentInstance.submitAction.subscribe((item: any) => {\n      reload(item.name);\n    });\n  }\n\n  private hideOpenTooltips() {\n    const hideTooltip = (btn: NgbTooltip) => btn && btn.isOpen() && btn.close();\n    hideTooltip(this.ecpDeletionBtn);\n    hideTooltip(this.crushDeletionBtn);\n  }\n\n  private reloadECPs(profileName?: string) {\n    this.reloadList({\n      newItemName: profileName,\n      getInfo: () => this.ecpService.list(),\n      initInfo: (profiles) => this.initEcp(profiles),\n      findNewItem: () => this.ecProfiles.find((p) => p.name === profileName),\n      controlName: 'erasureProfile'\n    });\n  }\n\n  private reloadList({\n    newItemName,\n    getInfo,\n    initInfo,\n    findNewItem,\n    controlName\n  }: {\n    newItemName: string;\n    getInfo: () => Observable<any>;\n    initInfo: (items: any) => void;\n    findNewItem: () => any;\n    controlName: string;\n  }) {\n    if (this.modalSubscription) {\n      this.modalSubscription.unsubscribe();\n    }\n    getInfo().subscribe((items: any) => {\n      initInfo(items);\n      if (!newItemName) {\n        return;\n      }\n      const item = findNewItem();\n      if (item) {\n        this.form.get(controlName).setValue(item);\n      }\n    });\n  }\n\n  deleteErasureCodeProfile() {\n    this.deletionModal({\n      value: this.form.getValue('erasureProfile'),\n      usage: this.ecpUsage,\n      deletionBtn: this.ecpDeletionBtn,\n      dataName: 'erasureInfo',\n      getTabs: () => this.ecpInfoTabs,\n      tabPosition: 'used-by-pools',\n      nameAttribute: 'name',\n      itemDescription: $localize`erasure code profile`,\n      reloadFn: () => this.reloadECPs(),\n      deleteFn: (name) => this.ecpService.delete(name),\n      taskName: 'ecp/delete'\n    });\n  }\n\n  private deletionModal({\n    value,\n    usage,\n    deletionBtn,\n    dataName,\n    getTabs,\n    tabPosition,\n    nameAttribute,\n    itemDescription,\n    reloadFn,\n    deleteFn,\n    taskName\n  }: {\n    value: any;\n    usage: string[];\n    deletionBtn: NgbTooltip;\n    dataName: string;\n    getTabs: () => NgbNav;\n    tabPosition: string;\n    nameAttribute: string;\n    itemDescription: string;\n    reloadFn: Function;\n    deleteFn: (name: string) => Observable<any>;\n    taskName: string;\n  }) {\n    if (!value) {\n      return;\n    }\n    if (usage) {\n      deletionBtn.animation = false;\n      deletionBtn.toggle();\n      this.data[dataName] = true;\n      setTimeout(() => {\n        const tabs = getTabs();\n        if (tabs) {\n          tabs.select(tabPosition);\n        }\n      }, 50);\n      return;\n    }\n    const name = value[nameAttribute];\n    this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription,\n      itemNames: [name],\n      submitActionObservable: () => {\n        const deletion = deleteFn(name);\n        deletion.subscribe(() => reloadFn());\n        return this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask(taskName, { name: name }),\n          call: deletion\n        });\n      }\n    });\n  }\n\n  addCrushRule() {\n    this.addModal(CrushRuleFormModalComponent, (name) => this.reloadCrushRules(name));\n  }\n\n  private reloadCrushRules(ruleName?: string) {\n    this.reloadList({\n      newItemName: ruleName,\n      getInfo: () => this.poolService.getInfo(),\n      initInfo: (info) => {\n        this.initInfo(info);\n        this.poolTypeChange('replicated');\n      },\n      findNewItem: () =>\n        this.info.crush_rules_replicated.find((rule) => rule.rule_name === ruleName),\n      controlName: 'crushRule'\n    });\n  }\n\n  deleteCrushRule() {\n    this.deletionModal({\n      value: this.form.getValue('crushRule'),\n      usage: this.crushUsage,\n      deletionBtn: this.crushDeletionBtn,\n      dataName: 'crushInfo',\n      getTabs: () => this.crushInfoTabs,\n      tabPosition: 'used-by-pools',\n      nameAttribute: 'rule_name',\n      itemDescription: $localize`crush rule`,\n      reloadFn: () => this.reloadCrushRules(),\n      deleteFn: (name) => this.crushRuleService.delete(name),\n      taskName: 'crushRule/delete'\n    });\n  }\n\n  crushRuleIsUsedBy(ruleName: string) {\n    this.crushUsage = ruleName ? this.info.used_rules[ruleName] : undefined;\n  }\n\n  ecpIsUsedBy(profileName: string) {\n    this.ecpUsage = profileName ? this.info.used_profiles[profileName] : undefined;\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      this.form.setErrors({ cdSubmitButton: true });\n      return;\n    }\n\n    const pool = { pool: this.form.getValue('name') };\n\n    this.assignFormFields(pool, [\n      { externalFieldName: 'pool_type', formControlName: 'poolType' },\n      {\n        externalFieldName: 'pg_autoscale_mode',\n        formControlName: 'pgAutoscaleMode',\n        editable: true\n      },\n      {\n        externalFieldName: 'pg_num',\n        formControlName: 'pgNum',\n        replaceFn: (value: number) => (this.form.getValue('pgAutoscaleMode') === 'on' ? 1 : value),\n        editable: true\n      },\n      this.isReplicated\n        ? { externalFieldName: 'size', formControlName: 'size' }\n        : {\n            externalFieldName: 'erasure_code_profile',\n            formControlName: 'erasureProfile',\n            attr: 'name'\n          },\n      {\n        externalFieldName: 'rule_name',\n        formControlName: 'crushRule',\n        replaceFn: (value: CrushRule) => (this.isReplicated ? value && value.rule_name : undefined)\n      },\n      {\n        externalFieldName: 'quota_max_bytes',\n        formControlName: 'max_bytes',\n        replaceFn: this.formatter.toBytes,\n        editable: true,\n        resetValue: this.editing ? 0 : undefined\n      },\n      {\n        externalFieldName: 'quota_max_objects',\n        formControlName: 'max_objects',\n        editable: true,\n        resetValue: this.editing ? 0 : undefined\n      }\n    ]);\n\n    if (this.info.is_all_bluestore) {\n      this.assignFormField(pool, {\n        externalFieldName: 'flags',\n        formControlName: 'ecOverwrites',\n        replaceFn: () => (this.isErasure ? ['ec_overwrites'] : undefined)\n      });\n\n      if (this.form.getValue('mode') !== 'none') {\n        this.assignFormFields(pool, [\n          {\n            externalFieldName: 'compression_mode',\n            formControlName: 'mode',\n            editable: true,\n            replaceFn: (value: boolean) => this.hasCompressionEnabled() && value\n          },\n          {\n            externalFieldName: 'compression_algorithm',\n            formControlName: 'algorithm',\n            editable: true\n          },\n          {\n            externalFieldName: 'compression_min_blob_size',\n            formControlName: 'minBlobSize',\n            replaceFn: this.formatter.toBytes,\n            editable: true,\n            resetValue: 0\n          },\n          {\n            externalFieldName: 'compression_max_blob_size',\n            formControlName: 'maxBlobSize',\n            replaceFn: this.formatter.toBytes,\n            editable: true,\n            resetValue: 0\n          },\n          {\n            externalFieldName: 'compression_required_ratio',\n            formControlName: 'ratio',\n            editable: true,\n            resetValue: 0\n          }\n        ]);\n      } else if (this.editing) {\n        this.assignFormFields(pool, [\n          {\n            externalFieldName: 'compression_mode',\n            formControlName: 'mode',\n            editable: true,\n            replaceFn: () => 'unset' // Is used if no compression is set\n          },\n          {\n            externalFieldName: 'srcpool',\n            formControlName: 'name',\n            editable: true,\n            replaceFn: () => this.data.pool.pool_name\n          }\n        ]);\n      }\n    }\n\n    const apps = this.data.applications.selected;\n    if (apps.length > 0 || this.editing) {\n      pool['application_metadata'] = apps;\n    }\n\n    // Only collect configuration data for replicated pools, as QoS cannot be configured on EC\n    // pools. EC data pools inherit their settings from the corresponding replicated metadata pool.\n    if (this.isReplicated && !_.isEmpty(this.currentConfigurationValues)) {\n      pool['configuration'] = this.currentConfigurationValues;\n    }\n\n    this.triggerApiTask(pool);\n  }\n\n  /**\n   * Retrieves the values for the given form field descriptions and assigns the values to the given\n   * object. This method differentiates between `add` and `edit` mode and acts differently on one or\n   * the other.\n   */\n  private assignFormFields(pool: object, formFieldDescription: FormFieldDescription[]): void {\n    formFieldDescription.forEach((item) => this.assignFormField(pool, item));\n  }\n\n  /**\n   * Retrieves the value for the given form field description and assigns the values to the given\n   * object. This method differentiates between `add` and `edit` mode and acts differently on one or\n   * the other.\n   */\n  private assignFormField(\n    pool: object,\n    {\n      externalFieldName,\n      formControlName,\n      attr,\n      replaceFn,\n      editable,\n      resetValue\n    }: FormFieldDescription\n  ): void {\n    if (this.editing && (!editable || this.form.get(formControlName).pristine)) {\n      return;\n    }\n    const value = this.form.getValue(formControlName);\n    let apiValue = replaceFn ? replaceFn(value) : attr ? _.get(value, attr) : value;\n    if (!value || !apiValue) {\n      if (editable && !_.isUndefined(resetValue)) {\n        apiValue = resetValue;\n      } else {\n        return;\n      }\n    }\n    pool[externalFieldName] = apiValue;\n  }\n\n  private triggerApiTask(pool: Record<string, any>) {\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('pool/' + (this.editing ? URLVerbs.EDIT : URLVerbs.CREATE), {\n          pool_name: pool.hasOwnProperty('srcpool') ? pool.srcpool : pool.pool\n        }),\n        call: this.poolService[this.editing ? URLVerbs.UPDATE : URLVerbs.CREATE](pool)\n      })\n      .subscribe({\n        error: (resp) => {\n          if (_.isObject(resp.error) && resp.error.code === '34') {\n            this.form.get('pgNum').setErrors({ '34': true });\n          }\n          this.form.setErrors({ cdSubmitButton: true });\n        },\n        complete: () => this.router.navigate(['/pool'])\n      });\n  }\n\n  appSelection() {\n    this.form.get('name').updateValueAndValidity({ emitEvent: false, onlySelf: true });\n  }\n}\n","<div class=\"cd-col-form\"\n     *cdFormLoading=\"loading\">\n  <form name=\"form\"\n        #formDir=\"ngForm\"\n        [formGroup]=\"form\"\n        novalidate>\n    <div class=\"card\">\n      <div i18n=\"form title|Example: Create Pool@@formTitle\"\n           class=\"card-header\">{{ action | titlecase }} {{ resource | upperFirst }}</div>\n\n      <div class=\"card-body\">\n        <!-- Name -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"name\"\n                 i18n>Name</label>\n          <div class=\"cd-col-form-input\">\n            <input id=\"name\"\n                   name=\"name\"\n                   type=\"text\"\n                   class=\"form-control\"\n                   placeholder=\"Name...\"\n                   i18n-placeholder\n                   formControlName=\"name\"\n                   autofocus>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('name', formDir, 'required')\"\n                  i18n>This field is required!</span>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('name', formDir, 'uniqueName')\"\n                  i18n>The chosen Ceph pool name is already in use.</span>\n            <span *ngIf=\"form.showError('name', formDir, 'rbdPool')\"\n                  class=\"invalid-feedback\"\n                  i18n>It's not possible to create an RBD pool with '/' in the name.\n              Please change the name or remove 'rbd' from the applications list.</span>\n            <span *ngIf=\"form.showError('name', formDir, 'pattern')\"\n                  class=\"invalid-feedback\"\n                  i18n>Pool name can only contain letters, numbers, '.', '-', '_' or '/'.</span>\n          </div>\n        </div>\n\n        <!-- Pool type selection -->\n        <div class=\"form-group row\">\n          <label class=\"cd-col-form-label required\"\n                 for=\"poolType\"\n                 i18n>Pool type</label>\n          <div class=\"cd-col-form-input\">\n            <select class=\"form-select\"\n                    id=\"poolType\"\n                    formControlName=\"poolType\"\n                    name=\"poolType\">\n              <option ngValue=\"\"\n                      i18n>-- Select a pool type --</option>\n              <option *ngFor=\"let poolType of data.poolTypes\"\n                      [value]=\"poolType\">\n                {{ poolType }}\n              </option>\n            </select>\n            <span class=\"invalid-feedback\"\n                  *ngIf=\"form.showError('poolType', formDir, 'required')\"\n                  i18n>This field is required!</span>\n          </div>\n        </div>\n\n        <div *ngIf=\"isReplicated || isErasure\">\n          <!-- PG Autoscale Mode -->\n          <div class=\"form-group row\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   for=\"pgAutoscaleMode\">PG Autoscale</label>\n            <div class=\"cd-col-form-input\">\n              <select class=\"form-select\"\n                      id=\"pgAutoscaleMode\"\n                      name=\"pgAutoscaleMode\"\n                      formControlName=\"pgAutoscaleMode\">\n                <option *ngFor=\"let mode of pgAutoscaleModes\"\n                        [value]=\"mode\">\n                  {{ mode }}\n                </option>\n              </select>\n            </div>\n          </div>\n\n          <!-- Pg number -->\n          <div class=\"form-group row\"\n               *ngIf=\"form.getValue('pgAutoscaleMode') !== 'on'\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"pgNum\"\n                   i18n>Placement groups</label>\n            <div class=\"cd-col-form-input\">\n              <input class=\"form-control\"\n                     id=\"pgNum\"\n                     name=\"pgNum\"\n                     formControlName=\"pgNum\"\n                     min=\"1\"\n                     type=\"number\"\n                     (focus)=\"externalPgChange = false\"\n                     (blur)=\"alignPgs()\"\n                     required>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"form.showError('pgNum', formDir, 'required')\"\n                    i18n>This field is required!</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"form.showError('pgNum', formDir, 'min')\"\n                    i18n>At least one placement group is needed!</span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"form.showError('pgNum', formDir, '34')\"\n                    i18n>Your cluster can't handle this many PGs. Please recalculate the PG amount needed.</span>\n              <span class=\"form-text text-muted\">\n                <cd-doc section=\"pgs\"\n                        docText=\"Calculation help\"\n                        i18n-docText></cd-doc>\n              </span>\n              <span class=\"form-text text-muted\"\n                    *ngIf=\"externalPgChange\"\n                    i18n>The current PGs settings were calculated for you, you\n                should make sure the values suit your needs before submit.</span>\n            </div>\n          </div>\n\n          <!-- Replica Size -->\n          <div class=\"form-group row\"\n               *ngIf=\"isReplicated\">\n            <label class=\"cd-col-form-label required\"\n                   for=\"size\"\n                   i18n>Replicated size</label>\n            <div class=\"cd-col-form-input\">\n              <input class=\"form-control\"\n                     id=\"size\"\n                     [max]=\"getMaxSize()\"\n                     [min]=\"getMinSize()\"\n                     name=\"size\"\n                     type=\"number\"\n                     formControlName=\"size\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"form.showError('size', formDir)\">\n                <ul class=\"list-inline\">\n                  <li i18n>Minimum: {{ getMinSize() }}</li>\n                  <li i18n>Maximum: {{ getMaxSize() }}</li>\n                </ul>\n              </span>\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"form.showError('size', formDir)\"\n                    i18n>The size specified is out of range. A value from\n                {{ getMinSize() }} to {{ getMaxSize() }} is usable.</span>\n              <span class=\"text-warning-dark\"\n                    *ngIf=\"form.getValue('size') === 1\"\n                    i18n>A size of 1 will not create a replication of the\n                object. The 'Replicated size' includes the object itself.</span>\n            </div>\n          </div>\n\n          <!-- Flags -->\n          <div class=\"form-group row\"\n               *ngIf=\"info.is_all_bluestore && isErasure\">\n            <label i18n\n                   class=\"cd-col-form-label\">Flags</label>\n            <div class=\"cd-col-form-input\">\n              <div class=\"custom-control custom-checkbox\">\n                <input type=\"checkbox\"\n                       class=\"custom-control-input\"\n                       id=\"ec-overwrites\"\n                       formControlName=\"ecOverwrites\">\n                <label class=\"custom-control-label\"\n                       for=\"ec-overwrites\"\n                       i18n>EC Overwrites</label>\n              </div>\n            </div>\n          </div>\n\n        </div>\n        <!-- Applications -->\n        <div class=\"form-group row\">\n          <label i18n\n                 class=\"cd-col-form-label\"\n                 for=\"applications\">Applications</label>\n          <div class=\"cd-col-form-input\">\n            <cd-select-badges id=\"applications\"\n                              [customBadges]=\"true\"\n                              [customBadgeValidators]=\"data.applications.validators\"\n                              [messages]=\"data.applications.messages\"\n                              [data]=\"data.applications.selected\"\n                              [options]=\"data.applications.available\"\n                              [selectionLimit]=\"4\"\n                              (selection)=\"appSelection()\">\n            </cd-select-badges>\n            <i *ngIf=\"data.applications.selected <= 0\"\n               i18n-title\n               title=\"Pools should be associated with an application tag\"\n               class=\"{{icons.warning}} icon-warning-color\">\n            </i>\n          </div>\n        </div>\n        <!-- CRUSH -->\n        <div *ngIf=\"isErasure || isReplicated\">\n\n          <legend i18n>CRUSH</legend>\n\n          <!-- Erasure Profile select -->\n          <div class=\"form-group row\"\n               *ngIf=\"isErasure\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   for=\"erasureProfile\">Erasure code profile</label>\n            <div class=\"cd-col-form-input\">\n              <div class=\"input-group mb-1\">\n                <select class=\"form-select\"\n                        id=\"erasureProfile\"\n                        name=\"erasureProfile\"\n                        formControlName=\"erasureProfile\">\n                  <option *ngIf=\"!ecProfiles\"\n                          ngValue=\"\"\n                          i18n>Loading...</option>\n                  <option *ngIf=\"ecProfiles && ecProfiles.length === 0\"\n                          [ngValue]=\"null\"\n                          i18n>-- No erasure code profile available --</option>\n                  <option *ngIf=\"ecProfiles && ecProfiles.length > 0\"\n                          [ngValue]=\"null\"\n                          i18n>-- Select an erasure code profile --</option>\n                  <option *ngFor=\"let ecp of ecProfiles\"\n                          [ngValue]=\"ecp\">\n                    {{ ecp.name }}\n                  </option>\n                </select>\n                <button class=\"btn btn-light\"\n                        [ngClass]=\"{'active': data.erasureInfo}\"\n                        id=\"ecp-info-button\"\n                        type=\"button\"\n                        (click)=\"data.erasureInfo = !data.erasureInfo\">\n                  <i [ngClass]=\"[icons.questionCircle]\"\n                     aria-hidden=\"true\"></i>\n                </button>\n                <button class=\"btn btn-light\"\n                        type=\"button\"\n                        *ngIf=\"!editing\"\n                        (click)=\"addErasureCodeProfile()\">\n                  <i [ngClass]=\"[icons.add]\"\n                     aria-hidden=\"true\"></i>\n                </button>\n                <button class=\"btn btn-light\"\n                        type=\"button\"\n                        *ngIf=\"!editing\"\n                        ngbTooltip=\"This profile can't be deleted as it is in use.\"\n                        i18n-ngbTooltip\n                        triggers=\"manual\"\n                        #ecpDeletionBtn=\"ngbTooltip\"\n                        (click)=\"deleteErasureCodeProfile()\">\n                  <i [ngClass]=\"[icons.trash]\"\n                     aria-hidden=\"true\"></i>\n                </button>\n              </div>\n              <span class=\"form-text text-muted\"\n                    id=\"ecp-info-block\"\n                    *ngIf=\"data.erasureInfo && form.getValue('erasureProfile')\">\n                <nav ngbNav\n                     #ecpInfoTabs=\"ngbNav\"\n                     class=\"nav-tabs\">\n                  <ng-container ngbNavItem=\"ecp-info\">\n                    <a ngbNavLink\n                       i18n>Profile</a>\n                    <ng-template ngbNavContent>\n                      <cd-table-key-value [renderObjects]=\"true\"\n                                          [hideKeys]=\"['name']\"\n                                          [data]=\"form.getValue('erasureProfile')\"\n                                          [autoReload]=\"false\">\n                      </cd-table-key-value>\n                    </ng-template>\n                  </ng-container>\n                  <ng-container ngbNavItem=\"used-by-pools\">\n                    <a ngbNavLink\n                       i18n>Used by pools</a>\n                    <ng-template ngbNavContent>\n                      <ng-template #ecpIsNotUsed>\n                        <span i18n>Profile is not in use.</span>\n                      </ng-template>\n                      <ul *ngIf=\"ecpUsage; else ecpIsNotUsed\">\n                        <li *ngFor=\"let pool of ecpUsage\">\n                          {{ pool }}\n                        </li>\n                      </ul>\n                    </ng-template>\n                  </ng-container>\n                </nav>\n\n                <div [ngbNavOutlet]=\"ecpInfoTabs\"></div>\n              </span>\n            </div>\n          </div>\n\n          <!-- Crush ruleset selection -->\n          <div class=\"form-group row\"\n               *ngIf=\"isErasure && !editing\">\n            <label class=\"cd-col-form-label\"\n                   for=\"crushRule\"\n                   i18n>Crush ruleset</label>\n            <div class=\"cd-col-form-input\">\n              <span class=\"form-text text-muted\"\n                    i18n>A new crush ruleset will be implicitly created.</span>\n            </div>\n          </div>\n          <div class=\"form-group row\"\n               *ngIf=\"isReplicated || editing\">\n            <label class=\"cd-col-form-label\"\n                   for=\"crushRule\"\n                   i18n>Crush ruleset</label>\n            <div class=\"cd-col-form-input\">\n              <ng-template #noRules>\n                <span class=\"form-text text-muted\">\n                  <span i18n>There are no rules.</span>&nbsp;\n                </span>\n              </ng-template>\n              <div *ngIf=\"current.rules.length > 0; else noRules\">\n                <div class=\"input-group\">\n                  <select class=\"form-select\"\n                          id=\"crushRule\"\n                          formControlName=\"crushRule\"\n                          name=\"crushSet\">\n                    <option [ngValue]=\"null\"\n                            i18n>-- Select a crush rule --</option>\n                    <option *ngFor=\"let rule of current.rules\"\n                            [ngValue]=\"rule\">\n                      {{ rule.rule_name }}\n                    </option>\n                  </select>\n                  <button class=\"btn btn-light\"\n                          [ngClass]=\"{'active': data.crushInfo}\"\n                          id=\"crush-info-button\"\n                          type=\"button\"\n                          ngbTooltip=\"Placement and\n                          replication strategies or distribution policies that allow to\n                          specify how CRUSH places data replicas.\"\n                          i18n-ngbTooltip\n                          (click)=\"data.crushInfo = !data.crushInfo\">\n                    <i [ngClass]=\"[icons.questionCircle]\"\n                       aria-hidden=\"true\"></i>\n                  </button>\n                  <button class=\"btn btn-light\"\n                          type=\"button\"\n                          *ngIf=\"isReplicated && !editing\"\n                          (click)=\"addCrushRule()\">\n                    <i [ngClass]=\"[icons.add]\"\n                       aria-hidden=\"true\"></i>\n                  </button>\n                  <button class=\"btn btn-light\"\n                          *ngIf=\"isReplicated && !editing\"\n                          type=\"button\"\n                          ngbTooltip=\"This rule can't be deleted as it is in use.\"\n                          i18n-ngbTooltip\n                          triggers=\"manual\"\n                          #crushDeletionBtn=\"ngbTooltip\"\n                          (click)=\"deleteCrushRule()\">\n                    <i [ngClass]=\"[icons.trash]\"\n                       aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n\n                <div class=\"form-text text-muted\"\n                     id=\"crush-info-block\"\n                     *ngIf=\"data.crushInfo && form.getValue('crushRule')\">\n                  <nav ngbNav\n                       #crushInfoTabs=\"ngbNav\"\n                       class=\"nav-tabs\">\n                    <ng-container ngbNavItem=\"crush-rule-info\">\n                      <a ngbNavLink\n                         i18n>Crush rule</a>\n                      <ng-template ngbNavContent>\n                        <cd-table-key-value [renderObjects]=\"false\"\n                                            [hideKeys]=\"['steps', 'type', 'rule_name']\"\n                                            [data]=\"form.getValue('crushRule')\"\n                                            [autoReload]=\"false\">\n                        </cd-table-key-value>\n                      </ng-template>\n                    </ng-container>\n                    <ng-container ngbNavItem=\"crush-rule-steps\">\n                      <a ngbNavLink\n                         i18n>Crush steps</a>\n                      <ng-template ngbNavContent>\n                        <ol>\n                          <li *ngFor=\"let step of form.get('crushRule').value.steps\">\n                            {{ describeCrushStep(step) }}\n                          </li>\n                        </ol>\n                      </ng-template>\n                    </ng-container>\n                    <ng-container ngbNavItem=\"used-by-pools\">\n                      <a ngbNavLink\n                         i18n>Used by pools</a>\n                      <ng-template ngbNavContent>\n\n                        <ng-template #ruleIsNotUsed>\n                          <span i18n>Rule is not in use.</span>\n                        </ng-template>\n                        <ul *ngIf=\"crushUsage; else ruleIsNotUsed\">\n                          <li *ngFor=\"let pool of crushUsage\">\n                            {{ pool }}\n                          </li>\n                        </ul>\n                      </ng-template>\n                    </ng-container>\n                  </nav>\n\n                  <div [ngbNavOutlet]=\"crushInfoTabs\"></div>\n                </div>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"form.showError('crushRule', formDir, 'required')\"\n                      i18n>This field is required!</span>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"form.showError('crushRule', formDir, 'tooFewOsds')\"\n                      i18n>The rule can't be used in the current cluster as it has\n                  too few OSDs to meet the minimum required OSD by this rule.</span>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        <!-- Compression -->\n        <div *ngIf=\"info.is_all_bluestore\"\n             formGroupName=\"compression\">\n          <legend i18n>Compression</legend>\n\n          <!-- Compression Mode -->\n          <div class=\"form-group row\">\n            <label i18n\n                   class=\"cd-col-form-label\"\n                   for=\"mode\">Mode</label>\n            <div class=\"cd-col-form-input\">\n              <select class=\"form-select\"\n                      id=\"mode\"\n                      name=\"mode\"\n                      formControlName=\"mode\">\n                <option *ngFor=\"let mode of info.compression_modes\"\n                        [value]=\"mode\">\n                  {{ mode }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div *ngIf=\"hasCompressionEnabled()\">\n            <!-- Compression algorithm selection -->\n            <div class=\"form-group row\">\n              <label i18n\n                     class=\"cd-col-form-label\"\n                     for=\"algorithm\">Algorithm</label>\n              <div class=\"cd-col-form-input\">\n                <select class=\"form-select\"\n                        id=\"algorithm\"\n                        name=\"algorithm\"\n                        formControlName=\"algorithm\">\n                  <option *ngIf=\"!info.compression_algorithms\"\n                          ngValue=\"\"\n                          i18n>Loading...</option>\n                  <option *ngIf=\"info.compression_algorithms && info.compression_algorithms.length === 0\"\n                          i18n\n                          ngValue=\"\">-- No erasure compression algorithm available --</option>\n                  <option *ngFor=\"let algorithm of info.compression_algorithms\"\n                          [value]=\"algorithm\">\n                    {{ algorithm }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <!-- Compression min blob size -->\n            <div class=\"form-group row\">\n              <label i18n\n                     class=\"cd-col-form-label\"\n                     for=\"minBlobSize\">Minimum blob size</label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"minBlobSize\"\n                       name=\"minBlobSize\"\n                       formControlName=\"minBlobSize\"\n                       type=\"text\"\n                       min=\"0\"\n                       class=\"form-control\"\n                       i18n-placeholder\n                       placeholder=\"e.g., 128KiB\"\n                       defaultUnit=\"KiB\"\n                       cdDimlessBinary>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"form.showError('minBlobSize', formDir, 'min')\"\n                      i18n>Value should be greater than 0</span>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"form.showError('minBlobSize', formDir, 'maximum')\"\n                      i18n>Value should be less than the maximum blob size</span>\n              </div>\n            </div>\n\n            <!-- Compression max blob size -->\n            <div class=\"form-group row\">\n              <label i18n\n                     class=\"cd-col-form-label\"\n                     for=\"maxBlobSize\">Maximum blob size</label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"maxBlobSize\"\n                       type=\"text\"\n                       min=\"0\"\n                       formControlName=\"maxBlobSize\"\n                       class=\"form-control\"\n                       i18n-placeholder\n                       placeholder=\"e.g., 512KiB\"\n                       defaultUnit=\"KiB\"\n                       cdDimlessBinary>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"form.showError('maxBlobSize', formDir, 'min')\"\n                      i18n>Value should be greater than 0</span>\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"form.showError('maxBlobSize', formDir, 'minimum')\"\n                      i18n>Value should be greater than the minimum blob size</span>\n              </div>\n            </div>\n\n            <!-- Compression ratio -->\n            <div class=\"form-group row\">\n              <label i18n\n                     class=\"cd-col-form-label\"\n                     for=\"ratio\">Ratio</label>\n              <div class=\"cd-col-form-input\">\n                <input id=\"ratio\"\n                       name=\"ratio\"\n                       formControlName=\"ratio\"\n                       type=\"number\"\n                       min=\"0\"\n                       max=\"1\"\n                       step=\"0.1\"\n                       class=\"form-control\"\n                       i18n-placeholder\n                       placeholder=\"Compression ratio\">\n                <span class=\"invalid-feedback\"\n                      *ngIf=\"form.showError('ratio', formDir, 'min') || form.showError('ratio', formDir, 'max')\"\n                      i18n>Value should be between 0.0 and 1.0</span>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <!-- Quotas -->\n        <div>\n          <legend i18n>Quotas</legend>\n\n          <!-- Max Bytes -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"max_bytes\">\n              <ng-container i18n>Max bytes</ng-container>\n              <cd-helper>\n                <span i18n>Leave it blank or specify 0 to disable this quota.</span>\n                <br>\n                <span i18n>A valid quota should be greater than 0.</span>\n              </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input class=\"form-control\"\n                     id=\"max_bytes\"\n                     name=\"max_bytes\"\n                     type=\"text\"\n                     formControlName=\"max_bytes\"\n                     i18n-placeholder\n                     placeholder=\"e.g., 10GiB\"\n                     defaultUnit=\"GiB\"\n                     cdDimlessBinary>\n            </div>\n          </div>\n\n          <!-- Max Objects -->\n          <div class=\"form-group row\">\n            <label class=\"cd-col-form-label\"\n                   for=\"max_objects\">\n              <ng-container i18n>Max objects</ng-container>\n              <cd-helper>\n                <span i18n>Leave it blank or specify 0 to disable this quota.</span>\n                <br>\n                <span i18n>A valid quota should be greater than 0.</span>\n              </cd-helper>\n            </label>\n            <div class=\"cd-col-form-input\">\n              <input class=\"form-control\"\n                     id=\"max_objects\"\n                     min=\"0\"\n                     name=\"max_objects\"\n                     type=\"number\"\n                     formControlName=\"max_objects\">\n              <span class=\"invalid-feedback\"\n                    *ngIf=\"form.showError('max_objects', formDir, 'min')\"\n                    i18n>The value should be greater or equal to 0</span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Pool configuration -->\n        <div [hidden]=\"isErasure || data.applications.selected.indexOf('rbd') === -1\">\n          <cd-rbd-configuration-form [form]=\"form\"\n                                     [initializeData]=\"initializeConfigData\"\n                                     (changes)=\"currentConfigurationValues = $event()\">\n          </cd-rbd-configuration-form>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <cd-form-button-panel (submitActionEvent)=\"submit()\"\n                              [form]=\"form\"\n                              [submitText]=\"(action | titlecase) + ' ' + (resource | upperFirst)\"\n                              wrappingClass=\"text-right\"></cd-form-button-panel>\n      </div>\n\n    </div>\n\n  </form>\n</div>\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport _ from 'lodash';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { PgCategoryService } from '~/app/ceph/shared/pg-category.service';\nimport { ConfigurationService } from '~/app/shared/api/configuration.service';\nimport { ErasureCodeProfileService } from '~/app/shared/api/erasure-code-profile.service';\nimport { PoolService } from '~/app/shared/api/pool.service';\nimport { ListWithDetails } from '~/app/shared/classes/list-with-details.class';\nimport { TableStatusViewCache } from '~/app/shared/classes/table-status-view-cache';\nimport { CriticalConfirmationModalComponent } from '~/app/shared/components/critical-confirmation-modal/critical-confirmation-modal.component';\nimport { ActionLabelsI18n, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { TableComponent } from '~/app/shared/datatable/table/table.component';\nimport { CellTemplate } from '~/app/shared/enum/cell-template.enum';\nimport { Icons } from '~/app/shared/enum/icons.enum';\nimport { ViewCacheStatus } from '~/app/shared/enum/view-cache-status.enum';\nimport { CdTableAction } from '~/app/shared/models/cd-table-action';\nimport { CdTableColumn } from '~/app/shared/models/cd-table-column';\nimport { CdTableSelection } from '~/app/shared/models/cd-table-selection';\nimport { ErasureCodeProfile } from '~/app/shared/models/erasure-code-profile';\nimport { ExecutingTask } from '~/app/shared/models/executing-task';\nimport { FinishedTask } from '~/app/shared/models/finished-task';\nimport { Permissions } from '~/app/shared/models/permissions';\nimport { DimlessPipe } from '~/app/shared/pipes/dimless.pipe';\nimport { AuthStorageService } from '~/app/shared/services/auth-storage.service';\nimport { ModalService } from '~/app/shared/services/modal.service';\nimport { TaskListService } from '~/app/shared/services/task-list.service';\nimport { TaskWrapperService } from '~/app/shared/services/task-wrapper.service';\nimport { URLBuilderService } from '~/app/shared/services/url-builder.service';\nimport { Pool } from '../pool';\nimport { PoolStat, PoolStats } from '../pool-stat';\n\nconst BASE_URL = 'pool';\n\n@Component({\n  selector: 'cd-pool-list',\n  templateUrl: './pool-list.component.html',\n  providers: [\n    TaskListService,\n    { provide: URLBuilderService, useValue: new URLBuilderService(BASE_URL) }\n  ],\n  styleUrls: ['./pool-list.component.scss']\n})\nexport class PoolListComponent extends ListWithDetails implements OnInit {\n  @ViewChild(TableComponent)\n  table: TableComponent;\n  @ViewChild('poolUsageTpl', { static: true })\n  poolUsageTpl: TemplateRef<any>;\n\n  @ViewChild('poolConfigurationSourceTpl')\n  poolConfigurationSourceTpl: TemplateRef<any>;\n\n  pools: Pool[];\n  columns: CdTableColumn[];\n  selection = new CdTableSelection();\n  executingTasks: ExecutingTask[] = [];\n  permissions: Permissions;\n  tableActions: CdTableAction[];\n  tableStatus = new TableStatusViewCache();\n  cacheTiers: any[] = [];\n  monAllowPoolDelete = false;\n  ecProfileList: ErasureCodeProfile[];\n\n  constructor(\n    private poolService: PoolService,\n    private taskWrapper: TaskWrapperService,\n    private ecpService: ErasureCodeProfileService,\n    private authStorageService: AuthStorageService,\n    public taskListService: TaskListService,\n    private modalService: ModalService,\n    private pgCategoryService: PgCategoryService,\n    private dimlessPipe: DimlessPipe,\n    private urlBuilder: URLBuilderService,\n    private configurationService: ConfigurationService,\n    public actionLabels: ActionLabelsI18n\n  ) {\n    super();\n    this.permissions = this.authStorageService.getPermissions();\n    this.tableActions = [\n      {\n        permission: 'create',\n        icon: Icons.add,\n        routerLink: () => this.urlBuilder.getCreate(),\n        name: this.actionLabels.CREATE\n      },\n      {\n        permission: 'update',\n        icon: Icons.edit,\n        routerLink: () =>\n          this.urlBuilder.getEdit(encodeURIComponent(this.selection.first().pool_name)),\n        name: this.actionLabels.EDIT\n      },\n      {\n        permission: 'delete',\n        icon: Icons.destroy,\n        click: () => this.deletePoolModal(),\n        name: this.actionLabels.DELETE,\n        disable: this.getDisableDesc.bind(this)\n      }\n    ];\n\n    // Note, we need read permissions to get the 'mon_allow_pool_delete'\n    // configuration option.\n    if (this.permissions.configOpt.read) {\n      this.configurationService.get('mon_allow_pool_delete').subscribe((data: any) => {\n        if (_.has(data, 'value')) {\n          const monSection = _.find(data.value, (v) => {\n            return v.section === 'mon';\n          }) || { value: false };\n          this.monAllowPoolDelete = monSection.value === 'true' ? true : false;\n        }\n      });\n    }\n  }\n\n  ngOnInit() {\n    const compare = (prop: string, pool1: Pool, pool2: Pool) =>\n      _.get(pool1, prop) > _.get(pool2, prop) ? 1 : -1;\n    this.columns = [\n      {\n        prop: 'pool_name',\n        name: $localize`Name`,\n        flexGrow: 4,\n        cellTransformation: CellTemplate.executing\n      },\n      {\n        prop: 'data_protection',\n        name: $localize`Data Protection`,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          class: 'badge-background-gray'\n        },\n        flexGrow: 1.3\n      },\n      {\n        prop: 'application_metadata',\n        name: $localize`Applications`,\n        cellTransformation: CellTemplate.badge,\n        customTemplateConfig: {\n          class: 'badge-background-primary'\n        },\n        flexGrow: 1.5\n      },\n      {\n        prop: 'pg_status',\n        name: $localize`PG Status`,\n        flexGrow: 1.2,\n        cellClass: ({ row, column, value }): any => {\n          return this.getPgStatusCellClass(row, column, value);\n        }\n      },\n      {\n        prop: 'crush_rule',\n        name: $localize`Crush Ruleset`,\n        isHidden: true,\n        flexGrow: 2\n      },\n      {\n        name: $localize`Usage`,\n        prop: 'usage',\n        cellTemplate: this.poolUsageTpl,\n        flexGrow: 1.2\n      },\n      {\n        prop: 'stats.rd_bytes.rates',\n        name: $localize`Read bytes`,\n        comparator: (_valueA: any, _valueB: any, rowA: Pool, rowB: Pool) =>\n          compare('stats.rd_bytes.latest', rowA, rowB),\n        cellTransformation: CellTemplate.sparkline,\n        flexGrow: 1.5\n      },\n      {\n        prop: 'stats.wr_bytes.rates',\n        name: $localize`Write bytes`,\n        comparator: (_valueA: any, _valueB: any, rowA: Pool, rowB: Pool) =>\n          compare('stats.wr_bytes.latest', rowA, rowB),\n        cellTransformation: CellTemplate.sparkline,\n        flexGrow: 1.5\n      },\n      {\n        prop: 'stats.rd.rate',\n        name: $localize`Read ops`,\n        flexGrow: 1,\n        pipe: this.dimlessPipe,\n        cellTransformation: CellTemplate.perSecond\n      },\n      {\n        prop: 'stats.wr.rate',\n        name: $localize`Write ops`,\n        flexGrow: 1,\n        pipe: this.dimlessPipe,\n        cellTransformation: CellTemplate.perSecond\n      }\n    ];\n\n    this.taskListService.init(\n      () =>\n        this.ecpService.list().pipe(\n          mergeMap((ecProfileList: ErasureCodeProfile[]) => {\n            this.ecProfileList = ecProfileList;\n            return this.poolService.getList();\n          })\n        ),\n      undefined,\n      (pools) => {\n        this.pools = this.transformPoolsData(pools);\n        this.tableStatus = new TableStatusViewCache();\n      },\n      () => {\n        this.table.reset(); // Disable loading indicator.\n        this.tableStatus = new TableStatusViewCache(ViewCacheStatus.ValueException);\n      },\n      (task) => task.name.startsWith(`${BASE_URL}/`),\n      (pool, task) => task.metadata['pool_name'] === pool.pool_name,\n      { default: (metadata: any) => new Pool(metadata['pool_name']) }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deletePoolModal() {\n    const name = this.selection.first().pool_name;\n    this.modalService.show(CriticalConfirmationModalComponent, {\n      itemDescription: 'Pool',\n      itemNames: [name],\n      submitActionObservable: () =>\n        this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask(`${BASE_URL}/${URLVerbs.DELETE}`, { pool_name: name }),\n          call: this.poolService.delete(name)\n        })\n    });\n  }\n\n  getPgStatusCellClass(_row: any, _column: any, value: string): object {\n    return {\n      'text-right': true,\n      [`pg-${this.pgCategoryService.getTypeByStates(value)}`]: true\n    };\n  }\n\n  getErasureCodeProfile(erasureCodeProfile: string) {\n    let ecpInfo = '';\n    _.forEach(this.ecProfileList, (ecpKey) => {\n      if (ecpKey['name'] === erasureCodeProfile) {\n        ecpInfo = `EC: ${ecpKey['k']}+${ecpKey['m']}`;\n      }\n    });\n    return ecpInfo;\n  }\n\n  transformPoolsData(pools: any) {\n    const requiredStats = [\n      'bytes_used',\n      'max_avail',\n      'avail_raw',\n      'percent_used',\n      'rd_bytes',\n      'wr_bytes',\n      'rd',\n      'wr'\n    ];\n    const emptyStat: PoolStat = { latest: 0, rate: 0, rates: [] };\n\n    _.forEach(pools, (pool: Pool) => {\n      pool['pg_status'] = this.transformPgStatus(pool['pg_status']);\n      const stats: PoolStats = {};\n      _.forEach(requiredStats, (stat) => {\n        stats[stat] = pool.stats && pool.stats[stat] ? pool.stats[stat] : emptyStat;\n      });\n      pool['stats'] = stats;\n      pool['usage'] = stats.percent_used.latest;\n\n      if (\n        !pool.cdExecuting &&\n        pool.pg_num + pool.pg_placement_num !== pool.pg_num_target + pool.pg_placement_num_target\n      ) {\n        pool['cdExecuting'] = 'Updating';\n      }\n\n      ['rd_bytes', 'wr_bytes'].forEach((stat) => {\n        pool.stats[stat].rates = pool.stats[stat].rates.map((point: any) => point[1]);\n      });\n      pool.cdIsBinary = true;\n\n      if (pool['type'] === 'erasure') {\n        const erasureCodeProfile = pool['erasure_code_profile'];\n        pool['data_protection'] = this.getErasureCodeProfile(erasureCodeProfile);\n      }\n      if (pool['type'] === 'replicated') {\n        pool['data_protection'] = `replica: ×${pool['size']}`;\n      }\n    });\n\n    return pools;\n  }\n\n  transformPgStatus(pgStatus: any): string {\n    const strings: string[] = [];\n    _.forEach(pgStatus, (count, state) => {\n      strings.push(`${count} ${state}`);\n    });\n\n    return strings.join(', ');\n  }\n\n  getSelectionTiers() {\n    if (typeof this.expandedRow !== 'undefined') {\n      const cacheTierIds = this.expandedRow['tiers'];\n      this.cacheTiers = this.pools.filter((pool) => cacheTierIds.includes(pool.pool));\n    }\n  }\n\n  getDisableDesc(): boolean | string {\n    if (this.selection?.hasSelection) {\n      if (!this.monAllowPoolDelete) {\n        return $localize`Pool deletion is disabled by the mon_allow_pool_delete configuration setting.`;\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n\n  setExpandedRow(expandedRow: any) {\n    super.setExpandedRow(expandedRow);\n    this.getSelectionTiers();\n  }\n}\n","<nav ngbNav\n     #nav=\"ngbNav\"\n     class=\"nav-tabs\">\n  <ng-container ngbNavItem>\n    <a ngbNavLink\n       i18n>Pools List</a>\n    <ng-template ngbNavContent>\n      <cd-table #table\n                id=\"pool-list\"\n                [data]=\"pools\"\n                [columns]=\"columns\"\n                selectionType=\"single\"\n                [hasDetails]=\"true\"\n                [status]=\"tableStatus\"\n                [autoReload]=\"-1\"\n                (fetchData)=\"taskListService.fetch()\"\n                (setExpandedRow)=\"setExpandedRow($event)\"\n                (updateSelection)=\"updateSelection($event)\">\n        <cd-table-actions id=\"pool-list-actions\"\n                          class=\"table-actions\"\n                          [permission]=\"permissions.pool\"\n                          [selection]=\"selection\"\n                          [tableActions]=\"tableActions\">\n        </cd-table-actions>\n        <cd-pool-details cdTableDetail\n                         id=\"pool-list-details\"\n                         [selection]=\"expandedRow\"\n                         [permissions]=\"permissions\"\n                         [cacheTiers]=\"cacheTiers\">\n        </cd-pool-details>\n      </cd-table>\n    </ng-template>\n  </ng-container>\n\n  <ng-container ngbNavItem\n                *cdScope=\"'grafana'\">\n    <a ngbNavLink\n       i18n>Overall Performance</a>\n    <ng-template ngbNavContent>\n      <cd-grafana i18n-title\n                  title=\"Ceph pools overview\"\n                  [grafanaPath]=\"'ceph-pools-overview?'\"\n                  [type]=\"'metrics'\"\n                  uid=\"z99hzWtmk\"\n                  grafanaStyle=\"two\">\n      </cd-grafana>\n    </ng-template>\n  </ng-container>\n</nav>\n\n<div [ngbNavOutlet]=\"nav\"></div>\n\n<ng-template #poolUsageTpl\n             let-row=\"row\">\n  <cd-usage-bar *ngIf=\"row.stats?.avail_raw?.latest\"\n                [total]=\"row.stats.bytes_used.latest + row.stats.avail_raw.latest\"\n                [used]=\"row.stats.bytes_used.latest\"\n                [title]=\"row.pool_name\"\n                decimals=\"2\">\n  </cd-usage-bar>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbNavModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ActionLabels, URLVerbs } from '~/app/shared/constants/app.constants';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { BlockModule } from '../block/block.module';\nimport { CephSharedModule } from '../shared/ceph-shared.module';\nimport { CrushRuleFormModalComponent } from './crush-rule-form-modal/crush-rule-form-modal.component';\nimport { ErasureCodeProfileFormModalComponent } from './erasure-code-profile-form/erasure-code-profile-form-modal.component';\nimport { PoolDetailsComponent } from './pool-details/pool-details.component';\nimport { PoolFormComponent } from './pool-form/pool-form.component';\nimport { PoolListComponent } from './pool-list/pool-list.component';\n\n@NgModule({\n  imports: [\n    CephSharedModule,\n    CommonModule,\n    NgbNavModule,\n    SharedModule,\n    RouterModule,\n    ReactiveFormsModule,\n    NgbTooltipModule,\n    BlockModule\n  ],\n  exports: [PoolListComponent, PoolFormComponent],\n  declarations: [\n    PoolListComponent,\n    PoolFormComponent,\n    ErasureCodeProfileFormModalComponent,\n    CrushRuleFormModalComponent,\n    PoolDetailsComponent\n  ]\n})\nexport class PoolModule {}\n\nconst routes: Routes = [\n  { path: '', component: PoolListComponent },\n  {\n    path: URLVerbs.CREATE,\n    component: PoolFormComponent,\n    data: { breadcrumbs: ActionLabels.CREATE }\n  },\n  {\n    path: `${URLVerbs.EDIT}/:name`,\n    component: PoolFormComponent,\n    data: { breadcrumbs: ActionLabels.EDIT }\n  }\n];\n\n@NgModule({\n  imports: [PoolModule, RouterModule.forChild(routes)]\n})\nexport class RoutedPoolModule {}\n","import { ExecutingTask } from '~/app/shared/models/executing-task';\nimport { PoolStats } from './pool-stat';\n\nexport class Pool {\n  cache_target_full_ratio_micro: number;\n  fast_read: boolean;\n  stripe_width: number;\n  flags_names: string;\n  tier_of: number;\n  hit_set_grade_decay_rate: number;\n  use_gmt_hitset: boolean;\n  last_force_op_resend_preluminous: string;\n  quota_max_bytes: number;\n  erasure_code_profile: string;\n  expected_num_objects: number;\n  size: number;\n  snap_seq: number;\n  auid: number;\n  cache_min_flush_age: number;\n  hit_set_period: number;\n  min_read_recency_for_promote: number;\n  target_max_objects: number;\n  pg_num: number;\n  pg_num_target: number;\n  pg_num_pending: number;\n  pg_placement_num: number;\n  pg_placement_num_target: number;\n  pg_autoscale_mode: string;\n  pg_status: string;\n  type: string;\n  pool_name: string;\n  cache_min_evict_age: number;\n  cache_mode: string;\n  min_size: number;\n  cache_target_dirty_high_ratio_micro: number;\n  object_hash: number;\n  application_metadata: string[];\n  write_tier: number;\n  cache_target_dirty_ratio_micro: number;\n  pool: number;\n  removed_snaps: string;\n  cdExecuting?: string;\n  executingTasks?: ExecutingTask[];\n  crush_rule: string;\n  tiers: any[];\n  hit_set_params: {\n    type: string;\n  };\n  last_force_op_resend: string;\n  pool_snaps: any[];\n  quota_max_objects: number;\n  options: {\n    compression_algorithm?: string;\n    compression_max_blob_size?: number;\n    compression_min_blob_size?: number;\n    compression_mode?: string;\n    compression_required_ratio?: number;\n  };\n  hit_set_count: number;\n  flags: number;\n  target_max_bytes: number;\n  hit_set_search_last_n: number;\n  last_change: string;\n  min_write_recency_for_promote: number;\n  read_tier: number;\n  stats?: PoolStats;\n  cdIsBinary?: boolean;\n  configuration: { source: number; name: string; value: string }[];\n\n  constructor(name: string) {\n    this.pool_name = name;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { ErasureCodeProfile } from '../models/erasure-code-profile';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErasureCodeProfileService {\n  apiPath = 'api/erasure_code_profile';\n\n  formTooltips = {\n    // Copied from /doc/rados/operations/erasure-code.*.rst\n    k: $localize`Each object is split in data-chunks parts, each stored on a different OSD.`,\n\n    m: $localize`Compute coding chunks for each object and store them on different OSDs.\n      The number of coding chunks is also the number of OSDs that can be down without losing data.`,\n\n    plugins: {\n      jerasure: {\n        description: $localize`The jerasure plugin is the most generic and flexible plugin,\n          it is also the default for Ceph erasure coded pools.`,\n        technique: $localize`The more flexible technique is reed_sol_van : it is enough to set k\n          and m. The cauchy_good technique can be faster but you need to chose the packetsize\n          carefully. All of reed_sol_r6_op, liberation, blaum_roth, liber8tion are RAID6 equivalents\n          in the sense that they can only be configured with m=2.`,\n        packetSize: $localize`The encoding will be done on packets of bytes size at a time.\n          Choosing the right packet size is difficult.\n          The jerasure documentation contains extensive information on this topic.`\n      },\n      lrc: {\n        description: $localize`With the jerasure plugin, when an erasure coded object is stored on\n          multiple OSDs, recovering from the loss of one OSD requires reading from all the others.\n          For instance if jerasure is configured with k=8 and m=4, losing one OSD requires reading\n          from the eleven others to repair.\n\n          The lrc erasure code plugin creates local parity chunks to be able to recover using\n          less OSDs. For instance if lrc is configured with k=8, m=4 and l=4, it will create\n          an additional parity chunk for every four OSDs. When a single OSD is lost, it can be\n          recovered with only four OSDs instead of eleven.`,\n        l: $localize`Group the coding and data chunks into sets of size locality. For instance,\n          for k=4 and m=2, when locality=3 two groups of three are created. Each set can\n          be recovered without reading chunks from another set.`,\n        crushLocality: $localize`The type of the crush bucket in which each set of chunks defined\n          by l will be stored. For instance, if it is set to rack, each group of l chunks will be\n          placed in a different rack. It is used to create a CRUSH rule step such as step choose\n          rack. If it is not set, no such grouping is done.`\n      },\n      isa: {\n        description: $localize`The isa plugin encapsulates the ISA library. It only runs on Intel processors.`,\n        technique: $localize`The ISA plugin comes in two Reed Solomon forms.\n          If reed_sol_van is set, it is Vandermonde, if cauchy is set, it is Cauchy.`\n      },\n      shec: {\n        description: $localize`The shec plugin encapsulates the multiple SHEC library.\n          It allows ceph to recover data more efficiently than Reed Solomon codes.`,\n        c: $localize`The number of parity chunks each of which includes each data chunk in its\n          calculation range. The number is used as a durability estimator. For instance, if c=2,\n          2 OSDs can be down without losing data.`\n      },\n      clay: {\n        description: $localize`CLAY (short for coupled-layer) codes are erasure codes designed to\n          bring about significant savings in terms of network bandwidth and disk IO when a failed\n          node/OSD/rack is being repaired.`,\n        d: $localize`Number of OSDs requested to send data during recovery of a single chunk.\n          d needs to be chosen such that k+1 <= d <= k+m-1. The larger the d, the better\n          the savings.`,\n        scalar_mds: $localize`scalar_mds specifies the plugin that is used as a building block\n          in the layered construction. It can be one of jerasure, isa, shec.`,\n        technique: $localize`technique specifies the technique that will be picked\n          within the 'scalar_mds' plugin specified. Supported techniques\n          are 'reed_sol_van', 'reed_sol_r6_op', 'cauchy_orig',\n          'cauchy_good', 'liber8tion' for jerasure, 'reed_sol_van',\n          'cauchy' for isa and 'single', 'multiple' for shec.`\n      }\n    },\n\n    crushRoot: $localize`The name of the crush bucket used for the first step of the CRUSH rule.\n      For instance step take default.`,\n\n    crushFailureDomain: $localize`Ensure that no two chunks are in a bucket with the same failure\n      domain. For instance, if the failure domain is host no two chunks will be stored on the same\n      host. It is used to create a CRUSH rule step such as step chooseleaf host.`,\n\n    crushDeviceClass: $localize`Restrict placement to devices of a specific class\n      (e.g., ssd or hdd), using the crush device class names in the CRUSH map.`,\n\n    directory: $localize`Set the directory name from which the erasure code plugin is loaded.`\n  };\n\n  constructor(private http: HttpClient) {}\n\n  list(): Observable<ErasureCodeProfile[]> {\n    return this.http.get<ErasureCodeProfile[]>(this.apiPath);\n  }\n\n  create(ecp: ErasureCodeProfile) {\n    return this.http.post(this.apiPath, ecp, { observe: 'response' });\n  }\n\n  delete(name: string) {\n    return this.http.delete(`${this.apiPath}/${name}`, { observe: 'response' });\n  }\n\n  getInfo() {\n    return this.http.get(`ui-${this.apiPath}/info`);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport _ from 'lodash';\n\nimport { CrushNode } from '../models/crush-node';\n\nexport class CrushNodeSelectionClass {\n  private nodes: CrushNode[] = [];\n  private idTree: { [id: number]: CrushNode } = {};\n  private allDevices: string[] = [];\n  private controls: {\n    root: AbstractControl;\n    failure: AbstractControl;\n    device: AbstractControl;\n  };\n\n  buckets: CrushNode[] = [];\n  failureDomains: { [type: string]: CrushNode[] } = {};\n  failureDomainKeys: string[] = [];\n  devices: string[] = [];\n  deviceCount = 0;\n\n  static searchFailureDomains(\n    nodes: CrushNode[],\n    s: string\n  ): { [failureDomain: string]: CrushNode[] } {\n    return this.getFailureDomains(this.search(nodes, s));\n  }\n\n  /**\n   * Filters crush map for a node and it's tree.\n   * The node name as provided in crush rules attribute item_name is supported.\n   * This means that '$name~$deviceType' can be used and will result in a crush map\n   * that only include buckets with the specified device in use as their leaf.\n   */\n  static search(nodes: CrushNode[], s: string): CrushNode[] {\n    const [search, deviceType] = s.split('~'); // Used inside item_name in crush rules\n    const node = nodes.find((n) => ['name', 'id', 'type'].some((attr) => n[attr] === search));\n    if (!node) {\n      return [];\n    }\n    nodes = this.getSubNodes(node, this.createIdTreeFromNodes(nodes));\n    if (deviceType) {\n      nodes = this.filterNodesByDeviceType(nodes, deviceType);\n    }\n    return nodes;\n  }\n\n  static createIdTreeFromNodes(nodes: CrushNode[]): { [id: number]: CrushNode } {\n    const idTree = {};\n    nodes.forEach((node) => {\n      idTree[node.id] = node;\n    });\n    return idTree;\n  }\n\n  static getSubNodes(node: CrushNode, idTree: { [id: number]: CrushNode }): CrushNode[] {\n    let subNodes = [node]; // Includes parent node\n    if (!node.children) {\n      return subNodes;\n    }\n    node.children.forEach((id) => {\n      const childNode = idTree[id];\n      subNodes = subNodes.concat(this.getSubNodes(childNode, idTree));\n    });\n    return subNodes;\n  }\n\n  static filterNodesByDeviceType(nodes: CrushNode[], deviceType: string): any {\n    let doNotInclude = nodes\n      .filter((n) => n.device_class && n.device_class !== deviceType)\n      .map((n) => n.id);\n    let foundNewNode: boolean;\n    let childrenToRemove = doNotInclude;\n\n    // Filters out all unwanted nodes\n    do {\n      foundNewNode = false;\n      nodes = nodes.filter((n) => !doNotInclude.includes(n.id)); // Unwanted nodes\n      // Find nodes where all children were filtered\n      const toRemoveNext: number[] = [];\n      nodes.forEach((n) => {\n        if (n.children && n.children.every((id) => doNotInclude.includes(id))) {\n          toRemoveNext.push(n.id);\n          foundNewNode = true;\n        }\n      });\n      if (foundNewNode) {\n        doNotInclude = toRemoveNext; // Reduces array length\n        childrenToRemove = childrenToRemove.concat(toRemoveNext);\n      }\n    } while (foundNewNode);\n\n    // Removes filtered out children in all left nodes with children\n    nodes = _.cloneDeep(nodes); // Clone objects to not change original objects\n    nodes = nodes.map((n) => {\n      if (!n.children) {\n        return n;\n      }\n      n.children = n.children.filter((id) => !childrenToRemove.includes(id));\n      return n;\n    });\n\n    return nodes;\n  }\n\n  static getFailureDomains(nodes: CrushNode[]): { [failureDomain: string]: CrushNode[] } {\n    const domains = {};\n    nodes.forEach((node) => {\n      const type = node.type;\n      if (!domains[type]) {\n        domains[type] = [];\n      }\n      domains[type].push(node);\n    });\n    return domains;\n  }\n\n  initCrushNodeSelection(\n    nodes: CrushNode[],\n    rootControl: AbstractControl,\n    failureControl: AbstractControl,\n    deviceControl: AbstractControl\n  ) {\n    this.nodes = nodes;\n    this.idTree = CrushNodeSelectionClass.createIdTreeFromNodes(nodes);\n    nodes.forEach((node) => {\n      this.idTree[node.id] = node;\n    });\n    this.buckets = _.sortBy(\n      nodes.filter((n) => n.children),\n      'name'\n    );\n    this.controls = {\n      root: rootControl,\n      failure: failureControl,\n      device: deviceControl\n    };\n    this.preSelectRoot();\n    this.controls.root.valueChanges.subscribe(() => this.onRootChange());\n    this.controls.failure.valueChanges.subscribe(() => this.onFailureDomainChange());\n    this.controls.device.valueChanges.subscribe(() => this.onDeviceChange());\n  }\n\n  private preSelectRoot() {\n    const rootNode = this.nodes.find((node) => node.type === 'root');\n    this.silentSet(this.controls.root, rootNode);\n    this.onRootChange();\n  }\n\n  private silentSet(control: AbstractControl, value: any) {\n    control.setValue(value, { emitEvent: false });\n  }\n\n  private onRootChange() {\n    const nodes = CrushNodeSelectionClass.getSubNodes(this.controls.root.value, this.idTree);\n    const domains = CrushNodeSelectionClass.getFailureDomains(nodes);\n    Object.keys(domains).forEach((type) => {\n      if (domains[type].length <= 1) {\n        delete domains[type];\n      }\n    });\n    this.failureDomains = domains;\n    this.failureDomainKeys = Object.keys(domains).sort();\n    this.updateFailureDomain();\n  }\n\n  private updateFailureDomain() {\n    let failureDomain = this.getIncludedCustomValue(\n      this.controls.failure,\n      Object.keys(this.failureDomains)\n    );\n    if (failureDomain === '') {\n      failureDomain = this.setMostCommonDomain(this.controls.failure);\n    }\n    this.updateDevices(failureDomain);\n  }\n\n  private getIncludedCustomValue(control: AbstractControl, includedIn: string[]) {\n    return control.dirty && includedIn.includes(control.value) ? control.value : '';\n  }\n\n  private setMostCommonDomain(failureControl: AbstractControl): string {\n    let winner = { n: 0, type: '' };\n    Object.keys(this.failureDomains).forEach((type) => {\n      const n = this.failureDomains[type].length;\n      if (winner.n < n) {\n        winner = { n, type };\n      }\n    });\n    this.silentSet(failureControl, winner.type);\n    return winner.type;\n  }\n\n  private onFailureDomainChange() {\n    this.updateDevices();\n  }\n\n  private updateDevices(failureDomain: string = this.controls.failure.value) {\n    const subNodes = _.flatten(\n      this.failureDomains[failureDomain].map((node) =>\n        CrushNodeSelectionClass.getSubNodes(node, this.idTree)\n      )\n    );\n    this.allDevices = subNodes.filter((n) => n.device_class).map((n) => n.device_class);\n    this.devices = _.uniq(this.allDevices).sort();\n    const device =\n      this.devices.length === 1\n        ? this.devices[0]\n        : this.getIncludedCustomValue(this.controls.device, this.devices);\n    this.silentSet(this.controls.device, device);\n    this.onDeviceChange(device);\n  }\n\n  private onDeviceChange(deviceType: string = this.controls.device.value) {\n    this.deviceCount =\n      deviceType === ''\n        ? this.allDevices.length\n        : this.allDevices.filter((type) => type === deviceType).length;\n  }\n}\n","export class ErasureCodeProfile {\n  name: string;\n  plugin: string;\n  k?: number;\n  m?: number;\n  c?: number;\n  l?: number;\n  d?: number;\n  packetsize?: number;\n  technique?: string;\n  scalar_mds?: 'jerasure' | 'isa' | 'shec';\n  'crush-root'?: string;\n  'crush-locality'?: string;\n  'crush-failure-domain'?: string;\n  'crush-device-class'?: string;\n  'directory'?: string;\n}\n"],"names":[],"sourceRoot":"webpack:///"}